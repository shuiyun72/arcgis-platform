{"version":3,"sources":["webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/rbush/index.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/layer/VectorRenderType.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/events/Target.js","webpack:///./node_modules/ol/util.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./src/common/components/TableFormTitle.vue?d047","webpack:///src/common/components/TableFormTitle.vue","webpack:///./src/common/components/TableFormTitle.vue?0802","webpack:///./src/common/components/TableFormTitle.vue","webpack:///./node_modules/ol/pointer/EventSource.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/format/FormatType.js","webpack:///./src/assets/toolIcon sync ^\\.\\/.*\\.png$","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/style/TextPlacement.js","webpack:///./node_modules/ol/interaction/Select.js","webpack:///./src/services/OpenLayers/MapNavigate.js","webpack:///./node_modules/ol/Observable.js","webpack:///./src/common/consts/OpenLayersConfig/MapConfigure.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/interaction.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/layer/Vector.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/core-js/library/fn/object/define-property.js","webpack:///./node_modules/core-js/library/modules/es6.object.define-property.js","webpack:///./node_modules/ol/geom/MultiLineString.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/structs/RBush.js","webpack:///./node_modules/ol/Feature.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/featureloader.js","webpack:///./node_modules/ol/source/Vector.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/pointer/MouseSource.js","webpack:///./node_modules/ol/LayerType.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/quickselect/quickselect.js","webpack:///./node_modules/ol/style/RegularShape.js","webpack:///./node_modules/ol/style/Circle.js","webpack:///./node_modules/ol/style/Style.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/loadingstrategy.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/geom/LineString.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/style/Fill.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/ol/style/Stroke.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/geom/flat/center.js","webpack:///./node_modules/ol/geom/MultiPolygon.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/MultiPoint.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/source/VectorEventType.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/style/Image.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/Circle.js","webpack:///./node_modules/ol/interaction/Draw.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/createClass.js","webpack:///./node_modules/ol/geom/flat/interpolate.js","webpack:///./node_modules/ol/interaction/Snap.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/style/IconAnchorUnits.js","webpack:///./node_modules/ol/style/IconImage.js","webpack:///./node_modules/ol/style/IconOrigin.js","webpack:///./node_modules/ol/style/Icon.js","webpack:///./node_modules/ol/style/Text.js","webpack:///./src/services/OpenLayers/mapStyle.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/interaction/Modify.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck.js","webpack:///./src/api/Inspection/index.js","webpack:///./node_modules/jsts/dist/jsts.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/pointer/MsSource.js","webpack:///./node_modules/ol/pointer/NativeSource.js","webpack:///./node_modules/ol/pointer/PointerEvent.js","webpack:///./node_modules/ol/pointer/TouchSource.js","webpack:///./node_modules/ol/pointer/PointerEventHandler.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/control/util.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/ImageBase.js","webpack:///./node_modules/ol/ImageCanvas.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/render/VectorContext.js","webpack:///./node_modules/ol/render/canvas/Immediate.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/renderer/canvas/Map.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/renderer/canvas/IntermediateCanvas.js","webpack:///./node_modules/ol/renderer/canvas/ImageLayer.js","webpack:///./node_modules/ol/TileRange.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/render/ReplayGroup.js","webpack:///./node_modules/ol/render/ReplayType.js","webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/render/canvas/Instruction.js","webpack:///./node_modules/ol/render/replay.js","webpack:///./node_modules/ol/render/canvas/Replay.js","webpack:///./node_modules/ol/render/canvas/ImageReplay.js","webpack:///./node_modules/ol/render/canvas/LineStringReplay.js","webpack:///./node_modules/ol/render/canvas/PolygonReplay.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/render/canvas/TextReplay.js","webpack:///./node_modules/ol/render/canvas/ReplayGroup.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/layer/VectorTileRenderType.js","webpack:///./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./node_modules/ol/Tile.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/TileCache.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/tilegrid/TileGrid.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/uri.js","webpack:///./node_modules/ol/source/TileArcGISRest.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/proj4/lib/global.js","webpack:///./node_modules/proj4/lib/constants/values.js","webpack:///./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///./node_modules/proj4/lib/constants/units.js","webpack:///./node_modules/proj4/lib/match.js","webpack:///./node_modules/proj4/lib/projString.js","webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js","webpack:///./node_modules/proj4/lib/defs.js","webpack:///./node_modules/proj4/lib/parseCode.js","webpack:///./node_modules/proj4/lib/extend.js","webpack:///./node_modules/proj4/lib/common/msfnz.js","webpack:///./node_modules/proj4/lib/common/sign.js","webpack:///./node_modules/proj4/lib/common/adjust_lon.js","webpack:///./node_modules/proj4/lib/common/tsfnz.js","webpack:///./node_modules/proj4/lib/common/phi2z.js","webpack:///./node_modules/proj4/lib/projections/merc.js","webpack:///./node_modules/proj4/lib/projections/longlat.js","webpack:///./node_modules/proj4/lib/projections.js","webpack:///./node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///./node_modules/proj4/lib/deriveConstants.js","webpack:///./node_modules/proj4/lib/constants/Datum.js","webpack:///./node_modules/proj4/lib/datum.js","webpack:///./node_modules/proj4/lib/Proj.js","webpack:///./node_modules/proj4/lib/datumUtils.js","webpack:///./node_modules/proj4/lib/datum_transform.js","webpack:///./node_modules/proj4/lib/adjust_axis.js","webpack:///./node_modules/proj4/lib/common/toPoint.js","webpack:///./node_modules/proj4/lib/checkSanity.js","webpack:///./node_modules/proj4/lib/transform.js","webpack:///./node_modules/proj4/lib/core.js","webpack:///./node_modules/mgrs/mgrs.js","webpack:///./node_modules/proj4/lib/Point.js","webpack:///./node_modules/proj4/lib/common/pj_enfn.js","webpack:///./node_modules/proj4/lib/common/pj_mlfn.js","webpack:///./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///./node_modules/proj4/lib/projections/tmerc.js","webpack:///./node_modules/proj4/lib/common/sinh.js","webpack:///./node_modules/proj4/lib/common/hypot.js","webpack:///./node_modules/proj4/lib/common/log1py.js","webpack:///./node_modules/proj4/lib/common/asinhy.js","webpack:///./node_modules/proj4/lib/common/gatg.js","webpack:///./node_modules/proj4/lib/common/clens.js","webpack:///./node_modules/proj4/lib/common/cosh.js","webpack:///./node_modules/proj4/lib/common/clens_cmplx.js","webpack:///./node_modules/proj4/lib/projections/etmerc.js","webpack:///./node_modules/proj4/lib/common/adjust_zone.js","webpack:///./node_modules/proj4/lib/projections/utm.js","webpack:///./node_modules/proj4/lib/common/srat.js","webpack:///./node_modules/proj4/lib/projections/gauss.js","webpack:///./node_modules/proj4/lib/projections/sterea.js","webpack:///./node_modules/proj4/lib/projections/stere.js","webpack:///./node_modules/proj4/lib/projections/somerc.js","webpack:///./node_modules/proj4/lib/projections/omerc.js","webpack:///./node_modules/proj4/lib/projections/lcc.js","webpack:///./node_modules/proj4/lib/projections/krovak.js","webpack:///./node_modules/proj4/lib/common/mlfn.js","webpack:///./node_modules/proj4/lib/common/e0fn.js","webpack:///./node_modules/proj4/lib/common/e1fn.js","webpack:///./node_modules/proj4/lib/common/e2fn.js","webpack:///./node_modules/proj4/lib/common/e3fn.js","webpack:///./node_modules/proj4/lib/common/gN.js","webpack:///./node_modules/proj4/lib/common/adjust_lat.js","webpack:///./node_modules/proj4/lib/common/imlfn.js","webpack:///./node_modules/proj4/lib/projections/cass.js","webpack:///./node_modules/proj4/lib/common/qsfnz.js","webpack:///./node_modules/proj4/lib/projections/laea.js","webpack:///./node_modules/proj4/lib/common/asinz.js","webpack:///./node_modules/proj4/lib/projections/aea.js","webpack:///./node_modules/proj4/lib/projections/gnom.js","webpack:///./node_modules/proj4/lib/common/iqsfnz.js","webpack:///./node_modules/proj4/lib/projections/cea.js","webpack:///./node_modules/proj4/lib/projections/eqc.js","webpack:///./node_modules/proj4/lib/projections/poly.js","webpack:///./node_modules/proj4/lib/projections/nzmg.js","webpack:///./node_modules/proj4/lib/projections/mill.js","webpack:///./node_modules/proj4/lib/projections/sinu.js","webpack:///./node_modules/proj4/lib/projections/moll.js","webpack:///./node_modules/proj4/lib/projections/eqdc.js","webpack:///./node_modules/proj4/lib/projections/vandg.js","webpack:///./node_modules/proj4/lib/projections/aeqd.js","webpack:///./node_modules/proj4/lib/projections/ortho.js","webpack:///./node_modules/proj4/lib/projections/qsc.js","webpack:///./node_modules/proj4/lib/projections/robin.js","webpack:///./node_modules/proj4/projs.js","webpack:///./node_modules/proj4/lib/index.js","webpack:///./node_modules/ol/proj/proj4.js","webpack:///./node_modules/ol/format/Feature.js","webpack:///./node_modules/ol/format/JSONFeature.js","webpack:///./node_modules/ol/format/EsriJSON.js","webpack:///./src/services/OpenLayers/mapRequest.js","webpack:///./node_modules/ol/OverlayPositioning.js","webpack:///./node_modules/ol/Overlay.js","webpack:///./src/services/OpenLayers/BaseMap.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/MapBrowserPointerEvent.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/source/Source.js"],"names":["__webpack_exports__","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","module","exports","rbush","default","quickselect","__webpack_require__","maxEntries","format","this","_maxEntries","Math","max","_minEntries","ceil","_initFormat","clear","findItem","item","items","equalsFn","indexOf","i","length","calcBBox","node","toBBox","distBBox","children","k","p","destNode","createNode","minX","Infinity","minY","maxX","maxY","child","extend","leaf","a","b","min","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","enlargedArea","intersectionArea","contains","intersects","height","multiSelect","arr","left","right","n","compare","mid","stack","pop","push","prototype","all","_all","data","search","bbox","result","len","childBBox","nodesToSearch","collides","load","insert","_build","slice","_splitRoot","tmpNode","_insert","remove","parent","index","goingUp","path","indexes","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","N","M","log","pow","j","right2","right3","N2","N1","sqrt","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","m","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","xMargin","_allDistMargin","yMargin","sort","leftBBox","rightBBox","margin","siblings","compareArr","Function","join","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","_extent_js__WEBPACK_IMPORTED_MODULE_0__","_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_1__","_GeometryType_js__WEBPACK_IMPORTED_MODULE_2__","_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_3__","_flat_area_js__WEBPACK_IMPORTED_MODULE_4__","_flat_closest_js__WEBPACK_IMPORTED_MODULE_5__","_flat_deflate_js__WEBPACK_IMPORTED_MODULE_6__","_flat_inflate_js__WEBPACK_IMPORTED_MODULE_7__","_flat_simplify_js__WEBPACK_IMPORTED_MODULE_8__","LinearRing","SimpleGeometry","coordinates","opt_layout","call","maxDelta_","maxDeltaRevision_","undefined","Array","isArray","setCoordinates","setFlatCoordinates","__proto__","Object","create","constructor","clone","flatCoordinates","layout","closestPointXY","x","y","closestPoint","minSquaredDistance","getExtent","getRevision","stride","getArea","getCoordinates","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","XY","getType","LINEAR_RING","intersectsExtent","extent","setLayout","changed","IMAGE","VECTOR","d","altKeyOnly","altShiftKeysOnly","focus","always","mouseActionButton","never","pointerMove","singleClick","noModifierKeys","shiftKeyOnly","targetNotEditable","mouseOnly","primaryAction","_MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_0__","_asserts_js__WEBPACK_IMPORTED_MODULE_1__","_functions_js__WEBPACK_IMPORTED_MODULE_2__","_has_js__WEBPACK_IMPORTED_MODULE_3__","mapBrowserEvent","originalEvent","altKey","metaKey","ctrlKey","shiftKey","event","target","getTargetElement","document","activeElement","button","type","SINGLECLICK","tagName","pointerEvent","pointerType","isPrimary","POSTCOMPOSE","PRECOMPOSE","RENDER","RENDERCOMPLETE","createCanvasContext2D","opt_width","opt_height","canvas","createElement","width","getContext","outerWidth","element","offsetWidth","style","getComputedStyle","parseInt","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","oldNode","parentNode","replaceChild","removeNode","removeChild","removeChildren","lastChild","getInteriorPointOfArray","getInteriorPointsOfMultiArray","_array_js__WEBPACK_IMPORTED_MODULE_0__","_contains_js__WEBPACK_IMPORTED_MODULE_1__","offset","ends","flatCenters","flatCentersOffset","opt_dest","ii","x1","x2","y1","y2","intersections","r","rr","end","pointX","NaN","maxSegmentLength","segmentLength","abs","isNaN","endss","interiorPoints","boundingExtent","buffer","closestSquaredDistanceXY","containsCoordinate","containsExtent","containsXY","coordinateRelationship","createEmpty","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","createOrUpdateFromFlatCoordinates","equals","extendCoordinate","extendFlatCoordinates","forEachCorner","getBottomLeft","getBottomRight","getCenter","getCorner","getForViewAndSize","getHeight","getIntersection","getTopLeft","getTopRight","getWidth","isEmpty","returnOrUpdate","scaleFromCenter","intersectsSegment","applyTransform","_asserts_js__WEBPACK_IMPORTED_MODULE_0__","_extent_Corner_js__WEBPACK_IMPORTED_MODULE_1__","_extent_Relationship_js__WEBPACK_IMPORTED_MODULE_2__","_boundingExtentXYs","xs","ys","opt_extent","value","dx","dy","coordinate","extent1","extent2","relationship","extendCoordinates","extendXY","callback","opt_this","val","corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x3","y0","y3","intersection","deltaX","deltaY","start","startRel","endRel","startX","startY","endX","endY","slope","transformFn","_events_EventType_js__WEBPACK_IMPORTED_MODULE_0__","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","_Disposable_js__WEBPACK_IMPORTED_MODULE_0__","_events_js__WEBPACK_IMPORTED_MODULE_1__","_Event_js__WEBPACK_IMPORTED_MODULE_3__","Target","Disposable","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","dispatchEvent","evt","propagate","propagationStopped","pendingRemovals","removeEventListener","disposeInternal","getListeners","hasListener","opt_type","keys","abstract","Error","getUid","VERSION","uidCounter_","obj","ol_uid","String","ADD","REMOVE","visibleAtResolution","_events_js__WEBPACK_IMPORTED_MODULE_0__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_1__","_util_js__WEBPACK_IMPORTED_MODULE_2__","_Object_js__WEBPACK_IMPORTED_MODULE_3__","_Base_js__WEBPACK_IMPORTED_MODULE_4__","_Property_js__WEBPACK_IMPORTED_MODULE_5__","_obj_js__WEBPACK_IMPORTED_MODULE_6__","_render_EventType_js__WEBPACK_IMPORTED_MODULE_7__","_source_State_js__WEBPACK_IMPORTED_MODULE_8__","Layer","BaseLayer","options","baseOptions","source","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","map","setMap","SOURCE","handleSourcePropertyChange_","setSource","getLayersArray","opt_array","array","getLayerStatesArray","opt_states","states","getLayerState","getSource","get","getSourceState","getState","UNDEFINED","handleSourceChange_","renderEvent","layerState","managed","getZIndex","zIndex","frameState","layerStatesArray","layerStates","render","set","visible","minResolution","maxResolution","douglasPeucker","douglasPeuckerArray","snap","quantizeArray","quantizeMultiArray","_math_js__WEBPACK_IMPORTED_MODULE_0__","simplifiedOffset","markers","last","first","maxSquaredDistance","squaredDistance","i$1","simplifiedEnds","tolerance","round","quantize","dx1","dy1","dx2","dy2","simplifiedEndss","_vm","_h","$createElement","_c","_self","staticClass","attrs","justify","_v","_s","titleName","on","click","flexibleFnc","directives","name","rawName","expression","staticRenderFns","TableFormTitlevue_type_script_lang_js_","props","methods","flexible","$emit","$bus","emit","components_TableFormTitlevue_type_script_lang_js_","component","componentNormalizer","__file","EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","eventType","listen","listenOnce","unlisten","unlistenByKey","unlistenAll","_obj_js__WEBPACK_IMPORTED_MODULE_0__","bindListener","listenerObj","boundListener","bindTo","callOnce","findListener","opt_setDeleteIndex","deleteIndex","listenerMap","getListenerMap","opt_create","ol_lm","removeListenerMap","removeListeners","opt_once","key","ARRAY_BUFFER","JSON","TEXT","XML","./ExhaustvalveLayer.png","./FirefightingwellLayer.png","./FirehydrantLayer.png","./Layer-Diqiu.png","./Layer-GuanWang.png","./Layer-JieDao.png","./LoginBg.png","./ServicingwellLayer.png","./ValveLayer.png","./ValvewellLayer.png","./WaterMeterLayer.png","./WatermeterwellLayer.png","./dian.png","./dingwei.png","./dingweiend.png","./dingweistart.png","./famenView.png","./fire.png","./nofind.png","./topbtnBg.png","./treeCheck.png","./三通井.png","./加压站.png","./四通井.png","./排气阀.png","./排沙井.png","./支井.png","./检修井.png","./水表.png","./水表井.png","./消火栓.png","./消防井.png","./直通井.png","./阀门.png","./阀门井.png","./阀门开.png","webpackContext","req","id","webpackContextResolve","e","code","resolve","RADIUS","HALF_SIZE","PI","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","Projection","EPSG3857Projection","units","Units","METERS","global","worldExtent","getPointResolution","point","math","proj_Projection","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","output","halfSize","tan","epsg3857_toEPSG4326","atan","exp","epsg4326_RADIUS","epsg4326_EXTENT","METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","DEGREES","axisOrientation","metersPerUnit","epsg4326_PROJECTIONS","cache","add","projection","cloneTransform","identityTransform","addProjection","getCode","transforms","addProjections","projections","forEach","proj_get","projectionLike","opt_units","pointResolution","getter","getPointResolutionFunc","getUnits","toEPSG4326","getTransformFromProjections","vertices","sphere","getMetersPerUnit","addEquivalentProjections","destination","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","addCoordinateTransforms","forward","inverse","sourceProj","destProj","equivalent","equalUnits","transformFunc","sourceProjection","destinationProjection","sourceCode","destinationCode","getTransform","transform","transformExtent","ol_extent","addCommon","linearRingContainsExtent","linearRingContainsXY","linearRingsContainsXY","linearRingssContainsXY","outside","wn","POINT","LINE","_util_js__WEBPACK_IMPORTED_MODULE_0__","_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_1__","_array_js__WEBPACK_IMPORTED_MODULE_2__","_events_js__WEBPACK_IMPORTED_MODULE_3__","_events_Event_js__WEBPACK_IMPORTED_MODULE_4__","_events_condition_js__WEBPACK_IMPORTED_MODULE_5__","_functions_js__WEBPACK_IMPORTED_MODULE_6__","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_7__","_Interaction_js__WEBPACK_IMPORTED_MODULE_8__","_layer_Vector_js__WEBPACK_IMPORTED_MODULE_9__","_obj_js__WEBPACK_IMPORTED_MODULE_10__","_source_Vector_js__WEBPACK_IMPORTED_MODULE_11__","_style_Style_js__WEBPACK_IMPORTED_MODULE_12__","SelectEventType","SELECT","SelectEvent","Event","selected","deselected","Select","Interaction","opt_options","handleEvent","condition_","condition","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","filter","hitTolerance_","hitTolerance","layerFilter","featureOverlay","useSpatialIndex","features","wrapX","getDefaultStyleFunction","updateWhileAnimating","updateWhileInteracting","featureOverlay_","layers","layer","layerFilter_","featureLayerAssociation_","getFeatures","addFeature_","removeFeature_","addFeatureLayerAssociation_","feature","getFeaturesCollection","getHitTolerance","getLayer","getOverlay","setHitTolerance","currentMap","getMap","selectedFeatures","unskipFeature","bind","skipFeature","removeFeatureLayerAssociation_","toggle","forEachFeatureAtPixel","pixel","getLength","getArray","styles","POLYGON","LINE_STRING","GEOMETRY_COLLECTION","getGeometry","bufferNumber","plotAnimate","lineStringSelect","lineStringModify","polygonSelect","polygonModify","pointSelect","pointModify","drawTypeSelect","isAllowPointerMove","trackPlay","MapNavigate","baseMap","D_bendi_arcgis_platform_node_modules_babel_runtime_corejs2_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__","mapInstance","groups","businessLayers","tempLayers","overlay","overlayContainerDOM","console","setPosition","setSize","zoom","currentView","getView","getZoom","animate","duration","isVisible","isClear","spatialSearchLayerGroup","setVisible","getLayers","vectorLayerGroup","businessLayerGroup","tempLayerGroup","setTempLayerGroupVisible","drawAndModifyLayer","bufferLayr","removeInteraction","state","removeInteractions","setActive","interactions","select","modify","typeSelect","isModify","allDoneCallback","_this","VectorSource","Draw","setEditFeatureState","addInteraction","bufferGeom","getBufferGeometry","Feature","setGeometry","coordinate2","geometry","Polygon","mapStyle","getStyle","CloseModifyInteraction","layerIndex","layerName","spatialSearchLayers","setVectorLayerVisibleNavigate","createSpatialSearchVectorSource","then","resultObject","pointAll","_","res","SmID","values_","OBJECTID","SmX","SmY","EquType","geomArray","onModifyEndFunc","featureName","featureProperties","_this2","isInsertProperties","pointLayer","Point","properties","setStyle","EventFromName","active","Modify","array_","nameArray","_this3","polygonLayer","bufferArray","_this4","features2","lineStringLayer","isAddBuffer","LineString","feature2","addFeature","points","interValTime","action","callBack","_this5","animating","routeLength","layerMove","monitorLayer","AddPoint","lnglat","newFeature","setId","AddLine","lineFeature","firstStyle","endStyle","pointStyle","routeStyle","move","vectorContext","elapsedTime","time","now","floor","stop","nowPoint","parseIndex","D_bendi_arcgis_platform_node_modules_babel_runtime_corejs2_core_js_parse_int__WEBPACK_IMPORTED_MODULE_2___default","currentPoint","drawFeature","showRoute","getFeatureById","Date","getTime","ended","coord","un","overlayDOM","_this6","getEventPixel","getProperties","coodinate","innerHTML","concat","ImportPointName","AddTime","EventCode","eventAddress","DeptName","PName","PointName","ET1","HandlerLevelName","eventDesc","EventPictures","picture","EventUpdateTime","split","EventAddress","cDepName","EventDesc","parser","jsts","OL3Parser","inject","MultiPoint","MultiLineString","MultiPolygon","jstsGeom","read","buffered","write","_events_Target_js__WEBPACK_IMPORTED_MODULE_1__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_2__","Observable","EventTarget","revision_","once","MapConfigure","url","urlSatell","urlPipeLine","CoordinateDefinition","DeFineName","DefineContent","IsDeFault","MapCenter","Center_X","Center_Y","Center_Zoom","MapExtent","XMin","YMin","XMax","YMax","SpatialReference","MapChange","MapZoomLevel","Coordinates_Type","Map_Coordinates","DrawAndModifyConfiguration","LayerConfiguration","layerCName","isSpatialSearch","layerTableName","listViewColumn","viewIndex","isActive","featureColumn","field","text","assign","getValues","var_sources","arguments$1","arguments","TypeError","hasOwnProperty","object","property","values","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","begin","update","lastIndex","firstIndex","atan2","getDistance","getAngle","ol_Kinetic","DoubleClickZoom","DoubleClickZoom_handleEvent","delta_","delta","duration_","interaction_Interaction","stopEvent","MapBrowserEventType","browserEvent","anchor","view","preventDefault","interaction_DoubleClickZoom","DragPan_DragPan","PointerInteraction","DragPan","stopDown","functions","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","events_condition","noKinetic_","handleDragEvent","setHint","ViewHint","INTERACTING","targetPointers","centroid","Pointer","getResolution","getRotation","constrainCenter","setCenter","handleUpEvent","distance","angle","centerpx","getPixelFromCoordinate","dest","getCoordinateFromPixel","easing","handleDownEvent","getAnimating","viewState","interaction_DragPan","DragRotate_DragRotate","DragRotate","lastAngle_","getConstraints","rotationconstraint","getSize","theta","interaction_DragRotate","Box_RenderBox","RenderBox","className","geometry_","element_","position","map_","startPixel_","endPixel_","render_","startPixel","endPixel","px","top","getOverlayContainer","appendChild","setPixels","createOrUpdateGeometry","pixels","ol_Disposable","Box","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","DragBoxEvent","DragBox_DragBox","DragBox","box_","minArea_","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","interaction_DragBox","DragZoom_DragZoom","DragZoom","out_","out","mapExtent","calculateExtent","boxPixelExtent","factor","getResolutionForExtent","constrainResolution","interaction_DragZoom","KeyCode","UP","DOWN","KeyboardPan_KeyboardPan","KeyboardPan","KeyboardPan_handleEvent","defaultCondition_","pixelDelta_","pixelDelta","EventType","keyEvent","keyCode","mapUnitsDelta","interaction_KeyboardPan","KeyboardZoom_KeyboardZoom","KeyboardZoom","KeyboardZoom_handleEvent","charCode","charCodeAt","interaction_KeyboardZoom","MAX_DELTA","Mode","TRACKPAD","MouseWheelZoom_MouseWheelZoom","MouseWheelZoom","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","decrementInteractingHint_","wheelEvent","has","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","clearTimeout","setTimeout","getMinResolution","getMaxResolution","rebound","calculateCenterZoom","setResolution","timeLeft","handleWheelZoom_","cancelAnimations","maxDelta","setMouseAnchor","interaction_MouseWheelZoom","PinchRotate_PinchRotate","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","clientY","clientX","viewportPosition","getViewport","getBoundingClientRect","handlingDownUpSequence","interaction_PinchRotate","PinchZoom_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","newResolution","direction","interaction_PinchZoom","defaults","Collection","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","_asyncToGenerator","_core_js_promise__WEBPACK_IMPORTED_MODULE_0__","_core_js_promise__WEBPACK_IMPORTED_MODULE_0___default","asyncGeneratorStep","gen","reject","_next","_throw","arg","info","error","done","fn","self","args","err","shared","_color_js__WEBPACK_IMPORTED_MODULE_0__","IconImageCache","cache_","cacheSize_","maxCacheSize_","getKey","src","crossOrigin","color","colorString","expire","iconImage","maxCacheSize","_LayerType_js__WEBPACK_IMPORTED_MODULE_0__","_Layer_js__WEBPACK_IMPORTED_MODULE_1__","_VectorRenderType_js__WEBPACK_IMPORTED_MODULE_2__","_obj_js__WEBPACK_IMPORTED_MODULE_3__","_style_Style_js__WEBPACK_IMPORTED_MODULE_4__","Property","RENDER_ORDER","VectorLayer","renderBuffer","declutter_","declutter","renderBuffer_","style_","styleFunction_","updateWhileAnimating_","updateWhileInteracting_","renderMode_","renderMode","getDeclutter","setDeclutter","getRenderBuffer","getRenderOrder","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","getRenderMode","_Interaction_js__WEBPACK_IMPORTED_MODULE_1__","_obj_js__WEBPACK_IMPORTED_MODULE_2__","handleMoveEvent","trackedPointers_","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","pointerId","toString","pointerEvents","pan","rotate","rotateWithoutConstraints","zoomByDelta","zoomWithoutConstraints","_Object_js__WEBPACK_IMPORTED_MODULE_0__","_easing_js__WEBPACK_IMPORTED_MODULE_1__","_Property_js__WEBPACK_IMPORTED_MODULE_2__","_math_js__WEBPACK_IMPORTED_MODULE_3__","BaseObject","getActive","ACTIVE","opt_duration","currentCenter","opt_anchor","constrainRotation","currentRotation","opt_direction","currentResolution","resolutions","getResolutions","$Object","it","desc","defineProperty","$export","S","F","f","_extent_js__WEBPACK_IMPORTED_MODULE_1__","_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_2__","_GeometryType_js__WEBPACK_IMPORTED_MODULE_3__","_LineString_js__WEBPACK_IMPORTED_MODULE_4__","_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_5__","_flat_closest_js__WEBPACK_IMPORTED_MODULE_6__","_flat_deflate_js__WEBPACK_IMPORTED_MODULE_7__","_flat_inflate_js__WEBPACK_IMPORTED_MODULE_8__","_flat_interpolate_js__WEBPACK_IMPORTED_MODULE_9__","_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_10__","_flat_simplify_js__WEBPACK_IMPORTED_MODULE_11__","opt_ends","ends_","getLayout","lineStrings","lineString","getFlatCoordinates","appendLineString","getCoordinateAtM","opt_extrapolate","opt_interpolate","XYM","XYZM","extrapolate","interpolate","getEnds","getLineString","getLineStrings","getFlatMidpoints","midpoints","midpoint","MULTI_LINE_STRING","ANIMATING","rbush__WEBPACK_IMPORTED_MODULE_1__","rbush__WEBPACK_IMPORTED_MODULE_1___default","_extent_js__WEBPACK_IMPORTED_MODULE_2__","RBush","opt_maxEntries","rbush_","items_","extents","l","uid","getAll","getInExtent","forEach_","forEachInExtent","opt_geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","setProperties","setGeometryName","getGeometryName","getId","handleGeometryChange_","createStyleFunction","tmp","linearRingIsClockwise","edge","linearRingIsOriented","opt_right","isClockwise","linearRingsAreOriented","orientLinearRings","reverse","orientLinearRingsArray","_MapEvent_js__WEBPACK_IMPORTED_MODULE_0__","MapBrowserEvent","MapEvent","opt_dragging","opt_frameState","dragging","stopPropagation","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","containsKey","entry","value_","key_","newer","older","getKeys","peekLast","peekLastKey","peekFirstKey","replace","prune","scope","window","Timeout","clearFn","_id","_clearFn","setInterval","clearInterval","close","unref","ref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","_onTimeout","setImmediate","clearImmediate","XYZ","_Object_js__WEBPACK_IMPORTED_MODULE_1__","_obj_js__WEBPACK_IMPORTED_MODULE_4__","OPACITY","opacity","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","state_","getOpacity","sourceState","getVisible","setExtent","setMaxResolution","setMinResolution","setOpacity","setZIndex","zindex","TRUE","FALSE","VOID","loadFeaturesXhr","success","failure","xhr","XMLHttpRequest","open","FormatType","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","getLastExtent","onerror","send","featureloader_xhr","dataProjection","sourceOrTile","addFeatures","VectorSourceEvent","opt_feature","Vector_VectorSource","Source","attributions","State","READY","loader_","format_","overlaps_","overlaps","url_","loader","asserts","strategy_","strategy","loadingstrategy","collection","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeatureInternal","featureKey","util","addToIndex_","setupChangeEvents_","VectorEventType","ADDFEATURE","events","handleFeatureChange_","ObjectEventType","PROPERTYCHANGE","valid","newFeatures","geometryFeatures","length$1","feature$1","featureKey$1","i$2","length$2","modifyingCollection","REMOVEFEATURE","CollectionEventType","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","intersectsCoordinate","forEachFeatureIntersectingExtent","ol_obj","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","CHANGEFEATURE","hasFeature","loadFeatures","this$1","loadedExtentsRtree","extentsToLoad","loading","loop","extentToLoad","alreadyLoaded","removeLoadedExtent","removed","setLoader","source_Source","lineStringLength","fromExtent","fromCircle","makeRegular","_LinearRing_js__WEBPACK_IMPORTED_MODULE_4__","_Point_js__WEBPACK_IMPORTED_MODULE_5__","_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_6__","_flat_area_js__WEBPACK_IMPORTED_MODULE_8__","_flat_closest_js__WEBPACK_IMPORTED_MODULE_9__","_flat_contains_js__WEBPACK_IMPORTED_MODULE_10__","_flat_deflate_js__WEBPACK_IMPORTED_MODULE_11__","_flat_inflate_js__WEBPACK_IMPORTED_MODULE_12__","_flat_interiorpoint_js__WEBPACK_IMPORTED_MODULE_13__","_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_14__","_flat_orient_js__WEBPACK_IMPORTED_MODULE_15__","_flat_simplify_js__WEBPACK_IMPORTED_MODULE_16__","_math_js__WEBPACK_IMPORTED_MODULE_17__","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","circle","opt_sides","opt_angle","sides","getStride","arrayLength","polygon","getRadius","radius","startAngle","asString","asArray","_math_js__WEBPACK_IMPORTED_MODULE_1__","HEX_COLOR_RE_","NAMED_COLOR_RE_","fromNamed","el","body","rgb","fromString","MAX_CACHE_SIZE","cacheSize","s","fromStringInternal_","g","exec","hasAlpha","substr","Number","normalize","POINTER_ID","POINTER_TYPE","prepareEvent","_EventSource_js__WEBPACK_IMPORTED_MODULE_0__","DEDUP_DIST","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","down","mousemove","mouseup","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","MouseSource","lastTouches","lts","t","cloneEvent","pd","TILE","VECTOR_TILE","process","registerImmediate","nextHandle","tasksByHandle","currentlyRunningATask","doc","attachTo","getPrototypeOf","installNextTickImplementation","canUsePostMessage","installPostMessageImplementation","MessageChannel","installMessageChannelImplementation","installReadyStateChangeImplementation","installSetTimeoutImplementation","task","handle","run","runIfPresent","nextTick","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","messagePrefix","random","onGlobalMessage","attachEvent","channel","port1","port2","html","documentElement","script","onreadystatechange","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","CANVAS_LINE_DASH","TOUCH","POINTER","MSPOINTER","ua","navigator","userAgent","toLowerCase","devicePixelRatio","setLineDash","factory","quickselectStep","defaultCompare","z","sd","newLeft","newRight","swap","RegularShape_RegularShape","ImageStyle","RegularShape","rotateWithView","scale","checksums_","canvas_","hitDetectionCanvas_","fill_","fill","origin_","radius_","radius1","radius2_","radius2","stroke_","stroke","size_","imageSize_","hitDetectionImageSize_","atlasManager_","atlasManager","getFill","getPoints","getRadius2","getStroke","getRotateWithView","setScale","getScale","getAnchor","getHitDetectionImage","pixelRatio","getImage","getImageSize","getHitDetectionImageSize","getImageState","ImageState","LOADED","getOrigin","listenImageChange","thisArg","unlistenImageChange","imageSize","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","colorlike","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","renderOptions","context","dom","draw_","createHitDetectionCanvas_","renderHitDetectionCallback","hasCustomHitDetectionImage","drawHitDetectionCanvas_","getChecksum","image","offsetX","offsetY","hitImage","angle0","radiusC","setTransform","translate","beginPath","arc","lineTo","fillStyle","lineWidth","closePath","ol_color","strokeChecksum","fillChecksum","recalculate","checksum","Image","style_RegularShape","CircleStyle","setRadius","Circle","toFunction","createDefaultStyle","createEditingStyle","Style","geometryFunction_","defaultGeometryFunction","image_","renderer_","renderer","text_","zIndex_","styleFunction","getText","getRenderer","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","defaultStyles","Fill","Stroke","white","blue","GeometryType","MULTI_POLYGON","CIRCLE","MULTI_POINT","LOADING","tile","tileGrid","getZForResolution","tileRange","getTileRangeForExtentAndZ","tileCoord","getTileCoordExtent","_events_Event_js__WEBPACK_IMPORTED_MODULE_0__","DEFAULT_RADIUS","c1","c2","opt_radius","lat1","lat2","deltaLatBy2","deltaLonBy2","bearing","lon1","dByR","lat","asin","lon","_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_4__","_flat_interpolate_js__WEBPACK_IMPORTED_MODULE_8__","_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_9__","_flat_length_js__WEBPACK_IMPORTED_MODULE_10__","_flat_segments_js__WEBPACK_IMPORTED_MODULE_11__","_flat_simplify_js__WEBPACK_IMPORTED_MODULE_12__","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","getCoordinateAt","fraction","getFlatMidpoint","clamp","cosh","squaredSegmentDistance","solveLinearSystem","toDegrees","toRadians","modulo","lerp","mat","maxRow","maxEl","absValue","coef","angleInRadians","angleInDegrees","AssertionError","message","_color_js__WEBPACK_IMPORTED_MODULE_1__","color_","checksum_","setColor","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","IDLE","linearRingss","MultiPolygon_MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","jj","appendPolygon","newEndss","closest","flat_area","orient","inflate","getEndss","getFlatInteriorPoints","interiorpoint","getInteriorPoints","GeometryLayout","simplify","getPolygon","prevEnds","getPolygons","intersectsextent","deflate","lastEnds","geom_SimpleGeometry","disable","none","createSnapToN","createSnapToZero","opt_tolerance","assert","_AssertionError_js__WEBPACK_IMPORTED_MODULE_0__","assertion","errorCode","Op","hasOwn","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","regeneratorRuntime","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","awrap","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","next","Context","reset","skipTempReset","prev","sent","_sent","delegate","method","tryEntries","resetTryEntry","charAt","rootEntry","rootRecord","completion","rval","dispatchException","exception","loc","caught","record","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","makeInvokeMethod","tryCatch","invoke","Promise","unwrapped","previousPromise","enqueue","callInvokeWithMethodAndArg","doneResult","delegateResult","maybeInvokeDelegate","return","pushTryEntry","locs","iteratorMethod","maxSquaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","assignClosest","offset1","offset2","squaredDelta","isRing","opt_tmpPoint","tmpPoint","_Point_js__WEBPACK_IMPORTED_MODULE_3__","_flat_deflate_js__WEBPACK_IMPORTED_MODULE_5__","_flat_inflate_js__WEBPACK_IMPORTED_MODULE_6__","_math_js__WEBPACK_IMPORTED_MODULE_7__","appendPoint","multiPoint","getPoint","tmpTransform","ol_transform","Geometry_Geometry","Geometry","extent_","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","getClosestPoint","opt_closestPoint","computeExtent","sx","opt_sy","proj","TILE_PIXELS","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","flat_transform","ol_Object","geom_Geometry","transformGeom2D","SimpleGeometry_SimpleGeometry","getFirstCoordinate","getLastCoordinate","simplifiedGeometry","getStrideForLayout","nesting","getLayoutForStride","sy","simpleGeometry","binarySearch","haystack","needle","opt_comparator","cmp","comparator","numberSafeCompareFunction","low","high","found","includes","linearFindNearest","reverseSubArray","extension","arr1","arr2","len1","stableSort","compareFnc","isSorted","opt_func","opt_strict","every","currentVal","closestOnCircle","closestOnSegment","segment","along","coordinate1","cosAngle","sinAngle","coord1","coord2","squaredDistanceToSegment","setFromArray","compose","invert","tmp_","multiply","transform1","transform2","a1","b1","d1","e1","f1","a2","b2","d2","e2","f2","c","det","determinant","opacity_","rotateWithView_","rotation_","scale_","getSnapToPixel","setRotateWithView","setRotation","setSnapToPixel","snapToPixel","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","Circle_Circle","setCenterAndRadius","getRadiusSquared_","circleExtent","geom_Circle","DrawEventType","DRAWSTART","DRAWEND","DrawEvent","Draw_Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","source_","features_","snapTolerance_","snapTolerance","type_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","opt_geometry","squaredLength","ol_coordinate","Constructor","mode","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","Vector","source_Vector","geometryName","freehandCondition_","freehand","freehandCondition","updateState_","pass","addToDrawing_","handlePointerMove_","startDrawing_","MapBrowserPointerEvent","circleMode","finishDrawing","atFinish_","abortDrawing_","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","sketchPointGeom","updateSketchFeatures_","sketchLineGeom","ring","removeLastPoint","sketchFeature","sketchFeatures","overlaySource","_createClass","_core_js_object_define_property__WEBPACK_IMPORTED_MODULE_0__","_core_js_object_define_property__WEBPACK_IMPORTED_MODULE_0___default","_defineProperties","descriptor","enumerable","configurable","writable","protoProps","staticProps","interpolatePoint","lineStringCoordinateAtM","lineStringsCoordinateAtM","pointY","cumulativeLengths","o","lo","hi","m0","m1","_coordinate_js__WEBPACK_IMPORTED_MODULE_2__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_4__","_extent_js__WEBPACK_IMPORTED_MODULE_5__","_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_8__","_Pointer_js__WEBPACK_IMPORTED_MODULE_9__","_source_VectorEventType_js__WEBPACK_IMPORTED_MODULE_11__","_structs_RBush_js__WEBPACK_IMPORTED_MODULE_12__","getFeatureFromEvent","Snap","vertex_","vertex","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","pixelTolerance","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","GeometryCollection","writeGeometryCollectionGeometry_","writeCircleGeometry_","opt_listen","register","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","snapTo","snapped","vertexPixel","handleFeatureAdd_","handleFeatureRemove_","updateFeature_","featuresToUpdate","opt_unlisten","unregister","rBush","nodesToRemove","pixelCoordinate","lowerLeft","upperRight","box","segments","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","closestSegment","isCircle","segmentData","geometries","getGeometriesArray","lines","kk","rings","deltaA","deltaB","twiceArea","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","opt_coordinatesss","transform2D","anchorX","anchorY","IconAnchorUnits","FRACTION","PIXELS","IconImage_IconImage","IconImage","imageState","hitDetectionImage_","imageListenerKeys_","imageState_","src_","tainted_","isTainted_","drawImage","getImageData","dispatchChangeEvent_","handleImageError_","unlistenImage_","handleImageLoad_","replaceColor_","fillRect","getSrc","ctx","imgData","putImageData","IconOrigin","Icon_Icon","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","img","imgSize","iconImage_","offset_","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","style_Image","style_Icon","DEFAULT_FILL_COLOR","Text_Text","font_","font","textAlign_","textAlign","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","TextPlacement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getFont","getPlacement","getMaxAngle","getOverflow","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","style_Text","styleName","require","Text","intersectsLineString","intersectsLineStringArray","intersectsLinearRingArray","intersectsLinearRingMultiArray","_segments_js__WEBPACK_IMPORTED_MODULE_2__","coordinatesExtent","point1","point2","intersectsLinearRing","_Collection_js__WEBPACK_IMPORTED_MODULE_1__","_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_2__","_Feature_js__WEBPACK_IMPORTED_MODULE_3__","_MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_4__","_array_js__WEBPACK_IMPORTED_MODULE_5__","_coordinate_js__WEBPACK_IMPORTED_MODULE_6__","_events_js__WEBPACK_IMPORTED_MODULE_7__","_events_Event_js__WEBPACK_IMPORTED_MODULE_8__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_9__","_events_condition_js__WEBPACK_IMPORTED_MODULE_10__","_extent_js__WEBPACK_IMPORTED_MODULE_11__","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_12__","_geom_Point_js__WEBPACK_IMPORTED_MODULE_13__","_Pointer_js__WEBPACK_IMPORTED_MODULE_14__","_layer_Vector_js__WEBPACK_IMPORTED_MODULE_15__","_source_Vector_js__WEBPACK_IMPORTED_MODULE_16__","_source_VectorEventType_js__WEBPACK_IMPORTED_MODULE_17__","_structs_RBush_js__WEBPACK_IMPORTED_MODULE_18__","_style_Style_js__WEBPACK_IMPORTED_MODULE_19__","CIRCLE_CENTER_INDEX","CIRCLE_CIRCUMFERENCE_INDEX","ModifyEventType","MODIFYSTART","MODIFYEND","ModifyEvent","mapBrowserPointerEvent","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexFeature_","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","snappedToVertex_","changingFeature_","dragSegments_","handleSourceAdd_","handleSourceRemove_","lastPointerEvent_","isRendered","handlePointerAtPixel_","willModifyFeatures_","removeFeatureSegmentData_","depth","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","vertexFeature","getInteracting","removePoint","dragSegment","setGeometryCoordinates_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","compareIndexes","segmentDataMatch","closestVertex","closestOnSegmentData","insertVertex_","pointDistanceToSegmentDataSquared","nodes","vertexSegments","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","newIndex","dragSegments","segmentsByFeature","deleted","pointCoordinates","circleGeometry","distanceToCenterSquared","distanceToCircumference","easeIn","easeOut","inAndOut","linear","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","family","fontFamily","_classCallCheck","instance","insURL","config","apiPath","axios","baseURL","crossDomain","interceptors","request","use","iAdminID","localStorage","getItem","store","login","userToken","headers","Token","parse","D_bendi_arcgis_platform_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_0___default","response","ErrorType","Message","Msg","showClose","arrayLike","relativeStart","relativeEnd","isFinite","isInteger","parseFloat","trunc","log2","LOG2E","NumberUtil","[object Object]","constructor_","interfaces_","IllegalArgumentException","Long","Double","Comparable","Clonable","Comparator","Serializable","RuntimeException","toBinaryString","mask","isInfinite","MAX_VALUE","Float64Array","Int32Array","EXP_BIT_MASK","SIGNIF_BIT_MASK","f64buf","i32buf","doubleToLongBits","longBitsToDouble","bits","BIAS","MAX_REL_BITS_INTEGER","skip","sign","NEGATIVE_INFINITY","fract","AssertionFailedException","super","Assert","shouldNeverReachHere","isTrue","expectedValue","actualValue","Coordinate","ordinateIndex","X","Y","Z","other","equalsWithTolerance","equals2D","CloneNotSupportedException","dz","hashCode","DimensionalComparator","o1","o2","compX","compY","_dimensionsToTest","compZ","hasInterface","Iterator","IndexOutOfBoundsException$1","List","NoSuchElementException","OperationNotSupported","ArrayList","addAll","dimensionsToTest","NULL_ORDINATE","serialVersionUID","hasNext","toArray","ensureCapacity","oldElement","Iterator_","removeAll","arrayList","arrayList_","position_","CoordinateList","coll","allowRepeated","isChanged","coordArrayType","inc","Envelope","p1","p2","q","q1","q2","minq","maxq","minp","maxp","otherEnvelope","isNull","_maxx","getMaxX","_maxy","getMaxY","_minx","getMinX","_miny","getMinY","env","intMinX","intMinY","intMaxX","intMaxY","covers","envminx","envmaxx","envminy","envmaxy","expandToInclude","w","h","transX","transY","init","expandBy","setToNull","Exception","NotRepresentableException","StringBuffer","str","Integer","Character","append","setCharAt","intValue","compareTo","isWhitespace","toUpperCase","DD","valueOf","selfMultiply","strlen","isNegative","signCh","numDigits","numBeforeDec","ch","isDigit","TEN","selfAdd","expStr","substring","ex","NumberFormatException","val2","numDecPlaces","divide","negate","dd","xAbs","xLog10","xMag","xApprox","buf","_hi","_lo","insertDecimalPoint","magnitude","mag","gt","lt","ONE","decimalPointPos","MAX_PRINT_DIGITS","digit","rebiasBy10","digitChar","subtract","continueExtractingDigits","remMag","isZero","le","selfDivide","yhi","ylo","hc","tc","hy","ty","C","U","u","SPLIT","zhi","zlo","createNaN","copy","sqr","reciprocal","fhi","flo","plus5","ge","ax","axdd","diffSq","H","T","hx","tx","toStandardNotation","toSciNotation","specialStr","getSpecialNumberString","sigDigits","extractSignificantDigits","num","stringOfChar","numZeroes","zeroes","SCI_NOT_ZERO","digits","SCI_NOT_EXPONENT_CHAR","IllegalStateException","trailingDigits","digitsWithDecimal","isPositive","TWO_PI","PI_2","E","EPS","CGAlgorithmsDD","orientationIndexFilter","selfSubtract","signum","denom1","denom2","denom","numx1","numx2","numx","fracP","doubleValue","numy1","numy2","numy","fracQ","pa","pb","pc","detsum","detleft","detright","errbound","DP_SAFE_EPSILON","Orientation","orientationIndex","nPts","hiPt","hiIndex","iPrev","iNext","disc","isCCW","System","CLOCKWISE","COUNTERCLOCKWISE","COLLINEAR","STRAIGHT","arraycopy","srcPos","destPos","getProperty","line.separator","HCoordinate","py","pw","qx","qy","qw","xInt","yInt","getX","getY","_x","_y","_w","MathUtil","ln","LOG_10","v1","v2","v3","v4","Distance","A","B","D","pointToSegment","noIntersection","r_num","s_num","len2","line","CoordinateSequence","CoordinateSequenceFactory","GeometryComponentFilter","geom","getTypeCode","TYPECODE_GEOMETRYCOLLECTION","_factory","equalsTopo","equalsExact","geometryChangedFilter","_envelope","norm","compareToSameClass","comp","_userData","_SRID","getFactory","toGeometry","getEnvelopeInternal","getPrecisionModel","computeEnvelopeInternal","SRID","userData","aElement","bElement","comparison","TYPECODE_MULTIPOINT","TYPECODE_MULTILINESTRING","TYPECODE_MULTIPOLYGON","getSRID","TYPECODE_POINT","TYPECODE_LINESTRING","TYPECODE_LINEARRING","TYPECODE_POLYGON","TYPENAME_POINT","TYPENAME_MULTIPOINT","TYPENAME_LINESTRING","TYPENAME_LINEARRING","TYPENAME_MULTILINESTRING","TYPENAME_POLYGON","TYPENAME_MULTIPOLYGON","TYPENAME_GEOMETRYCOLLECTION","geometryChangedAction","CoordinateFilter","BoundaryNodeRule","boundaryCount","Mod2BoundaryNodeRule","EndPointBoundaryNodeRule","MultiValentEndPointBoundaryNodeRule","MonoValentEndPointBoundaryNodeRule","MOD2_BOUNDARY_RULE","ENDPOINT_BOUNDARY_RULE","MULTIVALENT_ENDPOINT_BOUNDARY_RULE","MONOVALENT_ENDPOINT_BOUNDARY_RULE","OGC_SFS_BOUNDARY_RULE","CoordinateArrays","pts","testPts","testPt","firstCoordinate","newCoordinates","coordinateComparator","coordList","toCoordinateArray","hasRepeatedPoints","nonNull","newCoord","srcStart","destStart","pts1","pts2","minCoord","npts","extractPts","iPts","ForwardComparator","BidirectionalComparator","forwardComp","isEqualRev","isEqualReversed","dir1","increasingDirection","dir2","i1","i2","comparePt","Map$1","SortedMap","Set","HashSet","put","entrySet","javascript","Iterator_$1","hashSet","hashSet_","BLACK","RED","colorOf","parentOf","leftOf","rightOf","TreeMap","root_","oldValue","fixAfterInsertion","rotateLeft","rotateRight","getFirstEntry","successor","Lineal","SortedSet","TreeSet","Iterator_$2","treeSet","treeSet_","Arrays","asList","Dimension","dimensionValue","SYM_FALSE","SYM_TRUE","DONTCARE","SYM_DONTCARE","P","SYM_P","L","SYM_L","SYM_A","dimensionSymbol","GeometryFilter","CoordinateSequenceFilter","seq","envelope","_geometries","getNumPoints","childCoordinates","isEquivalentClass","otherCollection","getCoordinate","getBoundaryDimension","getDimension","sum","numPoints","revGeoms","createGeometryCollection","theseElements","otherElements","gc","n1","getNumGeometries","n2","thisGeom","getGeometryN","otherGeom","holeComp","isDone","isGeometryChanged","geometryChanged","checkNotGeometryCollection","hasNullElements","isClosed","nLines","revLines","createMultiLineString","BoundaryOp","getBoundary","bop","bnRule","mLine","_geom","getEmptyMultiPoint","bdyPts","computeBoundaryCoordinates","_geomFact","createPoint","createMultiPointFromCoords","boundaryLineString","boundaryMultiLineString","closedEndpointOnBoundary","_bnRule","isInBoundary","getStartPoint","createMultiPoint","getEndPoint","_endpointMap","addEndpoint","getCoordinateN","counter","getValue","valence","count","pt","Counter","Length","PrintStream","StringReader","DecimalFormat","ByteArrayOutputStream","IOException","LineNumberReader","StringUtil","os","ps","printStackTrace","stackTrace","stringReader","getStackTrace","lineNumberReader","readLine","NEWLINE","separator","separatorlen","tokenList","tmpString","pos","token","SIMPLE_ORDINATE_FORMAT","chars","StringBuilder","CoordinateSequences","minDim","dim","setOrdinate","getOrdinate","cs1","cs2","cs1Size","cs2Size","fact","newseq","copyCoord","cs","builder","createClosedRing","_points","expandEnvelope","isSimple","otherLineString","equal","getPointN","ofLine","revLine","createLineString","getCoordinateSequenceFactory","Puntal","_coordinates","Area","ofRingSigned","p0","Polygonal","_shell","shellCoordinates","_holes","ofRing","getCoordinateSequence","getNumInteriorRing","prevX","prevY","xChanged","yChanged","otherPolygon","thisShell","otherPolygonShell","clockwise","uniqueCoordinates","minCoordinate","scroll","poly","getExteriorRing","convexHull","otherShell","shellComp","nHole1","nHole2","thisHole","getInteriorRingN","otherHole","createLinearRing","shellCopy","holeCopies","shell","holes","hasNonEmptyElements","rev","MINIMUM_VALID_SIZE","GeometryFactory","validateConstruction","createMultiPolygon","allRings","allRingsArray","GeometryEditor","isUserDataCopied","_isUserDataCopied","operation","editInternal","setUserData","getUserData","editGeometryCollection","editPolygon","edit","getClass","getName","collectionForType","newPolygon","createPolygon","hole","GeometryEditorOperation","NoOpGeometryOperation","CoordinateOperation","CoordinateSequenceOperation","CoordinateArraySequence","_dimension","cloneCoordinates","strBuilder","coordSeq","getCoordinateCopy","CoordinateArraySequenceFactory","instanceObject","is","MapPolyfill","createCollection","delete","sharedDelete","mapHas","sharedGet","sharedSet","sharedKeys","sharedValues","entries","mapEntries","sharedForEach","sharedClear","proto","objectOnly","_keys","_values","_itp","sharedSize","list","sharedIterator","itp","array2","v","MapImpl","Map","HashMap","PrecisionModel","pm1","pm2","otherPrecisionModel","_modelType","_scale","getMaximumSignificantDigits","otherSigDigits","FLOATING","FLOATING_SINGLE","description","FIXED","floatSingleVal","makePrecise","maxSigDigits","Type","nameToTypeMap","_name","modelType","pm","maximumPreciseValue","multiPolygons","multiPolygonArray","geometryArray","multiLineStrings","multiLineStringArray","lineStringArray","multiPoints","multiPointArray","linearRingArray","pointArray","polygonArray","exemplar","geomList","geomClass","isHeterogeneous","hasGeometryCollection","partClass","toGeometryArray","geom0","isCollection","toPolygonArray","toLineStringArray","toPointArray","_coordinateSequenceFactory","editor","CloneOp","_precisionModel","ptSeq","coordinateSequenceFactory","precisionModel","getDefaultCoordinateSequenceFactory","regExes","typeStr","emptyTypeStr","spaces","parenComma","doubleParenComma","trimParens","WKTParser","geometryFactory","wkt","matches","extractGeometry","getGeometryType","extract","wktType","multipoint","linestring","linearring","multilinestring","multipolygon","coords","trim","components","wktArray","WKTWriter","LineIntersector","pdx","pdy","segmentIndex","intIndex","computeIntLineIndex","_intLineIndex","catBuilder","isEndPoint","_isProper","isCollinear","p3","p4","_inputLines","_result","computeIntersect","dist0","getEdgeDistance","dist1","hasIntersection","isInteriorIntersection","inputLineIndex","_intPt","NO_INTERSECTION","computeEdgeDistance","COLLINEAR_INTERSECTION","toLineString","getTopologySummary","ptIndex","_pa","_pb","DONT_INTERSECT","DO_INTERSECT","POINT_INTERSECTION","RobustLineIntersector","nearestPt","minDist","intPt","env0","env1","computeIntersection","n3","n4","normPt","smallestInAbsValue","nearestEndpoint","intersectionWithNormalization","isInSegmentEnvelopes","x4","xabs","intPtDD","isIn","println","normalizeToEnvCentre","safeHCoordinateIntersection","p1q1p2","p1q2p2","q1p1q2","q1p2q2","n00","n01","n10","n11","minX0","minY0","maxX0","maxY0","minX1","minY1","maxX1","maxY1","intMidX","intMidY","Pq1","Pq2","Qp1","Qp2","collinear","computeCollinearIntersection","LineSegment","seg","orient0","orient1","geomFactory","li","projectionFactor","pf0","pf1","newp0","project","newp1","pointToLinePerpendicular","midPoint","closestPt","close00","close01","close10","close11","comp0","temp","segmentLengthFraction","offsetDistance","segx","segy","ux","uy","offsetx","offsety","ls","inputPt","segFrac","segmentToSegment","bits0","java","lang","hash0","bits1","hash1","Location","locationValue","EXTERIOR","BOUNDARY","INTERIOR","NONE","IntersectionMatrix","actualDimensionValue","requiredDimensionSymbol","actualDimensionSymbols","requiredDimensionSymbols","isDisjoint","hasPointInCommon","_matrix","dimensionSymbols","row","col","toDimensionValue","column","minimumDimensionSymbols","setAtLeast","minimumDimensionValue","dimensionOfGeometryA","dimensionOfGeometryB","isTouches","ai","bi","toDimensionSymbol","im","setAll","elements","Angle","radians","PI_TIMES_2","dx0","dy0","dotprod","anglePrev","angleNext","tip1","tail","tip2","diff","ang1","ang2","delAngle","angleDegrees","crossproduct","angDel","PI_OVER_2","PI_OVER_4","Triangle","m00","m01","m10","m11","v0","lenAB","lenBC","lenCA","maxLen","isAcute","cx","cy","ay","bx","by","ccx","ccy","l1","l2","len0","frac","splitPt","uz","vx","vy","vz","crossx","crossy","crossz","absSq","area3D","circum","inCentreX","inCentreY","signedArea","interpolateZ","longestSideLength","circumcentre","inCentre","freeze","PointPairDistance","_pt","ptDist","setMinimum","_isNull","initialize","_distance","setCoordinate","setMaximum","DistanceToPoint","tempSegment","computeDistance","DiscreteHausdorffDistance","g0","g1","densifyFrac","setDensifyFraction","_ptDist","_densifyFrac","computeOrientedDistance","compute","_g0","_g1","discreteGeom","distFilter","MaxPointDistanceFilter","getMaxPointDistance","fracFilter","MaxDensifiedByFractionDistanceFilter","_minPtDist","_maxPtDist","_euclideanDist","delx","_numSubSegs","dely","distance_module","ItemVisitor","PointOnGeometryLocator","IntervalRTreeNode","_min","queryMin","queryMax","_max","NodeComparator","mid1","mid2","POSITIVE_INFINITY","IntervalRTreeLeafNode","visitor","visitItem","_item","Collections","reverseOrder","alen","singletonList","IntervalRTreeBranchNode","_node1","query","_node2","buildExtent","SortedPackedIntervalRTree","_leaves","buildLevel","_root","buildTree","_level","buildRoot","LinearComponentExtracter","buildGeometry","getLines","forceToLineString","geoms","_isForcedToLineString","_lines","isForcedToLineString","ArrayListVisitor","_items","RayCrossingCounter","countSegment","isOnSegment","getLocation","_p","_isPointOnSegment","minx","maxx","_crossingCount","IndexedPointInAreaLocator","rcc","SegmentVisitor","_index","_counter","IntervalIndexedGeometry","addLine","getItems","PointLocation","lineIntersector","locatePointInRing","locateInRing","GeometryCollectionIterator","_atStart","isAtomic","_parent","_subcollectionIterator","UnsupportedOperationException","SimplePointInAreaLocator","shellLoc","holeLoc","locatePointInPolygon","geomi","g2","locateInGeometry","locate","SimilarityMeasure","AreaSimilarityMeasure","areaInt","areaUnion","union","HausdorffSimilarityMeasure","hgt","DENSIFY_FRACTION","envSize","diagonalSize","measure","SimilarityMeasureCombiner","measure1","measure2","match","Centroid","cent","getCentroid","basePt","_areaBasePt","_ptCount","_ptCentSum","lineLen","segmentLen","midx","_lineCentSum","midy","_totalLength","addPoint","isPositiveArea","addTriangle","addLineSegments","_areasum2","_cg3","setAreaBasePoint","centroid3","_triangleCent3","area2","addShell","addHole","EmptyStackException","Stack","IndexOutOfBoundsException","peek","empty","UniqueCoordinateArrayFilter","ConvexHull","RadialComparator","inputPts","octPts","computeOctPts","closeRing","cleanRing","_geomFactory","original","cleanedRing","previousDistinctCoordinate","currentCoordinate","nextCoordinate","isBetween","cleanedRingCoordinates","c3","polyPts","computeOctRing","reducedSet","isInRing","reducedPts","padArray3","_inputPts","reduce","sortedPts","preSort","cHS","grahamScan","cH","lineOrPolygon","pad","dxp","dyp","dxq","dyq","op","oq","polarCompare","_origin","origin","extractCoordinates","filterCoordinates","InteriorPointArea","avg","bisector","horizontalBisector","widestIntersection","widestGeometry","centre","_interiorPoint","_maxWidth","bisectY","SafeBisectorFinder","getBisectorY","addPolygon","finder","_centreY","_loY","_hiY","_poly","updateInterval","InteriorPointLine","addEndpoints","addInterior","_centroid","_minDistance","InteriorPointPoint","PointLocator","_isIn","_numBoundaries","updateLocationInfo","locateOnPoint","locateOnLineString","locateInPolygon","ml","mpoly","computeLocation","ptCoord","isOnLine","locateInPolygonRing","_boundaryRule","boundaryRule","MinimumBoundingCircle","minSin","minAngPt","Q","minAng","ang","angleBetween","_radius","_extremalPts","_input","_centre","hullPts","copyDeep","lowestPoint","pointWitMinAngleWithX","R","pointWithMinAngleWithSegment","isObtuse","computeCirclePoints","computeCentre","centrePoint","MinimumDiameter","getDiameter","getMinimumRectangle","computeMinimumDiameter","_minWidthPt","_inputGeom","_minBaseSeg","convexGeom","_convexHullPts","_minWidth","computeConvexRingMinDiameter","currMaxIndex","findMaxPerpDistance","_isConvex","computeWidthConvex","getConvexHull","startIndex","maxPerpDistance","distancePerpendicular","nextPerpDistance","maxIndex","nextIndex","_minPtIndex","minPara","maxPara","minPerp","maxPerp","paraC","computeC","perpC","maxPerpLine","computeSegmentForLine","minPerpLine","maxParaLine","minParaLine","lineIntersection","inputGeom","isConvex","algorithm","GeometryTransformer","transformCoordinates","isAllValidLinearRings","transformLinearRing","transGeomList","transformGeom","transformLineString","transformPoint","transformPolygon","_pruneEmptyGeometry","_preserveGeometryCollectionType","transformMultiPoint","transformMultiLineString","transformMultiPolygon","transformGeometryCollection","seqSize","_preserveType","_preserveCollections","Densifier","distanceTolerance","precModel","densifiedSegCount","densifiedSegLen","segFract","pointAlong","densifier","setDistanceTolerance","getResultGeometry","DensifyTransformer","_distanceTolerance","roughGeom","createValidArea","newPts","densifyPoints","roughAreaGeom","densify","Quadrant","quad","NE","NW","quad1","quad2","halfPlane","SE","SW","HalfEdge","e0","_sym","oNext","_orig","insertAfter","ecmp","ePrev","orig","save","setNext","sym","degree","quadrant","quadrant2","compareAngularDirection","setSym","MarkHalfEdge","isMarked","setMark","_isMarked","EdgeGraph","eAdj","_vertexMap","eAdjDest","createEdge","isValidEdge","eSame","find","DissolveHalfEdge","_isStart","DissolveEdgeGraph","LineDissolver","getResult","isStart","_ringStartEdge","computeResult","eNode","prevNode","stackEdges","buildLines","eStartRing","eNext","eStart","markBoth","updateRingStartEdge","buildRing","_nodeEdgeStack","edges","_graph","getVertexEdges","buildLine","doneStart","addEdge","setStart","dissolve","Position","ON","MonotoneChain","mc","si","mce","computeIntersectsForChain","chainIndex","SweepLineEvent","_eventType","DELETE","deleteEventIndex","_deleteEventIndex","_obj","pe","_xValue","_insertEvent","INSERT","ev","_label","insertEvent","label","EdgeSetIntersector","SegmentIntersector","segIndex0","segIndex1","_li","getIntersectionNum","isAdjacentSegments","maxSegIndex","_properIntersectionPoint","isDoneWhenProperInt","_isDoneWhenProperInt","_hasProperInterior","bdyNodes","isIntersection","_hasProper","_hasIntersection","_isDone","isBoundaryPointInternal","bdyNodes0","bdyNodes1","_bdyNodes","numTests","p00","p01","p10","p11","_recordIsolated","setIsolated","_numIntersections","isTrivialIntersection","_includeProper","isProper","addIntersections","isBoundaryPoint","_isSelfIntersection","includeProper","recordIsolated","SimpleMCSweepLineIntersector","isDelete","getInsertEvent","setDeleteEventIndex","nOverlaps","prepareEvents","isInsert","processOverlaps","getDeleteEventIndex","edges0","edges1","addEdges","computeIntersections","testAllSegments","edgeSet","getMonotoneChainEdge","getStartIndexes","ev0","mc0","getObject","ev1","mc1","isSameLabel","TopologyLocation","locValue","location","gl","newLoc","toLocationSymbol","posIndex","setLocation","locIndex","setAllLocations","Label","lineLabel","elt","geomIndex","setAllLocationsIfNull","isLine","lbl","merge","flip","isArea","isAnyNull","side","isEqualOnSide","allPositionsEqual","onLoc","leftLoc","rightLoc","setLocations","EdgeIntersection","print","maxSegmentIndex","EdgeIntersectionList","ei","_nodeMap","edgeList","eiPrev","newEdge","createSplitEdge","ei0","ei1","lastSegStartPt","useIntPt1","ipt","Edge","eiNew","MonotoneChainIndexer","startIndexList","findChainEnd","toIntArray","chainQuad","MonotoneChainEdge","chainIndex0","chainIndex1","start0","end0","start1","end1","mid0","mcb","getChainStartIndices","Depth","NULL_VALUE","_depth","depthValue","minDepth","newValue","depthAtLocation","GraphComponent","isVisited","_isVisited","isInResult","_isInResult","_isCovered","_isCoveredSet","isCovered","getGeometryCount","computeIM","updateIM","setAtLeastIfValid","newe","toLineLabel","_isIsolated","isIsolated","isEqualForward","isEqualReverse","iRev","_depthDelta","_mce","_env","normalizedSegmentIndex","nextSegIndex","nextPt","eiList","depthDelta","addIntersection","Node","getEdges","de","getEdge","_coord","label2","eltIndex","nLoc","setLabel","argIndex","onLocation","_edges","mergeLabel","computeMergedLocation","thisLoc","setNode","NodeMap","nodeMap","nodeFact","getLabel","addNode","EdgeEnd","_dx","_dy","_quadrant","_p0","_p1","_node","lastDotPos","lastIndexOf","compareDirection","_edge","boundaryNodeRule","TopologyException","msg","msgWithCoord","DirectedEdge","currLocation","nextLocation","_nextMin","_isForward","depthVal","isInteriorAreaEdge","nextMin","getDepthDelta","minEdgeRing","_minEdgeRing","isExteriorIfArea0","isExteriorIfArea1","edgeRing","_edgeRing","printReverse","setVisited","directionFactor","oppositePos","opposite","oppositeDepth","setDepth","isForward","computeDirectedLabel","NodeFactory","PlanarGraph","nodeit","linkResultDirectedEdges","_nodes","linkAllDirectedEdges","ep0","ep1","_edgeEndList","eCoord","matchInSameDirection","getEdgeEnds","ee","edgesToAdd","de1","de2","GeometryGraph","determineBoundary","_boundaryNodeRule","computeRingSelfNodes","computeSelfNodes","isDoneIfProperInt","setIsDoneIfProperInt","esi","createEdgeSetIntersector","isRings","_parentGeom","computeAllSegments","addSelfIntersectionNodes","_argIndex","edgelist","addSplitEdges","setBoundaryNodes","getBoundaryNodes","_hasTooFewPoints","insertPoint","addPolygonRing","insertEdge","removeRepeatedPoints","_invalidPoint","_lineEdgeMap","insertBoundaryPoint","_boundaryNodes","isBoundaryNode","_useBoundaryDeterminationRule","lr","cwLeft","cwRight","eLoc","eiIt","addSelfIntersectionNode","addLineString","addCollection","_areaPtLocator","_ptLocator","findEdge","parentGeom","geomgraph","KdNodeVisitor","KdNode","_count","_right","_left","_data","KdTree","kdnodes","toCoordinates","includeRepeated","_tolerance","matchNode","findBestMatchNode","increment","insertExact","queryEnv","queryNode","currentNode","odd","discriminant","searchLeft","searchRight","getLeft","visit","getRight","BestMatchVisitor","queryEnvelope","getNode","leafNode","isOddLevel","isLessThan","isInTolerance","_numberOfNodes","setLeft","setRight","_matchNode","_matchDist","kdtree","NodeBase","centrex","centrey","subnodeIndex","_subnode","hasChildren","hasItems","resultItems","addAllItems","subSize","searchEnv","isSearchMatch","addAllItemsFromOverlapping","itemEnv","isPrunable","visitItems","maxSubDepth","sqd","DoubleBits","CVTFWD","NumW","Qty","Sign","Expo","Mant","Bin","Inf","32","64","ExW","exponent","powerOf2","Key","dMax","computeQuadLevel","computeKey","quadSize","Node$1","getEnvelope","getLevel","addEnv","expandEnv","largerNode","insertNode","getSubnodeIndex","_centrex","_centrey","createSubnode","getSubnode","miny","maxy","sqEnv","childNode","IntervalSize","maxAbs","scaledInterval","MIN_BINARY_EXPONENT","Root","createExpanded","insertContained","tree","isZeroX","isZeroWidth","isZeroY","SpatialIndex","Quadtree","minExtent","collectStats","insertEnv","ensureExtent","_minExtent","foundItems","posEnv","delX","delY","quadtree","Boundable","ItemBoundable","_bounds","bounds","PriorityQueue","minItem","_size","reorder","AbstractNode","_childBoundables","childBoundable","computeBounds","BoundablePair","getBounds","priQ","isComp1","isComposite","_boundable1","isComp2","_boundable2","expand","nd","bndComposite","bndOther","getChildBoundables","bp","_itemDistance","isLeaves","boundable1","boundable2","itemDistance","AbstractSTRtree","searchBounds","childBoundables","getIntersectsOp","queryInternal","_nodeCapacity","build","childToRemove","valuesTree","itemsTree","valuesTreeForNode","valuesTreeForChild","_built","_itemBoundables","boundables","boundablesAtLevel","boundable","createHigherLevels","removeItem","childToPrune","boundablesOfALevel","parentBoundables","createParentBoundables","maxChildDepth","childDepth","newLevel","sortedChildBoundables","getComparator","lastNode","getNodeCapacity","addChildBoundable","IntersectsOp$1","IntersectsOp","DEFAULT_NODE_CAPACITY","nodeCapacity","ItemDistance","item1","item2","STRtree","kNearestNeighbors","poll","getBoundable","verticalSlices","createParentBoundablesFromVerticalSlice","STRtreeNode","intersectsOp","sliceCount","sliceCapacity","slices","boundablesAddedToSlice","yComparator","minLeafCount","xComparator","createParentBoundablesFromVerticalSlices","itemDist","getRoot","nearestNeighbour","initBndPair","maxDistance","distanceLowerBound","minPair","bndPair","currentDistance","expandToQueue","bnd","bp1","bp2","compareDoubles","centreX","centreY","aBounds","bBounds","strtree","geometryTypes","GeoJSONParser","json","parse$1","extract$1","FeatureCollection","featureCollection","sub","_coordinate","geoJson","shellGeoJson","holeGeoJson","GeoJSONReader","GeoJSONWriter","WKTReader","p2c","olReference","ol","convertFromPoint","convertFromLineString","convertFromLinearRing","convertFromPolygon","convertFromMultiPoint","convertFromMultiLineString","convertFromMultiPolygon","convertFromCollection","multiLineString","multiPolygon","getGeometries","convertToPoint","convertToLineString","convertToLinearRing","convertToPolygon","convertToMultiPoint","convertToMultiLineString","convertToMultiPolygon","convertToCollection","geometryCollection","io","SegmentPointComparator","octant","xSign","relativeSign","ySign","compareValue","compareSign0","compareSign1","SegmentNode","_segmentOctant","_isInterior","_segString","segString","segmentOctant","SegmentNodeList","addEdgeCoordinates","collapsedVertexIndexes","findCollapsesFromInsertedNodes","findCollapsesFromExistingVertices","vertexIndex","isInterior","addCollapsedNodes","collapsedVertexIndex","numVerticesBetween","isCollapsed","findCollapseIndex","NodedSegmentString","getData","getSegmentOctant","splitEdges","edgePts","split0","pt0","splitn","splitnPts","ptn","Octant","adx","ady","SegmentString","NodableSegmentString","segStrings","resultEdgelist","getNodedSubstrings","ss","getNodeList","_pts","safeOctant","addIntersectionNode","_nodeList","MonotoneChainOverlapAction","mc2","start2","getLineSegment","_overlapSeg1","_overlapSeg2","MonotoneChain$1","mcs","computeSelect","_end","_start","mco","computeOverlaps","_context","MonotoneChainBuilder","safeStart","getChains","mcList","Noder","SinglePassNoder","segInt","_segInt","setSegmentIntersector","MCIndexNoder","_monoChains","_nodedSegStrings","segStr","segChains","_idCounter","inputSegStrings","intersectChains","overlapAction","SegmentOverlapAction","queryChain","overlapChains","testChain","_nOverlaps","ss1","ss2","_si","processIntersections","ScaledNoder","rescale","_scaleFactor","_offsetX","_offsetY","nodedSegmentStrings","roundPts","roundPtsNoDup","splitSS","_noder","_isScaled","intSegStrings","computeNodes","noder","scaleFactor","isIntegerPrecision","noding","IsSimpleOp","mp","_nonSimpleLocation","isSimpleLinearGeometry","graph","endPoints","getEdgeIterator","getMaximumSegmentIndex","eiInfo","hasProperIntersection","getProperIntersectionPoint","hasNonEndpointIntersection","_isClosedEndpointsInInterior","hasClosedEndpointIntersection","getEdgeIntersectionList","EndpointInfo","isSimpleMultiPoint","isSimplePolygonal","isSimpleGeometryCollection","computeSimple","BufferParameters","quadSegs","alpha","_endCapStyle","_isSingleSided","_quadrantSegments","_joinStyle","JOIN_BEVEL","JOIN_MITRE","_mitreLimit","JOIN_ROUND","DEFAULT_QUADRANT_SEGMENTS","joinStyle","simplifyFactor","_simplifyFactor","endCapStyle","mitreLimit","isSingleSided","CAP_ROUND","DEFAULT_MITRE_LIMIT","DEFAULT_SIMPLIFY_FACTOR","quadrantSegments","setQuadrantSegments","setEndCapStyle","setJoinStyle","setMitreLimit","CAP_FLAT","CAP_SQUARE","RightmostEdgeFinder","_minCoord","getRightmostSideOfSegment","checkForRightmostCoordinate","_minDe","_minIndex","pPrev","pNext","orientation","usePrev","_orientedDe","star","getRightmostEdge","getSym","dirEdgeList","findRightmostEdgeAtNode","findRightmostEdgeAtVertex","rightmostSide","getRightmostSide","LinkedList","addLast","removeFirst","shift","BufferSubgraph","_dirEdgeList","_rightMostCoord","startEdge","computeDepths","copySymDepths","outsideDepth","clearVisitedEdges","_finder","setEdgeDepths","addReachable","getDepth","setInResult","nodesVisited","nodeQueue","startNode","computeNodeDepth","adjNode","edgeEnv","dirEdge","nodeStack","symNode","EdgeRing","_ring","_geometryFactory","_isHole","_startDe","isFirstEdge","getEdgeRing","addPoints","setEdgeRing","getNext","_maxNodeDegree","getOutgoingDegree","containsPoint","computeMaxNodeDegree","deLabel","holeLR","computePoints","computeRing","MinimalEdgeRing","er","setMinEdgeRing","getNextMin","MaximalEdgeRing","minEdgeRings","getMinEdgeRing","minEr","linkMinimalDirectedEdges","PolygonBuilder","edgeRings","shellList","freeHoleList","isHole","resultPolyList","toPolygon","getShell","findEdgeRingContaining","setShell","maxEdgeRings","getMaxNodeDegree","linkDirectedEdgesForMinimalEdgeRings","buildMinimalRings","findShell","placePolygonHoles","_shellList","dirEdges","computePolygons","testEr","testRing","testEnv","minShell","minEnv","tryShell","tryRing","tryEnv","isContained","shellCount","getNodes","buildMaximalEdgeRings","buildMinimalEdgeRings","sortShellsAndHoles","placeFreeHoles","BufferInputLineSimplifier","inputLine","distanceTol","simp","i0","_inputLine","isConcave","isShallow","isShallowSampled","midIndex","findNextNonDeletedIndex","isMiddleVertexDeleted","isDeletable","_distanceTol","_isDeleted","isAngleToSimplify","_angleOrientation","NUM_PTS_TO_CHECK","deleteShallowConcavities","collapseLine","INIT","KEEP","OffsetSegmentString","_ptList","COORDINATE_ARRAY_TYPE","bufPt","isRedundant","addPt","lastPt","_minimimVertexDistance","startPt","minimimVertexDistance","OffsetSegmentGenerator","addStartPoint","_s0","_s1","_s2","_seg0","computeOffsetSegment","_side","_offset0","_seg1","_offset1","outsideTurn","addCollinear","addOutsideTurn","addInsideTurn","offsetL","offsetR","_bufParams","getEndCapStyle","_segList","addDirectedFillet","squareCapSideOffset","squareCapLOffset","squareCapROffset","offset0","isMitreWithinLimit","mitreRatio","getMitreLimit","addLimitedMitreJoin","OFFSET_SEGMENT_SEPARATION_FACTOR","getJoinStyle","addMitreJoin","addBevelJoin","addCornerFillet","addPts","endAngle","s1","s2","ang0","angDiff","angleBetweenOriented","angDiffHalf","midAng","mitreMidAng","mitreDist","bevelDelta","bevelHalfLen","bevelMidX","bevelMidY","bevelMidPt","mitreMidLine","bevelEndLeft","pointAlongOffset","bevelEndRight","totalAngle","nSegs","_filletAngleQuantum","initAngle","currAngleInc","currAngle","sideSign","_hasNarrowConcaveAngle","INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR","_closingSegLengthFactor","_maxCurveSegmentError","setPrecisionModel","setMinimumVertexDistance","CURVE_VERTEX_SNAP_DISTANCE_FACTOR","numInt","bufParams","getQuadrantSegments","MAX_CLOSING_SEG_LEN_FACTOR","OffsetCurveBuilder","isRightSide","posDistance","segGen","getSegGen","computePointCurve","computeOffsetCurve","curvePts","distTol","simplifyTolerance","addSegments","simp2","initSideSegments","addFirstSegment","addNextSegment","simp1","addLastSegment","addLineEndCap","createCircle","createSquare","computeSingleSidedBufferCurve","computeLineBufferCurve","lineCoord","bufDistance","getSimplifyFactor","getLineCurve","copyCoordinates","computeRingBufferCurve","SubgraphDepthLocater","stabbingRayLeftPt","stabbedSegments","_subgraphs","bsg","findStabbedSegments","getDirectedEdges","_seg","isHorizontal","ds","DepthSegment","_leftDepth","_upwardSeg","orientIndex","seg0","seg1","compare0","subgraphs","OffsetCurveSetBuilder","curve","_curveBuilder","addCurve","offsetSide","shellCoord","isErodedCompletely","holeCoord","triangleCoord","bufferDistance","tri","distToCentre","getBufferParameters","_curveList","cwLeftLoc","cwRightLoc","getRingCurve","ringCoord","isTriangleErodedCompletely","envMinDimension","curveBuilder","EdgeEndStar","_edgeList","iNextCW","startLoc","currLoc","geomGraph","computeEdgeEndLabels","getBoundaryNodeRule","checkAreaLabelsConsistent","lastEdgeIndex","startLabel","eSearch","_edgeMap","_ptInAreaLocation","computeLabel","propagateSideLabels","hasDimensionalCollapseEdge","DirectedEdgeStar","getResultAreaEdges","firstOut","incoming","_SCANNING_FOR_INCOMING","_resultAreaEdgeList","nextOut","nextIn","_LINKING_TO_OUTGOING","insertEdgeEnd","de0","deLast","quad0","getQuadrant","isNorthern","getDy","nodeLabel","prevOut","firstIn","edgeIndex","findIndex","startDepth","targetLastDepth","nextDepth","lastDepth","endIndex","currDepth","nextDe","setNextMin","isLineEdge","setCovered","computeLabelling","eLabel","OverlayNodeFactory","OrientedCoordinateArray","orientation1","orientation2","limit1","limit2","compPt","done1","done2","oca","compareOriented","_orientation","EdgeList","edgeColl","matchEdge","_ocaMap","SegmentIntersector$1","IntersectionAdder","numIntersections","numInteriorIntersections","_hasInterior","numProperIntersections","BufferBuilder","lLoc","rLoc","_workingPrecisionModel","existingEdge","findEqualEdge","existingLabel","labelToMerge","isPointwiseEqual","mergeDelta","existingDelta","newDelta","setDepthDelta","subgraphList","polyBuilder","processedGraphs","subgraph","getRightmostCoordinate","locater","computeDepth","findResultEdges","emptyGeom","_workingNoder","curveSetBuilder","bufferSegStrList","getCurves","createEmptyResultGeometry","computeNodedEdges","createSubgraphs","buildSubgraphs","resultGeom","getNoder","nodedSegStrings","oldLabel","insertUniqueEdge","NodingValidator","_segStrings","checkEndPtVertexIntersections","ss0","checkInteriorIntersections","pts0","hasInteriorIntersection","checkCollapses","checkCollapse","HotPixel","segMinx","segMaxx","segMiny","segMaxy","isOutsidePixelEnv","intersectsToleranceSquare","_corner","intersectsScaled","copyScaled","_p0Scaled","_p1Scaled","_originalPt","pScaled","_safeEnv","safeTolerance","SAFE_ENV_EXPANSION_FACTOR","intersectsLeft","intersectsBottom","segIndex","_ptScaled","initCorners","MonotoneChainSelectAction","selectedSegment","MCIndexPointSnapper","hotPixel","parentEdge","hotPixelVertexIndex","pixelEnv","getSafeEnvelope","hotPixelSnapAction","HotPixelSnapAction","isNodeAdded","_isNodeAdded","_parentEdge","_hotPixelVertexIndex","_hotPixel","addSnappedNode","InteriorIntersectionFinderAdder","_interiorIntersections","MCIndexSnapRounder","inputSegmentStrings","resultSegStrings","nv","checkValid","findInteriorIntersections","computeIntersectionSnaps","computeVertexSnaps","intFinderAdder","getInteriorIntersections","edge0","_pointSnapper","getIndex","snapRound","snapPts","snapPt","_pm","BufferOp","gBuf","geomBuf","bufOp","params","maxPrecisionDigits","envMax","expandByDistance","bufEnvMax","bufEnvPrecisionDigits","minUnitLog10","fixedPM","bufBuilder","setWorkingPrecisionModel","setNoder","_resultGeometry","_argGeom","precDigits","MAX_PRECISION_DIGITS","bufferReducedPrecision","_saveException","precisionDigits","sizeBasedScaleFactor","precisionScaleFactor","bufferFixedPrecision","bufferOriginalPrecision","argPM","computeGeometry","CAP_BUTT","PolygonExtracter","_comps","comps","GeometryLocation","_segIndex","INSIDE_AREA","_component","PointExtracter","ConnectedElementLocationFilter","locations","_locations","DistanceOp","distOp","envDist","nearestPoints","locPtPoly","computeContainmentDistance","_terminateDistance","polyGeomIndex","polyGeom","locationsIndex","polys","insideLocs","getLocations","_minDistanceLocation","ptLoc","locGeom","computeMinDistance","lines0","lines1","computeMinDistanceLines","updateMinDistance","computeMinDistanceLinesPoints","computeMinDistancePoints","nearestPts","computeFacetDistance","coord0","segClosestPoint","line0","line1","closestPoints","points0","points1","pt1","terminateDistance","EdgeString","forwardDirectedEdges","reverseDirectedEdges","coordinateList","_directedEdges","directedEdge","getEdgeDirection","getLine","GraphComponent$1","visitedState","visited","marked","setMarked","DirectedEdge$1","_from","_angle","_to","_edgeDirection","from","to","directionPt","edgeDirection","LineMergeDirectedEdge","getToNode","getDegree","getOutEdges","Edge$1","_dirEdge","setEdge","getFromNode","addOutEdge","Node$2","fromNode","setDirectedEdges","DirectedEdgeStar$1","_outEdges","sortEdges","_sorted","modi","node0","node1","toEdges","commonEdges","retainAll","_deStar","deStar","LineMergeEdge","_line","NodeMap$1","PlanarGraph$1","nodesFound","nodeIterator","_dirEdges","getDirEdge","outEdges","LineMergeGraph","startCoordinate","endCoordinate","endNode","directedEdge0","directedEdge1","findNode","LineMerger","buildEdgeStringsStartingAt","buildEdgeStringsForNonDegree2Nodes","_mergedLineStrings","_edgeStrings","buildEdgeStringStartingWith","edgeIterator","buildEdgeStringsForObviousStartNodes","buildEdgeStringsForIsolatedLoops","edgeString","current","buildEdgeStringsForUnprocessedNodes","linemerge","LineStringSnapper","srcCoords","_isClosed","srcPt","snapVert","findSnapForVertex","_snapTolerance","_srcPts","snapVertices","snapSegments","distinctPtCount","findSegmentIndexToSnap","snapIndex","_allowSnappingToSourceVertices","allowSnappingToSourceVertices","srcLine","srcPts","GeometrySnapper","snapGeom","snapper0","snapper1","computeSizeBasedSnapTolerance","fixedSnapTol","computeOverlaySnapTolerance","minDimension","snapTol","SNAP_PRECISION_FACTOR","cleanResult","snapToSelf","extractTargetCoordinates","snapTrans","SnapTransformer","_srcGeom","snappedGeom","ringPts","minSegLen","computeMinimumSegmentLength","ptSet","segLen","srcGeom","snapper","setAllowSnappingToSourceVertices","_isSelfSnap","snapLine","_snapPts","isSelfSnap","BasicSegmentString","InteriorIntersectionFinder","setFindAllIntersections","setKeepIntersections","_interiorIntersection","isCheckEndSegmentsOnly","_isCheckEndSegmentsOnly","_intSegments","_intersectionCount","_intersections","findAllIntersections","_findAllIntersections","keepIntersections","_keepIntersections","isEndSegPresent","isEndSegment","FastNodingValidator","isValid","getIntersections","execute","_isValid","getErrorMessage","getInteriorIntersection","intSegs","getIntersectionSegments","EdgeNodingValidator","validator","_nv","toSegmentStrings","GeometryCollectionMapper","mapper","mapped","_mapOp","mapOp","MapOp","LineBuilder","opCode","_op","getGraph","collectLineEdge","_lineEdgesList","collectBoundaryTouchEdge","targetIndex","getArgGeometry","findCoveredLineEdges","collectLines","_resultLineList","OverlayOp","isResultOfOp","setVisitedEdge","isCoveredSet","isCoveredByA","edgesList","labelIsolatedLine","INTERSECTION","ptLocator","PointBuilder","isCoveredByLA","_resultPointList","isIncidentEdgeInResult","filterCoveredNodeToPoint","extractNonCoveredResultNodes","CommonBits","_isFirst","_commonMantissaBitsCount","_commonBits","_commonSignExp","numBits","signExpBits","numSignExp","numCommonMostSigMantissaBits","zeroLowerBits","numStr","padStr","bitStr","nBits","prop","num1","num2","getBit","CommonBitsRemover","trans","Translater","_commonCoord","invCoord","_ccFilter","getCommonCoordinate","CommonCoordinateFilter","_commonBitsX","_commonBitsY","getCommon","xp","yp","SnapOverlayOp","overlayOp","UNION","SYMDIFFERENCE","DIFFERENCE","_cbr","remGeom","removeCommonBits","addCommonBits","prepGeom","prepareResult","computeSnapTolerance","SnapIfNeededOverlayOp","isSuccess","savedException","GeometryGraphOperation","_arg","_resultPrecisionModel","setComputationPrecision","geom1","gov","geomOv","createEmptyResult","isGeometryCollection","dim0","dim1","resultDimension","overlayOpCode","geomFact","loc0","loc1","_resultPolyList","resultPointList","resultLineList","opcode","mergeSymLabels","newEdges","getCollapsedEdge","computeOverlay","_resultGeom","copyPoints","computeEdgeIntersections","baseSplitEdges","computeSplitEdges","insertUniqueEdges","computeLabelsFromDepths","replaceCollapsedEdges","labelIncompleteNodes","findResultAreaEdges","cancelDuplicateResultEdges","lineBuilder","pointBuilder","getNodeIterator","graphNode","getDelta","toLine","updateNodeLabelling","ni","labelIncompleteNode","updateLabelling","PolygonizeDirectedEdge","PolygonizeEdge","EdgeRing$1","startDE","getRing","minShellEnv","tryShellRing","tryShellEnv","ptNotInList","_isIncluded","_ringPts","_deList","_isIncludedSet","setRing","hasShell","_isProcessed","holeER","isIncluded","adjRing","isOuterHole","getOuterHole","adjShell","isIncludedSet","setIncluded","isProcessed","EnvelopeComparator","obj0","obj1","r0","r1","_lowestEdge","PolygonizeGraph","edgeRingStarts","currLabel","findDirEdgesInRing","prevDE","outDE","firstOutDE","prevInDE","inDE","intNodes","computeDepthParity","iNode","computeNextCWEdges","linePts","endPt","nStart","nEnd","findLabeledEdgeRings","cutLines","maximalRings","convertMaximalToMinimalEdgeRings","edgeRingList","findEdgeRing","ringEdges","findIntersectionNodes","computeNextCCWEdges","findNodesOfDegree","dangleLines","deleteAllEdges","nodeOutEdges","toNode","getDegreeNonDeleted","Polygonizer","outerHoleER","setProcessed","includeAll","polyList","holeList","assignHoleToShell","findOuterShells","isMoreToScan","updateIncluded","polygonize","_extractOnlyPolygonal","_polyList","_invalidRingLines","validEdgeRingList","invalidRingList","_dangles","deleteDangles","_cutEdges","deleteCutEdges","getEdgeRings","_isCheckingRingsValid","findValidRings","findShellsAndHoles","assignHolesToShells","_holeList","findDisjointShells","extractPolygons","_lineStringAdder","isCheckingRingsValid","computeHole","LineStringAdder","extractOnlyPolygonal","EdgeEndBuilder","eiCurr","eiNext","computeEdgeEnds","createEdgeEndForPrev","createEdgeEndForNext","EdgeEndBundle","_edgeEnds","foundInterior","computeLabelSide","computeLabelOn","computeLabelSides","getDirectedCoordinate","EdgeEndBundleStar","esb","eb","RelateNode","RelateNodeFactory","RelateComputer","intersector","dimA","dimB","hasProper","hasProperInterior","hasProperInteriorIntersection","thisIndex","labelIsolatedEdge","_isolatedEdges","computeDisjointIM","computeIntersectionNodes","copyNodesAndLabels","labelIsolatedNodes","computeProperIntersectionIM","eeBuilder","ee0","insertEdgeEnds","ee1","labelNodeEdges","labelIsolatedEdges","setLabelBoundary","labelIsolatedNode","updateIMFromEdges","ga","gb","_im","RectangleContains","rectangle","rc","isPointContainedInBoundary","isLineStringContainedInBoundary","isContainedInBoundary","_rectEnv","isLineSegmentContainedInBoundary","RectangleLineIntersector","segEnv","isSegUpwards","_diagDown0","_diagDown1","_diagUp0","_diagUp1","rectEnv","ShortCircuitedGeometryVisitor","applyTo","RectangleIntersects","rp","EnvelopeIntersectsVisitor","ecpVisitor","GeometryContainsPointVisitor","_rectangle","riVisitor","RectangleIntersectsSegmentVisitor","_intersects","elementEnv","_containsPoint","rectPt","_rectSeq","containsPointInPolygon","checkIntersectionWithLineStrings","testLine","checkIntersectionWithSegments","seq1","_rectIntersector","RelateOp","isRectangle","getIntersectionMatrix","isCovers","isIntersects","relOp","isOverlaps","isCrosses","isContains","_relate","relate","GeometryCombiner","combiner","combine","createList","obj2","elems","elemGeom","_skipEmpty","_inputGeoms","extractElements","extractFactory","PointGeometryUnion","pointGeom","unioner","exteriorCoords","_pointGeom","_otherGeom","ptComp","GeometryExtracter","geometryType","Class","clz","toGeometryType","_geometryType","isOfType","CascadedPolygonUnion","geomTree","unionTree","disjointGeoms","intersectingGeoms","elem","g0Env","g1Env","combo","unionActual","commonEnv","unionUsingEnvelopeIntersection","_inputPolys","STRTREE_NODE_CAPACITY","itemTree","unionAll","binaryUnion","unionSafe","unionOptimized","restrictToPolygons","reduceToGeometries","common","disjointPolys","g0Int","extractByEnvelope","g1Int","overallUnion","gColl","UnaryUnionOp","_polygons","unionPoints","ptGeom","unionNoOpt","unionLines","lineGeom","unionPolygons","unionLA","unionWithNull","ConnectedInteriorTester","findDifferentPoint","findEdgeInSameDirection","findEdgeEnd","intDe","visitLinkedDirectedEdges","visitInteriorRing","_disconnectedRingcoord","startDe","_geomGraph","setInteriorEdgesInResult","buildEdgeRings","visitShellInteriors","hasUnvisitedShellEdge","RelateNodeGraph","nodeIt","eeList","edgeIt","ConsistentAreaTester","_nodeGraph","isAreaLabelsConsistent","eeb","isNodeEdgeAreaLabelsConsistent","IndexedNestedRingTester","_rings","_nestedPt","buildIndex","innerRing","innerRingPts","results","searchRing","searchRingPts","innerRingPt","IsValidOp","findPtNotNode","isInside","_totalEnv","TopologyValidationError","_errorType","errMsg","locStr","getMessage","errorType","REPEATED_POINT","HOLE_OUTSIDE_SHELL","NESTED_HOLES","DISCONNECTED_INTERIOR","SELF_INTERSECTION","RING_SELF_INTERSECTION","NESTED_SHELLS","DUPLICATE_RINGS","TOO_FEW_POINTS","INVALID_COORDINATE","RING_NOT_CLOSED","testCoords","searchEdge","isValidOp","_validErr","checkInvalidCoordinates","nestedTester","innerHole","isNonNested","getNestedPoint","cat","isValidArea","isNodeConsistentArea","getInvalidPoint","hasDuplicateRings","_parentGeometry","shellPts","holePts","shellPt","insideHole","holePt","insideShell","checkNoSelfIntersectingRing","cit","isInteriorsConnected","nodeSet","isFirst","pir","hasTooFewPoints","checkClosedRing","checkTooFewPoints","checkNoSelfIntersectingRings","checkClosedRings","checkConsistentArea","_isSelfTouchingRingFormingHoleValid","checkHolesInShell","checkHolesNotNested","checkConnectedInteriors","checkShellsNotNested","polyShell","insidePolyShell","badNestedPt","checkShellInsideHole","checkShellNotNested","parentGeometry","PrecisionReducerCoordinateOperation","reducedCoords","_targetPM","noRepeatedCoordList","noRepeatedCoords","minLength","collapsedCoords","_removeCollapsed","targetPM","removeCollapsed","GeometryPrecisionReducer","reducer","setPointwise","geomToBuffer","_changePrecisionModel","changePM","bufGeom","bufferOp","finalGeom","createGeometry","geomEdit","newFactory","createFactory","finalRemoveCollapsed","reduceGeom","newPM","geomEditor","createEditor","inputFactory","changePrecisionModel","reducePW","reducePointwise","_isPointwise","fixPolygonalTopology","isPointwise","precision","DouglasPeuckerLineSimplifier","_usePt","simplifySection","DouglasPeuckerSimplifier","tss","isEnsureValidTopology","_isEnsureValidTopology","DPTransformer","rawGeom","rawAreaGeom","removeDegenerateRings","simpResult","TaggedLineSegment","TaggedLineString","segs","_resultSegs","_parentLine","resultSegsSize","_segs","_minimumSize","parentLine","minimumSize","LineSegmentIndex","getSegments","querySeg","LineSegmentVisitor","itemsFound","_querySeg","TaggedLineStringSimplifier","sectionIndex","getParent","_linePts","newSeg","_outputIndex","candidateSeg","hasBadOutputIntersection","hasBadInputIntersection","getSegment","addToResult","isValidToSimplify","getResultSize","getMinimumSize","worstCaseSize","furthestPtIndex","findFurthestPoint","hasBadIntersection","flatten","querySegs","maxDist","midPt","getParentCoordinates","_inputIndex","isInLineSection","inputIndex","outputIndex","TaggedLinesSimplifier","taggedLines","tlss","TopologyPreservingSimplifier","_linestringMap","LineStringMapBuilderFilter","_lineSimplifier","LineStringTransformer","taggedLine","createCoordinateSequence","getResultCoordinates","linestringMap","minSize","tps","VWLineSimplifier","vwLine","curr","minVertex","isLive","VWVertex","simplifyVertex","setPrev","updateArea","_area","_prev","MAX_AREA","tmpPrev","tmpNext","_isLive","VWSimplifier","VWTransformer","SplitSegment","minFrac","_minimumLen","_segLen","_splitPt","pointAlongReverse","actualLen","getConstrainedLength","minLen","ConstraintSplitPointFinder","encroachPt","NonEncroachingSplitPointFinder","lineSeg","projPt","midPtLen","splitSeg","projectedSplitPoint","nonEncroachDiam","maxSplitLen","setMinimumLength","splitAt","getSplitPoint","TrianglePredicate","bdx","bdy","cdx","cdy","abdet","bcdet","cadet","alift","blift","clift","isInCircle","nonRobustInCircle","isInCircleNonRobust","isInCircleDD","isInCircleDDSlow","isInCircleCC","circumCentre","toPoint","aTerm","triAreaDDFast","bTerm","cTerm","pTerm","cc","ccRadius","pRadiusDiff","triAreaDDSlow","triArea","isInCircleNormalized","t1","t2","Vertex","ptLen","pz","cab","cbc","hcc","nre","isInCircleRobust","getZ","xm","ym","zm","_z","sa","crossProduct","BEHIND","magn","BEYOND","ORIGIN","DESTINATION","BETWEEN","circleCenter","edgeLength","ConstraintVertex","_constraint","isOnConstraint","_isOnConstraint","constraint","QuadEdge","q0","q3","_rot","base","setOrig","setDest","oPrev","lNext","rot","beta","t3","t4","makeEdge","qe","equalsOriented","_vertex","invRot","IncrementalDelaunayTriangulator","_subdiv","isVertexOfEdge","isOnEdge","connect","lPrev","insertSite","_isUsingTolerance","subdiv","getTolerance","QuadEdgeLocator","LastFoundQuadEdgeLocator","_lastEdge","locateFromEdge","LocateFailureException","msgWithSpatial","TriangleVisitor","triEdges","QuadEdgeSubdivision","startQE","triEdge","includeFrame","TriangleVertexListVisitor","visitTriangles","getTriangleVertices","_frameVertex","_quadEdges","cellPts","cellPoly","locator","_locator","ea","ec","leftTri","getTriangleEdges","rightTri","vLeftTriOther","isFrameVertex","vRightTriOther","triVisitor","_visitedKey","edgeStack","_startingEdge","visitedEdges","fetchTriangleToVisit","_edgeCoincidenceTolerance","_frameEnv","TriangleCoordinatesVisitor","getTriangles","vd","edgeCount","isFrame","_triEdges","isFrameEdge","quadEdges","getPrimaryEdges","visitedVertices","qd","TriangleEdgesListVisitor","priQE","getPrimary","eSym","eRot","eRotSym","maxIter","toLineSegment","dPrev","TriangleCircumcentreVisitor","cells","getVertexUniqueEdges","getVoronoiCellPolygon","vorCells","getVoronoiCellPolygons","triPtsList","getTriangleCoordinates","tris","triPt","locEdge","ccVertex","_triList","_coordList","_triCoords","EDGE_COINCIDENCE_TOL_FACTOR","createFrame","initSubdiv","Segment","_ls","z1","z2","ConformingDelaunayTriangulator","_initialVertices","_kdt","addConstraintVertices","splits","enforceGabriel","_segments","MAX_SPLIT_ITER","_vertexFactory","_segVertices","segVertices","getPointArray","hull","_convexHull","computeConvexHull","insertSites","getStart","getEnd","segRadius","closestNonGabriel","nextNode","testRadius","testDist","splitFinder","_splitFinder","segsToInsert","newSegments","segsToRemove","findNonGabrielPoint","findSplitPoint","splitVertex","createVertex","insertedVertex","getStartX","getStartY","getStartZ","getEndX","getEndY","getEndZ","setOnConstraint","vertexEnv","computeVertexEnvelope","allPointsEnv","_computeAreaEnv","vertexFactory","computeBoundingBox","setLocator","_incDel","kdnode","isRepeated","snappedV","initialVertices","DelaunayTriangulationBuilder","unique","coordsCopy","verts","siteEnv","_siteCoords","toVertices","triangulator","extractUniqueCoordinates","ConformingDelaunayTriangulationBuilder","constraintSegs","createConstraintSegments","_constraintVertexMap","_constraintLines","createVertices","sites","createSiteVertices","cdt","setConstraints","formInitialDelaunay","enforceConstraints","getSubdivision","constraintLines","VoronoiDiagramBuilder","clipEnv","clipPoly","clipped","_diagramEnv","_clipEnv","getVoronoiDiagram","clipGeometryCollection","quadedge","triangulate","LinearLocation","setToEnd","componentIndex0","segmentIndex0","segmentFraction0","componentIndex1","segmentIndex1","segmentFraction1","_segmentIndex","_componentIndex","linearGeom","lineComp","nseg","_segmentFraction","pointAlongSegmentByFraction","lastLine","getSegmentLength","lenToStart","lenToEnd","segmentFraction","componentIndex","doNormalize","LinearIterator","getSegmentFraction","getSegmentIndex","_currentLine","_vertexIndex","loadCurrentLine","_numLines","_linearGeom","getComponentIndex","segmentEndVertexIndex","LocationIndexOfPoint","minIndex","indexOfAfter","indexOfFromStart","minComponentIndex","minSegmentIndex","isEndOfLine","getSegmentStart","getSegmentEnd","segDistance","candidateComponentIndex","candidateSegmentIndex","getVertexIndex","compareLocationValues","endLoc","getEndLocation","closestAfter","LocationIndexOfLine","subLine","indicesOf","locPt","subLineLoc","LinearGeometryBuilder","endLine","_lastPt","_ignoreInvalidLines","rawPts","_fixInvalidLines","validCoordinateSequence","fixInvalidLines","allowRepeatedPoints","ignoreInvalidLines","validPts","ExtractLineByLocation","setFixInvalidLines","isVertex","startSegmentIndex","lastSegmentIndex","newCoordinateArray","computeLinear","LocationIndexedLine","indexLow","toLowest","checkGeometryType","LengthIndexOfPoint","ptMeasure","segmentStartMeasure","segMeasureToPt","segmentNearestMeasure","projFactor","LengthLocationMap","resolveLower","totalLength","isEndpoint","compIndex","forwardLength","getLocationForward","resolveHigher","LengthIndexedLine","positiveIndex","getStartIndex","getEndIndex","locLow","startIndex2","clampIndex","endIndex2","resolveStartLower","locationOf","linearref","UnionOp","isEquals","coveredBy","touches","within","disjoint","crosses","_len","_key","intersectionPattern","centPt","createPointFromInternalCoord","interiorPt","symDifference","toText","writer","difference","isWithinDistance","version","disposed_","dispose","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","pointer_EventSource","pointer_MsSource","pointerDown","fireNativeEvent","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","pointer_NativeSource","HAS_BUTTONS","PointerEvent","_Event","opt_eventDict","eventDict","buttons","getButtons","pressure","getPressure","bubbles","cancelable","detail","screenX","screenY","relatedTarget","tiltX","tiltY","hwTimestamp","which","MouseEvent","pointer_PointerEvent","CLICK_COUNT_TIMEOUT","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","TouchSource_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","resetClickCountHandler_","touchToPointer_","radiusX","radiusY","force","inFunction","pointer","findTouch_","touchList","searchId","touch","outTarget","over","enter","outEvent","leave","cleanUpPointer_","pointer_TouchSource","CLONE_PROPS","PointerEventHandler_PointerEventHandler","PointerEventHandler","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","eventName","ol_events","eventCopy","fireEvent","contains_","container","contained","inType","wrapMouseEvent","pointer_PointerEventHandler","MapBrowserEventHandler_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","isMoving_","ol_MapBrowserEventHandler","MapEventType","POSTRENDER","MOVESTART","MOVEEND","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","TileState","EMPTY","ABORT","PriorityQueue_PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","priorities","siftUp_","elementKey","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","structs_PriorityQueue","TileQueue_TileQueue","TileQueue","tilePriorityFunction","tileChangeCallback","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","events_EventType","handleTileChange","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","ol_TileQueue","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","createSnapToResolutions","power","createSnapToPower","opt_maxLevel","oldLevel","ViewProperty","CENTER","RESOLUTION","ROTATION","DEFAULT_MIN_ZOOM","View_View","View","hints_","animations_","updateAnimationKey_","updateAnimations_","projection_","ol_proj","applyOptions_","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","minZoom_","minZoom","centerConstraint","createCenterConstraint","resolutionConstraint","rotationConstraint","createRotationConstraint","constraints_","options_","getUpdatedOptions_","newOptions","var_args","animationCount","isDef","setZoom","animationCallback","series","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","isNoopAnimation","cancelAnimationFrame","more","seriesComplete","elapsed","progress","calculateCenterRotate","Boolean","requestAnimationFrame","getSizeFromViewport_","selector","querySelector","metrics","opt_delta","getHints","opt_hints","opt_size","getMaxZoom","getZoomForResolution","setMaxZoom","maxZoom","getMinZoom","setMinZoom","getProjection","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","pixelResolution","nearest","getResolutionForZoom","fit","geometryOrExtent","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","centerX","centerY","centerOn","hint","returnValue","defaultMaxZoom","defaultZoomFactor","defaultMaxResolution","defaultMinResolution","enableRotation","ol_View","LAYERS","Group_LayerGroup","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","ownLayerState","Base","Group","hasArea","size_scale","ratio","toSize","PluggableMap_PluggableMap","PluggableMap","optionsInternal","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","pixelRatio_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","overlayEvents","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyboardEventTarget","keyHandlerKeys_","handleBrowserEvent","controls","overlays_","overlays","overlayIdIndex_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","addControl","getControls","getInteractions","addLayer","getLayerGroup","addOverlay","getOverlays","setTarget","forEachFeatureAtCoordinate","getFeaturesAtPixel","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","eventPosition","getTarget","getElementById","pixelToCoordinateTransform","getOverlayById","coordinateToPixelTransform","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","interactionsArray","cont","handlePostRender","tileQueue","hints","viewHints","render_EventType","getLoading","dispatchRenderEvent","postRenderFunctions","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","setAttribute","layerGroup","renderSync","removeControl","removeLayer","removeOverlay","previousFrameState","skippedFeatureUids","usedTiles","renderFrame","moveStart","idle","setLayerGroup","setView","computedStyle","ol_PluggableMap","Control_Control","Control","target_","listenerKeys","control_Control","Attribution_Attribution","Attribution","Attribution_render","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label_","activeLabel","title","handleClick_","cssClasses","css","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","layer_Layer","attributionGetter","getAttributions","getAttributionsCollapsible","setCollapsible","updateElement_","display","handleToggle_","classList","getCollapsible","setCollapsed","getCollapsed","mapEvent","control_Attribution","Rotate_Rotate","Rotate","Rotate_render","callResetNorth_","resetNorth","autoHide_","autoHide","resetNorth_","msTransform","webkitTransform","control_Rotate","Zoom_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","control_Zoom","zoomControl","zoomOptions","rotateControl","rotateOptions","attributionControl","attribution","attributionOptions","ERROR_THRESHOLD","ENABLE_RASTER_REPROJECTION","ImageBase_ImageBase","ImageBase","getPixelRatio","ol_ImageBase","ImageCanvas_ImageCanvas","ImageCanvas","opt_loader","error_","getError","handleLoad_","ol_ImageCanvas","RenderEvent","opt_vectorContext","opt_context","opt_glContext","glContext","render_Event","VectorContext_VectorContext","drawCustom","drawGeometry","drawCircle","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","render_VectorContext","Immediate_CanvasImmediateRenderer","VectorContext","CanvasImmediateRenderer","viewRotation","context_","transform_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","globalAlpha","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","moveTo","drawRings_","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","textState","contextTextState","render_canvas","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","imageAnchor","imageImage","imageOrigin","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textOffsetX","textOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","textTextBaseline","Immediate","Map_MapRenderer","MapRenderer","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","registerLayerRenderers","constructors","calculateMatrices2D","removeLayerRendererByKey_","thisArg2","viewResolution","translatedCoordinate","canWrapX","projectionExtent","worldWidth","worldsAway","numLayers","layerRenderer","getLayerRenderer","getWrapX","layerKey","candidate","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","expireIconCache","sortByZIndex","state1","state2","renderer_Map","layerRendererConstructors","Map_CanvasMapRenderer","CanvasMapRenderer","insertBefore","childNodes","composeEvent","clearRect","prepareFrame","composeFrame","restore","forEachLayerAtCoordinate","canvas_Map","Layer_LayerRenderer","LayerRenderer","layer_","createLoadedTileFinder","tiles","forEachLoadedTile","handleImageChange_","renderIfReadyAndVisible","loadImage","scheduleExpireCache","tileSource","postRenderFunction","expireCache","updateUsedTiles","zKey","manageTilePyramid","currentZ","preload","opt_tileCallback","getTile","getTileCoordCenter","useTile","ol_Observable","renderer_Layer","Layer_CanvasLayerRenderer","CanvasLayerRenderer","renderedResolution","clip","topLeft","topRight","bottomRight","bottomLeft","dispatchComposeEvent_","opt_transform","postCompose","preCompose","canvas_Layer","IntermediateCanvas_IntermediateCanvasRenderer","IntermediateCanvasRenderer","coordinateToCanvasPixelTransform","hitCanvasContext_","imageTransform","getImageTransform","dw","dh","imageData","IntermediateCanvas","ImageLayer_CanvasImageLayerRenderer","CanvasImageLayerRenderer","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","LayerType","viewCenter","imageSource","vectorRenderer","renderedExtent","skippedFeatures","imageFrameState","newSkippedFeatures","replayGroupChanged","imageExtent","imageResolution","imagePixelRatio","VectorRenderType","mapRenderer","ImageLayer","TileRange","containsTileRange","ol_TileRange","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","opt_noContext","oversampling_","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getPreload","setState","getInterimTile","sourceRevision","getTileGridForProjection","oversampling","getTileRangeExtent","tilePixelRatio","getTilePixelRatio","tilesToDrawByZ","findLoadedTiles","animatingOrInteracting","tmpTileRange","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","tilePixelSize","getTilePixelSize","currentScale","currentTilePixelSize","tileExtent","tileGutter","tilesToDraw","zs","tileCoordKey","getGutterForProjection","getTileCoord","drawTileImage","gutter","transition","getTileImage","getOpaque","alphaChanged","endTransition","canvas_TileLayer","ReplayGroup_ReplayGroup","getReplay","replayType","addDeclutter","group","render_ReplayGroup","ReplayType","DEFAULT","drawTextOnPath","startM","numChars","previousAngle","segmentM","chunk","chunkLength","char","charLength","charM","segmentPos","unshift","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","ORDER","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","Replay_tmpExtent","Replay_CanvasReplay","CanvasReplay","maxExtent","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","replayTextBackground_","fillInstruction","strokeInstruction","setStrokeStyle_","replayImage_","declutterGroup","originX","originY","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastCoord","nextCoord","skipped","Relationship","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayEndss","replayBegin","myEnds","endGeometry","repeatSize","instruction","renderDeclutter_","groupCount","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","baseline","fillKey","strokeKey","textKey","pathLength","flat_length","textLength","textReplay","textStates","parts","part","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","Replay","ImageReplay_CanvasImageReplay","CanvasImageReplay","declutterGroup_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","hitDetectionImage","ImageReplay","LineStringReplay_CanvasLineStringReplay","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","LineStringReplay","PolygonReplay_CanvasPolygonReplay","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","PolygonReplay","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","TextReplay_CanvasTextReplay","CanvasTextReplay","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","flatEnd","flatOffset","oo","range","drawChars_","drawTextImage_","align","numLines","widths","measureTextWidths","lineHeight","renderWidth","leftRight","currentWidth","TextReplay","BATCH_CONSTRUCTORS","Default","ReplayGroup_CanvasReplayGroup","ReplayGroup","CanvasReplayGroup","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","resolution_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","flatClipCoords","getClipCoords","hasReplays","replays","candidates","replayKey","declutterReplays","hitExtent","contextSize","declutteredFeatures","getCircleArray","zIndexKey","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","circleArrayCache","0","fillCircleArrayRowToMiddle","arraySize","replayDeclutter","zz","replayData","canvas_ReplayGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","getSquaredTolerance","replayGroup","circleReplay","renderFeature","renderFeatureInternal","renderGeometry","geometryRenderer","lineStringReplay","polygonReplay","imageReplay","VectorLayer_CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","rbush_default","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","handleFontsChanged_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","handleStyleImageChange_","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","dirty","VectorTileRenderType","HYBRID","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","vector","VectorTileLayer_CanvasVectorTileLayerRenderer","CanvasVectorTileLayerRenderer","renderedLayerRevision_","tmpTransform_","createReplayGroup_","renderTileImage_","layerRevision","revision","replayState","getReplayState","renderedRenderOrder","sourceTileGrid","getTileGrid","tt","sourceTile","tileKeys","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","setProjection","setWorldExtent","setReplayGroup","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentClip","renderedTileRevision","wrappedTileCoord","pixelScale","VectorTileLayer","Map_Map","ol_Map","TileProperty","PRELOAD","USE_INTERIM_TILES_ON_ERROR","Tile_TileLayer","TileLayer","setPreload","setUseInterimTilesOnError","layer_Tile","Tile_Tile","Tile","interimTile","transition_","transitionStarts_","refreshInterimChain","ol_Tile","ImageTile_ImageTile","ImageTile","tileLoadFunction","tileLoadFunction_","getBlankImage","naturalWidth","naturalHeight","ol_ImageTile","tilecoord_createOrUpdate","opt_tileCoord","getKeyZXY","fromKey","hash","withinExtentAndZ","getFullTileRange","TileCache_TileCache","TileCache","pruneExceptNewestZ","structs_LRUCache","ol_TileCache","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","enlargeClipPoint","centroidX","centroidY","dX","dY","reproj_render","targetExtent","triangulation","sources","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","triangle","u0","u1","u2","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation_Triangulation","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isGlobal","targetQuadExtent","targetCoverageX","centerSrc","centerSrcEstimX","centerSrcErrorSquared","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Triangulation","Tile_ReprojTile","ReprojTile","targetTileGrid","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","getTileSize","leftToLoad","sourceListenKey","reproj_Tile","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","nullTileUrlFunction","expandUrl","urls","startCharCode","stopCharCode","fromCharCode","tmpTileCoord","TileGrid_TileGrid","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","fullTileRanges","tilegrid_TileGrid","getForProjection","getDefaultTileGrid","createForProjection","setDefaultTileGrid","extentFromProjection","createForExtent","opt_maxZoom","opt_tileSize","opt_corner","Corner","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","Tile_TileSource","TileSource","attributionsCollapsible","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","thisProj","getTileCoordForTileUrlFunction","opt_projection","refresh","TileSourceEvent","source_Tile","TileEventType","TILELOADSTART","TILELOADEND","TILELOADERROR","UrlTile_UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","setTileLoadFunction","source_UrlTile","TileImage_TileImage","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","imageTile","source_TileImage","appendParams","uri","keyParams","encodeURIComponent","qs","TileArcGISRest_TileArcGISRest","TileArcGISRest","params_","tmpExtent_","getKeyForParams_","getParams","getRequestUrl_","srid","modifiedUrl","updateParams","baseParams","FORMAT","TRANSPARENT","source_TileArcGISRest","XYZ_XYZ","source_XYZ","defs","WGS84","GOOGLE","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","ft","to_meter","us-ft","ignoredChar","testkey","processedKey","lkey","projString","defData","paramName","paramVal","paramOutname","paramObj","datum","rf","lat_0","lat0","lat_1","lat_2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","lonc","longc","x_0","y_0","k_0","k0","r_a","R_A","zone","south","utmSouth","towgs84","datum_params","unit","from_greenwich","nadgrids","datumCode","axis","legalAxis","NEUTRAL","KEYWORD","NUMBER","QUOTED","AFTERQUOTE","ENDED","whitespace","latin","keyword","endThings","digets","Parser","place","root","currentObject","parseString","txt","mapit","thing","newObj","sExpr","convert","readCharicter","test","neutral","quoted","afterquote","number","word","afterItem","newObjects","wkt_parser_D2R","rename","outName","inName","d2r","cleanWKT","projName","local","PROJECTION","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","ellps","TOWGS84","renamer","wkt_parser","lisp","that","def","EPSG","ESRI","IAU2000","lib_defs","testObj","testDef","codeWords","testWKT","some","codes","checkMercator","auth","checkProjStr","ext","testProj","maybeProjStr","parseCode","msfnz","eccent","sinphi","cosphi","con","adjust_lon","tsfnz","phi","com","phi2z","ts","dphi","eccnth","es","names","merc","longlat_init","identity","longlat_names","longlat","projs","projections_names","projStore","projections_start","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","eccentricity","ep2","deriveConstants_sphere","ellipse","Datum_exports","datum_type","wgs84","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","srsCode","ourProj","datumDef","sphere_","ecc","datumObj","Proj","compareDatums","geodeticToGeocentric","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geocentricToGeodetic","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","genau","genau2","maxiter","geocentricToWgs84","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricFromWgs84","x_tmp","y_tmp","z_tmp","checkParams","datum_transform","adjust_axis","crs","denorm","xin","yin","zin","checkSanity","checkCoord","checkNotWGS","transform_transform","core_wgs84","transformer","transformedArray","checkProj","oProj","core_proj4","fromProj","toProj","single","core","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","I","O","mgrs_V","mgrs_Z","mgrs","mgrs_forward","mgrs_inverse","mgrs_toPoint","ll","accuracy","encode","LLtoUTM","UTMtoLL","decode","degToRad","deg","radToDeg","rad","LongOrigin","eccPrimeSquared","LongOriginRad","ZoneNumber","Lat","eccSquared","LatRad","LongRad","UTMEasting","UTMNorthing","northing","easting","zoneNumber","zoneLetter","getLetterDesignator","utm","T1","C1","R1","mu","phi1Rad","LetterDesignator","seasting","snorthing","get100kID","setParm","get100kSetForZone","setColumn","setRow","getLetter100kID","parm","colOrigin","rowOrigin","colInt","rowInt","rollover","twoLetter","mgrsString","testChar","hunK","sb","east100k","getEastingFromChar","north100k","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","curCol","eastingValue","rewindMarker","curRow","northingValue","warn","fromMGRS","mgrsStr","toMGRS","lib_Point","C00","C02","C04","C06","C08","C22","C44","C46","C48","C66","C68","C88","pj_enfn","en","pj_mlfn","sphi","cphi","MAX_ITER","pj_inv_mlfn","tmerc_init","ml0","tmerc_forward","delta_lon","sin_phi","cos_phi","al","als","tq","tmerc_inverse","tan_phi","tmerc_names","tmerc","sinh","hypot","log1py","asinhy","gatg","pp","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","hi1","etmerc_init","cgb","cbg","utg","gtu","np","Qn","Zb","etmerc_forward","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","etmerc_inverse","etmerc_names","etmerc","adjust_zone","dependsOn","utm_init","utm_names","srat","esinp","gauss_MAX_ITER","gauss_init","phic0","ratexp","K","gauss_forward","gauss_inverse","DEL_TOL","gauss_names","gauss","sterea_init","sinc0","cosc0","R2","sterea_forward","sinc","cosc","cosl","sterea_inverse","rho","sterea_names","sterea","ssfn_","phit","eccen","stere_init","coslat0","sinlat0","cons","ms1","X0","cosX0","sinX0","stere_forward","sinX","cosX","rh","sinlat","coslat","dlon","stere_inverse","ce","Chi","stere_names","stere","somerc_init","phy0","lambda0","sinPhy0","semiMajorAxis","invF","flattening","b0","k1","k2","k3","somerc_forward","Sa1","Sa2","rotI","rotB","somerc_inverse","lambda","phy","prevPhy","iteration","somerc_names","somerc","omerc_init","no_off","no_rot","bl","fl","t0","dl","hl","jl","pl","dlon12","dlon10","gamma0","uc","omerc_forward","us","vs","ql","sl","tl","vl","ul","omerc_inverse","qp","sp","tp","vp","omerc_names","omerc","lcc_init","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","lcc_forward","rh1","lcc_inverse","lcc_names","lcc","krovak_init","s45","s90","fi0","alfa","uq","n0","s0","ro0","ad","krovak_forward","gfi","deltav","eps","ro","czech","krovak_inverse","fi1","ok","krovak_names","krovak","mlfn","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass_init","cass_forward","lam","nl","asq","cl","cass_inverse","ml1","phi1","nl1","rl1","tl1","dsq","cass_names","cass","qsfnz","S_POLE","N_POLE","EQUIT","OBLIQ","laea_init","mmf","apa","authset","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","laea_forward","coslam","sinlam","sinb","cosb","phi0","laea_inverse","cCe","sCe","cosz","sinz","authlat","P00","P01","P02","P10","P11","P20","APA","laea_names","laea","asinz","aea_init","sin_po","cos_po","qs1","qs2","qs0","ns0","aea_forward","aea_inverse","phi1z","eccnts","aea_names","aea","gnom_init","sin_p14","cos_p14","infinity_dist","gnom_forward","coslon","ksp","gnom_inverse","gnom_names","gnom","iqsfnz","cea_init","cea_forward","cea_inverse","cea_names","cea","eqc_init","eqc_forward","dlat","eqc_inverse","eqc_names","eqc","poly_MAX_ITER","poly_init","poly_forward","poly_inverse","tanphi","mln","mlnp","ma","poly_names","nzmg_init","B_re","B_im","C_re","C_im","nzmg_forward","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_re1","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","nzmg_inverse","z_n_re1","z_n_im1","delta_x","delta_y","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","nzmg_names","nzmg","mill_init","mill_forward","mill_inverse","mill_names","mill","sinu_MAX_ITER","sinu_init","C_y","C_x","sinu_forward","V","sinu_inverse","sinu_names","sinu","moll_init","moll_forward","delta_theta","moll_inverse","moll_names","moll","eqdc_init","ml2","eqdc_forward","eqdc_inverse","eqdc_names","eqdc","vandg_init","vandg_forward","sinth","costh","gsq","msq","vandg_inverse","xx","yy","xys","th1","vandg_names","vandg","aeqd_init","sin_p12","cos_p12","aeqd_forward","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","cos_c","s3","s4","s5","aeqd_inverse","cosAz","Ee","aeqd_names","aeqd","ortho_init","ortho_forward","ortho_inverse","ortho_names","ortho","FACE_ENUM","FRONT","BACK","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_init","face","one_minus_f","one_minus_f_squared","qsc_forward","xy","sinlon","qsc_shift_lon_origin","qsc_fwd_equat_face_theta","qsc_inverse","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","slon","qsc_names","qsc","COEFS_X","COEFS_Y","FXC","FYC","RC1","NODES","poly3_val","coefs","poly3_der","newton_rapshon","f_df","max_err","iters","upd","robin_init","robin_forward","robin_inverse","robin_names","robin","proj4_projs","proj4","defaultDatum","proj4_package","lib","projCodes","code1","proj1","code2","proj2","Feature_FeatureFormat","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","format_Feature","transformWithOptions","transformed","decimals","JSONFeature_JSONFeature","FeatureFormat","JSONFeature","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","format_JSONFeature","GEOMETRY_READERS","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","GEOMETRY_WRITERS","writePointGeometry","writeLineStringGeometry","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","EsriJSON_EsriJSON","EsriJSON","esriJSONFeature","EsriJSON_readGeometry","idField","attributes","esriJSONFeatureSet","esriJSONFeatures","objectIdFieldName","spatialReference","wkid","EsriJSON_writeGeometry","objects","esriJSONPolyline","paths","esriJSONPolygon","getGeometryLayout","convertRings","geometryReader","flatRing","outerRings","matched","outerRing","containsHole","geom_Point","hasZ","hasM","esriJSON","getHasZM","hasZM","geometryWriter","format_EsriJSON","transformResponse","resJsonData","mapRequest","GetGisReset","OverlayPositioning","BOTTOM_CENTER","CENTER_LEFT","CENTER_CENTER","CENTER_RIGHT","TOP_CENTER","Overlay_Property","ELEMENT","MAP","OFFSET","POSITION","POSITIONING","Overlay_Overlay","Overlay","insertFirst","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","panIntoView","mapRect","getRect","overlayRect","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","getOptions","ol_Overlay","BaseMap","classCallCheck","_DefaultProjection","_Projection","_ProjectionExtent","tileLayerGroup","Vectorlayer","_containerDomId","_tileLayers","_vectorLayers","tempLayersGroup","businessLayersGroup","_SatellLayer","createTileLayer","createArcGISRestSource","ObjValue","_VectorLayer","createVectorlayer","createVectorSource","defaultInteractions","_source","_layerName","_isShow","_layerURL","arcGISSource","sourceXYZ","XYZSource","_CDeFine","geomStr","esrijsonFormat","cloneExtent","cloneDeep","CDeFien","code_","resultValue","sourceData","tileStrategy","CoordinatesArray","geometryStr","latestWkid","_extent","xmin","ymin","xmax","ymax","_partwise","stringify_default","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","labelCache","checkFont","measureTextHeight","measureTextWidth","rotateAtOffset","resetTransform","_css_js__WEBPACK_IMPORTED_MODULE_0__","_dom_js__WEBPACK_IMPORTED_MODULE_1__","_structs_LRUCache_js__WEBPACK_IMPORTED_MODULE_3__","_transform_js__WEBPACK_IMPORTED_MODULE_4__","checkedFonts","measureContext","textHeights","interval","referenceWidth","retries","checked","referenceFonts","isAvailable","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","check","fontSpec","fontFamilies","span","heights","_MapBrowserEvent_js__WEBPACK_IMPORTED_MODULE_0__","getChangeEventType","_ObjectEventType_js__WEBPACK_IMPORTED_MODULE_1__","_Observable_js__WEBPACK_IMPORTED_MODULE_2__","_events_Event_js__WEBPACK_IMPORTED_MODULE_3__","ObjectEvent","opt_values","notify","opt_silent","unset","changeEventTypeCache","_Object_js__WEBPACK_IMPORTED_MODULE_2__","LENGTH","CollectionEvent","opt_element","unique_","assertUnique_","updateLength_","insertAt","removeAt","setAt","opt_except","asColorLike","_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__","_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_2__","_flat_deflate_js__WEBPACK_IMPORTED_MODULE_3__","_math_js__WEBPACK_IMPORTED_MODULE_4__","_Units_js__WEBPACK_IMPORTED_MODULE_0__","units_","worldExtent_","axisOrientation_","global_","canWrapX_","getPointResolutionFunc_","defaultTileGrid_","metersPerUnit_","getAxisOrientation","setGlobal","setGetPointResolution","func","FEET","USFEET","ret","_proj_js__WEBPACK_IMPORTED_MODULE_2__","_State_js__WEBPACK_IMPORTED_MODULE_3__","attributions_","adaptAttributions","attributionsCollapsible_","wrapX_","setAttributions","attributionLike"],"mappings":"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","file":"js/chunk-3147b92a.84d0fc4f.js","sourcesContent":["/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n\n//# sourceMappingURL=EventType.js.map","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /*@__PURE__*/(function (SimpleGeometry) {\n  function LinearRing(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LinearRing.__proto__ = SimpleGeometry;\n  LinearRing.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.clone = function clone () {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  LinearRing.prototype.getArea = function getArea () {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LinearRing.prototype.getType = function getType () {\n    return GeometryType.LINEAR_RING;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LinearRing;\n}(SimpleGeometry));\n\n\nexport default LinearRing;\n\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorRenderType.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function(mapBrowserEvent) {\n  var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function(mapBrowserEvent) {\n  var target = mapBrowserEvent.originalEvent.target;\n  var tagName = /** @type {Element} */ (target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n\n//# sourceMappingURL=condition.js.map","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render',\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  var intersections = [];\n  // Calculate intersections with the horizontal line\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  var extent = createEmpty();\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  var minX = Math.min.apply(null, xs);\n  var minY = Math.min.apply(null, ys);\n  var maxX = Math.max.apply(null, xs);\n  var maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  var dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(this:T, import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  var val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  var area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  var coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  var minX = Math.min(extent1[0], extent2[0]);\n  var minY = Math.min(extent1[1], extent2[1]);\n  var maxX = Math.max(extent1[2], extent2[2]);\n  var maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  var dx = resolution * size[0] / 2;\n  var dy = resolution * size[1] / 2;\n  var cosRotation = Math.cos(rotation);\n  var sinRotation = Math.sin(rotation);\n  var xCos = dx * cosRotation;\n  var xSin = dx * sinRotation;\n  var yCos = dy * cosRotation;\n  var ySin = dy * sinRotation;\n  var x = center[0];\n  var y = center[1];\n  var x0 = x - xCos + ySin;\n  var x1 = x - xCos - ySin;\n  var x2 = x + xCos - ySin;\n  var x3 = x + xCos + ySin;\n  var y0 = y - xSin - yCos;\n  var y1 = y - xSin + yCos;\n  var y2 = y + xSin + yCos;\n  var y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  var intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  var intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  var intersects = false;\n  var startRel = coordinateRelationship(extent, start);\n  var endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var startX = start[0];\n    var startY = start[1];\n    var endX = end[0];\n    var endY = end[1];\n    var slope = (endY - startY) / (endX - startX);\n    var x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  var coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {VOID} from '../functions.js';\nimport Event from './Event.js';\n\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /*@__PURE__*/(function (Disposable) {\n  function Target() {\n\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  if ( Disposable ) Target.__proto__ = Disposable;\n  Target.prototype = Object.create( Disposable && Disposable.prototype );\n  Target.prototype.constructor = Target;\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.addEventListener = function addEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTargetLike|undefined),\n   *     propagationStopped: (boolean|undefined)}|\n   *     import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  Target.prototype.dispatchEvent = function dispatchEvent (event) {\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n    evt.target = this;\n    var listeners = this.listeners_[type];\n    var propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        var pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Target.prototype.disposeInternal = function disposeInternal () {\n    unlistenAll(this);\n  };\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n   */\n  Target.prototype.getListeners = function getListeners (type) {\n    return this.listeners_[type];\n  };\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  Target.prototype.hasListener = function hasListener (opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  };\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.removeEventListener = function removeEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  };\n\n  return Target;\n}(Disposable));\n\n\nexport default Target;\n\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function() {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @deprecated\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '5.3.1';\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n */\nvar Layer = /*@__PURE__*/(function (BaseLayer) {\n  function Layer(options) {\n\n    var baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    listen(this,\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_, this);\n\n    var source = options.source ? options.source : null;\n    this.setSource(source);\n  }\n\n  if ( BaseLayer ) Layer.__proto__ = BaseLayer;\n  Layer.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  Layer.prototype.constructor = Layer;\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  };\n\n  /**\n   * Get the layer source.\n   * @return {import(\"../source/Source.js\").default} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  Layer.prototype.getSource = function getSource () {\n    var source = this.get(LayerProperty.SOURCE);\n    return (\n      /** @type {import(\"../source/Source.js\").default} */ (source) || null\n    );\n  };\n\n  /**\n    * @inheritDoc\n    */\n  Layer.prototype.getSourceState = function getSourceState () {\n    var source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourceChange_ = function handleSourceChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourcePropertyChange_ = function handleSourcePropertyChange_ () {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    var source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source,\n        EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Layer.prototype.setMap = function setMap (map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n        var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n        var layerState = this.getLayerState();\n        layerState.managed = false;\n        if (this.getZIndex() === undefined) {\n          layerState.zIndex = Infinity;\n        }\n        renderEvent.frameState.layerStatesArray.push(layerState);\n        renderEvent.frameState.layerStates[getUid(this)] = layerState;\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the layer source.\n   * @param {import(\"../source/Source.js\").default} source The layer source.\n   * @observable\n   * @api\n   */\n  Layer.prototype.setSource = function setSource (source) {\n    this.set(LayerProperty.SOURCE, source);\n  };\n\n  return Layer;\n}(BaseLayer));\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\nexport default Layer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  var n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  var markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  var stack = [offset, end - stride];\n  var index = 0;\n  while (stack.length > 0) {\n    var last = stack.pop();\n    var first = stack.pop();\n    var maxSquaredDistance = 0;\n    var x1 = flatCoordinates[first];\n    var y1 = flatCoordinates[first + 1];\n    var x2 = flatCoordinates[last];\n    var y2 = flatCoordinates[last + 1];\n    for (var i = first + stride; i < last; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      var squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (var i$1 = 0; i$1 < n; ++i$1) {\n    if (markers[i$1]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  var x2 = x1;\n  var y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  var x1 = snap(flatCoordinates[offset], tolerance);\n  var y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  var x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    var x3 = snap(flatCoordinates[offset], tolerance);\n    var y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    var dx1 = x2 - x1;\n    var dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    var dx2 = x3 - x1;\n    var dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n//# sourceMappingURL=simplify.js.map","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-row',{staticClass:\"page-title\",attrs:{\"type\":\"flex\",\"justify\":\"space-between\"}},[_c('span',{staticClass:\"text\"},[_vm._v(_vm._s(_vm.titleName))]),_c('span',{staticClass:\"icon\",on:{\"click\":_vm.flexibleFnc}},[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.flexible),expression:\"flexible\"}]},[_vm._v(\"展开 \")]),_c('i',{staticClass:\"iconfont icon-shousuo\"})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <el-row class=\"page-title\" type=\"flex\" justify=\"space-between\">\r\n      <span class=\"text\">{{titleName}}</span>   \r\n      <span  @click=\"flexibleFnc\" class=\"icon\">\r\n        <span v-show=\"flexible\">展开 </span><i class=\"iconfont icon-shousuo\"></i>\r\n      </span>\r\n    </el-row>\r\n</template>\r\n<script>\r\nimport _ from \"lodash\";\r\nimport { setTimeout } from 'timers';\r\nexport default {\r\n  props: [\"flexible\",\"titleName\"],\r\n  data() {\r\n    return {\r\n    };\r\n  },\r\n  methods: {\r\n     //是否收缩左侧表格\r\n    flexibleFnc(){\r\n      let val = !this.flexible;\r\n      this.$emit(\"update:flexible\",val)\r\n      this.$bus.emit(\"flexibleControl\",val )\r\n    },\r\n  }\r\n};\r\n</script>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TableFormTitle.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TableFormTitle.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TableFormTitle.vue?vue&type=template&id=1114eb44&\"\nimport script from \"./TableFormTitle.vue?vue&type=script&lang=js&\"\nexport * from \"./TableFormTitle.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"TableFormTitle.vue\"\nexport default component.exports","/**\n * @module ol/pointer/EventSource\n */\n\nvar EventSource = function EventSource(dispatcher, mapping) {\n\n  /**\n   * @type {import(\"./PointerEventHandler.js\").default}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n/**\n * List of events supported by this source.\n * @return {Array<string>} Event names\n */\nEventSource.prototype.getEvents = function getEvents () {\n  return Object.keys(this.mapping_);\n};\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function getHandlerForEvent (eventType) {\n  return this.mapping_[eventType];\n};\n\nexport default EventSource;\n\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  var boundListener = function(evt) {\n    var listener = listenerObj.listener;\n    var bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  var listenerObj;\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  var listenerMap = getListenerMap(target);\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n  var listenerMap = target.ol_lm;\n  if (!listenerMap && opt_create) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n  delete target.ol_lm;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      /** @type {import(\"./events/Target.js\").default} */ (target).\n        removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        removeListenerMap(target);\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  var listenerMap = getListenerMap(target, true);\n  var listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  var listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    /** @type {import(\"./events/Target.js\").default} */ (target).\n      addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    var listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    /** @type {import(\"./events/Target.js\").default} */ (key.target).\n      removeEventListener(key.type, key.boundListener);\n    var listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  var listenerMap = getListenerMap(target);\n  if (listenerMap) {\n    for (var type in listenerMap) {\n      removeListeners(target, type);\n    }\n  }\n}\n\n//# sourceMappingURL=events.js.map","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n\n//# sourceMappingURL=FormatType.js.map","var map = {\n\t\"./ExhaustvalveLayer.png\": \"77d3\",\n\t\"./FirefightingwellLayer.png\": \"dc64\",\n\t\"./FirehydrantLayer.png\": \"e274\",\n\t\"./Layer-Diqiu.png\": \"99ff\",\n\t\"./Layer-GuanWang.png\": \"7318\",\n\t\"./Layer-JieDao.png\": \"75e0\",\n\t\"./LoginBg.png\": \"0732\",\n\t\"./ServicingwellLayer.png\": \"7a48\",\n\t\"./ValveLayer.png\": \"6bb6\",\n\t\"./ValvewellLayer.png\": \"415c\",\n\t\"./WaterMeterLayer.png\": \"b736\",\n\t\"./WatermeterwellLayer.png\": \"5977\",\n\t\"./dian.png\": \"a966\",\n\t\"./dingwei.png\": \"0b47\",\n\t\"./dingweiend.png\": \"a5ce\",\n\t\"./dingweistart.png\": \"e6ef\",\n\t\"./famenView.png\": \"86af\",\n\t\"./fire.png\": \"5160\",\n\t\"./nofind.png\": \"84c3\",\n\t\"./topbtnBg.png\": \"122e\",\n\t\"./treeCheck.png\": \"3190\",\n\t\"./三通井.png\": \"4e3d\",\n\t\"./加压站.png\": \"fa39\",\n\t\"./四通井.png\": \"5c70\",\n\t\"./排气阀.png\": \"a144\",\n\t\"./排沙井.png\": \"0e5b\",\n\t\"./支井.png\": \"9c0a\",\n\t\"./检修井.png\": \"6d69\",\n\t\"./水表.png\": \"b242\",\n\t\"./水表井.png\": \"de8b\",\n\t\"./消火栓.png\": \"39d0\",\n\t\"./消防井.png\": \"9341\",\n\t\"./直通井.png\": \"b046\",\n\t\"./阀门.png\": \"6baf\",\n\t\"./阀门井.png\": \"0e36\",\n\t\"./阀门开.png\": \"9729\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"24da\";","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG3857Projection(code) {\n    Projection.call(this, {\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n  if ( Projection ) EPSG3857Projection.__proto__ = Projection;\n  EPSG3857Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG3857Projection.prototype.constructor = EPSG3857Projection;\n\n  return EPSG3857Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  var halfSize = HALF_SIZE;\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    var y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n\n//# sourceMappingURL=epsg3857.js.map","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG4326Projection(code, opt_axisOrientation) {\n    Projection.call(this, {\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n  if ( Projection ) EPSG4326Projection.__proto__ = Projection;\n  EPSG4326Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG4326Projection.prototype.constructor = EPSG4326Projection;\n\n  return EPSG4326Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  var output;\n  if (opt_output !== undefined) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string' ?\n    projections.get(/** @type {string} */ (projectionLike)) :\n    (/** @type {Projection} */ (projectionLike) || null);\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  var pointResolution;\n  var getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    var units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      var toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      var vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      var metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      var length = input.length;\n      var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      var output = opt_output !== undefined ? opt_output : new Array(length);\n      for (var i = 0; i < length; i += dimension) {\n        var point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (var j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  var sourceProj = get(source);\n  var destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  var lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  var lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  var equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    var transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  var sourceCode = sourceProjection.getCode();\n  var destinationCode = destinationProjection.getCode();\n  var transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  var sourceProjection = get(source);\n  var destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  var outside = forEachCorner(extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/interaction/Select\n */\nimport {getUid} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {extend, includes} from '../array.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {singleClick, never, shiftKeyOnly, pointerMove} from '../events/condition.js';\nimport {TRUE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clear} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @enum {string}\n */\nvar SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\n * overlay.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nvar SelectEvent = /*@__PURE__*/(function (Event) {\n  function SelectEvent(type, selected, deselected, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) SelectEvent.__proto__ = Event;\n  SelectEvent.prototype = Object.create( Event && Event.prototype );\n  SelectEvent.prototype.constructor = SelectEvent;\n\n  return SelectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nvar Select = /*@__PURE__*/(function (Interaction) {\n  function Select(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    var featureOverlay = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        features: options.features,\n        wrapX: options.wrapX\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * @private\n     * @type {VectorLayer}\n     */\n    this.featureOverlay_ = featureOverlay;\n\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n    var layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n\n    var features = this.getFeatures();\n    listen(features, CollectionEventType.ADD,\n      this.addFeature_, this);\n    listen(features, CollectionEventType.REMOVE,\n      this.removeFeature_, this);\n  }\n\n  if ( Interaction ) Select.__proto__ = Interaction;\n  Select.prototype = Object.create( Interaction && Interaction.prototype );\n  Select.prototype.constructor = Select;\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  Select.prototype.addFeatureLayerAssociation_ = function addFeatureLayerAssociation_ (feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  };\n\n  /**\n   * Get the selected features.\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n   * @api\n   */\n  Select.prototype.getFeatures = function getFeatures () {\n    return /** @type {VectorSource} */ (this.featureOverlay_.getSource()).getFeaturesCollection();\n  };\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  Select.prototype.getHitTolerance = function getHitTolerance () {\n    return this.hitTolerance_;\n  };\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n   * the (last) selected feature. Note that this will not work with any\n   * programmatic method like pushing features to\n   * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n   * @return {VectorLayer} Layer.\n   * @api\n   */\n  Select.prototype.getLayer = function getLayer (feature) {\n    return (\n      /** @type {VectorLayer} */ (this.featureLayerAssociation_[getUid(feature)])\n    );\n  };\n\n  /**\n   * Get the overlay layer that this interaction renders selected features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  Select.prototype.getOverlay = function getOverlay () {\n    return this.featureOverlay_;\n  };\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  Select.prototype.setHitTolerance = function setHitTolerance (hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @override\n   * @api\n   */\n  Select.prototype.setMap = function setMap (map) {\n    var currentMap = this.getMap();\n    var selectedFeatures = this.getFeatures();\n    if (currentMap) {\n      selectedFeatures.forEach(currentMap.unskipFeature.bind(currentMap));\n    }\n    Interaction.prototype.setMap.call(this, map);\n    this.featureOverlay_.setMap(map);\n    if (map) {\n      selectedFeatures.forEach(map.skipFeature.bind(map));\n    }\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Select.prototype.addFeature_ = function addFeature_ (evt) {\n    var map = this.getMap();\n    if (map) {\n      map.skipFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n    }\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Select.prototype.removeFeature_ = function removeFeature_ (evt) {\n    var map = this.getMap();\n    if (map) {\n      map.unskipFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @private\n   */\n  Select.prototype.removeFeatureLayerAssociation_ = function removeFeatureLayerAssociation_ (feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  };\n\n  return Select;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {Select}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  var add = this.addCondition_(mapBrowserEvent);\n  var remove = this.removeCondition_(mapBrowserEvent);\n  var toggle = this.toggleCondition_(mapBrowserEvent);\n  var set = !add && !remove && !toggle;\n  var map = mapBrowserEvent.map;\n  var features = this.getFeatures();\n  var deselected = [];\n  var selected = [];\n  if (set) {\n    // Replace the currently selected feature(s) with the feature(s) at the\n    // pixel, or clear the selected feature(s) if there is no feature at\n    // the pixel.\n    clear(this.featureLayerAssociation_);\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (var i = features.getLength() - 1; i >= 0; --i) {\n      var feature = features.item(i);\n      var index = selected.indexOf(feature);\n      if (index > -1) {\n        // feature is already selected\n        selected.splice(index, 1);\n      } else {\n        features.remove(feature);\n        deselected.push(feature);\n      }\n    }\n    if (selected.length !== 0) {\n      features.extend(selected);\n    }\n  } else {\n    // Modify the currently selected feature(s).\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if ((remove || toggle) && includes(features.getArray(), feature)) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (var j = deselected.length - 1; j >= 0; --j) {\n      features.remove(deselected[j]);\n    }\n    features.extend(selected);\n  }\n  if (selected.length > 0 || deselected.length > 0) {\n    this.dispatchEvent(\n      new SelectEvent(SelectEventType.SELECT,\n        selected, deselected, mapBrowserEvent));\n  }\n  return pointerMove(mapBrowserEvent);\n}\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n\n  return function(feature, resolution) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\nexport default Select;\n\n//# sourceMappingURL=Select.js.map","import _ from 'lodash';\r\nimport 'ol/ol.css';\r\n\r\nimport {\r\n    Draw,\r\n    Modify,\r\n    Snap,\r\n    Select,\r\n    defaults as defaultInteractions\r\n} from 'ol/interaction.js';\r\nimport Point from \"ol/geom/Point.js\";\r\nimport {\r\n    Circle as CircleStyle,\r\n    Fill,\r\n    Stroke,\r\n    Style\r\n} from 'ol/style';\r\nimport {\r\n    Vector as VectorSource\r\n} from \"ol/source.js\";\r\nimport Feature from \"ol/Feature.js\";\r\nimport Polygon from \"ol/geom/Polygon.js\";\r\nimport {\r\n    MultiPoint,\r\n    MultiLineString,\r\n    MultiPolygon\r\n} from 'ol/geom.js';\r\nimport LineString from \"ol/geom/LineString.js\";\r\nimport mapStyle from '@services/OpenLayers/mapStyle.js';\r\nimport * as jsts from 'jsts/dist/jsts.js'\r\n\r\n// var drawTypeSelect;\r\nvar bufferNumber = 0.001\r\nvar plotAnimate = {}\r\nvar lineStringSelect = undefined\r\nvar lineStringModify = undefined\r\nvar polygonSelect = undefined\r\nvar polygonModify = undefined\r\nvar pointSelect = undefined\r\nvar pointModify = undefined\r\nvar drawTypeSelect = undefined\r\nvar isAllowPointerMove = true\r\nvar trackPlay = {};\r\nclass MapNavigate {\r\n    /* DrawLayers()*/\r\n\r\n    constructor(baseMap) {\r\n        this.mapInstance = baseMap.mapInstance\r\n        this.map = baseMap.mapInstance.map\r\n        this.groups = baseMap.mapInstance.groups\r\n        this.businessLayers = baseMap.mapInstance.businessLayers\r\n        this.tempLayers = baseMap.mapInstance.tempLayers\r\n        this.overlay = baseMap.mapInstance.overlay\r\n        this.baseMap = baseMap\r\n\r\n    }\r\n\r\n    /**获取buffer\r\n     * \r\n     * @param {需要添加buffer的geometry} geometry \r\n     */\r\n    static getBufferGeometry(geometry) {\r\n        let parser = new jsts.io.OL3Parser();\r\n        parser.inject(Point, LineString, Polygon, MultiPoint, MultiLineString, MultiPolygon);\r\n\r\n        let jstsGeom = parser.read(geometry);\r\n\r\n        let buffered = jstsGeom.buffer(bufferNumber);\r\n\r\n        return parser.write(buffered)\r\n    }\r\n\r\n\r\n\r\n    /**添加弹窗\r\n     * @param {坐标[x,y]} coordinate\r\n     * @param {弹出框的上级DOM} overlayContainerDOM\r\n     */\r\n    addOverlayNavigate(coordinate, overlayContainerDOM) {\r\n        //overlayContainerDOM.innerHTML = innerHTML\r\n        //this.overlay.setElement(overlayContainerDOM)\r\n        console.log('addOverlayNavigate', coordinate)\r\n        // this.overlay.setPosition(undefined)\r\n        this.overlay.setPosition(coordinate)\r\n    }\r\n    /**重置map大小\r\n     * \r\n     * @param {} width \r\n     * @param {} height \r\n     */\r\n    resizeMapNavigate(width, height) {\r\n        this.map.setSize([width, height]);\r\n    }\r\n    /**设置中心点\r\n     * @param {坐标[x,y]} coordinate\r\n     * @param {放大层级} zoom\r\n     */\r\n    setCenter(coordinate, zoom) {\r\n\r\n        let currentView = this.map.getView();\r\n        if (currentView.getZoom() >= zoom) {\r\n            zoom = currentView.getZoom();\r\n        }\r\n        //动画定位\r\n        currentView.animate({\r\n            center: coordinate,\r\n            duration: 1000,\r\n            zoom: zoom\r\n        });\r\n    }\r\n    /**设置空间查询图层display\r\n     * \r\n     * @param {ture:显示|flse:不显示} isVisible \r\n     * @param {ture:清除图层下所有数据 不能重新显示} isClear \r\n     */\r\n    setSpatialSearchLayerGroupDisplay(isVisible, isClear) {\r\n\r\n        this.groups.spatialSearchLayerGroup.setVisible(isVisible)\r\n        if (isClear) {\r\n            this.groups.spatialSearchLayerGroup.getLayers().forEach(layer => {\r\n                layer.getSource() && layer.getSource().clear()\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    /**设置矢量图层是否显示 完善点:要增加隐藏和清空的参数 \r\n     * @param {ture|flse} isVisible\r\n     */\r\n    setVectorLayerVisibleNavigate(isVisible) {\r\n        this.groups.vectorLayerGroup.setVisible(isVisible)\r\n    }\r\n\r\n    /**设置业务图层是否显示 完善点:要增加隐藏和清空的参数 \r\n     * @param {ture|flse} isVisible \r\n     */\r\n    setBusinessLayerGroupVisible(isVisible) {\r\n        if (!isVisible)\r\n            this.groups.businessLayerGroup.getLayers().forEach(layer => {\r\n                layer.getSource() && layer.getSource().clear()\r\n            })\r\n\r\n        //this.groups.businessLayerGroup.setVisible(isVisible)\r\n    }\r\n    /**设置临时绘制图层是否显示  完善点:要增加隐藏和清空的参数 \r\n     * @param {ture|flse} isVisible\r\n     */\r\n    setTempLayerGroupVisible(isVisible) {\r\n        this.groups.tempLayerGroup.setVisible(isVisible)\r\n        if (!isVisible)\r\n            this.groups.tempLayerGroup.getLayers().forEach(layer => {\r\n                layer.getSource() && layer.getSource().clear()\r\n            })\r\n    }\r\n    /**清空临时图层图层并结束编辑修改交互\r\n     * \r\n     */\r\n    removeInteractions() {\r\n        console.log(\"removeInteractions\")\r\n        if (drawTypeSelect) {\r\n            this.setTempLayerGroupVisible(false)\r\n            drawTypeSelect.getOverlay().getSource() && drawTypeSelect.getOverlay().getSource().clear()\r\n            this.tempLayers.drawAndModifyLayer.getSource() && this.tempLayers.drawAndModifyLayer.getSource().clear()\r\n            this.tempLayers.bufferLayr.getSource() && this.tempLayers.bufferLayr.getSource().clear()\r\n            this.map.removeInteraction(drawTypeSelect)\r\n        }\r\n    }\r\n\r\n    /**设置编辑状态\r\n     * \r\n     * @param {ture 开始编辑|false 结束编辑} state \r\n     */\r\n    setEditFeatureState(state) {\r\n        if (state) {\r\n            this.map.removeInteraction(drawTypeSelect)\r\n            this.removeInteractions()\r\n        } else {\r\n            this.map.removeInteraction(lineStringSelect)\r\n            this.map.removeInteraction(lineStringModify)\r\n            this.map.removeInteraction(polygonSelect)\r\n            this.map.removeInteraction(polygonModify)\r\n            this.map.removeInteraction(pointSelect)\r\n            this.map.removeInteraction(pointModify)\r\n        }\r\n        drawTypeSelect && drawTypeSelect.setActive(!state)\r\n        this.mapInstance.interactions.select.setActive(state)\r\n        this.mapInstance.interactions.modify.setActive(state)\r\n    }\r\n    //关闭修改feature交互操作\r\n    CloseModifyInteraction() {\r\n        this.map.removeInteraction(drawTypeSelect)\r\n    }\r\n    /**添加可绘制/修改图层\r\n     *@param {绘制的样式 Point/LineString/Polygon/Circle} typeSelect\r\n     *@param {是否可以修改的绘图} isModify\r\n     *@param {地图弹窗显示类型 0不显示弹窗1添加区域2编辑区域3添加关键点4编辑关键点} dialogType\r\n     *@function 回调函数,返回坐标信息\r\n     */\r\n    addInteractions(typeSelect, isModify, allDoneCallback) {\r\n        let source = new VectorSource();\r\n        this.tempLayers.drawAndModifyLayer.setSource(source);\r\n        drawTypeSelect = new Draw({\r\n            source: source,\r\n            type: typeSelect\r\n        });\r\n        //this.map.removeInteraction(this.mapInstance.interactions.modify);\r\n        this.setEditFeatureState(false)\r\n        this.map.addInteraction(drawTypeSelect);\r\n        drawTypeSelect.on('drawend', (evt) => { //图形完成显示数据\r\n            let coordinate = evt.feature.getGeometry().getCoordinates();\r\n            if (typeSelect == \"LineString\") {\r\n                let bufferGeom = MapNavigate.getBufferGeometry(evt.feature.getGeometry())\r\n                let feature = new Feature();\r\n                feature.setGeometry(bufferGeom)\r\n                let coordinate2 = feature.getGeometry().getCoordinates()\r\n                this.tempLayers.bufferLayr.setSource(new VectorSource({\r\n\r\n                    features: [new Feature({\r\n                        geometry: new Polygon([coordinate2[0]]),\r\n                        style: mapStyle.getStyle('businessLayers.polygonLayer')\r\n                    })]\r\n                }))\r\n                allDoneCallback instanceof Function && allDoneCallback(coordinate, [coordinate2[0]]);\r\n            }\r\n            //测试空间查询\r\n            // else if (typeSelect == \"Polygon\") {\r\n\r\n            //     this.setSpatialSearchOnMap(true, 3, 'ValvewellLayer', evt.feature)\r\n            // } \r\n            else {\r\n                allDoneCallback instanceof Function && allDoneCallback(coordinate);\r\n            }\r\n            this.CloseModifyInteraction()\r\n        })\r\n        //暂时先不支持修改\r\n        if (false) {\r\n            let modify = new Modify({\r\n                source: source\r\n            });\r\n            this.map.addInteraction(modify);\r\n            source.getFeatures.forEach(value => {\r\n                this.mapInstance.interactions.snap.addFeature(value)\r\n            })\r\n\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    /**空间查询\r\n     * \r\n     * @param {ture 显示|false 不显示} isVisible \r\n     * @param {layer索引} layerIndex \r\n     * @param {layer名称} layerName \r\n     * @param {查询的区域feature} feature \r\n     */\r\n    setSpatialSearchOnMap(isVisible, layerIndex, layerName, feature, callback) {\r\n        let layer = this.mapInstance.spatialSearchLayers[layerName]\r\n        this.setVectorLayerVisibleNavigate(false);\r\n        if (isVisible) {\r\n            this.baseMap.createSpatialSearchVectorSource(layerIndex, feature.getGeometry().getCoordinates(), feature.getGeometry().getExtent()).then(resultObject => {\r\n                let pointAll = [];\r\n                _.forEach(resultObject, res => {\r\n                    pointAll.push({ \"SmID\": res.values_.OBJECTID, \"SmX\": res.values_.geometry.flatCoordinates[0], \"SmY\": res.values_.geometry.flatCoordinates[1], \"EquType\": layerIndex[0] })\r\n                })\r\n                if (resultObject.length != 0) {\r\n\r\n                    layer.setSource(\r\n                        new VectorSource({\r\n                            features: resultObject\r\n                        })\r\n                    )\r\n                    callback instanceof Function && callback(layerIndex, pointAll)\r\n                }\r\n            })\r\n\r\n        } else {\r\n            layer.getSource() && layer.getSource().clear()\r\n            callback instanceof Function && callback(layerIndex, null)\r\n        }\r\n    }\r\n\r\n\r\n    /**在地图上绘制Point\r\n     * \r\n     * @param {需要绘制的Point的数组} geomArray \r\n     * @param {是否修改} isModify \r\n     * @param {修改完后的回调} onModifyEndFunc\r\n     * @param {点的名称} featureName \r\n     * @param {需要添加给点的属性 Object.<string, *>} featureProperties\r\n     */\r\n    setPointOnMap(geomArray, isModify, onModifyEndFunc, featureName, featureProperties) {\r\n        let interactions = this.mapInstance.interactions\r\n        interactions.select.setActive(false)\r\n        interactions.modify.setActive(false)\r\n        let isInsertProperties = featureProperties && featureProperties.length == geomArray.length\r\n        if (geomArray instanceof Array) {\r\n            let features = []\r\n            let pointLayer = this.businessLayers.pointLayer\r\n            geomArray.forEach((obj, index) => {\r\n                let feature = new Feature({\r\n                    geometry: new Point(obj),\r\n                    name: featureName,\r\n                    properties: isInsertProperties ? featureProperties[index] : undefined\r\n                })\r\n\r\n                feature.setStyle(mapStyle.getStyle('businessLayers.pointLayer',featureProperties[index].EventFromName))\r\n                features.push(feature)\r\n            })\r\n            pointLayer.setSource(new VectorSource({\r\n                features: features\r\n            }))\r\n            if (isModify) {\r\n\r\n                pointSelect = new Select({\r\n                    filter: function (feature) {\r\n\r\n                        return feature.getGeometry().getType() == 'Point'\r\n                    },\r\n                    active: true\r\n                })\r\n                pointModify = new Modify({\r\n                    features: pointSelect.getFeatures(),\r\n                    active: true\r\n                }),\r\n\r\n                    pointModify.on('modifyend', evt => { //图形完成显示数据\r\n                        onModifyEndFunc instanceof Function && onModifyEndFunc(evt.features.array_[0].getGeometry().getCoordinates(), () => {\r\n                            this.setEditFeatureState(false)\r\n                            console.log('setPointnOnMapModify')\r\n                        });\r\n\r\n                    })\r\n                this.map.addInteraction(pointSelect)\r\n                this.map.addInteraction(pointModify)\r\n            }\r\n        }\r\n    }\r\n\r\n    /**在地图上绘制Polygon(geomArray和nameArray的数目和顺序都要一致)\r\n     * \r\n     * @param {需要绘制的Polygon的数组} geomArray \r\n     * @param {需要添加的name} nameArray\r\n     * @param {是否修改} isModify \r\n     * @param {修改完后的回调} onModifyEndFunc\r\n     */\r\n    setPolygonOnMap(geomArray, nameArray, isModify, onModifyEndFunc) {\r\n        let interactions = this.mapInstance.interactions\r\n        interactions.select.setActive(false)\r\n        interactions.modify.setActive(false)\r\n        if (geomArray instanceof Array && nameArray instanceof Array && geomArray.length == nameArray.length) {\r\n            let features = []\r\n            let polygonLayer = this.businessLayers.polygonLayer\r\n            geomArray.forEach((obj, index) => {\r\n                let feature = new Feature({\r\n                    geometry: new Polygon([obj]),\r\n                    name: nameArray[index],\r\n\r\n                })\r\n                feature.setStyle(mapStyle.getStyle('businessLayers.polygonLayer', nameArray[index]))\r\n                features.push(feature)\r\n            })\r\n\r\n            polygonLayer.setSource(new VectorSource({\r\n                features: features\r\n            }))\r\n\r\n            if (isModify) {\r\n\r\n                polygonSelect = new Select({\r\n                    filter: function (feature) {\r\n\r\n                        return feature.getGeometry().getType() == 'Polygon'\r\n                    },\r\n                    active: true\r\n                })\r\n                polygonModify = new Modify({\r\n                    features: polygonSelect.getFeatures(),\r\n                    active: true\r\n                }),\r\n\r\n                    polygonModify.on('modifyend', evt => { //图形完成显示数据\r\n                        onModifyEndFunc instanceof Function && onModifyEndFunc(evt.features.array_[0].getGeometry().getCoordinates(), () => {\r\n                            this.setEditFeatureState(false)\r\n                            console.log('setPolygonOnMapModify')\r\n                        }, evt.features.array_[0]);\r\n\r\n                    })\r\n\r\n                this.map.addInteraction(polygonSelect)\r\n                this.map.addInteraction(polygonModify)\r\n            } else {\r\n                onModifyEndFunc instanceof Function && onModifyEndFunc(features[0]);\r\n            }\r\n        }\r\n    }\r\n    /**在地图上绘制LineString(geomArray和nameArray的数目和顺序都要一致,if bufferArray==undifiand|bufferArray.length!=geomArray.length 则不执行)\r\n     * \r\n     * @param {需要绘制的LineString的数组} geomArray \r\n     * @param {需要添加的name} nameArray \r\n     * @param {是否修改} isModify \r\n     * @param {修改完后的回调} onModifyEndFunc\r\n     * @param {buffer图层} bufferArray\r\n     */\r\n    setLineStringOnMap(geomArray, nameArray, isModify, onModifyEndFunc, bufferArray) {\r\n        let interactions = this.mapInstance.interactions\r\n        interactions.select.setActive(false)\r\n        interactions.modify.setActive(false)\r\n        if (geomArray instanceof Array && nameArray instanceof Array && geomArray.length == nameArray.length) {\r\n            let features = []\r\n            let features2 = []\r\n            let lineStringLayer = this.businessLayers.lineStringLayer\r\n            let polygonLayer = this.businessLayers.polygonLayer\r\n            let isAddBuffer = (bufferArray instanceof Array && bufferArray.length == geomArray.length)\r\n            geomArray.forEach((obj, index) => {\r\n                let feature = new Feature({\r\n                    geometry: new LineString(obj),\r\n                    name: nameArray[index],\r\n                })\r\n                feature.setStyle(mapStyle.getStyle('businessLayers.lineStringLayer', nameArray[index]))\r\n                features.push(feature)\r\n                //buffer图层\r\n                if (isAddBuffer) {\r\n                    let feature2 = new Feature({\r\n                        geometry: new Polygon(bufferArray[index]),\r\n                    })\r\n                    feature2.setStyle(mapStyle.getStyle('businessLayers.polygonLayer'))\r\n                    features2.push(feature2)\r\n                }\r\n            })\r\n            lineStringLayer.setSource(new VectorSource({\r\n                features: features\r\n            }))\r\n            if (isAddBuffer) {\r\n                polygonLayer.setSource(new VectorSource({\r\n                    features: features2\r\n                }))\r\n            }\r\n            if (isModify) {\r\n                interactions.snap.addFeature(features[0])\r\n\r\n                lineStringSelect = new Select({\r\n                    filter: function (feature) {\r\n\r\n                        return feature.getGeometry().getType() == 'LineString'\r\n                    },\r\n                    active: true\r\n                })\r\n                lineStringModify = new Modify({\r\n                    features: lineStringSelect.getFeatures(),\r\n                    active: true\r\n                }),\r\n\r\n                    lineStringModify.on('modifyend', evt => { //图形完成显示数据\r\n\r\n                        let bufferGeom = MapNavigate.getBufferGeometry(evt.features.array_[0].getGeometry())\r\n                        let feature = new Feature({\r\n                            geometry: bufferGeom\r\n                        });\r\n\r\n                        let coordinate2 = feature.getGeometry().getCoordinates()\r\n                        polygonLayer.setSource(new VectorSource({\r\n                            features: [new Feature({\r\n                                geometry: new Polygon(coordinate2),\r\n                                style: mapStyle.getStyle('businessLayers.polygonLayer')\r\n                            })]\r\n                        }))\r\n\r\n                        onModifyEndFunc instanceof Function && onModifyEndFunc(evt.features.array_[0].getGeometry().getCoordinates(), () => {\r\n                            this.setEditFeatureState(false)\r\n                        }, coordinate2);\r\n                    })\r\n                this.map.addInteraction(lineStringSelect)\r\n                this.map.addInteraction(lineStringModify)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    //点动画函数\r\n    plotAnimateControl(points, interValTime, action, callBack) {\r\n        plotAnimate.index = plotAnimate.index || 0\r\n        trackPlay.animating//动画状态\r\n        trackPlay.routeLength = points.length\r\n        trackPlay.points = points\r\n        trackPlay.interValTime = interValTime\r\n        //获取地图图层\r\n        let layerMove = this.businessLayers.monitorLayer\r\n        layerMove.setStyle(mapStyle.getStyle('businessLayers.monitorLayer'))\r\n\r\n        //样式\r\n        trackPlay.firstStyle = mapStyle.getStyle('businessLayers.monitorLayer.firstStyle');\r\n        trackPlay.endStyle = mapStyle.getStyle('businessLayers.monitorLayer.endStyle');\r\n        trackPlay.pointStyle = mapStyle.getStyle('businessLayers.monitorLayer.pointStyle');\r\n        trackPlay.routeStyle = mapStyle.getStyle('businessLayers.monitorLayer.routeStyle');\r\n        //绘点\r\n        function AddPoint(style, lnglat, id) {\r\n            let newFeature = new Feature({\r\n                geometry: new Point(lnglat)\r\n            });\r\n            //设置点的样式\r\n            newFeature.setStyle(style);\r\n            newFeature.setId(\"PlayPoints\" + id)\r\n            //将当前要素添加到矢量数据源中\r\n            layerMove.getSource().addFeature(newFeature);\r\n        }\r\n        //绘线\r\n        function AddLine(style, lnglat, id) {\r\n            let lineFeature = new Feature({\r\n                geometry: new LineString(lnglat)\r\n            });\r\n            //设置点的样式\r\n            lineFeature.setStyle(style);\r\n            lineFeature.setId(\"PlayLine\" + id)\r\n            //将当前要素添加到矢量数据源中\r\n            layerMove.getSource().addFeature(lineFeature);\r\n        }\r\n        //动画\r\n        trackPlay.move = (event) => {\r\n            let vectorContext = event.vectorContext;\r\n            let frameState = event.frameState;\r\n\r\n            if (trackPlay.animating) {\r\n                trackPlay.elapsedTime = frameState.time - trackPlay.now;\r\n\r\n                // here the trick to increase speed is to jump some indexes\r\n                // on lineString coordinates\r\n                trackPlay.index = Math.floor(trackPlay.elapsedTime / trackPlay.interValTime * 100) / 100;\r\n                if (trackPlay.index >= trackPlay.routeLength - 1) {\r\n                    trackPlay.stop(true);\r\n                    callBack()\r\n                    return;\r\n                }\r\n                trackPlay.nowPoint = []\r\n                let parseIndex = parseInt(trackPlay.index)\r\n                trackPlay.nowPoint[0] = points[parseIndex][0] + (points[parseIndex + 1][0] - points[parseIndex][0]) * (trackPlay.index % 1)\r\n                trackPlay.nowPoint[1] = points[parseIndex][1] + (points[parseIndex + 1][1] - points[parseIndex][1]) * (trackPlay.index % 1)\r\n                let currentPoint = new Feature({\r\n                    geometry: new Point(trackPlay.nowPoint)\r\n                });\r\n                vectorContext.drawFeature(currentPoint, trackPlay.pointStyle);\r\n            }\r\n            this.map.render();\r\n        };\r\n        //绘制路线\r\n        trackPlay.showRoute = () => {\r\n            if (trackPlay.animating) {\r\n                trackPlay.stop(true);\r\n            }\r\n            layerMove.getSource().clear();\r\n            AddPoint(trackPlay.pointStyle, points[0], -1);\r\n            AddPoint(trackPlay.firstStyle, points[0], 0);\r\n\r\n            AddPoint(trackPlay.endStyle, points[trackPlay.routeLength - 1], trackPlay.routeLength - 1);\r\n            AddLine(trackPlay.routeStyle, points, 'route')\r\n        }\r\n        //开始画线\r\n        trackPlay.start = () => {\r\n            let feature = layerMove.getSource().getFeatureById('PlayPoints-1')\r\n            if (trackPlay.animating) {\r\n                trackPlay.stop(true);\r\n            } else if (trackPlay.index) {\r\n                feature.setStyle(null);\r\n                trackPlay.animating = true;\r\n                trackPlay.now = new Date().getTime() - trackPlay.index * trackPlay.interValTime;\r\n                this.map.on('postcompose', trackPlay.move);\r\n                this.map.render();\r\n            } else {\r\n                feature.setStyle(null);\r\n                trackPlay.animating = true;\r\n                trackPlay.now = new Date().getTime();\r\n                this.map.on('postcompose', trackPlay.move);\r\n                this.map.render();\r\n            }\r\n\r\n\r\n        }\r\n        trackPlay.stop = (ended) => {\r\n            trackPlay.animating = false;\r\n            // if animation cancelled set the marker at the beginning\r\n\r\n            let coord\r\n            if (ended) {\r\n                this.map.un('postcompose', trackPlay.move);\r\n                trackPlay.index = 0\r\n                coord = trackPlay.points[0]\r\n                trackPlay = {}\r\n            } else {\r\n                this.map.un('postcompose', trackPlay.move);\r\n                coord = trackPlay.nowPoint\r\n            }\r\n            let feature = layerMove.getSource().getFeatureById('PlayPoints-1')\r\n            feature.getGeometry().setCoordinates(coord);\r\n            feature.setStyle(trackPlay.pointStyle);\r\n            //remove listener\r\n\r\n\r\n        }\r\n        switch (action) {\r\n            case 'showRoute':\r\n                trackPlay.showRoute()\r\n                break;\r\n            case 'start':\r\n                trackPlay.start()\r\n                break;\r\n            case 'pause':\r\n                trackPlay.stop(false)\r\n                break;\r\n            case 'clear':\r\n                if (trackPlay.animating) {\r\n                    trackPlay.stop(true)\r\n                }\r\n                layerMove.getSource().clear();\r\n        }\r\n    }\r\n    OffPointermoveControl() {\r\n        isAllowPointerMove = false\r\n    }\r\n    onPointermoveControl() {\r\n        isAllowPointerMove = true\r\n    }\r\n    /**\r\n     * 添加pointerMove事件\r\n     */\r\n    pointermoveControl(overlayDOM, callback) {\r\n        this.map.on('pointermove', e => {\r\n            if (!isAllowPointerMove) {\r\n                return e.coordinate\r\n            }\r\n            //获取像素区域\r\n            let pixel = this.map.getEventPixel(e.originalEvent);\r\n            let flag = false;\r\n            let overlay = this.overlay\r\n            overlay.setPosition(undefined)\r\n            this.map.forEachFeatureAtPixel(pixel, (feature) => {\r\n                let properties = feature.getProperties();\r\n                let coodinate = feature.getGeometry().getCoordinates();\r\n                if (feature.getGeometry().getType() == 'Point') {\r\n                    if (properties.name == 'RoutePoint') {\r\n                        //overlay.setElement(overlayDOM)\r\n                        let innerHTML = `<div><strong>名称：</strong>${properties.properties.ImportPointName}</div>\r\n                        <div><strong>上报时间：</strong>${properties.properties.AddTime}</div>`;\r\n                        callback(innerHTML, '路线巡检', true)\r\n                        overlay.setPosition(coodinate)\r\n                        //设置overlay的显示位置\r\n                        // overlay.setPosition(e.coordinate);\r\n\r\n                    }\r\n                    else if (properties.name == 'EventPoint') {\r\n                        //overlay.setElement(overlayDOM)\r\n                        let innerHTML = `<div><strong>事件编号：</strong>${properties.properties.EventCode}</div>\r\n                        <div><strong>事件位置：</strong>${properties.properties.eventAddress}</div>\r\n                        <div><strong>上报部门：</strong>${properties.properties.DeptName}</div>\r\n                        <div><strong>上传人员：</strong>${properties.properties.PName}</div>\r\n                        <div><strong>事件类别：</strong>${properties.properties.PointName}</div>\r\n                        <div><strong>事件内容：</strong>${properties.properties.ET1}</div>\r\n                        <div><strong>事件来源：</strong>${properties.properties.EventFromName}</div>\r\n                        <div><strong>紧急级别：</strong>${properties.properties.HandlerLevelName}</div>\r\n                        <div><strong>事件描述：</strong>${properties.properties.eventDesc}</div>`\r\n                        if (properties.properties.EventPictures.length) {\r\n                            innerHTML += `<div><strong>图片：</strong>`;\r\n                            _.forEach(properties.properties.EventPictures, picture => {\r\n                                innerHTML += `<a href=\"${picture}\"><image  src=\"${picture}\"/></a>`\r\n                            })\r\n                            innerHTML += `</div>`;\r\n                        }\r\n\r\n                        callback(innerHTML, '事件')\r\n                        overlay.setPosition(coodinate)\r\n                    }else if(properties.name == 'DatailEvent'){  \r\n                        let innerHTML = \r\n                            `<div><strong>事件编号：</strong>${properties.properties.EventCode}</div>\r\n                            <div><strong>时间：</strong>${properties.properties.EventUpdateTime.split(\"T\")[0]} ${properties.properties.EventUpdateTime.split(\"T\")[1]}</div>\r\n                            <div><strong>事件位置：</strong>${properties.properties.EventAddress}</div>\r\n                            <div><strong>部门：</strong>${properties.properties.cDepName || properties.properties.DeptName}</div>\r\n                            <div><strong>事件来源：</strong>${properties.properties.EventFromName}</div>\r\n                            <div><strong>事件描述：</strong>${properties.properties.EventDesc}</div>`;\r\n                        callback(innerHTML,'事件上报')\r\n                        overlay.setPosition(coodinate)\r\n                    }\r\n                }\r\n\r\n            });\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default MapNavigate;","/**\n * @module ol/Observable\n */\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = /*@__PURE__*/(function (EventTarget) {\n  function Observable() {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n\n  }\n\n  if ( EventTarget ) Observable.__proto__ = EventTarget;\n  Observable.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Observable.prototype.constructor = Observable;\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  Observable.prototype.changed = function changed () {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  Observable.prototype.getRevision = function getRevision () {\n    return this.revision_;\n  };\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.on = function on (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.once = function once (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listenOnce(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listenOnce(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  Observable.prototype.un = function un (type, listener) {\n    if (Array.isArray(type)) {\n      for (var i = 0, ii = type.length; i < ii; ++i) {\n        unlisten(this, type[i], listener);\n      }\n      return;\n    } else {\n      unlisten(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  return Observable;\n}(EventTarget));\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (var i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\n\nexport default Observable;\n\n//# sourceMappingURL=Observable.js.map","  export const MapConfigure = {\r\n      //地图地址配置\r\n      url: {\r\n          \r\n          //遥感\r\n          urlSatell: \"http://39.100.62.29:6080/arcgis/rest/services/zz/ZZ_yxt/MapServer\",\r\n          //管线\r\n          urlPipeLine: \"http://39.100.62.29:6080/arcgis/rest/services/zz/ZZ_pipe/MapServer\",\r\n         \r\n      },\r\n      //坐标类型定义\r\n      CoordinateDefinition: [{\r\n              DeFineName: \"EPSG:4547\",\r\n              DefineContent: \"+proj=tmerc +lat_0=0 +lon_0=114 +k=1 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs\",\r\n              IsDeFault: true\r\n          },\r\n          {\r\n              DeFineName: \"EPSG:4490\",\r\n              DefineContent: \"+proj=longlat +ellps=GRS80 +no_defs\",\r\n              IsDeFault: false\r\n          }\r\n      ],\r\n      //地图中心点\r\n      MapCenter: {\r\n          Center_X: 113.563439,\r\n          Center_Y: 34.823981,\r\n          Center_Zoom: 3\r\n      },\r\n      MapExtent: {\r\n          XMin: 113.35975811932538,\r\n          YMin: 34.7501362981023,\r\n          XMax: 113.71391131426837,\r\n          YMax: 34.876861366065775,\r\n          SpatialReference: 4326\r\n      },\r\n      //比例尺缩放到哪个级别时切换地图\r\n      MapChange: {\r\n          MapZoomLevel: 10\r\n      },\r\n      //坐标l类型\r\n      Coordinates_Type: {\r\n          Map_Coordinates: 1\r\n      },\r\n      //绘图或修改图层配置\r\n      DrawAndModifyConfiguration: {\r\n          source: undefined\r\n      },\r\n      \r\n      //图层配置\r\n      LayerConfiguration: [{\r\n        layerCName: \"标识\", //图层中文名称\r\n        layerName: 'PipeMarkLayer', //图层编号\r\n        layerIndex: 0, //对应ArcGis图层编号\r\n        isSpatialSearch:false,\r\n        layerTableName: \"PipeMark\", //数据库表名\r\n        listViewColumn: \"E_PipeMark_Columns\", //对应前端列表控件列\r\n        viewIndex: 1, //图层显示顺序\r\n        isActive: true, //是否显示\r\n        featureColumn: [ //点选显示\r\n            {\r\n                field: \"equipment_number\",\r\n                text: \"管线编号\",\r\n                type: \"Number\"\r\n            },\r\n            {\r\n                field: \"material_science\",\r\n                text: \"材质\"\r\n            },\r\n            {\r\n                field: \"caliber\",\r\n                text: \"口径\",\r\n                type: \"Number\"\r\n            },\r\n            {\r\n                field: \"length\",\r\n                text: \"长度\",\r\n                type: \"Number\"\r\n            },\r\n            {\r\n                field: \"startingpoint_elevation\",\r\n                text: \"起点高程\",\r\n                type: \"Number\"\r\n            },\r\n            {\r\n                field: \"endpoint_elevation\",\r\n                text: \"终点高程\",\r\n                type: \"Number\"\r\n            },\r\n            {\r\n                field: \"Installation_address\",\r\n                text: \"道路名\"\r\n            },\r\n            {\r\n                field: \"construction_unit\",\r\n                text: \"施工单位\"\r\n            },\r\n            {\r\n                field: \"management_unit\",\r\n                text: \"管理单位\"\r\n            },\r\n            {\r\n                field: \"completion_date\",\r\n                text: \"竣工日期\",\r\n                type: \"Data\"\r\n            },\r\n            {\r\n                field: \"laying_age\",\r\n                text: \"敷设年代\",\r\n                type: \"Number\"\r\n            },\r\n            {\r\n                field: \"startingpoint_depth\",\r\n                text: \"起点埋深\",\r\n                type: \"Number\"\r\n            },\r\n            {\r\n                field: \"endpoint_depth\",\r\n                text: \"终点埋深\",\r\n                type: \"Number\"\r\n            },\r\n            {\r\n                field: \"embedding_mode\",\r\n                text: \"埋设方式\"\r\n            },\r\n            {\r\n                field: \"Interface_form\",\r\n                text: \"接口形式\"\r\n            }\r\n        ]\r\n    },{\r\n          layerCName: \"管线\", //图层中文名称\r\n          layerName: 'PipeLineLayer', //图层编号\r\n          layerIndex: 2, //对应ArcGis图层编号\r\n          isSpatialSearch:false,\r\n          layerTableName: \"Pipe\", //数据库表名\r\n          listViewColumn: \"E_Pipe_Columns\", //对应前端列表控件列\r\n          viewIndex: 1, //图层显示顺序\r\n          isActive: true, //是否显示\r\n          featureColumn: [ //点选显示\r\n              {\r\n                  field: \"equipment_number\",\r\n                  text: \"管线编号\",\r\n                  type: \"Number\"\r\n              },\r\n              {\r\n                  field: \"material_science\",\r\n                  text: \"材质\"\r\n              },\r\n              {\r\n                  field: \"caliber\",\r\n                  text: \"口径\",\r\n                  type: \"Number\"\r\n              },\r\n              {\r\n                  field: \"length\",\r\n                  text: \"长度\",\r\n                  type: \"Number\"\r\n              },\r\n              {\r\n                  field: \"startingpoint_elevation\",\r\n                  text: \"起点高程\",\r\n                  type: \"Number\"\r\n              },\r\n              {\r\n                  field: \"endpoint_elevation\",\r\n                  text: \"终点高程\",\r\n                  type: \"Number\"\r\n              },\r\n              {\r\n                  field: \"Installation_address\",\r\n                  text: \"道路名\"\r\n              },\r\n              {\r\n                  field: \"construction_unit\",\r\n                  text: \"施工单位\"\r\n              },\r\n              {\r\n                  field: \"management_unit\",\r\n                  text: \"管理单位\"\r\n              },\r\n              {\r\n                  field: \"completion_date\",\r\n                  text: \"竣工日期\",\r\n                  type: \"Data\"\r\n              },\r\n              {\r\n                  field: \"laying_age\",\r\n                  text: \"敷设年代\",\r\n                  type: \"Number\"\r\n              },\r\n              {\r\n                  field: \"startingpoint_depth\",\r\n                  text: \"起点埋深\",\r\n                  type: \"Number\"\r\n              },\r\n              {\r\n                  field: \"endpoint_depth\",\r\n                  text: \"终点埋深\",\r\n                  type: \"Number\"\r\n              },\r\n              {\r\n                  field: \"embedding_mode\",\r\n                  text: \"埋设方式\"\r\n              },\r\n              {\r\n                  field: \"Interface_form\",\r\n                  text: \"接口形式\"\r\n              }\r\n          ]\r\n      }, {\r\n          layerCName: \"点位\",\r\n          layerName: 'ExhaustvalveLayer',\r\n          layerIndex: 1,\r\n          isSpatialSearch:true,\r\n          layerTableName: \"Exhaustvalve\",\r\n          listViewColumn: \"E_Exhaustvalve_Columns\",\r\n          isActive: true,\r\n          viewIndex: 2,\r\n          featureColumn: [{\r\n                  field: \"equipment_number\",\r\n                  text: \"编号\",\r\n                  type: \"Number\"\r\n              },\r\n              {\r\n                  field: \"material_science\",\r\n                  text: \"材质\"\r\n              },\r\n              {\r\n                  field: \"caliber\",\r\n                  text: \"口径\",\r\n                  type: \"Number\"\r\n              },\r\n              {\r\n                  field: \"elevation\",\r\n                  text: \"高程\",\r\n                  type: \"Number\"\r\n              },\r\n              {\r\n                  field: \"depth\",\r\n                  text: \"埋深\",\r\n                  type: \"Number\"\r\n              },\r\n              {\r\n                  field: \"Installation_address\",\r\n                  text: \"安装地址\"\r\n              },\r\n              {\r\n                  field: \"management_unit\",\r\n                  text: \"管理单位\"\r\n              },\r\n              {\r\n                  field: \"completion_date\",\r\n                  text: \"竣工日期\",\r\n                  type: \"Data\"\r\n              },\r\n              {\r\n                  field: \"laying_age\",\r\n                  text: \"敷设年代\",\r\n                  type: \"Number\"\r\n              },\r\n              {\r\n                  field: \"embedding_mode\",\r\n                  text: \"埋设方式\"\r\n              },\r\n              {\r\n                  field: \"equipment_type\",\r\n                  text: \"设备类型\"\r\n              },\r\n              {\r\n                  field: \"coordinate_x\",\r\n                  text: \"横坐标\",\r\n                  type: \"Number\"\r\n              },\r\n              {\r\n                  field: \"coordinate_y\",\r\n                  text: \"纵坐标\",\r\n                  type: \"Number\"\r\n              },\r\n              {\r\n                  field: \"Interface_form\",\r\n                  text: \"接口形式\"\r\n              },\r\n              {\r\n                  field: \"specifications\",\r\n                  text: \"规格\"\r\n              },\r\n              {\r\n                  field: \"manufacturer\",\r\n                  text: \"生产厂家\"\r\n              },\r\n              {\r\n                  field: \"businessarea\",\r\n                  text: \"营业片区\"\r\n              }\r\n          ]\r\n      }]\r\n  }\r\n  export default MapConfigure;","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  var arguments$1 = arguments;\n\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments$1[i];\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (var property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  var values = [];\n  for (var property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  var property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = function Kinetic(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function begin () {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function update (x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function end () {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  var delay = Date.now() - this.delay_;\n  var lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  var firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  var dx = this.points_[lastIndex] - this.points_[firstIndex];\n  var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function getDistance () {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function getAngle () {\n  return this.angle_;\n};\n\nexport default Kinetic;\n\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /*@__PURE__*/(function (Interaction) {\n  function DoubleClickZoom(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Interaction ) DoubleClickZoom.__proto__ = Interaction;\n  DoubleClickZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  DoubleClickZoom.prototype.constructor = DoubleClickZoom;\n\n  return DoubleClickZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/interaction/DragPan\n */\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /*@__PURE__*/(function (PointerInteraction) {\n  function DragPan(opt_options) {\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n\n  }\n\n  if ( PointerInteraction ) DragPan.__proto__ = PointerInteraction;\n  DragPan.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragPan.prototype.constructor = DragPan;\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    var targetPointers = this.targetPointers;\n    var centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        var deltaX = this.lastCentroid[0] - centroid[0];\n        var deltaY = centroid[1] - this.lastCentroid[1];\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        var center = [deltaX, deltaY];\n        scaleCoordinate(center, view.getResolution());\n        rotateCoordinate(center, view.getRotation());\n        addCoordinate(center, view.getCenter());\n        center = view.constrainCenter(center);\n        view.setCenter(center);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        var distance = this.kinetic_.getDistance();\n        var angle = this.kinetic_.getAngle();\n        var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n        var centerpx = map.getPixelFromCoordinate(center);\n        var dest = map.getCoordinateFromPixel([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle)\n        ]);\n        view.animate({\n          center: view.constrainCenter(dest),\n          duration: 500,\n          easing: easeOut\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.setHint(ViewHint.INTERACTING, -1);\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.setCenter(mapBrowserEvent.frameState.viewState.center);\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragPan;\n}(PointerInteraction));\n\nexport default DragPan;\n\n//# sourceMappingURL=DragPan.js.map","/**\n * @module ol/interaction/DragRotate\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function DragRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) DragRotate.__proto__ = PointerInteraction;\n  DragRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotate.prototype.constructor = DragRotate;\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    var size = map.getSize();\n    var offset = mapBrowserEvent.pixel;\n    var theta =\n        Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      var delta = theta - this.lastAngle_;\n      var rotation = view.getRotation();\n      rotateWithoutConstraints(view, rotation - delta);\n    }\n    this.lastAngle_ = theta;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    var rotation = view.getRotation();\n    rotate(view, rotation, undefined, this.duration_);\n    return false;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragRotate;\n}(PointerInteraction));\n\nexport default DragRotate;\n\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nvar RenderBox = /*@__PURE__*/(function (Disposable) {\n  function RenderBox(className) {\n    Disposable.call(this);\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n    this.element_.style.position = 'absolute';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n\n  }\n\n  if ( Disposable ) RenderBox.__proto__ = Disposable;\n  RenderBox.prototype = Object.create( Disposable && Disposable.prototype );\n  RenderBox.prototype.constructor = RenderBox;\n\n  /**\n   * @inheritDoc\n   */\n  RenderBox.prototype.disposeInternal = function disposeInternal () {\n    this.setMap(null);\n  };\n\n  /**\n   * @private\n   */\n  RenderBox.prototype.render_ = function render_ () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var px = 'px';\n    var style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  RenderBox.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      var style = this.element_.style;\n      style.left = style.top = style.width = style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  };\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  RenderBox.prototype.setPixels = function setPixels (startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  };\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  RenderBox.prototype.createOrUpdateGeometry = function createOrUpdateGeometry () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]]\n    ];\n    var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  };\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  RenderBox.prototype.getGeometry = function getGeometry () {\n    return this.geometry_;\n  };\n\n  return RenderBox;\n}(Disposable));\n\n\nexport default RenderBox;\n\n//# sourceMappingURL=Box.js.map","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {VOID} from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} onBoxEnd Code to execute just\n * before `boxend` is fired.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /*@__PURE__*/(function (Event) {\n  function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) DragBoxEvent.__proto__ = Event;\n  DragBoxEvent.prototype = Object.create( Event && Event.prototype );\n  DragBoxEvent.prototype.constructor = DragBoxEvent;\n\n  return DragBoxEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /*@__PURE__*/(function (PointerInteraction) {\n  function DragBox(opt_options) {\n\n    PointerInteraction.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n    * @type {import(\"../render/Box.js\").default}\n    * @private\n    */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)}\n     * @private\n     */\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n\n    /**\n    * @type {import(\"../pixel.js\").Pixel}\n    * @private\n    */\n    this.startPixel_ = null;\n\n    /**\n    * @private\n    * @type {import(\"../events/condition.js\").Condition}\n    */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n    * @private\n    * @type {EndCondition}\n    */\n    this.boxEndCondition_ = options.boxEndCondition ?\n      options.boxEndCondition : this.defaultBoxEndCondition;\n  }\n\n  if ( PointerInteraction ) DragBox.__proto__ = PointerInteraction;\n  DragBox.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragBox.prototype.constructor = DragBox;\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  DragBox.prototype.defaultBoxEndCondition = function defaultBoxEndCondition (mapBrowserEvent, startPixel, endPixel) {\n    var width = endPixel[0] - startPixel[0];\n    var height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  };\n\n  /**\n  * Returns geometry of last drawn box.\n  * @return {import(\"../geom/Polygon.js\").default} Geometry.\n  * @api\n  */\n  DragBox.prototype.getGeometry = function getGeometry () {\n    return this.box_.getGeometry();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    this.box_.setMap(null);\n\n    if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n      this.onBoxEnd_(mapBrowserEvent);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) &&\n        this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragBox;\n}(PointerInteraction));\n\n\nexport default DragBox;\n\n//# sourceMappingURL=DragBox.js.map","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from './DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /*@__PURE__*/(function (DragBox) {\n  function DragZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n\n    DragBox.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  if ( DragBox ) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create( DragBox && DragBox.prototype );\n  DragZoom.prototype.constructor = DragZoom;\n\n  return DragZoom;\n}(DragBox));\n\n\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n  var map = this.getMap();\n  var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n  var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  var center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\n//# sourceMappingURL=KeyCode.js.map","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /*@__PURE__*/(function (Interaction) {\n  function KeyboardPan(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function(mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) &&\n        targetNotEditable(mapBrowserEvent);\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition !== undefined ?\n      options.condition : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\n      options.pixelDelta : 128;\n\n  }\n\n  if ( Interaction ) KeyboardPan.__proto__ = Interaction;\n  KeyboardPan.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardPan.prototype.constructor = KeyboardPan;\n\n  return KeyboardPan;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      var deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      var delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n\n//# sourceMappingURL=KeyboardPan.js.map","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /*@__PURE__*/(function (Interaction) {\n  function KeyboardZoom(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  }\n\n  if ( Interaction ) KeyboardZoom.__proto__ = Interaction;\n  KeyboardZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardZoom.prototype.constructor = KeyboardZoom;\n\n  return KeyboardZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      var map = mapBrowserEvent.map;\n      var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      var view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nvar MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport var Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /*@__PURE__*/(function (Interaction) {\n  function MouseWheelZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.trackpadDeltaPerZoom_ = 300;\n\n    /**\n     * The zoom factor by which scroll zooming is allowed to exceed the limits.\n     * @private\n     * @type {number}\n     */\n    this.trackpadZoomBuffer_ = 1.5;\n\n  }\n\n  if ( Interaction ) MouseWheelZoom.__proto__ = Interaction;\n  MouseWheelZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  MouseWheelZoom.prototype.constructor = MouseWheelZoom;\n\n  /**\n   * @private\n   */\n  MouseWheelZoom.prototype.decrementInteractingHint_ = function decrementInteractingHint_ () {\n    this.trackpadTimeoutId_ = undefined;\n    var view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @override\n   */\n  MouseWheelZoom.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    var type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n      return true;\n    }\n\n    mapBrowserEvent.preventDefault();\n\n    var map = mapBrowserEvent.map;\n    var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    var delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX &&\n          wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n      delta = -wheelEvent.wheelDeltaY;\n      if (SAFARI) {\n        delta /= 3;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n\n    var now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ?\n        Mode.TRACKPAD :\n        Mode.WHEEL;\n    }\n\n    if (this.mode_ === Mode.TRACKPAD) {\n      var view = map.getView();\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        view.setHint(ViewHint.INTERACTING, 1);\n      }\n      this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n      var resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n      var minResolution = view.getMinResolution();\n      var maxResolution = view.getMaxResolution();\n      var rebound = 0;\n      if (resolution < minResolution) {\n        resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n        rebound = 1;\n      } else if (resolution > maxResolution) {\n        resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n        rebound = -1;\n      }\n      if (this.lastAnchor_) {\n        var center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n        view.setCenter(view.constrainCenter(center));\n      }\n      view.setResolution(resolution);\n\n      if (rebound === 0 && this.constrainResolution_) {\n        view.animate({\n          resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: this.duration_\n        });\n      }\n\n      if (rebound > 0) {\n        view.animate({\n          resolution: minResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      } else if (rebound < 0) {\n        view.animate({\n          resolution: maxResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      }\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.delta_ += delta;\n\n    var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n    return false;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  MouseWheelZoom.prototype.handleWheelZoom_ = function handleWheelZoom_ (map) {\n    var view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    var maxDelta = MAX_DELTA;\n    var delta = clamp(this.delta_, -maxDelta, maxDelta);\n    zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n    this.mode_ = undefined;\n    this.delta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  };\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  MouseWheelZoom.prototype.setMouseAnchor = function setMouseAnchor (useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  };\n\n  return MouseWheelZoom;\n}(Interaction));\n\nexport default MouseWheelZoom;\n\n//# sourceMappingURL=MouseWheelZoom.js.map","/**\n * @module ol/interaction/PinchRotate\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) PinchRotate.__proto__ = PointerInteraction;\n  PinchRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchRotate.prototype.constructor = PinchRotate;\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var rotationDelta = 0.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n\n    // angle between touches\n    var angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX);\n\n    if (this.lastAngle_ !== undefined) {\n      var delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ &&\n          Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      var rotation = view.getRotation();\n      map.render();\n      rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      if (this.rotating_) {\n        var rotation = view.getRotation();\n        rotate(view, rotation, this.anchor_, this.duration_);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchRotate;\n}(PointerInteraction));\n\nexport default PinchRotate;\n\n//# sourceMappingURL=PinchRotate.js.map","/**\n * @module ol/interaction/PinchZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n\n  }\n\n  if ( PointerInteraction ) PinchZoom.__proto__ = PointerInteraction;\n  PinchZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchZoom.prototype.constructor = PinchZoom;\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var scaleDelta = 1.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n    var dx = touch0.clientX - touch1.clientX;\n    var dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    var resolution = view.getResolution();\n    var maxResolution = view.getMaxResolution();\n    var minResolution = view.getMinResolution();\n    var newResolution = resolution * scaleDelta;\n    if (newResolution > maxResolution) {\n      scaleDelta = maxResolution / resolution;\n      newResolution = maxResolution;\n    } else if (newResolution < minResolution) {\n      scaleDelta = minResolution / resolution;\n      newResolution = minResolution;\n    }\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    zoomWithoutConstraints(view, newResolution, this.anchor_);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      var resolution = view.getResolution();\n      if (this.constrainResolution_ ||\n          resolution < view.getMinResolution() ||\n          resolution > view.getMaxResolution()) {\n        // Zoom to final resolution, with an animation, and provide a\n        // direction not to zoom out/in if user was pinching in/out.\n        // Direction is > 0 if pinching out, and < 0 if pinching in.\n        var direction = this.lastScaleDelta_ - 1;\n        zoom(view, resolution, this.anchor_, this.duration_, direction);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchZoom;\n}(PointerInteraction));\n\nexport default PinchZoom;\n\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport {focus} from './events/condition.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var interactions = new Collection();\n\n  var kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  var doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      condition: options.onFocusOnly ? focus : undefined,\n      kinetic: kinetic\n    }));\n  }\n\n  var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      condition: options.onFocusOnly ? focus : undefined,\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n\n//# sourceMappingURL=interaction.js.map","import _Promise from \"../../core-js/promise\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    _Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new _Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = function IconImageCache() {\n\n  /**\n  * @type {!Object<string, import(\"./IconImage.js\").default>}\n  * @private\n  */\n  this.cache_ = {};\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.cacheSize_ = 0;\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.maxCacheSize_ = 32;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.clear = function clear () {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.expire = function expire () {\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n    for (var key in this.cache_) {\n      var iconImage = this.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this.cache_[key];\n        --this.cacheSize_;\n      }\n    }\n  }\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @return {import(\"./IconImage.js\").default} Icon image.\n*/\nIconImageCache.prototype.get = function get (src, crossOrigin, color) {\n  var key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @param {import(\"./IconImage.js\").default} iconImage Icon image.\n*/\nIconImageCache.prototype.set = function set (src, crossOrigin, color, iconImage) {\n  var key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n/**\n* Set the cache size of the icon cache. Default is `32`. Change this value when\n* your map uses more than 32 different icon images and you are not caching icon\n* styles on the application level.\n* @param {number} maxCacheSize Cache max size.\n* @api\n*/\nIconImageCache.prototype.setSize = function setSize (maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  var colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/layer/Vector\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport VectorRenderType from './VectorRenderType.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"./VectorRenderType.js\").default|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar VectorLayer = /*@__PURE__*/(function (Layer) {\n  function VectorLayer(opt_options) {\n    var options = opt_options ?\n      opt_options : /** @type {Options} */ ({});\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    Layer.call(this, baseOptions);\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.renderBuffer_ = options.renderBuffer !== undefined ?\n      options.renderBuffer : 100;\n\n    /**\n    * User provided style.\n    * @type {import(\"../style/Style.js\").StyleLike}\n    * @private\n    */\n    this.style_ = null;\n\n    /**\n    * Style function for use within the library.\n    * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n    * @private\n    */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n      options.updateWhileAnimating : false;\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n      options.updateWhileInteracting : false;\n\n    /**\n    * @private\n    * @type {import(\"./VectorTileRenderType.js\").default|string}\n    */\n    this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.VECTOR;\n\n  }\n\n  if ( Layer ) VectorLayer.__proto__ = Layer;\n  VectorLayer.prototype = Object.create( Layer && Layer.prototype );\n  VectorLayer.prototype.constructor = VectorLayer;\n\n  /**\n  * @return {boolean} Declutter.\n  */\n  VectorLayer.prototype.getDeclutter = function getDeclutter () {\n    return this.declutter_;\n  };\n\n  /**\n  * @param {boolean} declutter Declutter.\n  */\n  VectorLayer.prototype.setDeclutter = function setDeclutter (declutter) {\n    this.declutter_ = declutter;\n  };\n\n  /**\n  * @return {number|undefined} Render buffer.\n  */\n  VectorLayer.prototype.getRenderBuffer = function getRenderBuffer () {\n    return this.renderBuffer_;\n  };\n\n  /**\n  * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n  *     order.\n  */\n  VectorLayer.prototype.getRenderOrder = function getRenderOrder () {\n    return (\n    /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n    );\n  };\n\n  /**\n  * Get the style for features.  This returns whatever was passed to the `style`\n  * option at construction or to the `setStyle` method.\n  * @return {import(\"../style/Style.js\").StyleLike}\n  *     Layer style.\n  * @api\n  */\n  VectorLayer.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n  * Get the style function.\n  * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n  * @api\n  */\n  VectorLayer.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     animating.\n  */\n  VectorLayer.prototype.getUpdateWhileAnimating = function getUpdateWhileAnimating () {\n    return this.updateWhileAnimating_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     interacting.\n  */\n  VectorLayer.prototype.getUpdateWhileInteracting = function getUpdateWhileInteracting () {\n    return this.updateWhileInteracting_;\n  };\n\n  /**\n  * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n  *     Render order.\n  */\n  VectorLayer.prototype.setRenderOrder = function setRenderOrder (renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  };\n\n  /**\n  * Set the style for features.  This can be a single style object, an array\n  * of styles, or a function that takes a feature and resolution and returns\n  * an array of styles. If it is `undefined` the default style is used. If\n  * it is `null` the layer has no style (a `null` style), so only features\n  * that have their own styles will be rendered in the layer. See\n  * {@link module:ol/style} for information on the default style.\n  * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n  * @api\n  */\n  VectorLayer.prototype.setStyle = function setStyle (style) {\n    this.style_ = style !== undefined ? style : createDefaultStyle;\n    this.styleFunction_ = style === null ?\n      undefined : toStyleFunction(this.style_);\n    this.changed();\n  };\n\n  /**\n  * @return {import(\"./VectorRenderType.js\").default|string} The render mode.\n  */\n  VectorLayer.prototype.getRenderMode = function getRenderMode () {\n    return this.renderMode_;\n  };\n\n  return VectorLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {import(\"../source/Vector.js\").default} Source.\n * @api\n */\nVectorLayer.prototype.getSource;\n\n\nexport default VectorLayer;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /*@__PURE__*/(function (Interaction) {\n  function PointerInteraction(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n     * @protected\n     */\n    this.targetPointers = [];\n\n  }\n\n  if ( Interaction ) PointerInteraction.__proto__ = Interaction;\n  PointerInteraction.prototype = Object.create( Interaction && Interaction.prototype );\n  PointerInteraction.prototype.constructor = PointerInteraction;\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {};\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @override\n   * @api\n   */\n  PointerInteraction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n\n    var stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        var handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        var handled = this.handleDownEvent(mapBrowserEvent);\n        if (handled) {\n          mapBrowserEvent.preventDefault();\n        }\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  };\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleMoveEvent = function handleMoveEvent (mapBrowserEvent) {};\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  PointerInteraction.prototype.stopDown = function stopDown (handled) {\n    return handled;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  PointerInteraction.prototype.updateTrackedPointers_ = function updateTrackedPointers_ (mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      var event = mapBrowserEvent.pointerEvent;\n\n      var id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type ==\n          MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  };\n\n  return PointerInteraction;\n}(Interaction));\n\n\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  var length = pointerEvents.length;\n  var clientX = 0;\n  var clientY = 0;\n  for (var i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  var type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\nexport default PointerInteraction;\n\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /*@__PURE__*/(function (BaseObject) {\n  function Interaction(options) {\n    BaseObject.call(this);\n\n    if (options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  if ( BaseObject ) Interaction.__proto__ = BaseObject;\n  Interaction.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Interaction.prototype.constructor = Interaction;\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.getActive = function getActive () {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  };\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Interaction.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  Interaction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    return true;\n  };\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.setActive = function setActive (active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  };\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  Interaction.prototype.setMap = function setMap (map) {\n    this.map_ = map;\n  };\n\n  return Interaction;\n}(BaseObject));\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  var currentCenter = view.getCenter();\n  if (currentCenter) {\n    var center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    var currentRotation = view.getRotation();\n    var currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  var currentResolution = view.getResolution();\n  var resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    var resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    var currentCenter = view.getCenter();\n    var center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    var currentResolution = view.getResolution();\n    var currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        var center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n\n//# sourceMappingURL=Interaction.js.map","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiLineString(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      var layout = this.getLayout();\n      var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      var flatCoordinates = [];\n      var ends = [];\n      for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n        var lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiLineString.__proto__ = SimpleGeometry;\n  MultiLineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  MultiLineString.prototype.appendLineString = function appendLineString (lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.clone = function clone () {\n    return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  MultiLineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate, opt_interpolate) {\n    if ((this.layout != GeometryLayout.XYM &&\n         this.layout != GeometryLayout.XYZM) ||\n        this.flatCoordinates.length === 0) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n  };\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinatesArray(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  MultiLineString.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  MultiLineString.prototype.getLineString = function getLineString (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  MultiLineString.prototype.getLineStrings = function getLineStrings () {\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var layout = this.layout;\n    /** @type {Array<LineString>} */\n    var lineStrings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  MultiLineString.prototype.getFlatMidpoints = function getFlatMidpoints () {\n    var midpoints = [];\n    var flatCoordinates = this.flatCoordinates;\n    var offset = 0;\n    var ends = this.ends_;\n    var stride = this.stride;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var midpoint = interpolatePoint(\n        flatCoordinates, offset, end, stride, 0.5);\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.getType = function getType () {\n    return GeometryType.MULTI_LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return MultiLineString;\n}(SimpleGeometry));\n\n\nexport default MultiLineString;\n\n//# sourceMappingURL=MultiLineString.js.map","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../util.js';\nimport rbush from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = function RBush(opt_maxEntries) {\n\n  /**\n   * @private\n   */\n  this.rbush_ = rbush(opt_maxEntries, undefined);\n\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object<string, Entry>}\n   */\n  this.items_ = {};\n\n};\n\n/**\n * Insert a value into the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.insert = function insert (extent, value) {\n  /** @type {Entry} */\n  var item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n\n  this.rbush_.insert(item);\n  this.items_[getUid(value)] = item;\n};\n\n\n/**\n * Bulk-insert values into the RBush.\n * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n * @param {Array<T>} values Values.\n */\nRBush.prototype.load = function load (extents, values) {\n  var items = new Array(values.length);\n  for (var i = 0, l = values.length; i < l; i++) {\n    var extent = extents[i];\n    var value = values[i];\n\n    /** @type {Entry} */\n    var item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this.items_[getUid(value)] = item;\n  }\n  this.rbush_.load(items);\n};\n\n\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\nRBush.prototype.remove = function remove (value) {\n  var uid = getUid(value);\n\n  // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n  var item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n\n\n/**\n * Update the extent of a value in the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.update = function update (extent, value) {\n  var item = this.items_[getUid(value)];\n  var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n  if (!equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n\n\n/**\n * Return all values in the RBush.\n * @return {Array<T>} All.\n */\nRBush.prototype.getAll = function getAll () {\n  var items = this.rbush_.all();\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Return all values in the given extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @return {Array<T>} All in extent.\n */\nRBush.prototype.getInExtent = function getInExtent (extent) {\n  /** @type {Entry} */\n  var bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  var items = this.rbush_.search(bbox);\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach = function forEach (callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n\n\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEachInExtent = function forEachInExtent (extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n\n\n/**\n * @param {Array<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach_ = function forEach_ (values, callback, opt_this) {\n  var result;\n  for (var i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n    if (result) {\n      return result;\n    }\n  }\n  return result;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nRBush.prototype.isEmpty = function isEmpty$1 () {\n  return isEmpty(this.items_);\n};\n\n\n/**\n * Remove all values from the RBush.\n */\nRBush.prototype.clear = function clear () {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n\n\n/**\n * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nRBush.prototype.getExtent = function getExtent (opt_extent) {\n  var data = this.rbush_.toJSON();\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n\n\n/**\n * @param {RBush} rbush R-Tree.\n */\nRBush.prototype.concat = function concat (rbush) {\n  this.rbush_.load(rbush.rbush_.all());\n  for (var i in rbush.items_) {\n    this.items_[i] = rbush.items_[i];\n  }\n};\n\n\nexport default RBush;\n\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlisten, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nvar Feature = /*@__PURE__*/(function (BaseObject) {\n  function Feature(opt_geometryOrProperties) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n\n    if (opt_geometryOrProperties) {\n      if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n        var geometry = /** @type {import(\"./geom/Geometry.js\").default} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        var properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  if ( BaseObject ) Feature.__proto__ = BaseObject;\n  Feature.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Feature.prototype.constructor = Feature;\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  Feature.prototype.clone = function clone () {\n    var clone = new Feature(this.getProperties());\n    clone.setGeometryName(this.getGeometryName());\n    var geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    var style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  };\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {import(\"./geom/Geometry.js\").default|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  Feature.prototype.getGeometry = function getGeometry () {\n    return (\n      /** @type {import(\"./geom/Geometry.js\").default|undefined} */ (this.get(this.geometryName_))\n    );\n  };\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Feature.prototype.getId = function getId () {\n    return this.id_;\n  };\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  Feature.prototype.getGeometryName = function getGeometryName () {\n    return this.geometryName_;\n  };\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n   * @api\n   */\n  Feature.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  Feature.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChange_ = function handleGeometryChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChanged_ = function handleGeometryChanged_ () {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    var geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(geometry,\n        EventType.CHANGE, this.handleGeometryChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {import(\"./geom/Geometry.js\").default|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  Feature.prototype.setGeometry = function setGeometry (geometry) {\n    this.set(this.geometryName_, geometry);\n  };\n\n  /**\n   * Set the style for the feature.  This can be a single style object, an array\n   * of styles, or a function that takes a resolution and returns an array of\n   * styles. If it is `null` the feature has no style (a `null` style).\n   * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setStyle = function setStyle (style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  };\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setId = function setId (id) {\n    this.id_ = id;\n    this.changed();\n  };\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  Feature.prototype.setGeometryName = function setGeometryName (name) {\n    unlisten(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.geometryName_ = name;\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.handleGeometryChanged_();\n  };\n\n  return Feature;\n}(BaseObject));\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (var i = 0; i < stride; ++i) {\n      var tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  var edge = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    var reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n\n//# sourceMappingURL=orient.js.map","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /*@__PURE__*/(function (MapEvent) {\n  function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n    MapEvent.call(this, type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {Event}\n     * @api\n     */\n    this.originalEvent = browserEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {import(\"./pixel.js\").Pixel}\n     * @api\n     */\n    this.pixel = map.getEventPixel(browserEvent);\n\n    /**\n     * The coordinate in view projection corresponding to the original browser event.\n     * @type {import(\"./coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n  }\n\n  if ( MapEvent ) MapBrowserEvent.__proto__ = MapEvent;\n  MapBrowserEvent.prototype = Object.create( MapEvent && MapEvent.prototype );\n  MapBrowserEvent.prototype.constructor = MapBrowserEvent;\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.preventDefault = function preventDefault () {\n    MapEvent.prototype.preventDefault.call(this);\n    this.originalEvent.preventDefault();\n  };\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.stopPropagation = function stopPropagation () {\n    MapEvent.prototype.stopPropagation.call(this);\n    this.originalEvent.stopPropagation();\n  };\n\n  return MapBrowserEvent;\n}(MapEvent));\n\n\nexport default MapBrowserEvent;\n\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /*@__PURE__*/(function (EventTarget) {\n  function LRUCache(opt_highWaterMark) {\n\n    EventTarget.call(this);\n\n    /**\n     * @type {number}\n     */\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n\n  }\n\n  if ( EventTarget ) LRUCache.__proto__ = EventTarget;\n  LRUCache.prototype = Object.create( EventTarget && EventTarget.prototype );\n  LRUCache.prototype.constructor = LRUCache;\n\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  LRUCache.prototype.canExpireCache = function canExpireCache () {\n    return this.getCount() > this.highWaterMark;\n  };\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  LRUCache.prototype.clear = function clear () {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n    this.dispatchEvent(EventType.CLEAR);\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  LRUCache.prototype.containsKey = function containsKey (key) {\n    return this.entries_.hasOwnProperty(key);\n  };\n\n\n  /**\n   * @param {function(this: S, T, string, LRUCache): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   * @param {S=} opt_this The object to use as `this` in `f`.\n   * @template S\n   */\n  LRUCache.prototype.forEach = function forEach (f, opt_this) {\n    var entry = this.oldest_;\n    while (entry) {\n      f.call(opt_this, entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  LRUCache.prototype.get = function get (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  };\n\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  LRUCache.prototype.remove = function remove (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @return {number} Count.\n   */\n  LRUCache.prototype.getCount = function getCount () {\n    return this.count_;\n  };\n\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  LRUCache.prototype.getKeys = function getKeys () {\n    var keys = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  };\n\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  LRUCache.prototype.getValues = function getValues () {\n    var values = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  };\n\n\n  /**\n   * @return {T} Last value.\n   */\n  LRUCache.prototype.peekLast = function peekLast () {\n    return this.oldest_.value_;\n  };\n\n\n  /**\n   * @return {string} Last key.\n   */\n  LRUCache.prototype.peekLastKey = function peekLastKey () {\n    return this.oldest_.key_;\n  };\n\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  LRUCache.prototype.peekFirstKey = function peekFirstKey () {\n    return this.newest_.key_;\n  };\n\n\n  /**\n   * @return {T} value Value.\n   */\n  LRUCache.prototype.pop = function pop () {\n    var entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.replace = function replace (key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.set = function set (key, value) {\n    assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n    var entry = /** @type {Entry} */ ({\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    });\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  };\n\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  LRUCache.prototype.setSize = function setSize (size) {\n    this.highWaterMark = size;\n  };\n\n\n  /**\n   * Prune the cache.\n   */\n  LRUCache.prototype.prune = function prune () {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  };\n\n  return LRUCache;\n}(EventTarget));\n\nexport default LRUCache;\n\n//# sourceMappingURL=LRUCache.js.map","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/layer/Base\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /*@__PURE__*/(function (BaseObject) {\n  function BaseLayer(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = assign({}, options);\n    properties[LayerProperty.OPACITY] =\n       options.opacity !== undefined ? options.opacity : 1;\n    properties[LayerProperty.VISIBLE] =\n       options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n       options.minResolution !== undefined ? options.minResolution : 0;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n\n    /**\n     * The layer type.\n     * @type {import(\"../LayerType.js\").default}\n     * @protected;\n     */\n    this.type;\n\n  }\n\n  if ( BaseObject ) BaseLayer.__proto__ = BaseObject;\n  BaseLayer.prototype = Object.create( BaseObject && BaseObject.prototype );\n  BaseLayer.prototype.constructor = BaseLayer;\n\n  /**\n   * Get the layer type (used when creating a layer renderer).\n   * @return {import(\"../LayerType.js\").default} The layer type.\n   */\n  BaseLayer.prototype.getType = function getType () {\n    return this.type;\n  };\n\n  /**\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  BaseLayer.prototype.getLayerState = function getLayerState () {\n    /** @type {import(\"./Layer.js\").State} */\n    var state = this.state_ || /** @type {?} */ ({\n      layer: this,\n      managed: true\n    });\n    state.opacity = clamp(this.getOpacity(), 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = this.getZIndex() || 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    this.state_ = state;\n\n    return state;\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  BaseLayer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  BaseLayer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    return abstract();\n  };\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getExtent = function getExtent () {\n    return (\n      /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n    );\n  };\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMaxResolution = function getMaxResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  };\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMinResolution = function getMinResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  };\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getOpacity = function getOpacity () {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  };\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  BaseLayer.prototype.getSourceState = function getSourceState () {\n    return abstract();\n  };\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getVisible = function getVisible () {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  };\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getZIndex = function getZIndex () {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  };\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setExtent = function setExtent (extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  };\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMaxResolution = function setMaxResolution (maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  };\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMinResolution = function setMinResolution (minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  };\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setOpacity = function setOpacity (opacity) {\n    this.set(LayerProperty.OPACITY, opacity);\n  };\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setVisible = function setVisible (visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  };\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setZIndex = function setZIndex (zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  };\n\n  return BaseLayer;\n}(BaseObject));\n\n\nexport default BaseLayer;\n\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent)|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default)|function(this:import(\"./source/Vector\").default)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(extent, resolution, projection) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          var type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          var source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(features, dataProjection) {\n      var sourceOrTile = /** @type {?} */ (this);\n      if (typeof sourceOrTile.addFeatures === 'function') {\n        /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n      }\n    }, /* FIXME handle error */ VOID);\n}\n\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/source/Vector\n */\n\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nexport var VectorSourceEvent = /*@__PURE__*/(function (Event) {\n  function VectorSourceEvent(type, opt_feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being added or removed.\n     * @type {import(\"../Feature.js\").default|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n  }\n\n  if ( Event ) VectorSourceEvent.__proto__ = Event;\n  VectorSourceEvent.prototype = Object.create( Event && Event.prototype );\n  VectorSourceEvent.prototype.constructor = VectorSourceEvent;\n\n  return VectorSourceEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires ol/source/Vector.VectorSourceEvent\n * @api\n */\nvar VectorSource = /*@__PURE__*/(function (Source) {\n  function VectorSource(opt_options) {\n\n    var options = opt_options || {};\n\n    Source.call(this, {\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, /** @type {import(\"../format/Feature.js\").default} */ (this.format_));\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n    var useSpatialIndex =\n        options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features without id (keyed by getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.undefIdIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default>}\n     */\n    this.featuresCollection_ = null;\n\n    var collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n\n  }\n\n  if ( Source ) VectorSource.__proto__ = Source;\n  VectorSource.prototype = Object.create( Source && Source.prototype );\n  VectorSource.prototype.constructor = VectorSource;\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * @param {import(\"../Feature.js\").default} feature Feature to add.\n   * @api\n   */\n  VectorSource.prototype.addFeature = function addFeature (feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.addFeatureInternal = function addFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @private\n   */\n  VectorSource.prototype.setupChangeEvents_ = function setupChangeEvents_ (featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE,\n        this.handleFeatureChange_, this),\n      listen(feature, ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_, this)\n    ];\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  VectorSource.prototype.addToIndex_ = function addToIndex_ (featureKey, feature) {\n    var valid = true;\n    var id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    } else {\n      assert(!(featureKey in this.undefIdIndex_),\n        30); // The passed `feature` was already added to the source\n      this.undefIdIndex_[featureKey] = feature;\n    }\n    return valid;\n  };\n\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default>} features Features to add.\n   * @api\n   */\n  VectorSource.prototype.addFeatures = function addFeatures (features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  };\n\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @protected\n   */\n  VectorSource.prototype.addFeaturesInternal = function addFeaturesInternal (features) {\n    var extents = [];\n    var newFeatures = [];\n    var geometryFeatures = [];\n\n    for (var i = 0, length = features.length; i < length; i++) {\n      var feature = features[i];\n      var featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (var i$1 = 0, length$1 = newFeatures.length; i$1 < length$1; i$1++) {\n      var feature$1 = newFeatures[i$1];\n      var featureKey$1 = getUid(feature$1);\n      this.setupChangeEvents_(featureKey$1, feature$1);\n\n      var geometry = feature$1.getGeometry();\n      if (geometry) {\n        var extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature$1);\n      } else {\n        this.nullGeometryFeatures_[featureKey$1] = feature$1;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (var i$2 = 0, length$2 = newFeatures.length; i$2 < length$2; i$2++) {\n      this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i$2]));\n    }\n  };\n\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default>} collection Collection.\n   * @private\n   */\n  VectorSource.prototype.bindFeaturesCollection_ = function bindFeaturesCollection_ (collection) {\n    var modifyingCollection = false;\n    listen(this, VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(this, VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(collection, CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    listen(collection, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    this.featuresCollection_ = collection;\n  };\n\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  VectorSource.prototype.clear = function clear (opt_fast) {\n    if (opt_fast) {\n      for (var featureId in this.featureChangeKeys_) {\n        var keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.undefIdIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n        for (var id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.loadedExtentsRtree_.clear();\n    this.nullGeometryFeatures_ = {};\n\n    var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  };\n\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeature = function forEachFeature (callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  VectorSource.prototype.forEachFeatureAtCoordinateDirect = function forEachFeatureAtCoordinateDirect (coordinate, callback) {\n    var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function(feature) {\n      var geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  };\n\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureInExtent = function forEachFeatureInExtent (extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureIntersectingExtent = function forEachFeatureIntersectingExtent (extent, callback) {\n    return this.forEachFeatureInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function(feature) {\n        var geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          var result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      });\n  };\n\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default>} The collection of features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesCollection = function getFeaturesCollection () {\n    return this.featuresCollection_;\n  };\n\n\n  /**\n   * Get all features on the source in random order.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeatures = function getFeatures () {\n    var features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray();\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return (\n      /** @type {Array<import(\"../Feature.js\").default>} */ (features)\n    );\n  };\n\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesAtCoordinate = function getFeaturesAtCoordinate (coordinate) {\n    var features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n      features.push(feature);\n    });\n    return features;\n  };\n\n\n  /**\n   * Get all features in the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesInExtent = function getFeaturesInExtent (extent) {\n    return this.featuresRtree_.getInExtent(extent);\n  };\n\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default):boolean=} opt_filter Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default} Closest feature.\n   * @api\n   */\n  VectorSource.prototype.getClosestFeatureToCoordinate = function getClosestFeatureToCoordinate (coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var closestFeature = null;\n    var closestPoint = [NaN, NaN];\n    var minSquaredDistance = Infinity;\n    var extent = [-Infinity, -Infinity, Infinity, Infinity];\n    var filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       */\n      function(feature) {\n        if (filter(feature)) {\n          var geometry = feature.getGeometry();\n          var previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            var minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      });\n    return closestFeature;\n  };\n\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  VectorSource.prototype.getExtent = function getExtent (opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  };\n\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default} The feature (or `null` if not found).\n   * @api\n   */\n  VectorSource.prototype.getFeatureById = function getFeatureById (id) {\n    var feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  };\n\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  VectorSource.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  VectorSource.prototype.getOverlaps = function getOverlaps () {\n    return this.overlaps_;\n  };\n\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  VectorSource.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  VectorSource.prototype.handleFeatureChange_ = function handleFeatureChange_ (event) {\n    var feature = /** @type {import(\"../Feature.js\").default} */ (event.target);\n    var featureKey = getUid(feature);\n    var geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      var extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    var id = feature.getId();\n    if (id !== undefined) {\n      var sid = id.toString();\n      if (featureKey in this.undefIdIndex_) {\n        delete this.undefIdIndex_[featureKey];\n        this.idIndex_[sid] = feature;\n      } else {\n        if (this.idIndex_[sid] !== feature) {\n          this.removeFromIdIndex_(feature);\n          this.idIndex_[sid] = feature;\n        }\n      }\n    } else {\n      if (!(featureKey in this.undefIdIndex_)) {\n        this.removeFromIdIndex_(feature);\n        this.undefIdIndex_[featureKey] = feature;\n      }\n    }\n    this.changed();\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.CHANGEFEATURE, feature));\n  };\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  VectorSource.prototype.hasFeature = function hasFeature (feature) {\n    var id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.undefIdIndex_;\n    }\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  VectorSource.prototype.isEmpty = function isEmpty$1 () {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  };\n\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  VectorSource.prototype.loadFeatures = function loadFeatures (extent, resolution, projection) {\n    var this$1 = this;\n\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var extentsToLoad = this.strategy_(extent, resolution);\n    this.loading = false;\n    var loop = function ( i, ii ) {\n      var extentToLoad = extentsToLoad[i];\n      var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function(object) {\n          return containsExtent(object.extent, extentToLoad);\n        });\n      if (!alreadyLoaded) {\n        this$1.loader_.call(this$1, extentToLoad, resolution, projection);\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n        this$1.loading = this$1.loader_ !== VOID;\n      }\n    };\n\n    for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) loop( i, ii );\n  };\n\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  VectorSource.prototype.removeLoadedExtent = function removeLoadedExtent (extent) {\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var obj;\n    loadedExtentsRtree.forEachInExtent(extent, function(object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  };\n\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default} feature Feature to remove.\n   * @api\n   */\n  VectorSource.prototype.removeFeature = function removeFeature (feature) {\n    var featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.removeFeatureInternal = function removeFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    var id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    } else {\n      delete this.undefIdIndex_[featureKey];\n    }\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.REMOVEFEATURE, feature));\n  };\n\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  VectorSource.prototype.removeFromIdIndex_ = function removeFromIdIndex_ (feature) {\n    var removed = false;\n    for (var id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  };\n\n\n  /**\n   * Set the new loader of the source. The next loadFeatures call will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  VectorSource.prototype.setLoader = function setLoader (loader) {\n    this.loader_ = loader;\n  };\n\n  return VectorSource;\n}(Source));\n\n\nexport default VectorSource;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n  for (var i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function Polygon(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) Polygon.__proto__ = SimpleGeometry;\n  Polygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  Polygon.prototype.appendLinearRing = function appendLinearRing (linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @override\n   * @api\n   */\n  Polygon.prototype.clone = function clone () {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  Polygon.prototype.getArea = function getArea () {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  Polygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  Polygon.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  Polygon.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      var flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  };\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  Polygon.prototype.getInteriorPoint = function getInteriorPoint () {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  };\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRingCount = function getLinearRingCount () {\n    return this.ends_.length;\n  };\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  Polygon.prototype.getLinearRing = function getLinearRing (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRings = function getLinearRings () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var linearRings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  Polygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingIsOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.getType = function getType () {\n    return GeometryType.POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  Polygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return Polygon;\n}(SimpleGeometry));\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  var n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  var flatCoordinates = [];\n  for (var i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  var sides = opt_sides ? opt_sides : 32;\n  var stride = circle.getStride();\n  var layout = circle.getLayout();\n  var center = circle.getCenter();\n  var arrayLength = stride * (sides + 1);\n  var flatCoordinates = new Array(arrayLength);\n  for (var i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (var j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  var ends = [flatCoordinates.length];\n  var polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  var flatCoordinates = polygon.getFlatCoordinates();\n  var stride = polygon.getStride();\n  var sides = flatCoordinates.length / stride - 1;\n  var startAngle = opt_angle ? opt_angle : 0;\n  for (var i = 0; i <= sides; ++i) {\n    var offset = i * stride;\n    var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  var el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    var rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {Color} Color.\n       */\n      function(s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            var i = 0;\n            for (var key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  var r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    var n = s.length - 1; // number of hex digits\n    var d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    var hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  var r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  var g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  var b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  var a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n//# sourceMappingURL=color.js.map","/**\n * @module ol/pointer/MouseSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      var e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n}\n\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n}\n\n\nvar MouseSource = /*@__PURE__*/(function (EventSource) {\n  function MouseSource(dispatcher) {\n    var mapping = {\n      'mousedown': mousedown,\n      'mousemove': mousemove,\n      'mouseup': mouseup,\n      'mouseover': mouseover,\n      'mouseout': mouseout\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {Array<import(\"../pixel.js\").Pixel>}\n     */\n    this.lastTouches = [];\n  }\n\n  if ( EventSource ) MouseSource.__proto__ = EventSource;\n  MouseSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MouseSource.prototype.constructor = MouseSource;\n\n  /**\n   * Detect if a mouse event was simulated from a touch by\n   * checking if previously there was a touch event at the\n   * same position.\n   *\n   * FIXME - Known problem with the native Android browser on\n   * Samsung GT-I9100 (Android 4.1.2):\n   * In case the page is scrolled, this function does not work\n   * correctly when a canvas is used (WebGL or canvas renderer).\n   * Mouse listeners on canvas elements (for this browser), create\n   * two mouse events: One 'good' and one 'bad' one (on other browsers or\n   * when a div is used, there is only one event). For the 'bad' one,\n   * clientX/clientY and also pageX/pageY are wrong when the page\n   * is scrolled. Because of that, this function can not detect if\n   * the events were simulated from a touch event. As result, a\n   * pointer event at a wrong position is dispatched, which confuses\n   * the map interactions.\n   * It is unclear, how one can get the correct position for the event\n   * or detect that the positions are invalid.\n   *\n   * @private\n   * @param {MouseEvent} inEvent The in event.\n   * @return {boolean} True, if the event was generated by a touch.\n   */\n  MouseSource.prototype.isEventSimulatedFromTouch_ = function isEventSimulatedFromTouch_ (inEvent) {\n    var lts = this.lastTouches;\n    var x = inEvent.clientX;\n    var y = inEvent.clientY;\n    for (var i = 0, l = lts.length, t = (void 0); i < l && (t = lts[i]); i++) {\n      // simulated mouse events will be swallowed near a primary touchend\n      var dx = Math.abs(x - t[0]);\n      var dy = Math.abs(y - t[1]);\n      if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Dispatches a `pointercancel` event.\n   *\n   * @param {Event} inEvent The in event.\n   */\n  MouseSource.prototype.cancel = function cancel (inEvent) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanupMouse();\n  };\n\n  /**\n   * Remove the mouse from the list of active pointers.\n   */\n  MouseSource.prototype.cleanupMouse = function cleanupMouse () {\n    delete this.pointerMap[POINTER_ID.toString()];\n  };\n\n  return MouseSource;\n}(EventSource));\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n  var e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  var pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\nexport default MouseSource;\n\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n\n//# sourceMappingURL=LayerType.js.map","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","/**\n * @module ol/has\n */\n\nvar ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport var CANVAS_LINE_DASH = function() {\n  var has = false;\n  try {\n    has = !!document.createElement('canvas').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n\n//# sourceMappingURL=has.js.map","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","/**\n * @module ol/style/RegularShape\n */\n\nimport {asString} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {CANVAS_LINE_DASH} from '../has.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /*@__PURE__*/(function (ImageStyle) {\n  function RegularShape(options) {\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: 1\n    });\n\n    /**\n     * @private\n     * @type {Array<string|number>}\n     */\n    this.checksums_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n      options.radius : options.radius1);\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./AtlasManager.js\").default|undefined}\n     */\n    this.atlasManager_ = options.atlasManager;\n\n    this.render_(this.atlasManager_);\n\n  }\n\n  if ( ImageStyle ) RegularShape.__proto__ = ImageStyle;\n  RegularShape.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  RegularShape.prototype.constructor = RegularShape;\n\n  /**\n   * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  RegularShape.prototype.clone = function clone () {\n    var style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getAnchor = function getAnchor () {\n    return this.anchor_;\n  };\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  RegularShape.prototype.getAngle = function getAngle () {\n    return this.angle_;\n  };\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  RegularShape.prototype.getFill = function getFill () {\n    return this.fill_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.hitDetectionCanvas_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageSize = function getImageSize () {\n    return this.imageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.hitDetectionImageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageState = function getImageState () {\n    return ImageState.LOADED;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getOrigin = function getOrigin () {\n    return this.origin_;\n  };\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  RegularShape.prototype.getPoints = function getPoints () {\n    return this.points_;\n  };\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  RegularShape.prototype.getRadius = function getRadius () {\n    return this.radius_;\n  };\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  RegularShape.prototype.getRadius2 = function getRadius2 () {\n    return this.radius2_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  RegularShape.prototype.getStroke = function getStroke () {\n    return this.stroke_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.load = function load () {};\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {};\n\n  /**\n   * @protected\n   * @param {import(\"./AtlasManager.js\").default|undefined} atlasManager An atlas manager.\n   */\n  RegularShape.prototype.render_ = function render_ (atlasManager) {\n    var imageSize;\n    var lineCap = '';\n    var lineJoin = '';\n    var miterLimit = 0;\n    var lineDash = null;\n    var lineDashOffset = 0;\n    var strokeStyle;\n    var strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      if (!CANVAS_LINE_DASH) {\n        lineDash = null;\n        lineDashOffset = 0;\n      }\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    var size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    /** @type {RenderOptions} */\n    var renderOptions = {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit\n    };\n\n    if (atlasManager === undefined) {\n      // no atlas manager is used, create a new canvas\n      var context = createCanvasContext2D(size, size);\n      this.canvas_ = context.canvas;\n\n      // canvas.width and height are rounded to the closest integer\n      size = this.canvas_.width;\n      imageSize = size;\n\n      this.draw_(renderOptions, context, 0, 0);\n\n      this.createHitDetectionCanvas_(renderOptions);\n    } else {\n      // an atlas manager is used, add the symbol to an atlas\n      size = Math.round(size);\n\n      var hasCustomHitDetectionImage = !this.fill_;\n      var renderHitDetectionCallback;\n      if (hasCustomHitDetectionImage) {\n        // render the hit-detection image into a separate atlas image\n        renderHitDetectionCallback =\n            this.drawHitDetectionCanvas_.bind(this, renderOptions);\n      }\n\n      var id = this.getChecksum();\n      var info = atlasManager.add(\n        id, size, size, this.draw_.bind(this, renderOptions),\n        renderHitDetectionCallback);\n\n      this.canvas_ = info.image;\n      this.origin_ = [info.offsetX, info.offsetY];\n      imageSize = info.image.width;\n\n      if (hasCustomHitDetectionImage) {\n        this.hitDetectionCanvas_ = info.hitImage;\n        this.hitDetectionImageSize_ =\n            [info.hitImage.width, info.hitImage.height];\n      } else {\n        this.hitDetectionCanvas_ = this.canvas_;\n        this.hitDetectionImageSize_ = [imageSize, imageSize];\n      }\n    }\n\n    this.anchor_ = [size / 2, size / 2];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.draw_ = function draw_ (renderOptions, context, x, y) {\n    var i, angle0, radiusC;\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n\n    if (this.fill_) {\n      var color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\n      context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  RegularShape.prototype.createHitDetectionCanvas_ = function createHitDetectionCanvas_ (renderOptions) {\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    if (this.fill_) {\n      this.hitDetectionCanvas_ = this.canvas_;\n      return;\n    }\n\n    // if no fill style is set, create an extra hit-detection image with a\n    // default fill style\n    var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n    this.hitDetectionCanvas_ = context.canvas;\n\n    this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.drawHitDetectionCanvas_ = function drawHitDetectionCanvas_ (renderOptions, context, x, y) {\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      var i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n    context.fillStyle = asString(defaultFillStyle);\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @return {string} The checksum.\n   */\n  RegularShape.prototype.getChecksum = function getChecksum () {\n    var strokeChecksum = this.stroke_ ?\n      this.stroke_.getChecksum() : '-';\n    var fillChecksum = this.fill_ ?\n      this.fill_.getChecksum() : '-';\n\n    var recalculate = !this.checksums_ ||\n        (strokeChecksum != this.checksums_[1] ||\n        fillChecksum != this.checksums_[2] ||\n        this.radius_ != this.checksums_[3] ||\n        this.radius2_ != this.checksums_[4] ||\n        this.angle_ != this.checksums_[5] ||\n        this.points_ != this.checksums_[6]);\n\n    if (recalculate) {\n      var checksum = 'r' + strokeChecksum + fillChecksum +\n          (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n          (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n          (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n          (this.points_ !== undefined ? this.points_.toString() : '-');\n      this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n        this.radius_, this.radius2_, this.angle_, this.points_];\n    }\n\n    return /** @type {string} */ (this.checksums_[0]);\n  };\n\n  return RegularShape;\n}(ImageStyle));\n\n\nexport default RegularShape;\n\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this circle.\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\n * the circle is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /*@__PURE__*/(function (RegularShape) {\n  function CircleStyle(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    RegularShape.call(this, {\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      atlasManager: options.atlasManager\n    });\n\n  }\n\n  if ( RegularShape ) CircleStyle.__proto__ = RegularShape;\n  CircleStyle.prototype = Object.create( RegularShape && RegularShape.prototype );\n  CircleStyle.prototype.constructor = CircleStyle;\n\n  /**\n  * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n  * @return {CircleStyle} The cloned style.\n  * @override\n  * @api\n  */\n  CircleStyle.prototype.clone = function clone () {\n    var style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n  * Set the circle radius.\n  *\n  * @param {number} radius Circle radius.\n  * @api\n  */\n  CircleStyle.prototype.setRadius = function setRadius (radius) {\n    this.radius_ = radius;\n    this.render_(this.atlasManager_);\n  };\n\n  return CircleStyle;\n}(RegularShape));\n\n\nexport default CircleStyle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State)}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = function Style(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!GeometryFunction}\n   */\n  this.geometryFunction_ = defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {import(\"./Fill.js\").default}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {RenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {import(\"./Stroke.js\").default}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {import(\"./Text.js\").default}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n/**\n * Clones the style.\n * @return {Style} The cloned style.\n * @api\n */\nStyle.prototype.clone = function clone () {\n  var geometry = this.getGeometry();\n  if (geometry && typeof geometry === 'object') {\n    geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n  }\n  return new Style({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {RenderFunction|null} Custom renderer function.\n * @api\n */\nStyle.prototype.getRenderer = function getRenderer () {\n  return this.renderer_;\n};\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {RenderFunction|null} renderer Custom renderer function.\n * @api\n */\nStyle.prototype.setRenderer = function setRenderer (renderer) {\n  this.renderer_ = renderer;\n};\n\n/**\n * Get the geometry to be rendered.\n * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\nStyle.prototype.getGeometry = function getGeometry () {\n  return this.geometry_;\n};\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!GeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\nStyle.prototype.getGeometryFunction = function getGeometryFunction () {\n  return this.geometryFunction_;\n};\n\n/**\n * Get the fill style.\n * @return {import(\"./Fill.js\").default} Fill style.\n * @api\n */\nStyle.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n * Set the fill style.\n * @param {import(\"./Fill.js\").default} fill Fill style.\n * @api\n */\nStyle.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n * Get the image style.\n * @return {import(\"./Image.js\").default} Image style.\n * @api\n */\nStyle.prototype.getImage = function getImage () {\n  return this.image_;\n};\n\n/**\n * Set the image style.\n * @param {import(\"./Image.js\").default} image Image style.\n * @api\n */\nStyle.prototype.setImage = function setImage (image) {\n  this.image_ = image;\n};\n\n/**\n * Get the stroke style.\n * @return {import(\"./Stroke.js\").default} Stroke style.\n * @api\n */\nStyle.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n * Set the stroke style.\n * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n * @api\n */\nStyle.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n * Get the text style.\n * @return {import(\"./Text.js\").default} Text style.\n * @api\n */\nStyle.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n * Set the text style.\n * @param {import(\"./Text.js\").default} text Text style.\n * @api\n */\nStyle.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\nStyle.prototype.getZIndex = function getZIndex () {\n  return this.zIndex_;\n};\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n *   Feature property or geometry or function returning a geometry to render\n *   for this style.\n * @api\n */\nStyle.prototype.setGeometry = function setGeometry (geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry))\n      );\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry)\n      );\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\nStyle.prototype.setZIndex = function setZIndex (zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  var styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `Style` or an array of `Style`\n      var style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    var fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    var stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  var styles = {};\n  var white = [255, 255, 255, 1];\n  var blue = [0, 153, 255, 1];\n  var width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n\n//# sourceMappingURL=State.js.map","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function(extent, resolution) {\n      var z = tileGrid.getZForResolution(resolution);\n      var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      var extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      var tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /*@__PURE__*/(function (Event) {\n  function MapEvent(type, map, opt_frameState) {\n\n    Event.call(this, type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n  }\n\n  if ( Event ) MapEvent.__proto__ = Event;\n  MapEvent.prototype = Object.create( Event && Event.prototype );\n  MapEvent.prototype.constructor = MapEvent;\n\n  return MapEvent;\n}(Event));\n\nexport default MapEvent;\n\n//# sourceMappingURL=MapEvent.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lat2 = toRadians(c2[1]);\n  var deltaLatBy2 = (lat2 - lat1) / 2;\n  var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  var length = 0;\n  for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var length = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  var area = 0;\n  var len = coordinates.length;\n  var x1 = coordinates[len - 1][0];\n  var y1 = coordinates[len - 1][1];\n  for (var i = 0; i < len; i++) {\n    var x2 = coordinates[i][0];\n    var y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var area = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lon1 = toRadians(c1[0]);\n  var dByR = distance / radius;\n  var lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  var lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /*@__PURE__*/(function (SimpleGeometry) {\n  function LineString(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LineString.__proto__ = SimpleGeometry;\n  LineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LineString.prototype.constructor = LineString;\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  LineString.prototype.appendCoordinate = function appendCoordinate (coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @override\n   * @api\n   */\n  LineString.prototype.clone = function clone () {\n    return new LineString(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  LineString.prototype.forEachSegment = function forEachSegment$1 (callback) {\n    return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  LineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate) {\n    if (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(this.flatCoordinates, 0,\n      this.flatCoordinates.length, this.stride, m, extrapolate);\n  };\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  LineString.prototype.getCoordinateAt = function getCoordinateAt (fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      fraction, opt_dest);\n  };\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  LineString.prototype.getLength = function getLength () {\n    return lineStringLength(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  LineString.prototype.getFlatMidpoint = function getFlatMidpoint () {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.getType = function getType () {\n    return GeometryType.LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineString(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n  };\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LineString;\n}(SimpleGeometry));\n\n\nexport default LineString;\n\n//# sourceMappingURL=LineString.js.map","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  var cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      var y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  var n = mat.length;\n\n  for (var i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    var maxRow = i;\n    var maxEl = Math.abs(mat[i][i]);\n    for (var r = i + 1; r < n; r++) {\n      var absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    var tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (var j = i + 1; j < n; j++) {\n      var coef = -mat[j][i] / mat[i][i];\n      for (var k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  var x = new Array(n);\n  for (var l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (var m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  var r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n//# sourceMappingURL=math.js.map","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /*@__PURE__*/(function (Error) {\n  function AssertionError(code) {\n    var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n    '/doc/errors/#' + code + ' for details.';\n\n    Error.call(this, message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n\n  if ( Error ) AssertionError.__proto__ = Error;\n  AssertionError.prototype = Object.create( Error && Error.prototype );\n  AssertionError.prototype.constructor = AssertionError;\n\n  return AssertionError;\n}(Error));\n\nexport default AssertionError;\n\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/style/Fill\n */\nimport {getUid} from '../util.js';\nimport {asString} from '../color.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = function Fill(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {Fill} The cloned style.\n * @api\n */\nFill.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Fill({\n    color: Array.isArray(color) ? color.slice() : color || undefined\n  });\n};\n\n/**\n * Get the fill color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nFill.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nFill.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nFill.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    var color = this.color_;\n    if (color) {\n      if (Array.isArray(color) || typeof color == 'string') {\n        this.checksum_ = 'f' + asString(/** @type {import(\"../color.js\").Color|string} */ (color));\n      } else {\n        this.checksum_ = getUid(this.color_);\n      }\n    } else {\n      this.checksum_ = 'f-';\n    }\n  }\n\n  return this.checksum_;\n};\n\nexport default Fill;\n\n//# sourceMappingURL=Fill.js.map","module.exports = require(\"core-js/library/fn/object/define-property\");","/**\n * @module ol/style/Stroke\n */\nimport {getUid} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = function Stroke(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style.\n * @return {Stroke} The cloned style.\n * @api\n */\nStroke.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Stroke({\n    color: Array.isArray(color) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n/**\n * Get the stroke color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nStroke.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\nStroke.prototype.getLineCap = function getLineCap () {\n  return this.lineCap_;\n};\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array<number>} Line dash.\n * @api\n */\nStroke.prototype.getLineDash = function getLineDash () {\n  return this.lineDash_;\n};\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\nStroke.prototype.getLineDashOffset = function getLineDashOffset () {\n  return this.lineDashOffset_;\n};\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\nStroke.prototype.getLineJoin = function getLineJoin () {\n  return this.lineJoin_;\n};\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\nStroke.prototype.getMiterLimit = function getMiterLimit () {\n  return this.miterLimit_;\n};\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\nStroke.prototype.getWidth = function getWidth () {\n  return this.width_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nStroke.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\nStroke.prototype.setLineCap = function setLineCap (lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array<number>} lineDash Line dash.\n * @api\n */\nStroke.prototype.setLineDash = function setLineDash (lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\nStroke.prototype.setLineDashOffset = function setLineDashOffset (lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\nStroke.prototype.setLineJoin = function setLineJoin (lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\nStroke.prototype.setMiterLimit = function setMiterLimit (miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\nStroke.prototype.setWidth = function setWidth (width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nStroke.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += getUid(this.color_);\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\n\nexport default Stroke;\n\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var flatCenters = [];\n  var extent = createEmpty();\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n\n//# sourceMappingURL=center.js.map","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRingsArray} from './flat/orient.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiPolygon(coordinates, opt_layout, opt_endss) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      var layout = this.getLayout();\n      var polygons = /** @type {Array<Polygon>} */ (coordinates);\n      var flatCoordinates = [];\n      var endss = [];\n      for (var i = 0, ii = polygons.length; i < ii; ++i) {\n        var polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        var offset = flatCoordinates.length;\n        var ends = polygon.getEnds();\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiPolygon.__proto__ = SimpleGeometry;\n  MultiPolygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.appendPolygon = function appendPolygon (polygon) {\n    /** @type {Array<number>} */\n    var ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      var offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.clone = function clone () {\n    var len = this.endss_.length;\n    var newEndss = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    return new MultiPolygon(\n      this.flatCoordinates.slice(), this.layout, newEndss);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  MultiPolygon.prototype.getArea = function getArea () {\n    return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates, 0, this.endss_, this.stride);\n  };\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  MultiPolygon.prototype.getEndss = function getEndss () {\n    return this.endss_;\n  };\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  MultiPolygon.prototype.getFlatInteriorPoints = function getFlatInteriorPoints () {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      var flatCenters = linearRingssCenter(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  };\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  MultiPolygon.prototype.getInteriorPoints = function getInteriorPoints () {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  MultiPolygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRingsArray(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n    return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n  };\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygon = function getPolygon (index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    var offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      var prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    var ends = this.endss_[index].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n  };\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygons = function getPolygons () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var endss = this.endss_;\n    var polygons = [];\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      var ends = endss[i].slice();\n      var end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.getType = function getType () {\n    return GeometryType.MULTI_POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  };\n\n  return MultiPolygon;\n}(SimpleGeometry));\n\n\nexport default MultiPolygon;\n\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  var tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n\n//# sourceMappingURL=asserts.js.map","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  var x1 = flatCoordinates[offset1];\n  var y1 = flatCoordinates[offset1 + 1];\n  var dx = flatCoordinates[offset2] - x1;\n  var dy = flatCoordinates[offset2 + 1] - y1;\n  var offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (var i$1 = 0; i$1 < stride; ++i$1) {\n    closestPoint[i$1] = flatCoordinates[offset + i$1];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  var i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiPoint(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) MultiPoint.__proto__ = SimpleGeometry;\n  MultiPoint.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  MultiPoint.prototype.appendPoint = function appendPoint (point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.clone = function clone () {\n    var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n    return multiPoint;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPoint.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (var j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  MultiPoint.prototype.getPoint = function getPoint (index) {\n    var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride), this.layout);\n  };\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  MultiPoint.prototype.getPoints = function getPoints () {\n    var flatCoordinates = this.flatCoordinates;\n    var layout = this.layout;\n    var stride = this.stride;\n    /** @type {Array<Point>} */\n    var points = [];\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.getType = function getType () {\n    return GeometryType.MULTI_POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return MultiPoint;\n}(SimpleGeometry));\n\n\nexport default MultiPoint;\n\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/Geometry\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {transform2D} from './flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /*@__PURE__*/(function (BaseObject) {\n  function Geometry() {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {Object<string, Geometry>}\n     */\n    this.simplifiedGeometryCache = {};\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n  }\n\n  if ( BaseObject ) Geometry.__proto__ = BaseObject;\n  Geometry.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geometry.prototype.constructor = Geometry;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  Geometry.prototype.clone = function clone () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  Geometry.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  };\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  Geometry.prototype.containsXY = function containsXY (x, y) {\n    return false;\n  };\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  Geometry.prototype.getClosestPoint = function getClosestPoint (point, opt_closestPoint) {\n    var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  };\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  Geometry.prototype.intersectsCoordinate = function intersectsCoordinate (coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  Geometry.prototype.computeExtent = function computeExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  Geometry.prototype.getExtent = function getExtent (opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  };\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  Geometry.prototype.rotate = function rotate (angle, anchor) {\n    abstract();\n  };\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  Geometry.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    abstract();\n  };\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the the {@link\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  Geometry.prototype.simplify = function simplify (tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  };\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  Geometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    return abstract();\n  };\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  Geometry.prototype.getType = function getType () {\n    return abstract();\n  };\n\n  /**\n   * Apply a transform function to each coordinate of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n   */\n  Geometry.prototype.applyTransform = function applyTransform (transformFn) {\n    abstract();\n  };\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  Geometry.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {\n    abstract();\n  };\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  Geometry.prototype.transform = function transform (source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    var sourceProj = getProjection(source);\n    var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        var pixelExtent = sourceProj.getExtent();\n        var projectedExtent = sourceProj.getWorldExtent();\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  };\n\n  return Geometry;\n}(BaseObject));\n\n\nexport default Geometry;\n\n//# sourceMappingURL=Geometry.js.map","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from './flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /*@__PURE__*/(function (Geometry) {\n  function SimpleGeometry() {\n\n    Geometry.call(this);\n\n    /**\n     * @protected\n     * @type {GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  if ( Geometry ) SimpleGeometry.__proto__ = Geometry;\n  SimpleGeometry.prototype = Object.create( Geometry && Geometry.prototype );\n  SimpleGeometry.prototype.constructor = SimpleGeometry;\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  };\n\n  /**\n   * @abstract\n   * @return {Array} Coordinates.\n   */\n  SimpleGeometry.prototype.getCoordinates = function getCoordinates () {\n    return abstract();\n  };\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  SimpleGeometry.prototype.getFirstCoordinate = function getFirstCoordinate () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  SimpleGeometry.prototype.getFlatCoordinates = function getFlatCoordinates () {\n    return this.flatCoordinates;\n  };\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  SimpleGeometry.prototype.getLastCoordinate = function getLastCoordinate () {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  };\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {GeometryLayout} Layout.\n   * @api\n   */\n  SimpleGeometry.prototype.getLayout = function getLayout () {\n    return this.layout;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometry =\n          this.getSimplifiedGeometryInternal(squaredTolerance);\n      var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\n        return simplifiedGeometry;\n      } else {\n        // Simplification did not actually remove any coordinates.  We now know\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\n        // than or equal to the current squaredTolerance will also not have any\n        // effect.  This allows us to short circuit simplification (saving CPU\n        // cycles) and prevents the cache of simplified geometries from filling\n        // up with useless identical copies of this geometry (saving memory).\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    return this;\n  };\n\n  /**\n   * @return {number} Stride.\n   */\n  SimpleGeometry.prototype.getStride = function getStride () {\n    return this.stride;\n  };\n\n  /**\n   * @param {GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  SimpleGeometry.prototype.setFlatCoordinates = function setFlatCoordinates (layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  };\n\n  /**\n   * @abstract\n   * @param {!Array} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  SimpleGeometry.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    abstract();\n  };\n\n  /**\n   * @param {GeometryLayout|undefined} layout Layout.\n   * @param {Array} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  SimpleGeometry.prototype.setLayout = function setLayout (layout, coordinates, nesting) {\n    /** @type {number} */\n    var stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (var i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.applyTransform = function applyTransform (transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.rotate = function rotate$1 (angle, anchor) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.scale = function scale$1 (sx, opt_sy, opt_anchor) {\n    var sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.translate = function translate$1 (deltaX, deltaY) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  return SimpleGeometry;\n}(Geometry));\n\n\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  var layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  var stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  var mid, cmp;\n  var comparator = opt_comparator || numberSafeCompareFunction;\n  var low = 0;\n  var high = haystack.length;\n  var found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  var n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    var i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    var tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  var extension = Array.isArray(data) ? data : [data];\n  var length = extension.length;\n  for (var i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  var i = arr.indexOf(obj);\n  var found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  var length = arr.length >>> 0;\n  var value;\n\n  for (var i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  var len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (var i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  var length = arr.length;\n  var tmp = Array(arr.length);\n  var i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  var index;\n  var found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  var compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    var res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n\n//# sourceMappingURL=array.js.map","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  var r = circle.getRadius();\n  var center = circle.getCenter();\n  var x0 = center[0];\n  var y0 = center[1];\n  var x1 = coordinate[0];\n  var y1 = coordinate[1];\n\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  var d = Math.sqrt(dx * dx + dy * dy);\n\n  var x = x0 + r * dx / d;\n  var y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  var x0 = coordinate[0];\n  var y0 = coordinate[1];\n  var start = segment[0];\n  var end = segment[1];\n  var x1 = start[0];\n  var y1 = start[1];\n  var x2 = end[0];\n  var y2 = end[1];\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  var along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  var x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  var x = Math.abs(3600 * normalizedDegrees);\n  var dflPrecision = opt_fractionDigits || 0;\n  var precision = Math.pow(10, dflPrecision);\n\n  var deg = Math.floor(x / 3600);\n  var min = Math.floor((x - deg * 3600) / 60);\n  var sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  var equals = true;\n  for (var i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  var cosAngle = Math.cos(angle);\n  var sinAngle = Math.sin(angle);\n  var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  var dx = coord1[0] - coord2[0];\n  var dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  var a1 = transform1[0];\n  var b1 = transform1[1];\n  var c1 = transform1[2];\n  var d1 = transform1[3];\n  var e1 = transform1[4];\n  var f1 = transform1[5];\n  var a2 = transform2[0];\n  var b2 = transform2[1];\n  var c2 = transform2[2];\n  var d2 = transform2[3];\n  var e2 = transform2[4];\n  var f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  var sin = Math.sin(angle);\n  var cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  var det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  var a = transform[0];\n  var b = transform[1];\n  var c = transform[2];\n  var d = transform[3];\n  var e = transform[4];\n  var f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = function ImageStyle(options) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.scale_ = options.scale;\n\n};\n\n/**\n * Clones the style.\n * @return {ImageStyle} The cloned style.\n * @api\n */\nImageStyle.prototype.clone = function clone () {\n  return new ImageStyle({\n    opacity: this.getOpacity(),\n    scale: this.getScale(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView()\n  });\n};\n\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\nImageStyle.prototype.getOpacity = function getOpacity () {\n  return this.opacity_;\n};\n\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\nImageStyle.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\nImageStyle.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\nImageStyle.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n * This method is deprecated and always returns false.\n * @return {boolean} false.\n * @deprecated\n * @api\n */\nImageStyle.prototype.getSnapToPixel = function getSnapToPixel () {\n  return false;\n};\n\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array<number>} Anchor.\n */\nImageStyle.prototype.getAnchor = function getAnchor () {\n  return abstract();\n};\n\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getImage = function getImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../ImageState.js\").default} Image state.\n */\nImageStyle.prototype.getImageState = function getImageState () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Image size.\n */\nImageStyle.prototype.getImageSize = function getImageSize () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n */\nImageStyle.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n  return abstract();\n};\n\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array<number>} Origin.\n */\nImageStyle.prototype.getOrigin = function getOrigin () {\n  return abstract();\n};\n\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {import(\"../size.js\").Size} Size.\n */\nImageStyle.prototype.getSize = function getSize () {\n  return abstract();\n};\n\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\nImageStyle.prototype.setOpacity = function setOpacity (opacity) {\n  this.opacity_ = opacity;\n};\n\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n * @api\n */\nImageStyle.prototype.setRotateWithView = function setRotateWithView (rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\nImageStyle.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\nImageStyle.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n * This method is deprecated and does nothing.\n * @param {boolean} snapToPixel Snap to pixel?\n * @deprecated\n * @api\n */\nImageStyle.prototype.setSnapToPixel = function setSnapToPixel (snapToPixel) {};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\n * @template T\n */\nImageStyle.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n  return abstract();\n};\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageStyle.prototype.load = function load () {\n  abstract();\n};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\nImageStyle.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n  abstract();\n};\n\nexport default ImageStyle;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    var coordinate = coordinates[i];\n    for (var j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  var ends = opt_ends ? opt_ends : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n    var end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  var endss = opt_endss ? opt_endss : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    var ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/Circle\n */\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nvar Circle = /*@__PURE__*/(function (SimpleGeometry) {\n  function Circle(center, opt_radius, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      var radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) Circle.__proto__ = SimpleGeometry;\n  Circle.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Circle.prototype.constructor = Circle;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @override\n   * @api\n   */\n  Circle.prototype.clone = function clone () {\n    return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    var squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (var i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        var delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (var i$1 = 2; i$1 < this.stride; ++i$1) {\n          closestPoint[i$1] = flatCoordinates[i$1];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.containsXY = function containsXY (x, y) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  };\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  Circle.prototype.getCenter = function getCenter () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.computeExtent = function computeExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n      extent);\n  };\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  Circle.prototype.getRadius = function getRadius () {\n    return Math.sqrt(this.getRadiusSquared_());\n  };\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  Circle.prototype.getRadiusSquared_ = function getRadiusSquared_ () {\n    var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.getType = function getType () {\n    return GeometryType.CIRCLE;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      var center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate, this);\n    }\n    return false;\n\n  };\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  Circle.prototype.setCenter = function setCenter (center) {\n    var stride = this.stride;\n    var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    var flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (var i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  };\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  Circle.prototype.setCenterAndRadius = function setCenterAndRadius (center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    var flatCoordinates = this.flatCoordinates;\n    var offset = deflateCoordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (var i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.getCoordinates = function getCoordinates () {\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {};\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  Circle.prototype.setRadius = function setRadius (radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  };\n\n  return Circle;\n}(SimpleGeometry));\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/interaction/Draw\n */\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport {POINTER_TYPE} from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default=):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nvar Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n\n/**\n * @enum {string}\n */\nvar DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nvar DrawEvent = /*@__PURE__*/(function (Event) {\n  function DrawEvent(type, feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n\n  }\n\n  if ( Event ) DrawEvent.__proto__ = Event;\n  DrawEvent.prototype = Object.create( Event && Event.prototype );\n  DrawEvent.prototype.constructor = DrawEvent;\n\n  return DrawEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nvar Draw = /*@__PURE__*/(function (PointerInteraction) {\n  function Draw(options) {\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {?}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {GeometryType}\n     * @private\n     */\n    this.type_ = /** @type {GeometryType} */ (options.type);\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints ?\n      options.minPoints :\n      (this.mode_ === Mode.POLYGON ? 3 : 2);\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n    var geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      if (this.type_ === GeometryType.CIRCLE) {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var circle = opt_geometry ? /** @type {Circle} */ (opt_geometry) :\n            new Circle([NaN, NaN]);\n          var squaredLength = squaredCoordinateDistance(\n            coordinates[0], coordinates[1]);\n          circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n          return circle;\n        };\n      } else {\n        var Constructor;\n        var mode = this.mode_;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var geometry = opt_geometry;\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance ?\n      options.clickTolerance * options.clickTolerance : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition ?\n        options.freehandCondition : shiftKeyOnly;\n    }\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.updateState_, this);\n\n  }\n\n  if ( PointerInteraction ) Draw.__proto__ = PointerInteraction;\n  Draw.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Draw.prototype.constructor = Draw;\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.setMap = function setMap (map) {\n    PointerInteraction.prototype.setMap.call(this, map);\n    this.updateState_();\n  };\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  Draw.prototype.getOverlay = function getOverlay () {\n    return this.overlay_;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @override\n   * @api\n   */\n  Draw.prototype.handleEvent = function handleEvent (event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n    var move = event.type === MapBrowserEventType.POINTERMOVE;\n    var pass = true;\n    if (!this.freehand_ && this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n      var now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (this.freehand_ &&\n        event.type === MapBrowserEventType.POINTERDRAG &&\n        this.sketchFeature_ !== null) {\n      this.addToDrawing_(event);\n      pass = false;\n    } else if (this.freehand_ &&\n        event.type === MapBrowserEventType.POINTERDOWN) {\n      pass = false;\n    } else if (move) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        pass = this.handlePointerMove_(event);\n      } else if (/** @type {MapBrowserPointerEvent} */ (event).pointerEvent.pointerType == POINTER_TYPE ||\n          (event.type === MapBrowserEventType.POINTERDRAG && this.downTimeout_ === undefined)) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return PointerInteraction.prototype.handleEvent.call(this, event) && pass;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.handleDownEvent = function handleDownEvent (event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n      }\n      return true;\n    } else if (this.condition_(event)) {\n      this.lastDragTime_ = Date.now();\n      this.downTimeout_ = setTimeout(function() {\n        this.handlePointerMove_(new MapBrowserPointerEvent(\n          MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, false, event.frameState));\n      }.bind(this), this.dragVertexDelay_);\n      this.downPx_ = event.pixel;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.handleUpEvent = function handleUpEvent (event) {\n    var pass = true;\n\n    if (this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n\n    this.handlePointerMove_(event);\n\n    var circleMode = this.mode_ === Mode.CIRCLE;\n\n    if (this.shouldHandle_) {\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n        if (this.mode_ === Mode.POINT) {\n          this.finishDrawing();\n        }\n      } else if (this.freehand_ || circleMode) {\n        this.finishDrawing();\n      } else if (this.atFinish_(event)) {\n        if (this.finishCondition_(event)) {\n          this.finishDrawing();\n        }\n      } else {\n        this.addToDrawing_(event);\n      }\n      pass = false;\n    } else if (this.freehand_) {\n      this.finishCoordinate_ = null;\n      this.abortDrawing_();\n    }\n    if (!pass && this.stopClick_) {\n      event.stopPropagation();\n    }\n    return pass;\n  };\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @return {boolean} Pass the event to other interactions.\n   * @private\n   */\n  Draw.prototype.handlePointerMove_ = function handlePointerMove_ (event) {\n    if (this.downPx_ &&\n        ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))) {\n      var downPx = this.downPx_;\n      var clickPx = event.pixel;\n      var dx = downPx[0] - clickPx[0];\n      var dy = downPx[1] - clickPx[1];\n      var squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_ ?\n        squaredDistance > this.squaredClickTolerance_ :\n        squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return true;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event);\n    } else {\n      this.createOrUpdateSketchPoint_(event);\n    }\n    return true;\n  };\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  Draw.prototype.atFinish_ = function atFinish_ (event) {\n    var at = false;\n    if (this.sketchFeature_) {\n      var potentiallyDone = false;\n      var potentiallyFinishCoordinates = [this.finishCoordinate_];\n      if (this.mode_ === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (this.mode_ === Mode.POLYGON) {\n        var sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [sketchCoords[0][0], sketchCoords[0][sketchCoords[0].length - 2]];\n      }\n      if (potentiallyDone) {\n        var map = event.map;\n        for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          var finishCoordinate = potentiallyFinishCoordinates[i];\n          var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          var pixel = event.pixel;\n          var dx = pixel[0] - finishPixel[0];\n          var dy = pixel[1] - finishPixel[1];\n          var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.createOrUpdateSketchPoint_ = function createOrUpdateSketchPoint_ (event) {\n    var coordinates = event.coordinate.slice();\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  };\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.startDrawing_ = function startDrawing_ (event) {\n    var start = event.coordinate;\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(\n        new LineString(this.sketchLineCoords_));\n    }\n    var geometry = this.geometryFunction_(this.sketchCoords_);\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.modifyDrawing_ = function modifyDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(event)) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(/** @type {!LineCoordType} */ (this.sketchCoords_), geometry);\n    if (this.sketchPoint_) {\n      var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    /** @type {LineString} */\n    var sketchLineGeom;\n    if (geometry.getType() == GeometryType.POLYGON &&\n        this.mode_ !== Mode.POLYGON) {\n      if (!this.sketchLine_) {\n        this.sketchLine_ = new Feature();\n      }\n      var ring = /** @type {Polygon} */ (geometry).getLinearRing(0);\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      if (!sketchLineGeom) {\n        sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n        this.sketchLine_.setGeometry(sketchLineGeom);\n      } else {\n        sketchLineGeom.setFlatCoordinates(\n          ring.getLayout(), ring.getFlatCoordinates());\n        sketchLineGeom.changed();\n      }\n    } else if (this.sketchLineCoords_) {\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.addToDrawing_ = function addToDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var done;\n    var coordinates;\n    if (this.mode_ === Mode.LINE_STRING) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  };\n\n  /**\n   * Remove last point of the feature currently being drawn.\n   * @api\n   */\n  Draw.prototype.removeLastPoint = function removeLastPoint () {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var coordinates;\n    /** @type {LineString} */\n    var sketchLineGeom;\n    if (this.mode_ === Mode.LINE_STRING) {\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      coordinates.splice(-2, 1);\n      this.geometryFunction_(coordinates, geometry);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n      }\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      coordinates.splice(-2, 1);\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n\n    if (coordinates.length === 0) {\n      this.finishCoordinate_ = null;\n    }\n\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  Draw.prototype.finishDrawing = function finishDrawing () {\n    var sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    var coordinates = this.sketchCoords_;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (sketchFeature.getGeometry());\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(new MultiPoint([/** @type {PointCoordType} */(coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(new MultiLineString([/** @type {LineCoordType} */(coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(new MultiPolygon([/** @type {PolyCoordType} */(coordinates)]));\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  };\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature} The sketch feature (or null if none).\n   * @private\n   */\n  Draw.prototype.abortDrawing_ = function abortDrawing_ () {\n    this.finishCoordinate_ = null;\n    var sketchFeature = this.sketchFeature_;\n    if (sketchFeature) {\n      this.sketchFeature_ = null;\n      this.sketchPoint_ = null;\n      this.sketchLine_ = null;\n      /** @type {VectorSource} */ (this.overlay_.getSource()).clear(true);\n    }\n    return sketchFeature;\n  };\n\n  /**\n   * Extend an existing geometry by adding additional points. This only works\n   * on features with `LineString` geometries, where the interaction will\n   * extend lines by adding points to the end of the coordinates array.\n   * @param {!Feature} feature Feature to be extended.\n   * @api\n   */\n  Draw.prototype.extend = function extend (feature) {\n    var geometry = feature.getGeometry();\n    var lineString = /** @type {LineString} */ (geometry);\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  Draw.prototype.updateSketchFeatures_ = function updateSketchFeatures_ () {\n    var sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    var overlaySource = /** @type {VectorSource} */ (this.overlay_.getSource());\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  };\n\n  /**\n   * @private\n   */\n  Draw.prototype.updateState_ = function updateState_ () {\n    var map = this.getMap();\n    var active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing_();\n    }\n    this.overlay_.setMap(active ? map : null);\n  };\n\n  return Draw;\n}(PointerInteraction));\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function(coordinates, opt_geometry) {\n    var center = /** @type {LineCoordType} */ (coordinates)[0];\n    var end = /** @type {LineCoordType} */ (coordinates)[1];\n    var radius = Math.sqrt(\n      squaredCoordinateDistance(center, end));\n    var geometry = opt_geometry ? /** @type {Polygon} */ (opt_geometry) :\n      fromCircle(new Circle(center), opt_sides);\n    var angle = opt_angle;\n    if (!opt_angle) {\n      var x = end[0] - center[0];\n      var y = end[1] - center[1];\n      angle = Math.atan(y / x) - (x < 0 ? Math.PI : 0);\n    }\n    makeRegular(geometry, center, radius, angle);\n    return geometry;\n  };\n}\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return (\n    function(coordinates, opt_geometry) {\n      var extent = boundingExtent(/** @type {LineCoordType} */ (coordinates));\n      var boxCoordinates = [[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]];\n      var geometry = opt_geometry;\n      if (geometry) {\n        geometry.setCoordinates(boxCoordinates);\n      } else {\n        geometry = new Polygon(boxCoordinates);\n      }\n      return geometry;\n    }\n  );\n}\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {GeometryType} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  var mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Mode.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return (\n    /** @type {!Mode} */ (mode)\n  );\n}\n\n\nexport default Draw;\n\n//# sourceMappingURL=Draw.js.map","import _Object$defineProperty from \"../../core-js/object/define-property\";\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n\n    _Object$defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  var pointX = NaN;\n  var pointY = NaN;\n  var n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    var cumulativeLengths = [0];\n    for (var i = offset + stride; i < end; i += stride) {\n      var x2 = flatCoordinates[i];\n      var y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    var target = fraction * length;\n    var index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      var t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      var o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  var coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  var lo = offset / stride;\n  var hi = end / stride;\n  while (lo < hi) {\n    var mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  var m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  var m1 = flatCoordinates[(lo + 1) * stride - 1];\n  var t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (var i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  var coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/interaction/Snap\n */\nimport {getUid} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment} from '../coordinate.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel\n */\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n * @return {import(\"../Feature.js\").default} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (/** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature;\n  } else if (/** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element) {\n    return /** @type {import(\"../Feature.js\").default} */ (/** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element);\n  }\n\n}\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     var snap = new Snap({\n *       source: source\n *     });\n *\n * @api\n */\nvar Snap = /*@__PURE__*/(function (PointerInteraction) {\n  function Snap(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @type {import(\"../source/Vector.js\").default}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * Used for distance sorting in sortByDistance_\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.pixelCoordinate_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * @type {function(SegmentData, SegmentData): number}\n     * @private\n     */\n    this.sortByDistance_ = sortByDistance.bind(this);\n\n\n    /**\n    * Segment RTree for each layer\n    * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n    * @private\n    */\n    this.rBush_ = new RBush();\n\n\n    /**\n    * @const\n    * @private\n    * @type {Object<string, function(import(\"../Feature.js\").default, import(\"../geom/Geometry.js\").default)>}\n    */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_,\n      'LineString': this.writeLineStringGeometry_,\n      'LinearRing': this.writeLineStringGeometry_,\n      'Polygon': this.writePolygonGeometry_,\n      'MultiPoint': this.writeMultiPointGeometry_,\n      'MultiLineString': this.writeMultiLineStringGeometry_,\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\n      'GeometryCollection': this.writeGeometryCollectionGeometry_,\n      'Circle': this.writeCircleGeometry_\n    };\n  }\n\n  if ( PointerInteraction ) Snap.__proto__ = PointerInteraction;\n  Snap.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Snap.prototype.constructor = Snap;\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean=} opt_listen Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  Snap.prototype.addFeature = function addFeature (feature, opt_listen) {\n    var register = opt_listen !== undefined ? opt_listen : true;\n    var feature_uid = getUid(feature);\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (segmentWriter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n        segmentWriter.call(this, feature, geometry);\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_, this);\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  Snap.prototype.forEachFeatureAdd_ = function forEachFeatureAdd_ (feature) {\n    this.addFeature(feature);\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  Snap.prototype.forEachFeatureRemove_ = function forEachFeatureRemove_ (feature) {\n    this.removeFeature(feature);\n  };\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  Snap.prototype.getFeatures_ = function getFeatures_ () {\n    var features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Snap.prototype.handleEvent = function handleEvent (evt) {\n    var result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result.snapped) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n    }\n    return PointerInteraction.prototype.handleEvent.call(this, evt);\n  };\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureAdd_ = function handleFeatureAdd_ (evt) {\n    var feature = getFeatureFromEvent(evt);\n    this.addFeature(feature);\n  };\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureRemove_ = function handleFeatureRemove_ (evt) {\n    var feature = getFeatureFromEvent(evt);\n    this.removeFeature(feature);\n  };\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureChange_ = function handleFeatureChange_ (evt) {\n    var feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      var uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Snap.prototype.handleUpEvent = function handleUpEvent (evt) {\n    var featuresToUpdate = getValues(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  };\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  Snap.prototype.removeFeature = function removeFeature (feature, opt_unlisten) {\n    var unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n    var feature_uid = getUid(feature);\n    var extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      var rBush = this.rBush_;\n      var nodesToRemove = [];\n      rBush.forEachInExtent(extent, function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Snap.prototype.setMap = function setMap (map) {\n    var currentMap = this.getMap();\n    var keys = this.featuresListenerKeys_;\n    var features = /** @type {Array<import(\"../Feature.js\").default>} */ (this.getFeatures_());\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      features.forEach(this.forEachFeatureRemove_.bind(this));\n    }\n    PointerInteraction.prototype.setMap.call(this, map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(this.features_, CollectionEventType.ADD,\n            this.handleFeatureAdd_, this),\n          listen(this.features_, CollectionEventType.REMOVE,\n            this.handleFeatureRemove_, this)\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(this.source_, VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_, this),\n          listen(this.source_, VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_, this)\n        );\n      }\n      features.forEach(this.forEachFeatureAdd_.bind(this));\n    }\n  };\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @return {Result} Snap result\n   */\n  Snap.prototype.snapTo = function snapTo (pixel, pixelCoordinate, map) {\n\n    var lowerLeft = map.getCoordinateFromPixel(\n      [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n    var upperRight = map.getCoordinateFromPixel(\n      [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n    var box = boundingExtent([lowerLeft, upperRight]);\n\n    var segments = this.rBush_.getInExtent(box);\n\n    // If snapping on vertices only, don't consider circles\n    if (this.vertex_ && !this.edge_) {\n      segments = segments.filter(function(segment) {\n        return segment.feature.getGeometry().getType() !==\n            GeometryType.CIRCLE;\n      });\n    }\n\n    var snappedToVertex = false;\n    var snapped = false;\n    var vertex = null;\n    var vertexPixel = null;\n    var dist, pixel1, pixel2, squaredDist1, squaredDist2;\n    if (segments.length > 0) {\n      this.pixelCoordinate_ = pixelCoordinate;\n      segments.sort(this.sortByDistance_);\n      var closestSegment = segments[0].segment;\n      var isCircle = segments[0].feature.getGeometry().getType() ===\n          GeometryType.CIRCLE;\n      if (this.vertex_ && !this.edge_) {\n        pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n        squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        snappedToVertex = dist <= this.pixelTolerance_;\n        if (snappedToVertex) {\n          snapped = true;\n          vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          vertexPixel = map.getPixelFromCoordinate(vertex);\n        }\n      } else if (this.edge_) {\n        if (isCircle) {\n          vertex = closestOnCircle(pixelCoordinate,\n            /** @type {import(\"../geom/Circle.js\").default} */ (segments[0].feature.getGeometry()));\n        } else {\n          vertex = closestOnSegment(pixelCoordinate, closestSegment);\n        }\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n        if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n          snapped = true;\n          if (this.vertex_ && !isCircle) {\n            pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n            pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n            squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n            squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n            dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n            snappedToVertex = dist <= this.pixelTolerance_;\n            if (snappedToVertex) {\n              vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n              vertexPixel = map.getPixelFromCoordinate(vertex);\n            }\n          }\n        }\n      }\n      if (snapped) {\n        vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n      }\n    }\n    return (\n      /** @type {Result} */ ({\n        snapped: snapped,\n        vertex: vertex,\n        vertexPixel: vertexPixel\n      })\n    );\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  Snap.prototype.updateFeature_ = function updateFeature_ (feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeCircleGeometry_ = function writeCircleGeometry_ (feature, geometry) {\n    var polygon = fromCircle(geometry);\n    var coordinates = polygon.getCoordinates()[0];\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = /** @type {SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeGeometryCollectionGeometry_ = function writeGeometryCollectionGeometry_ (feature, geometry) {\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0; i < geometries.length; ++i) {\n      var segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n      if (segmentWriter) {\n        segmentWriter.call(this, feature, geometries[i]);\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeLineStringGeometry_ = function writeLineStringGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = /** @type {SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiLineStringGeometry_ = function writeMultiLineStringGeometry_ (feature, geometry) {\n    var lines = geometry.getCoordinates();\n    for (var j = 0, jj = lines.length; j < jj; ++j) {\n      var coordinates = lines[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiPointGeometry_ = function writeMultiPointGeometry_ (feature, geometry) {\n    var points = geometry.getCoordinates();\n    for (var i = 0, ii = points.length; i < ii; ++i) {\n      var coordinates = points[i];\n      var segmentData = /** @type {SegmentData} */ ({\n        feature: feature,\n        segment: [coordinates, coordinates]\n      });\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiPolygonGeometry_ = function writeMultiPolygonGeometry_ (feature, geometry) {\n    var polygons = geometry.getCoordinates();\n    for (var k = 0, kk = polygons.length; k < kk; ++k) {\n      var rings = polygons[k];\n      for (var j = 0, jj = rings.length; j < jj; ++j) {\n        var coordinates = rings[j];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          var segment = coordinates.slice(i, i + 2);\n          var segmentData = /** @type {SegmentData} */ ({\n            feature: feature,\n            segment: segment\n          });\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writePointGeometry_ = function writePointGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    var segmentData = /** @type {SegmentData} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writePolygonGeometry_ = function writePolygonGeometry_ (feature, geometry) {\n    var rings = geometry.getCoordinates();\n    for (var j = 0, jj = rings.length; j < jj; ++j) {\n      var coordinates = rings[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  return Snap;\n}(PointerInteraction));\n\n\n/**\n * Sort segments by distance, helper function\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in distance.\n * @this {Snap}\n */\nfunction sortByDistance(a, b) {\n  var deltaA = squaredDistanceToSegment(this.pixelCoordinate_, a.segment);\n  var deltaB = squaredDistanceToSegment(this.pixelCoordinate_, b.segment);\n  return deltaA - deltaB;\n}\n\nexport default Snap;\n\n//# sourceMappingURL=Snap.js.map","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  var twiceArea = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  var area = 0;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var area = 0;\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  var i = 0;\n  for (var j = 0, jj = ends.length; j < jj; ++j) {\n    var end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  var i = 0;\n  for (var j = 0, jj = endss.length; j < jj; ++j) {\n    var ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var x = flatCoordinates[j];\n    var y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  var transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  FRACTION: 'fraction',\n  PIXELS: 'pixels'\n};\n\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/IconImage\n */\n\nimport {createCanvasContext2D} from '../dom.js';\nimport {listenOnce, unlistenByKey} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\nvar IconImage = /*@__PURE__*/(function (EventTarget) {\n  function IconImage(image, src, size, crossOrigin, imageState, color) {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = color ?\n      /** @type {HTMLCanvasElement} */ (document.createElement('canvas')) :\n      null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.tainted_;\n\n  }\n\n  if ( EventTarget ) IconImage.__proto__ = EventTarget;\n  IconImage.prototype = Object.create( EventTarget && EventTarget.prototype );\n  IconImage.prototype.constructor = IconImage;\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  IconImage.prototype.isTainted_ = function isTainted_ () {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      this.tainted_ = false;\n      var context = createCanvasContext2D(1, 1);\n      try {\n        context.drawImage(this.image_, 0, 0);\n        context.getImageData(0, 0, 1, 1);\n      } catch (e) {\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.dispatchChangeEvent_ = function dispatchChangeEvent_ () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageError_ = function handleImageError_ () {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    }\n    this.size_ = [this.image_.width, this.image_.height];\n    this.unlistenImage_();\n    this.replaceColor_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  IconImage.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_ ? this.canvas_ : this.image_;\n  };\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  IconImage.prototype.getImageState = function getImageState () {\n    return this.imageState_;\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  IconImage.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        var width = this.size_[0];\n        var height = this.size_[1];\n        var context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  };\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  IconImage.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  IconImage.prototype.getSrc = function getSrc () {\n    return this.src_;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   */\n  IconImage.prototype.load = function load () {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.replaceColor_ = function replaceColor_ () {\n    if (!this.color_ || this.isTainted_()) {\n      return;\n    }\n\n    this.canvas_.width = this.image_.width;\n    this.canvas_.height = this.image_.height;\n\n    var ctx = this.canvas_.getContext('2d');\n    ctx.drawImage(this.image_, 0, 0);\n\n    var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n    var data = imgData.data;\n    var r = this.color_[0] / 255.0;\n    var g = this.color_[1] / 255.0;\n    var b = this.color_[2] / 255.0;\n\n    for (var i = 0, ii = data.length; i < ii; i += 4) {\n      data[i] *= r;\n      data[i + 1] *= g;\n      data[i + 2] *= b;\n    }\n    ctx.putImageData(imgData, 0, 0);\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  IconImage.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return IconImage;\n}(EventTarget));\n\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  var iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\n\nexport default IconImage;\n\n//# sourceMappingURL=IconImage.js.map","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=IconOrigin.js.map","/**\n * @module ol/style/Icon\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport {get as getIconImage} from './IconImage.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels. Default is `'fraction'`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels. Default is `'fraction'`.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you are using the WebGL renderer or if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /*@__PURE__*/(function (ImageStyle) {\n  function Icon(opt_options) {\n    var options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    var opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    var rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number}\n     */\n    var scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      rotateWithView: rotateWithView\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n      options.anchorOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n      options.anchorXUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n      options.anchorYUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    var image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    var src = options.src;\n\n    assert(!(src !== undefined && image),\n      4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize),\n      5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0,\n      6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    var imageState = options.src !== undefined ?\n      ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image, /** @type {string} */ (src), imgSize, this.crossOrigin_, imageState, this.color_);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n      options.offsetOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n  }\n\n  if ( ImageStyle ) Icon.__proto__ = ImageStyle;\n  Icon.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  Icon.prototype.constructor = Icon;\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  Icon.prototype.clone = function clone () {\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: this.getScale(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView()\n    });\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getAnchor = function getAnchor () {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    var anchor = this.anchor_;\n    var size = this.getSize();\n    if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  };\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  Icon.prototype.setAnchor = function setAnchor (anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  };\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  Icon.prototype.getColor = function getColor () {\n    return this.color_;\n  };\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @override\n   * @api\n   */\n  Icon.prototype.getImage = function getImage (pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageSize = function getImageSize () {\n    return this.iconImage_.getSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.getImageSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageState = function getImageState () {\n    return this.iconImage_.getImageState();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.iconImage_.getHitDetectionImage(pixelRatio);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getOrigin = function getOrigin () {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    var offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      var size = this.getSize();\n      var iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  };\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  Icon.prototype.getSrc = function getSrc () {\n    return this.iconImage_.getSrc();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getSize = function getSize () {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return listen(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @override\n   * @api\n   */\n  Icon.prototype.load = function load () {\n    this.iconImage_.load();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n    unlisten(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  return Icon;\n}(ImageStyle));\n\n\nexport default Icon;\n\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = function Text(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.font_ = options.font;\n\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n  this.rotation_ = options.rotation;\n\n  /**\n  * @private\n  * @type {boolean|undefined}\n  */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n  this.scale_ = options.scale;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.text_ = options.text;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.textAlign_ = options.textAlign;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n  * @private\n  * @type {import(\"./Fill.js\").default}\n  */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: DEFAULT_FILL_COLOR});\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n  * @private\n  * @type {import(\"./TextPlacement.js\").default|string}\n  */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n  * @private\n  * @type {boolean}\n  */\n  this.overflow_ = !!options.overflow;\n\n  /**\n  * @private\n  * @type {import(\"./Stroke.js\").default}\n  */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n  * @private\n  * @type {import(\"./Fill.js\").default}\n  */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n  * @private\n  * @type {import(\"./Stroke.js\").default}\n  */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n  * @private\n  * @type {Array<number>}\n  */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n/**\n* Clones the style.\n* @return {Text} The cloned style.\n* @api\n*/\nText.prototype.clone = function clone () {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n/**\n* Get the `overflow` configuration.\n* @return {boolean} Let text overflow the length of the path they follow.\n* @api\n*/\nText.prototype.getOverflow = function getOverflow () {\n  return this.overflow_;\n};\n\n/**\n* Get the font name.\n* @return {string|undefined} Font.\n* @api\n*/\nText.prototype.getFont = function getFont () {\n  return this.font_;\n};\n\n/**\n* Get the maximum angle between adjacent characters.\n* @return {number} Angle in radians.\n* @api\n*/\nText.prototype.getMaxAngle = function getMaxAngle () {\n  return this.maxAngle_;\n};\n\n/**\n* Get the label placement.\n* @return {import(\"./TextPlacement.js\").default|string} Text placement.\n* @api\n*/\nText.prototype.getPlacement = function getPlacement () {\n  return this.placement_;\n};\n\n/**\n* Get the x-offset for the text.\n* @return {number} Horizontal text offset.\n* @api\n*/\nText.prototype.getOffsetX = function getOffsetX () {\n  return this.offsetX_;\n};\n\n/**\n* Get the y-offset for the text.\n* @return {number} Vertical text offset.\n* @api\n*/\nText.prototype.getOffsetY = function getOffsetY () {\n  return this.offsetY_;\n};\n\n/**\n* Get the fill style for the text.\n* @return {import(\"./Fill.js\").default} Fill style.\n* @api\n*/\nText.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n* Determine whether the text rotates with the map.\n* @return {boolean|undefined} Rotate with map.\n* @api\n*/\nText.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n* Get the text rotation.\n* @return {number|undefined} Rotation.\n* @api\n*/\nText.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n* Get the text scale.\n* @return {number|undefined} Scale.\n* @api\n*/\nText.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n* Get the stroke style for the text.\n* @return {import(\"./Stroke.js\").default} Stroke style.\n* @api\n*/\nText.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n* Get the text to be rendered.\n* @return {string|undefined} Text.\n* @api\n*/\nText.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n* Get the text alignment.\n* @return {string|undefined} Text align.\n* @api\n*/\nText.prototype.getTextAlign = function getTextAlign () {\n  return this.textAlign_;\n};\n\n/**\n* Get the text baseline.\n* @return {string|undefined} Text baseline.\n* @api\n*/\nText.prototype.getTextBaseline = function getTextBaseline () {\n  return this.textBaseline_;\n};\n\n/**\n* Get the background fill style for the text.\n* @return {import(\"./Fill.js\").default} Fill style.\n* @api\n*/\nText.prototype.getBackgroundFill = function getBackgroundFill () {\n  return this.backgroundFill_;\n};\n\n/**\n* Get the background stroke style for the text.\n* @return {import(\"./Stroke.js\").default} Stroke style.\n* @api\n*/\nText.prototype.getBackgroundStroke = function getBackgroundStroke () {\n  return this.backgroundStroke_;\n};\n\n/**\n* Get the padding for the text.\n* @return {Array<number>} Padding.\n* @api\n*/\nText.prototype.getPadding = function getPadding () {\n  return this.padding_;\n};\n\n/**\n* Set the `overflow` property.\n*\n* @param {boolean} overflow Let text overflow the path that it follows.\n* @api\n*/\nText.prototype.setOverflow = function setOverflow (overflow) {\n  this.overflow_ = overflow;\n};\n\n/**\n* Set the font.\n*\n* @param {string|undefined} font Font.\n* @api\n*/\nText.prototype.setFont = function setFont (font) {\n  this.font_ = font;\n};\n\n/**\n* Set the maximum angle between adjacent characters.\n*\n* @param {number} maxAngle Angle in radians.\n* @api\n*/\nText.prototype.setMaxAngle = function setMaxAngle (maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n/**\n* Set the x offset.\n*\n* @param {number} offsetX Horizontal text offset.\n* @api\n*/\nText.prototype.setOffsetX = function setOffsetX (offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n/**\n* Set the y offset.\n*\n* @param {number} offsetY Vertical text offset.\n* @api\n*/\nText.prototype.setOffsetY = function setOffsetY (offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n/**\n* Set the text placement.\n*\n* @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n* @api\n*/\nText.prototype.setPlacement = function setPlacement (placement) {\n  this.placement_ = placement;\n};\n\n/**\n* Set the fill.\n*\n* @param {import(\"./Fill.js\").default} fill Fill style.\n* @api\n*/\nText.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n* Set the rotation.\n*\n* @param {number|undefined} rotation Rotation.\n* @api\n*/\nText.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n\n/**\n* Set the scale.\n*\n* @param {number|undefined} scale Scale.\n* @api\n*/\nText.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n* Set the stroke.\n*\n* @param {import(\"./Stroke.js\").default} stroke Stroke style.\n* @api\n*/\nText.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n* Set the text.\n*\n* @param {string|undefined} text Text.\n* @api\n*/\nText.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n* Set the text alignment.\n*\n* @param {string|undefined} textAlign Text align.\n* @api\n*/\nText.prototype.setTextAlign = function setTextAlign (textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n/**\n* Set the text baseline.\n*\n* @param {string|undefined} textBaseline Text baseline.\n* @api\n*/\nText.prototype.setTextBaseline = function setTextBaseline (textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n/**\n* Set the background fill.\n*\n* @param {import(\"./Fill.js\").default} fill Fill style.\n* @api\n*/\nText.prototype.setBackgroundFill = function setBackgroundFill (fill) {\n  this.backgroundFill_ = fill;\n};\n\n/**\n* Set the background stroke.\n*\n* @param {import(\"./Stroke.js\").default} stroke Stroke style.\n* @api\n*/\nText.prototype.setBackgroundStroke = function setBackgroundStroke (stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n/**\n* Set the padding (`[top, right, bottom, left]`).\n*\n* @param {!Array<number>} padding Padding.\n* @api\n*/\nText.prototype.setPadding = function setPadding (padding) {\n  this.padding_ = padding;\n};\n\nexport default Text;\n\n//# sourceMappingURL=Text.js.map","import 'ol/ol.css';\r\n\r\nimport {\r\n    Circle as CircleStyle,\r\n    Fill,\r\n    Stroke,\r\n    Style,\r\n    Icon,\r\n    Text\r\n} from 'ol/style';\r\n\r\nexport default {\r\n    /**\r\n     * 获取style\r\n     * @param {style索引}  styleName  \r\n     * @param {标签名称}    tagName  \r\n     */\r\n    getStyle(styleName, tagName = '') {\r\n        let scale = 0.06\r\n        switch (styleName) {\r\n\r\n            case 'WaterMeterLayer':\r\n\r\n\r\n\r\n            case 'FirefightingwellLayer':\r\n\r\n            case 'FirehydrantLayer':\r\n\r\n            case 'ServicingwellLayer':\r\n\r\n            case 'ValveLayer':\r\n\r\n            case 'ValvewellLayer':\r\n\r\n            case 'WatermeterwellLayer':\r\n                return new Style({\r\n                    image: new Icon({\r\n                        scale: scale,\r\n                        src: require('@assets/toolIcon/' + styleName + '.png')\r\n                    })\r\n                })\r\n            case 'businessLayers.polygonLayer':\r\n                return new Style({\r\n                    stroke: new Stroke({\r\n                        color: '#1983ef',\r\n                        width: 3\r\n                    }),\r\n                    fill: new Fill({\r\n                        color: 'rgba(0, 0, 255, 0.1)'\r\n                    }),\r\n                    text: new Text({\r\n                        font: '16px Microsoft YaHei',\r\n                        text: tagName,\r\n                        fill: new Fill({\r\n                            color: '#fff'\r\n                        }),\r\n                        stroke: new Stroke({\r\n                            color: '#123350',\r\n                            width: 2\r\n                        })\r\n                    }),\r\n                })\r\n            case 'businessLayers.lineStringLayer':\r\n                return new Style({\r\n                    text: new Text({\r\n                        font: '16px Microsoft YaHei',\r\n                        text: tagName,\r\n                        fill: new Fill({\r\n                            color: '#fff'\r\n                        }),\r\n                        stroke: new Stroke({\r\n                            color: '#123350',\r\n                            width: 2\r\n                        }),\r\n                    }),\r\n                    stroke: new Stroke({\r\n                        color: '#1983ef',\r\n                        width: 3\r\n                    }),\r\n                    fill: new Fill({\r\n                        color: 'rgba(0, 0, 255, 0.1)'\r\n                    }),\r\n\r\n                })\r\n            case 'businessLayers.pointLayer':\r\n                return new Style({\r\n                    text: new Text({\r\n                        font: '12px Microsoft YaHei',\r\n                        text: tagName,\r\n                        offsetY:20,\r\n                        fill: new Fill({\r\n                            color: '#fff'\r\n                        }),\r\n                        stroke: new Stroke({\r\n                            color: '#000',\r\n                            width: 2\r\n                        })\r\n                    }),\r\n                    image: new Icon({\r\n                        scale: scale * 4,\r\n                        src: require('@assets/toolIcon/dingwei.png')\r\n                    })\r\n                })\r\n            case 'businessLayers.monitorLayer':\r\n                return new Style({\r\n                    fill: new Fill({\r\n                        color: 'rgba(255, 0, 0, 0.5)'\r\n                    }),\r\n                    stroke: new Stroke({\r\n                        color: 'red',\r\n                        width: 2\r\n                    })\r\n                })\r\n            case 'businessLayers.monitorLayer.firstStyle':\r\n                return new Style({\r\n                    image: new Icon({\r\n                        scale: scale * 4,\r\n                        src: require('@assets/toolIcon/dingweistart.png'),\r\n                        anchor: [0.5, 1],\r\n                    })\r\n                })\r\n            case 'businessLayers.monitorLayer.endStyle':\r\n                return new Style({\r\n                    image: new Icon({\r\n                        scale: scale * 4,\r\n                        src: require('@assets/toolIcon/dingweiend.png'),\r\n                        anchor: [0.5, 1],\r\n                    })\r\n                })\r\n            case 'businessLayers.monitorLayer.routeStyle':\r\n                return new Style({\r\n                    stroke: new Stroke({\r\n                        width: 6, color: [237, 212, 0, 0.8]\r\n                    })\r\n                })\r\n\r\n            case 'businessLayers.monitorLayer.pointStyle':\r\n                return new Style({\r\n                    //把点的样式换成ICON图标\r\n                    image: new Icon({\r\n                        scale: scale * 4,\r\n                        src: require('@assets/toolIcon/dingwei.png'),\r\n                        anchor: [0.5, 1],\r\n                        offset: [0, -4]\r\n                    })\r\n                });\r\n        }\r\n    }\r\n}","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  var coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/interaction/Modify\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {equals} from '../array.js';\nimport {equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment} from '../coordinate.js';\nimport {listen, unlisten} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {always, primaryAction, altKeyOnly, singleClick} from '../events/condition.js';\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\n\n/**\n * @enum {string}\n */\nvar ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth]\n * @property {Feature} feature\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} [index]\n * @property {Array<import(\"../extent.js\").Extent>} segment\n * @property {Array<SegmentData>} [featureSegments]\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex can be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style used for the features being modified. By default the default edit\n * style is used (see {@link module:ol/style}).\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the features option.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the source option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport var ModifyEvent = /*@__PURE__*/(function (Event) {\n  function ModifyEvent(type, features, mapBrowserPointerEvent) {\n    Event.call(this, type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserPointerEvent;\n\n  }\n\n  if ( Event ) ModifyEvent.__proto__ = Event;\n  ModifyEvent.prototype = Object.create( Event && Event.prototype );\n  ModifyEvent.prototype.constructor = ModifyEvent;\n\n  return ModifyEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nvar Modify = /*@__PURE__*/(function (PointerInteraction) {\n  function Modify(options) {\n\n    PointerInteraction.call(/** @type {import(\"./Pointer.js\").Options} */ this, (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition ?\n      options.deleteCondition : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition ?\n      options.insertVertexCondition : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.modified_ = false;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default)>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_,\n      'LineString': this.writeLineStringGeometry_,\n      'LinearRing': this.writeLineStringGeometry_,\n      'Polygon': this.writePolygonGeometry_,\n      'MultiPoint': this.writeMultiPointGeometry_,\n      'MultiLineString': this.writeMultiLineStringGeometry_,\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\n      'Circle': this.writeCircleGeometry_,\n      'GeometryCollection': this.writeGeometryCollectionGeometry_\n    };\n\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    var features;\n    if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      listen(this.source_, VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_, this);\n      listen(this.source_, VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_, this);\n    } else {\n      features = options.features;\n    }\n    if (!features) {\n      throw new Error('The modify interaction requires features or a source');\n    }\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    listen(this.features_, CollectionEventType.ADD,\n      this.handleFeatureAdd_, this);\n    listen(this.features_, CollectionEventType.REMOVE,\n      this.handleFeatureRemove_, this);\n\n    /**\n     * @type {import(\"../MapBrowserPointerEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n  }\n\n  if ( PointerInteraction ) Modify.__proto__ = PointerInteraction;\n  Modify.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Modify.prototype.constructor = Modify;\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.addFeature_ = function addFeature_ (feature) {\n    var geometry = feature.getGeometry();\n    if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n      this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n    }\n    var map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    listen(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  };\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} evt Map browser event\n   * @private\n   */\n  Modify.prototype.willModifyFeatures_ = function willModifyFeatures_ (evt) {\n    if (!this.modified_) {\n      this.modified_ = true;\n      this.dispatchEvent(new ModifyEvent(\n        ModifyEventType.MODIFYSTART, this.features_, evt));\n    }\n  };\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.removeFeature_ = function removeFeature_ (feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of canditate features\n    // is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    unlisten(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  };\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.removeFeatureSegmentData_ = function removeFeatureSegmentData_ (feature) {\n    var rBush = this.rBush_;\n    var /** @type {Array<SegmentData>} */ nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n    for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.setActive = function setActive (active) {\n    if (this.vertexFeature_ && !active) {\n      /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    PointerInteraction.prototype.setActive.call(this, active);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.setMap = function setMap (map) {\n    this.overlay_.setMap(map);\n    PointerInteraction.prototype.setMap.call(this, map);\n  };\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  Modify.prototype.getOverlay = function getOverlay () {\n    return this.overlay_;\n  };\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  Modify.prototype.handleSourceAdd_ = function handleSourceAdd_ (event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  };\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  Modify.prototype.handleSourceRemove_ = function handleSourceRemove_ (event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureAdd_ = function handleFeatureAdd_ (evt) {\n    this.addFeature_(/** @type {Feature} */ (evt.element));\n  };\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureChange_ = function handleFeatureChange_ (evt) {\n    if (!this.changingFeature_) {\n      var feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureRemove_ = function handleFeatureRemove_ (evt) {\n    var feature = /** @type {Feature} */ (evt.element);\n    this.removeFeature_(feature);\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writePointGeometry_ = function writePointGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    var segmentData = /** @type {SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiPointGeometry_ = function writeMultiPointGeometry_ (feature, geometry) {\n    var points = geometry.getCoordinates();\n    for (var i = 0, ii = points.length; i < ii; ++i) {\n      var coordinates = points[i];\n      var segmentData = /** @type {SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates]\n      });\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeLineStringGeometry_ = function writeLineStringGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = /** @type {SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiLineStringGeometry_ = function writeMultiLineStringGeometry_ (feature, geometry) {\n    var lines = geometry.getCoordinates();\n    for (var j = 0, jj = lines.length; j < jj; ++j) {\n      var coordinates = lines[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writePolygonGeometry_ = function writePolygonGeometry_ (feature, geometry) {\n    var rings = geometry.getCoordinates();\n    for (var j = 0, jj = rings.length; j < jj; ++j) {\n      var coordinates = rings[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiPolygonGeometry_ = function writeMultiPolygonGeometry_ (feature, geometry) {\n    var polygons = geometry.getCoordinates();\n    for (var k = 0, kk = polygons.length; k < kk; ++k) {\n      var rings = polygons[k];\n      for (var j = 0, jj = rings.length; j < jj; ++j) {\n        var coordinates = rings[j];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          var segment = coordinates.slice(i, i + 2);\n          var segmentData = /** @type {SegmentData} */ ({\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment\n          });\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  };\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeCircleGeometry_ = function writeCircleGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCenter();\n    var centerSegmentData = /** @type {SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates]\n    });\n    var circumferenceSegmentData = /** @type {SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates]\n    });\n    var featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n    this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeGeometryCollectionGeometry_ = function writeGeometryCollectionGeometry_ (feature, geometry) {\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0; i < geometries.length; ++i) {\n      this.SEGMENT_WRITERS_[geometries[i].getType()].call(this, feature, geometries[i]);\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  Modify.prototype.createOrUpdateVertexFeature_ = function createOrUpdateVertexFeature_ (coordinates) {\n    var vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      /** @type {VectorSource} */ (this.overlay_.getSource()).addFeature(vertexFeature);\n    } else {\n      var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\n      geometry.setCoordinates(coordinates);\n    }\n    return vertexFeature;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the geometry.\n   * @override\n   */\n  Modify.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    var handled;\n    if (!mapBrowserEvent.map.getView().getInteracting() &&\n        mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n        !this.handlingDownUpSequence) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return PointerInteraction.prototype.handleEvent.call(this, mapBrowserEvent) && !handled;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.handleDragEvent = function handleDragEvent (evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt);\n\n    var vertex = evt.coordinate;\n    for (var i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      var dragSegment = this.dragSegments_[i];\n      var segmentData = dragSegment[0];\n      var depth = segmentData.depth;\n      var geometry = segmentData.geometry;\n      var coordinates = (void 0);\n      var segment = segmentData.segment;\n      var index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case GeometryType.POINT:\n          coordinates = vertex;\n          segment[0] = segment[1] = vertex;\n          break;\n        case GeometryType.MULTI_POINT:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = segment[1] = vertex;\n          break;\n        case GeometryType.LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.CIRCLE:\n          segment[0] = segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else { // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n          // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.handleDownEvent = function handleDownEvent (evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    this.handlePointerAtPixel_(evt.pixel, evt.map);\n    var pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n    this.dragSegments_.length = 0;\n    this.modified_ = false;\n    var vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      var insertVertices = [];\n      var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\n      var vertex = geometry.getCoordinates();\n      var vertexExtent = boundingExtent([vertex]);\n      var segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      var componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (var i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        var segmentDataMatch = segmentDataMatches[i];\n        var segment = segmentDataMatch.segment;\n        var uid = getUid(segmentDataMatch.feature);\n        var depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n        if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n        segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n          var closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch);\n          if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n        } else if (coordinatesEqual(segment[0], vertex) &&\n            !componentSegments[uid][0]) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        } else if (coordinatesEqual(segment[1], vertex) &&\n            !componentSegments[uid][1]) {\n\n          // prevent dragging closed linestrings by the connecting node\n          if ((segmentDataMatch.geometry.getType() ===\n              GeometryType.LINE_STRING ||\n              segmentDataMatch.geometry.getType() ===\n              GeometryType.MULTI_LINE_STRING) &&\n              componentSegments[uid][0] &&\n              componentSegments[uid][0].index === 0) {\n            continue;\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n        } else if (this.insertVertexCondition_(evt) && getUid(segment) in this.vertexSegments_ &&\n            (!componentSegments[uid][0] && !componentSegments[uid][1])) {\n          insertVertices.push([segmentDataMatch, vertex]);\n        }\n      }\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt);\n      }\n      for (var j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_.apply(this, insertVertices[j]);\n      }\n    }\n    return !!this.vertexFeature_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.handleUpEvent = function handleUpEvent (evt) {\n    for (var i = this.dragSegments_.length - 1; i >= 0; --i) {\n      var segmentData = this.dragSegments_[i][0];\n      var geometry = segmentData.geometry;\n      if (geometry.getType() === GeometryType.CIRCLE) {\n        // Update a circle object in the R* bush:\n        var coordinates = geometry.getCenter();\n        var centerSegmentData = segmentData.featureSegments[0];\n        var circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n        this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.modified_) {\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n      this.modified_ = false;\n    }\n    return false;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  Modify.prototype.handlePointerMove_ = function handlePointerMove_ (evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map);\n  };\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @private\n   */\n  Modify.prototype.handlePointerAtPixel_ = function handlePointerAtPixel_ (pixel, map) {\n    var pixelCoordinate = map.getCoordinateFromPixel(pixel);\n    var sortByDistance = function(a, b) {\n      return pointDistanceToSegmentDataSquared(pixelCoordinate, a) -\n          pointDistanceToSegmentDataSquared(pixelCoordinate, b);\n    };\n\n    var box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\n      map.getView().getResolution() * this.pixelTolerance_);\n\n    var rBush = this.rBush_;\n    var nodes = rBush.getInExtent(box);\n    if (nodes.length > 0) {\n      nodes.sort(sortByDistance);\n      var node = nodes[0];\n      var closestSegment = node.segment;\n      var vertex = closestOnSegmentData(pixelCoordinate, node);\n      var vertexPixel = map.getPixelFromCoordinate(vertex);\n      var dist = coordinateDistance(pixel, vertexPixel);\n      if (dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        var vertexSegments = {};\n\n        if (node.geometry.getType() === GeometryType.CIRCLE &&\n        node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(vertex);\n        } else {\n          var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(vertex);\n          for (var i = 1, ii = nodes.length; i < ii; ++i) {\n            var segment = nodes[i].segment;\n            if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1]) ||\n                (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0])))) {\n              vertexSegments[getUid(segment)] = true;\n            } else {\n              break;\n            }\n          }\n        }\n\n        vertexSegments[getUid(closestSegment)] = true;\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  };\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  Modify.prototype.insertVertex_ = function insertVertex_ (segmentData, vertex) {\n    var segment = segmentData.segment;\n    var feature = segmentData.feature;\n    var geometry = segmentData.geometry;\n    var depth = segmentData.depth;\n    var index = /** @type {number} */ (segmentData.index);\n    var coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    var rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n    var newSegmentData = /** @type {SegmentData} */ ({\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index\n    });\n    rTree.insert(boundingExtent(newSegmentData.segment),\n      newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    var newSegmentData2 = /** @type {SegmentData} */ ({\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1\n    });\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  };\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  Modify.prototype.removePoint = function removePoint () {\n    if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n      var evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt);\n      this.removeVertex_();\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n      this.modified_ = false;\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  Modify.prototype.removeVertex_ = function removeVertex_ () {\n    var dragSegments = this.dragSegments_;\n    var segmentsByFeature = {};\n    var deleted = false;\n    var component, coordinates, dragSegment, geometry, i, index, left;\n    var newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case GeometryType.MULTI_LINE_STRING:\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.LINE_STRING:\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.MULTI_POLYGON:\n          component = component[segmentData.depth[1]];\n          /* falls through */\n        case GeometryType.POLYGON:\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n          // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        var segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          var newSegmentData = /** @type {SegmentData} */ ({\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments\n          });\n          this.rBush_.insert(boundingExtent(newSegmentData.segment),\n            newSegmentData);\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n\n    }\n    return deleted;\n  };\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  Modify.prototype.setGeometryCoordinates_ = function setGeometryCoordinates_ (geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  };\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  Modify.prototype.updateSegmentIndices_ = function updateSegmentIndices_ (geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n      if (segmentDataMatch.geometry === geometry &&\n          (depth === undefined || segmentDataMatch.depth === undefined ||\n          equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index) {\n        segmentDataMatch.index += delta;\n      }\n    });\n  };\n\n  return Modify;\n}(PointerInteraction));\n\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction pointDistanceToSegmentDataSquared(pointCoordinates, segmentData) {\n  var geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    var circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      var distanceToCenterSquared =\n            squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\n      var distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  return squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData) {\n  var geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE &&\n  segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  return closestOnSegment(pointCoordinates, segmentData.segment);\n}\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n\nexport default Modify;\n\n//# sourceMappingURL=Modify.js.map","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function() {\n  var style;\n  var cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      var family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n\n//# sourceMappingURL=css.js.map","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = function Event(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.preventDefault = function preventDefault () {\n  this.propagationStopped = true;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.stopPropagation = function stopPropagation () {\n  this.propagationStopped = true;\n};\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n\n//# sourceMappingURL=Event.js.map","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import axios from 'axios'\r\nimport { Message } from 'element-ui';\r\nimport config from '@config/config.js'\r\nimport store from '@store'\r\nlet insURL = config.apiPath.insURL\r\n//地图数据操作\r\nconst instance = axios.create({\r\n    baseURL: insURL + '/api',\r\n    //解决跨域\r\n    crossDomain: true,\r\n    timeout: 30000,\r\n    //转换res为json\r\n    responseType: 'json',\r\n});\r\n\r\n// request拦截器\r\ninstance.interceptors.request.use(\r\n    config => {\r\n        // 每次发送请求之前检测都vuex存有token,那么都要放在请求头发送给服务器\r\n         \r\n        let iAdminID = localStorage.getItem('iAdminID')\r\n        if(store.state.login.userToken){\r\n             config.headers.Token = store.state.login.userToken\r\n        }else if(iAdminID ){ \r\n            config.headers.Token = JSON.parse(iAdminID).Token\r\n        }\r\n        return config\r\n    },\r\n    err => {\r\n        return Promise.reject(err)\r\n    }\r\n)\r\n\r\n\r\ninstance.interceptors.response.use(\r\n    response => {  //成功请求到数据\r\n        // //这里根据后端提供的数据进行对应的处理\r\n        if (response.data.ErrorType === 3) {\r\n            return response;\r\n        } else {\r\n            Message({  //常规错误处理\r\n                type: \"error\",\r\n                message: response.data.Msg,\r\n                showClose: true\r\n            });\r\n            return Promise.reject(response)\r\n        }\r\n    },\r\n    error => {  //响应错误处理\r\n        console.log(error);\r\n        Message({\r\n            type: \"warn\",\r\n            message: '网络异常，请重试',\r\n            showClose: true\r\n        });\r\n\r\n        return Promise.reject(error)\r\n    }\r\n);\r\n\r\nexport default instance","/**\n * JSTS. See https://github.com/bjornharrtell/jsts\n * https://github.com/bjornharrtell/jsts/blob/master/LICENSE_EDLv1.txt\n * https://github.com/bjornharrtell/jsts/blob/master/LICENSE_EPLv1.txt\n * https://github.com/bjornharrtell/jsts/blob/master/LICENSE_LICENSE_ES6_COLLECTIONS.txt\n * @license\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.jsts = {}));\n}(this, function (exports) { 'use strict';\n\n  /* Polyfill service v3.13.0\n   * For detailed credits and licence information see http://github.com/financial-times/polyfill-service\n   *\n   * - Array.prototype.fill, License: CC0 */\n  if (!('fill' in Array.prototype)) {\n    Object.defineProperty(Array.prototype, 'fill', {\n      configurable: true,\n      value: function fill(value) {\n        if (this === undefined || this === null) {\n          throw new TypeError(this + ' is not an object');\n        }\n\n        var arrayLike = Object(this);\n        var length = Math.max(Math.min(arrayLike.length, 9007199254740991), 0) || 0;\n        var relativeStart = 1 in arguments ? parseInt(Number(arguments[1]), 10) || 0 : 0;\n        relativeStart = relativeStart < 0 ? Math.max(length + relativeStart, 0) : Math.min(relativeStart, length);\n        var relativeEnd = 2 in arguments && arguments[2] !== undefined ? parseInt(Number(arguments[2]), 10) || 0 : length;\n        relativeEnd = relativeEnd < 0 ? Math.max(length + arguments[2], 0) : Math.min(relativeEnd, length);\n\n        while (relativeStart < relativeEnd) {\n          arrayLike[relativeStart] = value;\n          ++relativeStart;\n        }\n\n        return arrayLike;\n      },\n      writable: true\n    });\n  }\n\n  Number.isFinite = Number.isFinite || function (value) {\n    return typeof value === 'number' && isFinite(value);\n  };\n\n  Number.isInteger = Number.isInteger || function (val) {\n    return typeof val === 'number' && isFinite(val) && Math.floor(val) === val;\n  };\n\n  Number.parseFloat = Number.parseFloat || parseFloat;\n\n  Number.isNaN = Number.isNaN || function (value) {\n    return value !== value; // eslint-disable-line\n  };\n\n  Math.trunc = Math.trunc || function (x) {\n    return x < 0 ? Math.ceil(x) : Math.floor(x);\n  };\n\n  Math.log2 = Math.log2 || function (x) {\n    return Math.log(x) * Math.LOG2E;\n  };\n\n  class NumberUtil {\n    constructor() {\n      NumberUtil.constructor_.apply(this, arguments);\n    }\n\n    static equalsWithTolerance(x1, x2, tolerance) {\n      return Math.abs(x1 - x2) <= tolerance;\n    }\n\n    getClass() {\n      return NumberUtil;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  NumberUtil.constructor_ = function () {};\n\n  function IllegalArgumentException(message) {\n    this.message = message;\n  }\n\n  function Long(high, low) {\n    this.low = low | 0;\n    this.high = high | 0;\n  }\n\n  Long.toBinaryString = function (i) {\n    var result = '';\n\n    for (var mask = 0x80000000; mask > 0; mask >>>= 1) result += (i.high & mask) === mask ? '1' : '0';\n\n    for (var mask = 0x80000000; mask > 0; mask >>>= 1) result += (i.low & mask) === mask ? '1' : '0';\n\n    return result;\n  };\n\n  function Double() {}\n\n  Double.isNaN = n => Number.isNaN(n);\n\n  Double.isInfinite = n => !Number.isFinite(n);\n\n  Double.MAX_VALUE = Number.MAX_VALUE;\n\n  if (typeof Float64Array == 'function' && typeof Int32Array == 'function') {\n    // Simple and fast conversion between double and long bits\n    // using TypedArrays and ArrayViewBuffers.\n    (function () {\n      var EXP_BIT_MASK = 0x7ff00000;\n      var SIGNIF_BIT_MASK = 0xFFFFF;\n      var f64buf = new Float64Array(1);\n      var i32buf = new Int32Array(f64buf.buffer);\n\n      Double.doubleToLongBits = function (value) {\n        f64buf[0] = value;\n        var low = i32buf[0] | 0;\n        var high = i32buf[1] | 0; // Check for NaN based on values of bit fields, maximum\n        // exponent and nonzero significand.\n\n        if ((high & EXP_BIT_MASK) === EXP_BIT_MASK && (high & SIGNIF_BIT_MASK) !== 0 && low !== 0) {\n          low = 0 | 0;\n          high = 0x7ff80000 | 0;\n        }\n\n        return new Long(high, low);\n      };\n\n      Double.longBitsToDouble = function (bits) {\n        i32buf[0] = bits.low;\n        i32buf[1] = bits.high;\n        return f64buf[0];\n      };\n    })();\n  } else {\n    // More complex and slower fallback implementation using \n    // math and the divide-by-two and multiply-by-two algorithms.\n    (function () {\n      var BIAS = 1023;\n      var log2 = Math.log2;\n      var floor = Math.floor;\n      var pow = Math.pow;\n\n      var MAX_REL_BITS_INTEGER = function () {\n        for (var i = 53; i > 0; i--) {\n          var bits = pow(2, i) - 1;\n\n          if (floor(log2(bits)) + 1 === i) {\n            return bits;\n          }\n        }\n\n        return 0;\n      }();\n\n      Double.doubleToLongBits = function (value) {\n        var x, y, f, bits, skip;\n        var sign, exp, high, low; // Get the sign bit and absolute value.\n\n        if (value < 0 || 1 / value === Number.NEGATIVE_INFINITY) {\n          sign = 1 << 31;\n          value = -value;\n        } else {\n          sign = 0;\n        } // Handle some special values.\n\n\n        if (value === 0) {\n          // Handle zeros (+/-0).\n          low = 0 | 0;\n          high = sign; // exponent: 00..00, significand: 00..00\n\n          return new Long(high, low);\n        }\n\n        if (value === Infinity) {\n          // Handle infinity (only positive values for value possible).\n          low = 0 | 0;\n          high = sign | 0x7ff00000; // exponent: 11..11, significand: 00..00\n\n          return new Long(high, low);\n        }\n\n        if (value !== value) {\n          // Handle NaNs (boiled down to only one distinct NaN).\n          low = 0 | 0;\n          high = 0x7ff80000; // exponent: 11..11, significand: 10..00\n\n          return new Long(high, low);\n        } // Preinitialize variables, that are not neccessarily set by\n        // the algorithm.\n\n\n        bits = 0;\n        low = 0 | 0; // Get the (always positive) integer part of value.\n\n        x = floor(value); // Process the integer part if it's greater than 1. Zero requires\n        // no bits at all, 1 represents the implicit (hidden) leading bit,\n        // which must not be written as well.\n\n        if (x > 1) {\n          // If we can reliably determine the number of bits required for\n          // the integer part,\n          if (x <= MAX_REL_BITS_INTEGER) {\n            // get the number of bits required to represent it minus 1\n            bits = floor(log2(x))\n            /* + 1 - 1*/\n            ; // and simply copy/shift the integer bits into low and high.\n            // That's much faster than the divide-by-two algorithm (saves\n            // up to ~60%).\n            // We always need to mask out the most significant bit, which\n            // is the implicit (aka hidden) bit.\n\n            if (bits <= 20) {\n              // The simple case in which the integer fits into the\n              // lower 20 bits of the high word is worth to be handled\n              // separately (saves ~25%).\n              low = 0 | 0;\n              high = x << 20 - bits & 0xfffff;\n            } else {\n              // Here, the integer part is split into low and high.\n              // Since its value may require more than 32 bits, we\n              // cannot use bitwise operators (which implicitly cast\n              // to Int32), but use arithmetic operators % and / to\n              // get low and high parts. The uppper 20 bits go to high,\n              // the remaining bits (in f) to low.\n              f = bits - 20; // Like (1 << f) but safe with even more than 32 bits.\n\n              y = pow(2, f);\n              low = x % y << 32 - f;\n              high = x / y & 0xfffff;\n            }\n          } else {\n            // For greater values, we must use the much slower divide-by-two\n            // algorithm. Bits are generated from right to left, that is from\n            // least to most significant bit. For each bit, we left-shift both\n            // low and high by one and carry bit #0 from high to #31 in low.\n            // The next bit is then copied into bit #19 in high, the leftmost\n            // bit of the double's significand.\n            // Preserve x for later user, so work with f.\n            f = x;\n            low = 0 | 0;\n\n            while (true) {\n              y = f / 2;\n              f = floor(y);\n\n              if (f === 0) {\n                // We just found the most signigicant (1-)bit, which\n                // is the implicit bit and so, not stored in the double\n                // value. So, it's time to leave the loop.\n                break;\n              } // Count this bit, shift low and carry bit #0 from high.\n\n\n              bits++;\n              low >>>= 1;\n              low |= (high & 0x1) << 31; // Shift high.\n\n              high >>>= 1;\n\n              if (y !== f) {\n                // Copy the new bit into bit #19 in high (only required if 1).\n                high |= 0x80000;\n              }\n            }\n          }\n        } // Bias the exponent.\n\n\n        exp = bits + BIAS; // If the integer part is zero, we've not yet seen the implicit\n        // leading bit. Variable skip is later used while processing the \n        // fractional part (if any).\n\n        skip = x === 0; // Get fraction only into x.\n\n        x = value - x; // If some significand bits are still left to be filled and\n        // the fractional part is not zero, convert the fraction using\n        // the multiply-by-2 algorithm.\n\n        if (bits < 52 && x !== 0) {\n          // Initialize 'buffer' f, into which newly created bits get\n          // shifted from right to left.\n          f = 0;\n\n          while (true) {\n            y = x * 2;\n\n            if (y >= 1) {\n              // This is a new 1-bit. Add and count this bit, if not\n              // prohibited by skip.\n              x = y - 1;\n\n              if (!skip) {\n                f <<= 1;\n                f |= 1;\n                bits++;\n              } else {\n                // Otherwise, decrement the exponent and unset\n                // skip, so that all following bits get written.\n                exp--;\n                skip = false;\n              }\n            } else {\n              // This is a new 0-bit. Add and count this bit, if not\n              // prohibited by skip.\n              x = y;\n\n              if (!skip) {\n                f <<= 1;\n                bits++;\n              } else if (--exp === 0) {\n                // Otherwise we've just decremented the exponent. If the\n                // biased exponent is zero now (-1023), we process a\n                // subnormal number, which has no impled leading 1-bit.\n                // So, count this 0-bit and unset skip to write out\n                // all the following bits.\n                bits++;\n                skip = false;\n              }\n            }\n\n            if (bits === 20) {\n              // When 20 bits have been created in total, we're done with\n              // the high word. Copy the bits from 'buffer' f into high\n              // and reset 'buffer' f. Following bits will end up in the\n              // low word.\n              high |= f;\n              f = 0;\n            } else if (bits === 52) {\n              // When 52 bits have been created in total, we're done with\n              // low word as well. Copy the bits from 'buffer' f into low\n              // and exit the loop.\n              low |= f;\n              break;\n            }\n\n            if (y === 1) {\n              // When y is exactly 1, there is no remainder and the process\n              // is complete (the number is finite). Copy the bits from\n              // 'buffer' f into either low or high and exit the loop.\n              if (bits < 20) {\n                high |= f << 20 - bits;\n              } else if (bits < 52) {\n                low |= f << 52 - bits;\n              }\n\n              break;\n            }\n          }\n        } // Copy/shift the exponent and sign bits into the high word.\n\n\n        high |= exp << 20;\n        high |= sign;\n        return new Long(high, low);\n      };\n\n      Double.longBitsToDouble = function (bits) {\n        var x, sign, exp, fract;\n        var high = bits.high;\n        var low = bits.low; // Extract the sign.\n\n        sign = high & 1 << 31 ? -1 : 1; // Extract the unbiased exponent.\n\n        exp = ((high & 0x7ff00000) >> 20) - BIAS; // Calculate the fraction from left to right. Start\n        // off with the 20 lower bits from the high word.\n\n        fract = 0;\n        x = 1 << 19;\n\n        for (var i = 1; i <= 20; i++) {\n          if (high & x) {\n            fract += pow(2, -i);\n          }\n\n          x >>>= 1;\n        } // Continue with all 32 bits from the low word.\n\n\n        x = 1 << 31;\n\n        for (var i = 21; i <= 52; i++) {\n          if (low & x) {\n            fract += pow(2, -i);\n          }\n\n          x >>>= 1;\n        } // Handle special values.\n        // Check for zero and subnormal values.\n\n\n        if (exp === -BIAS) {\n          if (fract === 0) {\n            // +/-1.0 * 0.0 => +/-0.0\n            return sign * 0;\n          }\n\n          exp = -1022;\n        } // Check for +/-Infinity or NaN.\n        else if (exp === BIAS + 1) {\n            if (fract === 0) {\n              // +/-1.0 / 0.0 => +/-Infinity\n              return sign / 0;\n            }\n\n            return NaN;\n          } // Nothing special? Seems to be a normal number.\n          else {\n              // Add the implicit leading bit (1*2^0).\n              fract += 1;\n            }\n\n        return sign * fract * pow(2, exp);\n      };\n    })();\n  }\n\n  function Comparable() {}\n\n  function Clonable() {}\n\n  function Comparator() {}\n\n  function Serializable() {}\n\n  function RuntimeException(message) {\n    this.name = 'RuntimeException';\n    this.message = message;\n    this.stack = new Error().stack;\n    Error.call(this, message);\n  }\n  RuntimeException.prototype = Object.create(Error.prototype);\n  RuntimeException.prototype.constructor = Error;\n\n  class AssertionFailedException extends RuntimeException {\n    constructor() {\n      super();\n      AssertionFailedException.constructor_.apply(this, arguments);\n    }\n\n    getClass() {\n      return AssertionFailedException;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  AssertionFailedException.constructor_ = function () {\n    if (arguments.length === 0) {\n      RuntimeException.constructor_.call(this);\n    } else if (arguments.length === 1) {\n      let message = arguments[0];\n      RuntimeException.constructor_.call(this, message);\n    }\n  };\n\n  class Assert {\n    constructor() {\n      Assert.constructor_.apply(this, arguments);\n    }\n\n    static shouldNeverReachHere() {\n      if (arguments.length === 0) {\n        Assert.shouldNeverReachHere(null);\n      } else if (arguments.length === 1) {\n        let message = arguments[0];\n        throw new AssertionFailedException(\"Should never reach here\" + (message !== null ? \": \" + message : \"\"));\n      }\n    }\n\n    static isTrue() {\n      if (arguments.length === 1) {\n        let assertion = arguments[0];\n        Assert.isTrue(assertion, null);\n      } else if (arguments.length === 2) {\n        let assertion = arguments[0],\n            message = arguments[1];\n\n        if (!assertion) {\n          if (message === null) {\n            throw new AssertionFailedException();\n          } else {\n            throw new AssertionFailedException(message);\n          }\n        }\n      }\n    }\n\n    static equals() {\n      if (arguments.length === 2) {\n        let expectedValue = arguments[0],\n            actualValue = arguments[1];\n        Assert.equals(expectedValue, actualValue, null);\n      } else if (arguments.length === 3) {\n        let expectedValue = arguments[0],\n            actualValue = arguments[1],\n            message = arguments[2];\n\n        if (!actualValue.equals(expectedValue)) {\n          throw new AssertionFailedException(\"Expected \" + expectedValue + \" but encountered \" + actualValue + (message !== null ? \": \" + message : \"\"));\n        }\n      }\n    }\n\n    getClass() {\n      return Assert;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  Assert.constructor_ = function () {};\n\n  class Coordinate {\n    constructor() {\n      Coordinate.constructor_.apply(this, arguments);\n    }\n\n    static hashCode() {\n      if (arguments.length === 1 && typeof arguments[0] === \"number\") {\n        let x = arguments[0];\n        var f = Double.doubleToLongBits(x);\n        return Math.trunc(f ^ f >>> 32);\n      }\n    }\n\n    setOrdinate(ordinateIndex, value) {\n      switch (ordinateIndex) {\n        case Coordinate.X:\n          this.x = value;\n          break;\n\n        case Coordinate.Y:\n          this.y = value;\n          break;\n\n        case Coordinate.Z:\n          this.z = value;\n          break;\n\n        default:\n          throw new IllegalArgumentException(\"Invalid ordinate index: \" + ordinateIndex);\n      }\n    }\n\n    equals2D() {\n      if (arguments.length === 1) {\n        let other = arguments[0];\n\n        if (this.x !== other.x) {\n          return false;\n        }\n\n        if (this.y !== other.y) {\n          return false;\n        }\n\n        return true;\n      } else if (arguments.length === 2) {\n        let c = arguments[0],\n            tolerance = arguments[1];\n\n        if (!NumberUtil.equalsWithTolerance(this.x, c.x, tolerance)) {\n          return false;\n        }\n\n        if (!NumberUtil.equalsWithTolerance(this.y, c.y, tolerance)) {\n          return false;\n        }\n\n        return true;\n      }\n    }\n\n    getOrdinate(ordinateIndex) {\n      switch (ordinateIndex) {\n        case Coordinate.X:\n          return this.x;\n\n        case Coordinate.Y:\n          return this.y;\n\n        case Coordinate.Z:\n          return this.z;\n      }\n\n      throw new IllegalArgumentException(\"Invalid ordinate index: \" + ordinateIndex);\n    }\n\n    equals3D(other) {\n      return this.x === other.x && this.y === other.y && (this.z === other.z || Double.isNaN(this.z) && Double.isNaN(other.z));\n    }\n\n    equals(other) {\n      if (!(other instanceof Coordinate)) {\n        return false;\n      }\n\n      return this.equals2D(other);\n    }\n\n    equalInZ(c, tolerance) {\n      return NumberUtil.equalsWithTolerance(this.z, c.z, tolerance);\n    }\n\n    compareTo(o) {\n      var other = o;\n      if (this.x < other.x) return -1;\n      if (this.x > other.x) return 1;\n      if (this.y < other.y) return -1;\n      if (this.y > other.y) return 1;\n      return 0;\n    }\n\n    clone() {\n      try {\n        var coord = null;\n        return coord;\n      } catch (e) {\n        if (e instanceof CloneNotSupportedException) {\n          Assert.shouldNeverReachHere(\"this shouldn't happen because this class is Cloneable\");\n          return null;\n        } else throw e;\n      } finally {}\n    }\n\n    copy() {\n      return new Coordinate(this);\n    }\n\n    toString() {\n      return \"(\" + this.x + \", \" + this.y + \", \" + this.z + \")\";\n    }\n\n    distance3D(c) {\n      var dx = this.x - c.x;\n      var dy = this.y - c.y;\n      var dz = this.z - c.z;\n      return Math.sqrt(dx * dx + dy * dy + dz * dz);\n    }\n\n    distance(c) {\n      var dx = this.x - c.x;\n      var dy = this.y - c.y;\n      return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    hashCode() {\n      var result = 17;\n      result = 37 * result + Coordinate.hashCode(this.x);\n      result = 37 * result + Coordinate.hashCode(this.y);\n      return result;\n    }\n\n    setCoordinate(other) {\n      this.x = other.x;\n      this.y = other.y;\n      this.z = other.z;\n    }\n\n    getClass() {\n      return Coordinate;\n    }\n\n    get interfaces_() {\n      return [Comparable, Clonable, Serializable];\n    }\n\n  }\n\n  class DimensionalComparator {\n    constructor() {\n      DimensionalComparator.constructor_.apply(this, arguments);\n    }\n\n    static compare(a, b) {\n      if (a < b) return -1;\n      if (a > b) return 1;\n\n      if (Double.isNaN(a)) {\n        if (Double.isNaN(b)) return 0;\n        return -1;\n      }\n\n      if (Double.isNaN(b)) return 1;\n      return 0;\n    }\n\n    compare(o1, o2) {\n      var c1 = o1;\n      var c2 = o2;\n      var compX = DimensionalComparator.compare(c1.x, c2.x);\n      if (compX !== 0) return compX;\n      var compY = DimensionalComparator.compare(c1.y, c2.y);\n      if (compY !== 0) return compY;\n      if (this._dimensionsToTest <= 2) return 0;\n      var compZ = DimensionalComparator.compare(c1.z, c2.z);\n      return compZ;\n    }\n\n    getClass() {\n      return DimensionalComparator;\n    }\n\n    get interfaces_() {\n      return [Comparator];\n    }\n\n  }\n\n  DimensionalComparator.constructor_ = function () {\n    this._dimensionsToTest = 2;\n\n    if (arguments.length === 0) {\n      DimensionalComparator.constructor_.call(this, 2);\n    } else if (arguments.length === 1) {\n      let dimensionsToTest = arguments[0];\n      if (dimensionsToTest !== 2 && dimensionsToTest !== 3) throw new IllegalArgumentException(\"only 2 or 3 dimensions may be specified\");\n      this._dimensionsToTest = dimensionsToTest;\n    }\n  };\n\n  Coordinate.DimensionalComparator = DimensionalComparator;\n\n  Coordinate.constructor_ = function () {\n    this.x = null;\n    this.y = null;\n    this.z = null;\n\n    if (arguments.length === 0) {\n      Coordinate.constructor_.call(this, 0.0, 0.0);\n    } else if (arguments.length === 1) {\n      let c = arguments[0];\n      Coordinate.constructor_.call(this, c.x, c.y, c.z);\n    } else if (arguments.length === 2) {\n      let x = arguments[0],\n          y = arguments[1];\n      Coordinate.constructor_.call(this, x, y, Coordinate.NULL_ORDINATE);\n    } else if (arguments.length === 3) {\n      let x = arguments[0],\n          y = arguments[1],\n          z = arguments[2];\n      this.x = x;\n      this.y = y;\n      this.z = z;\n    }\n  };\n\n  Coordinate.serialVersionUID = 6683108902428366910;\n  Coordinate.NULL_ORDINATE = Double.NaN;\n  Coordinate.X = 0;\n  Coordinate.Y = 1;\n  Coordinate.Z = 2;\n\n  function hasInterface (o, i) {\n    return o.interfaces_ && o.interfaces_.indexOf(i) > -1;\n  }\n\n  /**\n   * @see http://download.oracle.com/javase/6/docs/api/java/util/Iterator.html\n   * @constructor\n   * @private\n   */\n  function Iterator() {}\n  /**\n   * Returns true if the iteration has more elements.\n   * @return {boolean}\n   */\n\n  Iterator.prototype.hasNext = function () {};\n  /**\n   * Returns the next element in the iteration.\n   * @return {Object}\n   */\n\n\n  Iterator.prototype.next = function () {};\n  /**\n   * Removes from the underlying collection the last element returned by the\n   * iterator (optional operation).\n   */\n\n\n  Iterator.prototype.remove = function () {};\n\n  /**\n   * @see http://download.oracle.com/javase/6/docs/api/java/util/Collection.html\n   *\n   * @constructor\n   * @private\n   */\n\n  function Collection() {}\n  /**\n   * Ensures that this collection contains the specified element (optional\n   * operation).\n   * @param {Object} e\n   * @return {boolean}\n   */\n\n  Collection.prototype.add = function () {};\n  /**\n   * Appends all of the elements in the specified collection to the end of this\n   * list, in the order that they are returned by the specified collection's\n   * iterator (optional operation).\n   * @param {javascript.util.Collection} c\n   * @return {boolean}\n   */\n\n\n  Collection.prototype.addAll = function () {};\n  /**\n   * Returns true if this collection contains no elements.\n   * @return {boolean}\n   */\n\n\n  Collection.prototype.isEmpty = function () {};\n  /**\n   * Returns an iterator over the elements in this collection.\n   * @return {javascript.util.Iterator}\n   */\n\n\n  Collection.prototype.iterator = function () {};\n  /**\n   * Returns an iterator over the elements in this collection.\n   * @return {number}\n   */\n\n\n  Collection.prototype.size = function () {};\n  /**\n   * Returns an array containing all of the elements in this collection.\n   * @return {Array}\n   */\n\n\n  Collection.prototype.toArray = function () {};\n  /**\n   * Removes a single instance of the specified element from this collection if it\n   * is present. (optional)\n   * @param {Object} e\n   * @return {boolean}\n   */\n\n\n  Collection.prototype.remove = function () {};\n\n  /**\n   * @param {string=} message Optional message\n   * @extends {Error}\n   * @constructor\n   * @private\n   */\n  function IndexOutOfBoundsException$1(message) {\n    this.message = message || '';\n  }\n  IndexOutOfBoundsException$1.prototype = new Error();\n  /**\n   * @type {string}\n   */\n\n  IndexOutOfBoundsException$1.prototype.name = 'IndexOutOfBoundsException';\n\n  /**\n   * @see http://download.oracle.com/javase/6/docs/api/java/util/List.html\n   *\n   * @extends {javascript.util.Collection}\n   * @constructor\n   * @private\n   */\n\n  function List() {}\n  List.prototype = Object.create(Collection.prototype);\n  List.prototype.constructor = List;\n  /**\n   * Returns the element at the specified position in this list.\n   * @param {number} index\n   * @return {Object}\n   */\n\n  List.prototype.get = function () {};\n  /**\n   * Replaces the element at the specified position in this list with the\n   * specified element (optional operation).\n   * @param {number} index\n   * @param {Object} e\n   * @return {Object}\n   */\n\n\n  List.prototype.set = function () {};\n  /**\n   * Returns true if this collection contains no elements.\n   * @return {boolean}\n   */\n\n\n  List.prototype.isEmpty = function () {};\n\n  /**\n   * @param {string=} message Optional message\n   * @extends {Error}\n   * @constructor\n   * @private\n   */\n  function NoSuchElementException(message) {\n    this.message = message || '';\n  }\n  NoSuchElementException.prototype = new Error();\n  /**\n   * @type {string}\n   */\n\n  NoSuchElementException.prototype.name = 'NoSuchElementException';\n\n  /**\n   * @param {string=} message Optional message\n   * @extends {Error}\n   * @constructor\n   * @private\n   */\n  function OperationNotSupported(message) {\n    this.message = message || '';\n  }\n  OperationNotSupported.prototype = new Error();\n  /**\n   * @type {string}\n   */\n\n  OperationNotSupported.prototype.name = 'OperationNotSupported';\n\n  /**\n   * @see http://download.oracle.com/javase/6/docs/api/java/util/ArrayList.html\n   *\n   * @extends List\n   * @private\n   */\n\n  function ArrayList() {\n    /**\n     * @type {Array}\n     * @private\n    */\n    this.array_ = [];\n\n    if (arguments[0] instanceof Collection) {\n      this.addAll(arguments[0]);\n    }\n  }\n  ArrayList.prototype = Object.create(List.prototype);\n  ArrayList.prototype.constructor = ArrayList;\n\n  ArrayList.prototype.ensureCapacity = function () {};\n\n  ArrayList.prototype.interfaces_ = [List, Collection];\n  /**\n   * @override\n   */\n\n  ArrayList.prototype.add = function (e) {\n    if (arguments.length === 1) {\n      this.array_.push(e);\n    } else {\n      this.array_.splice(arguments[0], 0, arguments[1]);\n    }\n\n    return true;\n  };\n\n  ArrayList.prototype.clear = function () {\n    this.array_ = [];\n  };\n  /**\n   * @override\n   */\n\n\n  ArrayList.prototype.addAll = function (c) {\n    for (var i = c.iterator(); i.hasNext();) {\n      this.add(i.next());\n    }\n\n    return true;\n  };\n  /**\n   * @override\n   */\n\n\n  ArrayList.prototype.set = function (index, element) {\n    var oldElement = this.array_[index];\n    this.array_[index] = element;\n    return oldElement;\n  };\n  /**\n   * @override\n   */\n\n\n  ArrayList.prototype.iterator = function () {\n    return new Iterator_(this);\n  };\n  /**\n   * @override\n   */\n\n\n  ArrayList.prototype.get = function (index) {\n    if (index < 0 || index >= this.size()) {\n      throw new IndexOutOfBoundsException$1();\n    }\n\n    return this.array_[index];\n  };\n  /**\n   * @override\n   */\n\n\n  ArrayList.prototype.isEmpty = function () {\n    return this.array_.length === 0;\n  };\n  /**\n   * @override\n   */\n\n\n  ArrayList.prototype.size = function () {\n    return this.array_.length;\n  };\n  /**\n   * @override\n   */\n\n\n  ArrayList.prototype.toArray = function () {\n    var array = [];\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      array.push(this.array_[i]);\n    }\n\n    return array;\n  };\n  /**\n   * @override\n   */\n\n\n  ArrayList.prototype.remove = function (o) {\n    var found = false;\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      if (this.array_[i] === o) {\n        this.array_.splice(i, 1);\n        found = true;\n        break;\n      }\n    }\n\n    return found;\n  };\n\n  ArrayList.prototype.removeAll = function (c) {\n    for (var i = c.iterator(); i.hasNext();) {\n      this.remove(i.next());\n    }\n\n    return true;\n  };\n  /**\n   * @extends {Iterator}\n   * @param {ArrayList} arrayList\n   * @constructor\n   * @private\n   */\n\n\n  var Iterator_ = function Iterator_(arrayList) {\n    /**\n     * @type {ArrayList}\n     * @private\n    */\n    this.arrayList_ = arrayList;\n    /**\n     * @type {number}\n     * @private\n    */\n\n    this.position_ = 0;\n  };\n  /**\n   * @override\n   */\n\n\n  Iterator_.prototype.next = function () {\n    if (this.position_ === this.arrayList_.size()) {\n      throw new NoSuchElementException();\n    }\n\n    return this.arrayList_.get(this.position_++);\n  };\n  /**\n   * @override\n   */\n\n\n  Iterator_.prototype.hasNext = function () {\n    if (this.position_ < this.arrayList_.size()) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\n   * TODO: should be in ListIterator\n   * @override\n   */\n\n\n  Iterator_.prototype.set = function (element) {\n    return this.arrayList_.set(this.position_ - 1, element);\n  };\n  /**\n   * @override\n   */\n\n\n  Iterator_.prototype.remove = function () {\n    this.arrayList_.remove(this.arrayList_.get(this.position_));\n  };\n\n  class CoordinateList extends ArrayList {\n    constructor() {\n      super();\n      CoordinateList.constructor_.apply(this, arguments);\n    }\n\n    getCoordinate(i) {\n      return this.get(i);\n    }\n\n    addAll() {\n      if (arguments.length === 2 && typeof arguments[1] === \"boolean\" && hasInterface(arguments[0], Collection)) {\n        let coll = arguments[0],\n            allowRepeated = arguments[1];\n        var isChanged = false;\n\n        for (var i = coll.iterator(); i.hasNext();) {\n          this.add(i.next(), allowRepeated);\n          isChanged = true;\n        }\n\n        return isChanged;\n      } else return super.addAll.apply(this, arguments);\n    }\n\n    clone() {\n      var clone = super.clone.call(this);\n\n      for (var i = 0; i < this.size(); i++) {\n        clone.add(i, this.get(i).clone());\n      }\n\n      return clone;\n    }\n\n    toCoordinateArray() {\n      return this.toArray(CoordinateList.coordArrayType);\n    }\n\n    add() {\n      if (arguments.length === 1) {\n        let coord = arguments[0];\n        super.add.call(this, coord);\n      } else if (arguments.length === 2) {\n        if (arguments[0] instanceof Array && typeof arguments[1] === \"boolean\") {\n          let coord = arguments[0],\n              allowRepeated = arguments[1];\n          this.add(coord, allowRepeated, true);\n          return true;\n        } else if (arguments[0] instanceof Coordinate && typeof arguments[1] === \"boolean\") {\n          let coord = arguments[0],\n              allowRepeated = arguments[1];\n\n          if (!allowRepeated) {\n            if (this.size() >= 1) {\n              var last = this.get(this.size() - 1);\n              if (last.equals2D(coord)) return null;\n            }\n          }\n\n          super.add.call(this, coord);\n        } else if (arguments[0] instanceof Object && typeof arguments[1] === \"boolean\") {\n          let obj = arguments[0],\n              allowRepeated = arguments[1];\n          this.add(obj, allowRepeated);\n          return true;\n        }\n      } else if (arguments.length === 3) {\n        if (typeof arguments[2] === \"boolean\" && arguments[0] instanceof Array && typeof arguments[1] === \"boolean\") {\n          let coord = arguments[0],\n              allowRepeated = arguments[1],\n              direction = arguments[2];\n\n          if (direction) {\n            for (var i = 0; i < coord.length; i++) {\n              this.add(coord[i], allowRepeated);\n            }\n          } else {\n            for (var i = coord.length - 1; i >= 0; i--) {\n              this.add(coord[i], allowRepeated);\n            }\n          }\n\n          return true;\n        } else if (typeof arguments[2] === \"boolean\" && Number.isInteger(arguments[0]) && arguments[1] instanceof Coordinate) {\n          let i = arguments[0],\n              coord = arguments[1],\n              allowRepeated = arguments[2];\n\n          if (!allowRepeated) {\n            var size = this.size();\n\n            if (size > 0) {\n              if (i > 0) {\n                var prev = this.get(i - 1);\n                if (prev.equals2D(coord)) return null;\n              }\n\n              if (i < size) {\n                var next = this.get(i);\n                if (next.equals2D(coord)) return null;\n              }\n            }\n          }\n\n          super.add.call(this, i, coord);\n        }\n      } else if (arguments.length === 4) {\n        let coord = arguments[0],\n            allowRepeated = arguments[1],\n            start = arguments[2],\n            end = arguments[3];\n        var inc = 1;\n        if (start > end) inc = -1;\n\n        for (var i = start; i !== end; i += inc) {\n          this.add(coord[i], allowRepeated);\n        }\n\n        return true;\n      }\n    }\n\n    closeRing() {\n      if (this.size() > 0) this.add(new Coordinate(this.get(0)), false);\n    }\n\n    getClass() {\n      return CoordinateList;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  CoordinateList.constructor_ = function () {\n    if (arguments.length === 0) ; else if (arguments.length === 1) {\n      let coord = arguments[0];\n      this.ensureCapacity(coord.length);\n      this.add(coord, true);\n    } else if (arguments.length === 2) {\n      let coord = arguments[0],\n          allowRepeated = arguments[1];\n      this.ensureCapacity(coord.length);\n      this.add(coord, allowRepeated);\n    }\n  };\n\n  CoordinateList.coordArrayType = new Array(0).fill(null);\n\n  class Envelope {\n    constructor() {\n      Envelope.constructor_.apply(this, arguments);\n    }\n\n    static intersects() {\n      if (arguments.length === 3) {\n        let p1 = arguments[0],\n            p2 = arguments[1],\n            q = arguments[2];\n\n        if (q.x >= (p1.x < p2.x ? p1.x : p2.x) && q.x <= (p1.x > p2.x ? p1.x : p2.x) && q.y >= (p1.y < p2.y ? p1.y : p2.y) && q.y <= (p1.y > p2.y ? p1.y : p2.y)) {\n          return true;\n        }\n\n        return false;\n      } else if (arguments.length === 4) {\n        let p1 = arguments[0],\n            p2 = arguments[1],\n            q1 = arguments[2],\n            q2 = arguments[3];\n        var minq = Math.min(q1.x, q2.x);\n        var maxq = Math.max(q1.x, q2.x);\n        var minp = Math.min(p1.x, p2.x);\n        var maxp = Math.max(p1.x, p2.x);\n        if (minp > maxq) return false;\n        if (maxp < minq) return false;\n        minq = Math.min(q1.y, q2.y);\n        maxq = Math.max(q1.y, q2.y);\n        minp = Math.min(p1.y, p2.y);\n        maxp = Math.max(p1.y, p2.y);\n        if (minp > maxq) return false;\n        if (maxp < minq) return false;\n        return true;\n      }\n    }\n\n    getArea() {\n      return this.getWidth() * this.getHeight();\n    }\n\n    equals(other) {\n      if (!(other instanceof Envelope)) {\n        return false;\n      }\n\n      var otherEnvelope = other;\n\n      if (this.isNull()) {\n        return otherEnvelope.isNull();\n      }\n\n      return this._maxx === otherEnvelope.getMaxX() && this._maxy === otherEnvelope.getMaxY() && this._minx === otherEnvelope.getMinX() && this._miny === otherEnvelope.getMinY();\n    }\n\n    intersection(env) {\n      if (this.isNull() || env.isNull() || !this.intersects(env)) return new Envelope();\n      var intMinX = this._minx > env._minx ? this._minx : env._minx;\n      var intMinY = this._miny > env._miny ? this._miny : env._miny;\n      var intMaxX = this._maxx < env._maxx ? this._maxx : env._maxx;\n      var intMaxY = this._maxy < env._maxy ? this._maxy : env._maxy;\n      return new Envelope(intMinX, intMaxX, intMinY, intMaxY);\n    }\n\n    isNull() {\n      return this._maxx < this._minx;\n    }\n\n    getMaxX() {\n      return this._maxx;\n    }\n\n    covers() {\n      if (arguments.length === 1) {\n        if (arguments[0] instanceof Coordinate) {\n          let p = arguments[0];\n          return this.covers(p.x, p.y);\n        } else if (arguments[0] instanceof Envelope) {\n          let other = arguments[0];\n\n          if (this.isNull() || other.isNull()) {\n            return false;\n          }\n\n          return other.getMinX() >= this._minx && other.getMaxX() <= this._maxx && other.getMinY() >= this._miny && other.getMaxY() <= this._maxy;\n        }\n      } else if (arguments.length === 2) {\n        let x = arguments[0],\n            y = arguments[1];\n        if (this.isNull()) return false;\n        return x >= this._minx && x <= this._maxx && y >= this._miny && y <= this._maxy;\n      }\n    }\n\n    intersects() {\n      if (arguments.length === 1) {\n        if (arguments[0] instanceof Envelope) {\n          let other = arguments[0];\n\n          if (this.isNull() || other.isNull()) {\n            return false;\n          }\n\n          return !(other._minx > this._maxx || other._maxx < this._minx || other._miny > this._maxy || other._maxy < this._miny);\n        } else if (arguments[0] instanceof Coordinate) {\n          let p = arguments[0];\n          return this.intersects(p.x, p.y);\n        }\n      } else if (arguments.length === 2) {\n        if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n          let a = arguments[0],\n              b = arguments[1];\n\n          if (this.isNull()) {\n            return false;\n          }\n\n          var envminx = a.x < b.x ? a.x : b.x;\n          if (envminx > this._maxx) return false;\n          var envmaxx = a.x > b.x ? a.x : b.x;\n          if (envmaxx < this._minx) return false;\n          var envminy = a.y < b.y ? a.y : b.y;\n          if (envminy > this._maxy) return false;\n          var envmaxy = a.y > b.y ? a.y : b.y;\n          if (envmaxy < this._miny) return false;\n          return true;\n        } else if (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\n          let x = arguments[0],\n              y = arguments[1];\n          if (this.isNull()) return false;\n          return !(x > this._maxx || x < this._minx || y > this._maxy || y < this._miny);\n        }\n      }\n    }\n\n    getMinY() {\n      return this._miny;\n    }\n\n    getMinX() {\n      return this._minx;\n    }\n\n    expandToInclude() {\n      if (arguments.length === 1) {\n        if (arguments[0] instanceof Coordinate) {\n          let p = arguments[0];\n          this.expandToInclude(p.x, p.y);\n        } else if (arguments[0] instanceof Envelope) {\n          let other = arguments[0];\n\n          if (other.isNull()) {\n            return null;\n          }\n\n          if (this.isNull()) {\n            this._minx = other.getMinX();\n            this._maxx = other.getMaxX();\n            this._miny = other.getMinY();\n            this._maxy = other.getMaxY();\n          } else {\n            if (other._minx < this._minx) {\n              this._minx = other._minx;\n            }\n\n            if (other._maxx > this._maxx) {\n              this._maxx = other._maxx;\n            }\n\n            if (other._miny < this._miny) {\n              this._miny = other._miny;\n            }\n\n            if (other._maxy > this._maxy) {\n              this._maxy = other._maxy;\n            }\n          }\n        }\n      } else if (arguments.length === 2) {\n        let x = arguments[0],\n            y = arguments[1];\n\n        if (this.isNull()) {\n          this._minx = x;\n          this._maxx = x;\n          this._miny = y;\n          this._maxy = y;\n        } else {\n          if (x < this._minx) {\n            this._minx = x;\n          }\n\n          if (x > this._maxx) {\n            this._maxx = x;\n          }\n\n          if (y < this._miny) {\n            this._miny = y;\n          }\n\n          if (y > this._maxy) {\n            this._maxy = y;\n          }\n        }\n      }\n    }\n\n    minExtent() {\n      if (this.isNull()) return 0.0;\n      var w = this.getWidth();\n      var h = this.getHeight();\n      if (w < h) return w;\n      return h;\n    }\n\n    getWidth() {\n      if (this.isNull()) {\n        return 0;\n      }\n\n      return this._maxx - this._minx;\n    }\n\n    compareTo(o) {\n      var env = o;\n\n      if (this.isNull()) {\n        if (env.isNull()) return 0;\n        return -1;\n      } else {\n        if (env.isNull()) return 1;\n      }\n\n      if (this._minx < env._minx) return -1;\n      if (this._minx > env._minx) return 1;\n      if (this._miny < env._miny) return -1;\n      if (this._miny > env._miny) return 1;\n      if (this._maxx < env._maxx) return -1;\n      if (this._maxx > env._maxx) return 1;\n      if (this._maxy < env._maxy) return -1;\n      if (this._maxy > env._maxy) return 1;\n      return 0;\n    }\n\n    translate(transX, transY) {\n      if (this.isNull()) {\n        return null;\n      }\n\n      this.init(this.getMinX() + transX, this.getMaxX() + transX, this.getMinY() + transY, this.getMaxY() + transY);\n    }\n\n    toString() {\n      return \"Env[\" + this._minx + \" : \" + this._maxx + \", \" + this._miny + \" : \" + this._maxy + \"]\";\n    }\n\n    setToNull() {\n      this._minx = 0;\n      this._maxx = -1;\n      this._miny = 0;\n      this._maxy = -1;\n    }\n\n    getHeight() {\n      if (this.isNull()) {\n        return 0;\n      }\n\n      return this._maxy - this._miny;\n    }\n\n    maxExtent() {\n      if (this.isNull()) return 0.0;\n      var w = this.getWidth();\n      var h = this.getHeight();\n      if (w > h) return w;\n      return h;\n    }\n\n    expandBy() {\n      if (arguments.length === 1) {\n        let distance = arguments[0];\n        this.expandBy(distance, distance);\n      } else if (arguments.length === 2) {\n        let deltaX = arguments[0],\n            deltaY = arguments[1];\n        if (this.isNull()) return null;\n        this._minx -= deltaX;\n        this._maxx += deltaX;\n        this._miny -= deltaY;\n        this._maxy += deltaY;\n        if (this._minx > this._maxx || this._miny > this._maxy) this.setToNull();\n      }\n    }\n\n    contains() {\n      if (arguments.length === 1) {\n        if (arguments[0] instanceof Envelope) {\n          let other = arguments[0];\n          return this.covers(other);\n        } else if (arguments[0] instanceof Coordinate) {\n          let p = arguments[0];\n          return this.covers(p);\n        }\n      } else if (arguments.length === 2) {\n        let x = arguments[0],\n            y = arguments[1];\n        return this.covers(x, y);\n      }\n    }\n\n    centre() {\n      if (this.isNull()) return null;\n      return new Coordinate((this.getMinX() + this.getMaxX()) / 2.0, (this.getMinY() + this.getMaxY()) / 2.0);\n    }\n\n    init() {\n      if (arguments.length === 0) {\n        this.setToNull();\n      } else if (arguments.length === 1) {\n        if (arguments[0] instanceof Coordinate) {\n          let p = arguments[0];\n          this.init(p.x, p.x, p.y, p.y);\n        } else if (arguments[0] instanceof Envelope) {\n          let env = arguments[0];\n          this._minx = env._minx;\n          this._maxx = env._maxx;\n          this._miny = env._miny;\n          this._maxy = env._maxy;\n        }\n      } else if (arguments.length === 2) {\n        let p1 = arguments[0],\n            p2 = arguments[1];\n        this.init(p1.x, p2.x, p1.y, p2.y);\n      } else if (arguments.length === 4) {\n        let x1 = arguments[0],\n            x2 = arguments[1],\n            y1 = arguments[2],\n            y2 = arguments[3];\n\n        if (x1 < x2) {\n          this._minx = x1;\n          this._maxx = x2;\n        } else {\n          this._minx = x2;\n          this._maxx = x1;\n        }\n\n        if (y1 < y2) {\n          this._miny = y1;\n          this._maxy = y2;\n        } else {\n          this._miny = y2;\n          this._maxy = y1;\n        }\n      }\n    }\n\n    getMaxY() {\n      return this._maxy;\n    }\n\n    distance(env) {\n      if (this.intersects(env)) return 0;\n      var dx = 0.0;\n      if (this._maxx < env._minx) dx = env._minx - this._maxx;else if (this._minx > env._maxx) dx = this._minx - env._maxx;\n      var dy = 0.0;\n      if (this._maxy < env._miny) dy = env._miny - this._maxy;else if (this._miny > env._maxy) dy = this._miny - env._maxy;\n      if (dx === 0.0) return dy;\n      if (dy === 0.0) return dx;\n      return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    hashCode() {\n      var result = 17;\n      result = 37 * result + Coordinate.hashCode(this._minx);\n      result = 37 * result + Coordinate.hashCode(this._maxx);\n      result = 37 * result + Coordinate.hashCode(this._miny);\n      result = 37 * result + Coordinate.hashCode(this._maxy);\n      return result;\n    }\n\n    getClass() {\n      return Envelope;\n    }\n\n    get interfaces_() {\n      return [Comparable, Serializable];\n    }\n\n  }\n\n  Envelope.constructor_ = function () {\n    this._minx = null;\n    this._maxx = null;\n    this._miny = null;\n    this._maxy = null;\n\n    if (arguments.length === 0) {\n      this.init();\n    } else if (arguments.length === 1) {\n      if (arguments[0] instanceof Coordinate) {\n        let p = arguments[0];\n        this.init(p.x, p.x, p.y, p.y);\n      } else if (arguments[0] instanceof Envelope) {\n        let env = arguments[0];\n        this.init(env);\n      }\n    } else if (arguments.length === 2) {\n      let p1 = arguments[0],\n          p2 = arguments[1];\n      this.init(p1.x, p2.x, p1.y, p2.y);\n    } else if (arguments.length === 4) {\n      let x1 = arguments[0],\n          x2 = arguments[1],\n          y1 = arguments[2],\n          y2 = arguments[3];\n      this.init(x1, x2, y1, y2);\n    }\n  };\n\n  Envelope.serialVersionUID = 5873921885273102420;\n\n  function Exception() {}\n\n  class NotRepresentableException extends Exception {\n    constructor() {\n      super();\n      NotRepresentableException.constructor_.apply(this, arguments);\n    }\n\n    getClass() {\n      return NotRepresentableException;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  NotRepresentableException.constructor_ = function () {\n    Exception.constructor_.call(this, \"Projective point not representable on the Cartesian plane.\");\n  };\n\n  function StringBuffer(str) {\n    this.str = str;\n  }\n\n  StringBuffer.prototype.append = function (e) {\n    this.str += e;\n  };\n\n  StringBuffer.prototype.setCharAt = function (i, c) {\n    this.str = this.str.substr(0, i) + c + this.str.substr(i + 1);\n  };\n\n  StringBuffer.prototype.toString = function (e) {\n    return this.str;\n  };\n\n  function Integer(value) {\n    this.value = value;\n  }\n\n  Integer.prototype.intValue = function () {\n    return this.value;\n  };\n\n  Integer.prototype.compareTo = function (o) {\n    if (this.value < o) return -1;\n    if (this.value > o) return 1;\n    return 0;\n  };\n\n  Integer.isNaN = n => Number.isNaN(n);\n\n  function Character() {}\n\n  Character.isWhitespace = c => c <= 32 && c >= 0 || c == 127;\n\n  Character.toUpperCase = c => c.toUpperCase();\n\n  class DD {\n    constructor() {\n      DD.constructor_.apply(this, arguments);\n    }\n\n    static sqr(x) {\n      return DD.valueOf(x).selfMultiply(x);\n    }\n\n    static valueOf() {\n      if (typeof arguments[0] === \"string\") {\n        let str = arguments[0];\n        return DD.parse(str);\n      } else if (typeof arguments[0] === \"number\") {\n        let x = arguments[0];\n        return new DD(x);\n      }\n    }\n\n    static sqrt(x) {\n      return DD.valueOf(x).sqrt();\n    }\n\n    static parse(str) {\n      var i = 0;\n      var strlen = str.length;\n\n      while (Character.isWhitespace(str.charAt(i))) i++;\n\n      var isNegative = false;\n\n      if (i < strlen) {\n        var signCh = str.charAt(i);\n\n        if (signCh === '-' || signCh === '+') {\n          i++;\n          if (signCh === '-') isNegative = true;\n        }\n      }\n\n      var val = new DD();\n      var numDigits = 0;\n      var numBeforeDec = 0;\n      var exp = 0;\n\n      while (true) {\n        if (i >= strlen) break;\n        var ch = str.charAt(i);\n        i++;\n\n        if (Character.isDigit(ch)) {\n          var d = ch - '0';\n          val.selfMultiply(DD.TEN);\n          val.selfAdd(d);\n          numDigits++;\n          continue;\n        }\n\n        if (ch === '.') {\n          numBeforeDec = numDigits;\n          continue;\n        }\n\n        if (ch === 'e' || ch === 'E') {\n          var expStr = str.substring(i);\n\n          try {\n            exp = Integer.parseInt(expStr);\n          } catch (ex) {\n            if (ex instanceof NumberFormatException) {\n              throw new NumberFormatException(\"Invalid exponent \" + expStr + \" in string \" + str);\n            } else throw ex;\n          } finally {}\n\n          break;\n        }\n\n        throw new NumberFormatException(\"Unexpected character '\" + ch + \"' at position \" + i + \" in string \" + str);\n      }\n\n      var val2 = val;\n      var numDecPlaces = numDigits - numBeforeDec - exp;\n\n      if (numDecPlaces === 0) {\n        val2 = val;\n      } else if (numDecPlaces > 0) {\n        var scale = DD.TEN.pow(numDecPlaces);\n        val2 = val.divide(scale);\n      } else if (numDecPlaces < 0) {\n        var scale = DD.TEN.pow(-numDecPlaces);\n        val2 = val.multiply(scale);\n      }\n\n      if (isNegative) {\n        return val2.negate();\n      }\n\n      return val2;\n    }\n\n    static createNaN() {\n      return new DD(Double.NaN, Double.NaN);\n    }\n\n    static copy(dd) {\n      return new DD(dd);\n    }\n\n    static magnitude(x) {\n      var xAbs = Math.abs(x);\n      var xLog10 = Math.log(xAbs) / Math.log(10);\n      var xMag = Math.trunc(Math.floor(xLog10));\n      var xApprox = Math.pow(10, xMag);\n      if (xApprox * 10 <= xAbs) xMag += 1;\n      return xMag;\n    }\n\n    static stringOfChar(ch, len) {\n      var buf = new StringBuffer();\n\n      for (var i = 0; i < len; i++) {\n        buf.append(ch);\n      }\n\n      return buf.toString();\n    }\n\n    le(y) {\n      return this._hi < y._hi || this._hi === y._hi && this._lo <= y._lo;\n    }\n\n    extractSignificantDigits(insertDecimalPoint, magnitude) {\n      var y = this.abs();\n      var mag = DD.magnitude(y._hi);\n      var scale = DD.TEN.pow(mag);\n      y = y.divide(scale);\n\n      if (y.gt(DD.TEN)) {\n        y = y.divide(DD.TEN);\n        mag += 1;\n      } else if (y.lt(DD.ONE)) {\n        y = y.multiply(DD.TEN);\n        mag -= 1;\n      }\n\n      var decimalPointPos = mag + 1;\n      var buf = new StringBuffer();\n      var numDigits = DD.MAX_PRINT_DIGITS - 1;\n\n      for (var i = 0; i <= numDigits; i++) {\n        if (insertDecimalPoint && i === decimalPointPos) {\n          buf.append('.');\n        }\n\n        var digit = Math.trunc(y._hi);\n\n        if (digit < 0) {\n          break;\n        }\n\n        var rebiasBy10 = false;\n        var digitChar = 0;\n\n        if (digit > 9) {\n          rebiasBy10 = true;\n          digitChar = '9';\n        } else {\n          digitChar = '0' + digit;\n        }\n\n        buf.append(digitChar);\n        y = y.subtract(DD.valueOf(digit)).multiply(DD.TEN);\n        if (rebiasBy10) y.selfAdd(DD.TEN);\n        var continueExtractingDigits = true;\n        var remMag = DD.magnitude(y._hi);\n        if (remMag < 0 && Math.abs(remMag) >= numDigits - i) continueExtractingDigits = false;\n        if (!continueExtractingDigits) break;\n      }\n\n      magnitude[0] = mag;\n      return buf.toString();\n    }\n\n    sqr() {\n      return this.multiply(this);\n    }\n\n    doubleValue() {\n      return this._hi + this._lo;\n    }\n\n    subtract() {\n      if (arguments[0] instanceof DD) {\n        let y = arguments[0];\n        return this.add(y.negate());\n      } else if (typeof arguments[0] === \"number\") {\n        let y = arguments[0];\n        return this.add(-y);\n      }\n    }\n\n    equals() {\n      if (arguments.length === 1 && arguments[0] instanceof DD) {\n        let y = arguments[0];\n        return this._hi === y._hi && this._lo === y._lo;\n      }\n    }\n\n    isZero() {\n      return this._hi === 0.0 && this._lo === 0.0;\n    }\n\n    selfSubtract() {\n      if (arguments[0] instanceof DD) {\n        let y = arguments[0];\n        if (this.isNaN()) return this;\n        return this.selfAdd(-y._hi, -y._lo);\n      } else if (typeof arguments[0] === \"number\") {\n        let y = arguments[0];\n        if (this.isNaN()) return this;\n        return this.selfAdd(-y, 0.0);\n      }\n    }\n\n    getSpecialNumberString() {\n      if (this.isZero()) return \"0.0\";\n      if (this.isNaN()) return \"NaN \";\n      return null;\n    }\n\n    min(x) {\n      if (this.le(x)) {\n        return this;\n      } else {\n        return x;\n      }\n    }\n\n    selfDivide() {\n      if (arguments.length === 1) {\n        if (arguments[0] instanceof DD) {\n          let y = arguments[0];\n          return this.selfDivide(y._hi, y._lo);\n        } else if (typeof arguments[0] === \"number\") {\n          let y = arguments[0];\n          return this.selfDivide(y, 0.0);\n        }\n      } else if (arguments.length === 2) {\n        let yhi = arguments[0],\n            ylo = arguments[1];\n        var hc = null,\n            tc = null,\n            hy = null,\n            ty = null,\n            C = null,\n            c = null,\n            U = null,\n            u = null;\n        C = this._hi / yhi;\n        c = DD.SPLIT * C;\n        hc = c - C;\n        u = DD.SPLIT * yhi;\n        hc = c - hc;\n        tc = C - hc;\n        hy = u - yhi;\n        U = C * yhi;\n        hy = u - hy;\n        ty = yhi - hy;\n        u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n        c = (this._hi - U - u + this._lo - C * ylo) / yhi;\n        u = C + c;\n        this._hi = u;\n        this._lo = C - u + c;\n        return this;\n      }\n    }\n\n    dump() {\n      return \"DD<\" + this._hi + \", \" + this._lo + \">\";\n    }\n\n    divide() {\n      if (arguments[0] instanceof DD) {\n        let y = arguments[0];\n        var hc = null,\n            tc = null,\n            hy = null,\n            ty = null,\n            C = null,\n            c = null,\n            U = null,\n            u = null;\n        C = this._hi / y._hi;\n        c = DD.SPLIT * C;\n        hc = c - C;\n        u = DD.SPLIT * y._hi;\n        hc = c - hc;\n        tc = C - hc;\n        hy = u - y._hi;\n        U = C * y._hi;\n        hy = u - hy;\n        ty = y._hi - hy;\n        u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n        c = (this._hi - U - u + this._lo - C * y._lo) / y._hi;\n        u = C + c;\n        var zhi = u;\n        var zlo = C - u + c;\n        return new DD(zhi, zlo);\n      } else if (typeof arguments[0] === \"number\") {\n        let y = arguments[0];\n        if (Double.isNaN(y)) return DD.createNaN();\n        return DD.copy(this).selfDivide(y, 0.0);\n      }\n    }\n\n    ge(y) {\n      return this._hi > y._hi || this._hi === y._hi && this._lo >= y._lo;\n    }\n\n    pow(exp) {\n      if (exp === 0.0) return DD.valueOf(1.0);\n      var r = new DD(this);\n      var s = DD.valueOf(1.0);\n      var n = Math.abs(exp);\n\n      if (n > 1) {\n        while (n > 0) {\n          if (n % 2 === 1) {\n            s.selfMultiply(r);\n          }\n\n          n /= 2;\n          if (n > 0) r = r.sqr();\n        }\n      } else {\n        s = r;\n      }\n\n      if (exp < 0) return s.reciprocal();\n      return s;\n    }\n\n    ceil() {\n      if (this.isNaN()) return DD.NaN;\n      var fhi = Math.ceil(this._hi);\n      var flo = 0.0;\n\n      if (fhi === this._hi) {\n        flo = Math.ceil(this._lo);\n      }\n\n      return new DD(fhi, flo);\n    }\n\n    compareTo(o) {\n      var other = o;\n      if (this._hi < other._hi) return -1;\n      if (this._hi > other._hi) return 1;\n      if (this._lo < other._lo) return -1;\n      if (this._lo > other._lo) return 1;\n      return 0;\n    }\n\n    rint() {\n      if (this.isNaN()) return this;\n      var plus5 = this.add(0.5);\n      return plus5.floor();\n    }\n\n    setValue() {\n      if (arguments[0] instanceof DD) {\n        let value = arguments[0];\n        this.init(value);\n        return this;\n      } else if (typeof arguments[0] === \"number\") {\n        let value = arguments[0];\n        this.init(value);\n        return this;\n      }\n    }\n\n    max(x) {\n      if (this.ge(x)) {\n        return this;\n      } else {\n        return x;\n      }\n    }\n\n    sqrt() {\n      if (this.isZero()) return DD.valueOf(0.0);\n\n      if (this.isNegative()) {\n        return DD.NaN;\n      }\n\n      var x = 1.0 / Math.sqrt(this._hi);\n      var ax = this._hi * x;\n      var axdd = DD.valueOf(ax);\n      var diffSq = this.subtract(axdd.sqr());\n      var d2 = diffSq._hi * (x * 0.5);\n      return axdd.add(d2);\n    }\n\n    selfAdd() {\n      if (arguments.length === 1) {\n        if (arguments[0] instanceof DD) {\n          let y = arguments[0];\n          return this.selfAdd(y._hi, y._lo);\n        } else if (typeof arguments[0] === \"number\") {\n          let y = arguments[0];\n          var H = null,\n              h = null,\n              S = null,\n              s = null,\n              e = null,\n              f = null;\n          S = this._hi + y;\n          e = S - this._hi;\n          s = S - e;\n          s = y - e + (this._hi - s);\n          f = s + this._lo;\n          H = S + f;\n          h = f + (S - H);\n          this._hi = H + h;\n          this._lo = h + (H - this._hi);\n          return this;\n        }\n      } else if (arguments.length === 2) {\n        let yhi = arguments[0],\n            ylo = arguments[1];\n        var H = null,\n            h = null,\n            T = null,\n            t = null,\n            S = null,\n            s = null,\n            e = null,\n            f = null;\n        S = this._hi + yhi;\n        T = this._lo + ylo;\n        e = S - this._hi;\n        f = T - this._lo;\n        s = S - e;\n        t = T - f;\n        s = yhi - e + (this._hi - s);\n        t = ylo - f + (this._lo - t);\n        e = s + T;\n        H = S + e;\n        h = e + (S - H);\n        e = t + h;\n        var zhi = H + e;\n        var zlo = e + (H - zhi);\n        this._hi = zhi;\n        this._lo = zlo;\n        return this;\n      }\n    }\n\n    selfMultiply() {\n      if (arguments.length === 1) {\n        if (arguments[0] instanceof DD) {\n          let y = arguments[0];\n          return this.selfMultiply(y._hi, y._lo);\n        } else if (typeof arguments[0] === \"number\") {\n          let y = arguments[0];\n          return this.selfMultiply(y, 0.0);\n        }\n      } else if (arguments.length === 2) {\n        let yhi = arguments[0],\n            ylo = arguments[1];\n        var hx = null,\n            tx = null,\n            hy = null,\n            ty = null,\n            C = null,\n            c = null;\n        C = DD.SPLIT * this._hi;\n        hx = C - this._hi;\n        c = DD.SPLIT * yhi;\n        hx = C - hx;\n        tx = this._hi - hx;\n        hy = c - yhi;\n        C = this._hi * yhi;\n        hy = c - hy;\n        ty = yhi - hy;\n        c = hx * hy - C + hx * ty + tx * hy + tx * ty + (this._hi * ylo + this._lo * yhi);\n        var zhi = C + c;\n        hx = C - zhi;\n        var zlo = c + hx;\n        this._hi = zhi;\n        this._lo = zlo;\n        return this;\n      }\n    }\n\n    selfSqr() {\n      return this.selfMultiply(this);\n    }\n\n    floor() {\n      if (this.isNaN()) return DD.NaN;\n      var fhi = Math.floor(this._hi);\n      var flo = 0.0;\n\n      if (fhi === this._hi) {\n        flo = Math.floor(this._lo);\n      }\n\n      return new DD(fhi, flo);\n    }\n\n    negate() {\n      if (this.isNaN()) return this;\n      return new DD(-this._hi, -this._lo);\n    }\n\n    clone() {\n      try {\n        return null;\n      } catch (ex) {\n        if (ex instanceof CloneNotSupportedException) {\n          return null;\n        } else throw ex;\n      } finally {}\n    }\n\n    multiply() {\n      if (arguments[0] instanceof DD) {\n        let y = arguments[0];\n        if (y.isNaN()) return DD.createNaN();\n        return DD.copy(this).selfMultiply(y);\n      } else if (typeof arguments[0] === \"number\") {\n        let y = arguments[0];\n        if (Double.isNaN(y)) return DD.createNaN();\n        return DD.copy(this).selfMultiply(y, 0.0);\n      }\n    }\n\n    isNaN() {\n      return Double.isNaN(this._hi);\n    }\n\n    intValue() {\n      return Math.trunc(this._hi);\n    }\n\n    toString() {\n      var mag = DD.magnitude(this._hi);\n      if (mag >= -3 && mag <= 20) return this.toStandardNotation();\n      return this.toSciNotation();\n    }\n\n    toStandardNotation() {\n      var specialStr = this.getSpecialNumberString();\n      if (specialStr !== null) return specialStr;\n      var magnitude = new Array(1).fill(null);\n      var sigDigits = this.extractSignificantDigits(true, magnitude);\n      var decimalPointPos = magnitude[0] + 1;\n      var num = sigDigits;\n\n      if (sigDigits.charAt(0) === '.') {\n        num = \"0\" + sigDigits;\n      } else if (decimalPointPos < 0) {\n        num = \"0.\" + DD.stringOfChar('0', -decimalPointPos) + sigDigits;\n      } else if (sigDigits.indexOf('.') === -1) {\n        var numZeroes = decimalPointPos - sigDigits.length;\n        var zeroes = DD.stringOfChar('0', numZeroes);\n        num = sigDigits + zeroes + \".0\";\n      }\n\n      if (this.isNegative()) return \"-\" + num;\n      return num;\n    }\n\n    reciprocal() {\n      var hc = null,\n          tc = null,\n          hy = null,\n          ty = null,\n          C = null,\n          c = null,\n          U = null,\n          u = null;\n      C = 1.0 / this._hi;\n      c = DD.SPLIT * C;\n      hc = c - C;\n      u = DD.SPLIT * this._hi;\n      hc = c - hc;\n      tc = C - hc;\n      hy = u - this._hi;\n      U = C * this._hi;\n      hy = u - hy;\n      ty = this._hi - hy;\n      u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n      c = (1.0 - U - u - C * this._lo) / this._hi;\n      var zhi = C + c;\n      var zlo = C - zhi + c;\n      return new DD(zhi, zlo);\n    }\n\n    toSciNotation() {\n      if (this.isZero()) return DD.SCI_NOT_ZERO;\n      var specialStr = this.getSpecialNumberString();\n      if (specialStr !== null) return specialStr;\n      var magnitude = new Array(1).fill(null);\n      var digits = this.extractSignificantDigits(false, magnitude);\n      var expStr = DD.SCI_NOT_EXPONENT_CHAR + magnitude[0];\n\n      if (digits.charAt(0) === '0') {\n        throw new IllegalStateException(\"Found leading zero: \" + digits);\n      }\n\n      var trailingDigits = \"\";\n      if (digits.length > 1) trailingDigits = digits.substring(1);\n      var digitsWithDecimal = digits.charAt(0) + \".\" + trailingDigits;\n      if (this.isNegative()) return \"-\" + digitsWithDecimal + expStr;\n      return digitsWithDecimal + expStr;\n    }\n\n    abs() {\n      if (this.isNaN()) return DD.NaN;\n      if (this.isNegative()) return this.negate();\n      return new DD(this);\n    }\n\n    isPositive() {\n      return this._hi > 0.0 || this._hi === 0.0 && this._lo > 0.0;\n    }\n\n    lt(y) {\n      return this._hi < y._hi || this._hi === y._hi && this._lo < y._lo;\n    }\n\n    add() {\n      if (arguments[0] instanceof DD) {\n        let y = arguments[0];\n        return DD.copy(this).selfAdd(y);\n      } else if (typeof arguments[0] === \"number\") {\n        let y = arguments[0];\n        return DD.copy(this).selfAdd(y);\n      }\n    }\n\n    init() {\n      if (arguments.length === 1) {\n        if (typeof arguments[0] === \"number\") {\n          let x = arguments[0];\n          this._hi = x;\n          this._lo = 0.0;\n        } else if (arguments[0] instanceof DD) {\n          let dd = arguments[0];\n          this._hi = dd._hi;\n          this._lo = dd._lo;\n        }\n      } else if (arguments.length === 2) {\n        let hi = arguments[0],\n            lo = arguments[1];\n        this._hi = hi;\n        this._lo = lo;\n      }\n    }\n\n    gt(y) {\n      return this._hi > y._hi || this._hi === y._hi && this._lo > y._lo;\n    }\n\n    isNegative() {\n      return this._hi < 0.0 || this._hi === 0.0 && this._lo < 0.0;\n    }\n\n    trunc() {\n      if (this.isNaN()) return DD.NaN;\n      if (this.isPositive()) return this.floor();else return this.ceil();\n    }\n\n    signum() {\n      if (this._hi > 0) return 1;\n      if (this._hi < 0) return -1;\n      if (this._lo > 0) return 1;\n      if (this._lo < 0) return -1;\n      return 0;\n    }\n\n    getClass() {\n      return DD;\n    }\n\n    get interfaces_() {\n      return [Serializable, Comparable, Clonable];\n    }\n\n  }\n\n  DD.constructor_ = function () {\n    this._hi = 0.0;\n    this._lo = 0.0;\n\n    if (arguments.length === 0) {\n      this.init(0.0);\n    } else if (arguments.length === 1) {\n      if (typeof arguments[0] === \"number\") {\n        let x = arguments[0];\n        this.init(x);\n      } else if (arguments[0] instanceof DD) {\n        let dd = arguments[0];\n        this.init(dd);\n      } else if (typeof arguments[0] === \"string\") {\n        let str = arguments[0];\n        DD.constructor_.call(this, DD.parse(str));\n      }\n    } else if (arguments.length === 2) {\n      let hi = arguments[0],\n          lo = arguments[1];\n      this.init(hi, lo);\n    }\n  };\n\n  DD.PI = new DD(3.141592653589793116e+00, 1.224646799147353207e-16);\n  DD.TWO_PI = new DD(6.283185307179586232e+00, 2.449293598294706414e-16);\n  DD.PI_2 = new DD(1.570796326794896558e+00, 6.123233995736766036e-17);\n  DD.E = new DD(2.718281828459045091e+00, 1.445646891729250158e-16);\n  DD.NaN = new DD(Double.NaN, Double.NaN);\n  DD.EPS = 1.23259516440783e-32;\n  DD.SPLIT = 134217729.0;\n  DD.MAX_PRINT_DIGITS = 32;\n  DD.TEN = DD.valueOf(10.0);\n  DD.ONE = DD.valueOf(1.0);\n  DD.SCI_NOT_EXPONENT_CHAR = \"E\";\n  DD.SCI_NOT_ZERO = \"0.0E0\";\n\n  class CGAlgorithmsDD {\n    constructor() {\n      CGAlgorithmsDD.constructor_.apply(this, arguments);\n    }\n\n    static orientationIndex(p1, p2, q) {\n      var index = CGAlgorithmsDD.orientationIndexFilter(p1, p2, q);\n      if (index <= 1) return index;\n      var dx1 = DD.valueOf(p2.x).selfAdd(-p1.x);\n      var dy1 = DD.valueOf(p2.y).selfAdd(-p1.y);\n      var dx2 = DD.valueOf(q.x).selfAdd(-p2.x);\n      var dy2 = DD.valueOf(q.y).selfAdd(-p2.y);\n      return dx1.selfMultiply(dy2).selfSubtract(dy1.selfMultiply(dx2)).signum();\n    }\n\n    static signOfDet2x2() {\n      if (arguments[3] instanceof DD && arguments[2] instanceof DD && arguments[0] instanceof DD && arguments[1] instanceof DD) {\n        let x1 = arguments[0],\n            y1 = arguments[1],\n            x2 = arguments[2],\n            y2 = arguments[3];\n        var det = x1.multiply(y2).selfSubtract(y1.multiply(x2));\n        return det.signum();\n      } else if (typeof arguments[3] === \"number\" && typeof arguments[2] === \"number\" && typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\n        let dx1 = arguments[0],\n            dy1 = arguments[1],\n            dx2 = arguments[2],\n            dy2 = arguments[3];\n        var x1 = DD.valueOf(dx1);\n        var y1 = DD.valueOf(dy1);\n        var x2 = DD.valueOf(dx2);\n        var y2 = DD.valueOf(dy2);\n        var det = x1.multiply(y2).selfSubtract(y1.multiply(x2));\n        return det.signum();\n      }\n    }\n\n    static intersection(p1, p2, q1, q2) {\n      var denom1 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p2.x).selfSubtract(p1.x));\n      var denom2 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p2.y).selfSubtract(p1.y));\n      var denom = denom1.subtract(denom2);\n      var numx1 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n      var numx2 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n      var numx = numx1.subtract(numx2);\n      var fracP = numx.selfDivide(denom).doubleValue();\n      var x = DD.valueOf(p1.x).selfAdd(DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(fracP)).doubleValue();\n      var numy1 = DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n      var numy2 = DD.valueOf(p2.y).selfSubtract(p1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n      var numy = numy1.subtract(numy2);\n      var fracQ = numy.selfDivide(denom).doubleValue();\n      var y = DD.valueOf(q1.y).selfAdd(DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(fracQ)).doubleValue();\n      return new Coordinate(x, y);\n    }\n\n    static orientationIndexFilter(pa, pb, pc) {\n      var detsum = null;\n      var detleft = (pa.x - pc.x) * (pb.y - pc.y);\n      var detright = (pa.y - pc.y) * (pb.x - pc.x);\n      var det = detleft - detright;\n\n      if (detleft > 0.0) {\n        if (detright <= 0.0) {\n          return CGAlgorithmsDD.signum(det);\n        } else {\n          detsum = detleft + detright;\n        }\n      } else if (detleft < 0.0) {\n        if (detright >= 0.0) {\n          return CGAlgorithmsDD.signum(det);\n        } else {\n          detsum = -detleft - detright;\n        }\n      } else {\n        return CGAlgorithmsDD.signum(det);\n      }\n\n      var errbound = CGAlgorithmsDD.DP_SAFE_EPSILON * detsum;\n\n      if (det >= errbound || -det >= errbound) {\n        return CGAlgorithmsDD.signum(det);\n      }\n\n      return 2;\n    }\n\n    static signum(x) {\n      if (x > 0) return 1;\n      if (x < 0) return -1;\n      return 0;\n    }\n\n    getClass() {\n      return CGAlgorithmsDD;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  CGAlgorithmsDD.constructor_ = function () {};\n\n  CGAlgorithmsDD.DP_SAFE_EPSILON = 1e-15;\n\n  class Orientation {\n    constructor() {\n      Orientation.constructor_.apply(this, arguments);\n    }\n\n    static index(p1, p2, q) {\n      return CGAlgorithmsDD.orientationIndex(p1, p2, q);\n    }\n\n    static isCCW(ring) {\n      var nPts = ring.length - 1;\n      if (nPts < 3) throw new IllegalArgumentException(\"Ring has fewer than 4 points, so orientation cannot be determined\");\n      var hiPt = ring[0];\n      var hiIndex = 0;\n\n      for (var i = 1; i <= nPts; i++) {\n        var p = ring[i];\n\n        if (p.y > hiPt.y) {\n          hiPt = p;\n          hiIndex = i;\n        }\n      }\n\n      var iPrev = hiIndex;\n\n      do {\n        iPrev = iPrev - 1;\n        if (iPrev < 0) iPrev = nPts;\n      } while (ring[iPrev].equals2D(hiPt) && iPrev !== hiIndex);\n\n      var iNext = hiIndex;\n\n      do {\n        iNext = (iNext + 1) % nPts;\n      } while (ring[iNext].equals2D(hiPt) && iNext !== hiIndex);\n\n      var prev = ring[iPrev];\n      var next = ring[iNext];\n      if (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) return false;\n      var disc = Orientation.index(prev, hiPt, next);\n      var isCCW = null;\n\n      if (disc === 0) {\n        isCCW = prev.x > next.x;\n      } else {\n        isCCW = disc > 0;\n      }\n\n      return isCCW;\n    }\n\n    getClass() {\n      return Orientation;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  Orientation.constructor_ = function () {};\n\n  Orientation.CLOCKWISE = -1;\n  Orientation.RIGHT = Orientation.CLOCKWISE;\n  Orientation.COUNTERCLOCKWISE = 1;\n  Orientation.LEFT = Orientation.COUNTERCLOCKWISE;\n  Orientation.COLLINEAR = 0;\n  Orientation.STRAIGHT = Orientation.COLLINEAR;\n\n  function System() {}\n\n  System.arraycopy = (src, srcPos, dest, destPos, len) => {\n    let c = 0;\n\n    for (let i = srcPos; i < srcPos + len; i++) {\n      dest[destPos + c] = src[i];\n      c++;\n    }\n  };\n\n  System.getProperty = name => {\n    return {\n      'line.separator': '\\n'\n    }[name];\n  };\n\n  class HCoordinate {\n    constructor() {\n      HCoordinate.constructor_.apply(this, arguments);\n    }\n\n    static intersection(p1, p2, q1, q2) {\n      var px = p1.y - p2.y;\n      var py = p2.x - p1.x;\n      var pw = p1.x * p2.y - p2.x * p1.y;\n      var qx = q1.y - q2.y;\n      var qy = q2.x - q1.x;\n      var qw = q1.x * q2.y - q2.x * q1.y;\n      var x = py * qw - qy * pw;\n      var y = qx * pw - px * qw;\n      var w = px * qy - qx * py;\n      var xInt = x / w;\n      var yInt = y / w;\n\n      if (Double.isNaN(xInt) || Double.isInfinite(xInt) || Double.isNaN(yInt) || Double.isInfinite(yInt)) {\n        throw new NotRepresentableException();\n      }\n\n      return new Coordinate(xInt, yInt);\n    }\n\n    getY() {\n      var a = this.y / this.w;\n\n      if (Double.isNaN(a) || Double.isInfinite(a)) {\n        throw new NotRepresentableException();\n      }\n\n      return a;\n    }\n\n    getX() {\n      var a = this.x / this.w;\n\n      if (Double.isNaN(a) || Double.isInfinite(a)) {\n        throw new NotRepresentableException();\n      }\n\n      return a;\n    }\n\n    getCoordinate() {\n      var p = new Coordinate();\n      p.x = this.getX();\n      p.y = this.getY();\n      return p;\n    }\n\n    getClass() {\n      return HCoordinate;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  HCoordinate.constructor_ = function () {\n    this.x = null;\n    this.y = null;\n    this.w = null;\n\n    if (arguments.length === 0) {\n      this.x = 0.0;\n      this.y = 0.0;\n      this.w = 1.0;\n    } else if (arguments.length === 1) {\n      let p = arguments[0];\n      this.x = p.x;\n      this.y = p.y;\n      this.w = 1.0;\n    } else if (arguments.length === 2) {\n      if (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\n        let _x = arguments[0],\n            _y = arguments[1];\n        this.x = _x;\n        this.y = _y;\n        this.w = 1.0;\n      } else if (arguments[0] instanceof HCoordinate && arguments[1] instanceof HCoordinate) {\n        let p1 = arguments[0],\n            p2 = arguments[1];\n        this.x = p1.y * p2.w - p2.y * p1.w;\n        this.y = p2.x * p1.w - p1.x * p2.w;\n        this.w = p1.x * p2.y - p2.x * p1.y;\n      } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n        let p1 = arguments[0],\n            p2 = arguments[1];\n        this.x = p1.y - p2.y;\n        this.y = p2.x - p1.x;\n        this.w = p1.x * p2.y - p2.x * p1.y;\n      }\n    } else if (arguments.length === 3) {\n      let _x = arguments[0],\n          _y = arguments[1],\n          _w = arguments[2];\n      this.x = _x;\n      this.y = _y;\n      this.w = _w;\n    } else if (arguments.length === 4) {\n      let p1 = arguments[0],\n          p2 = arguments[1],\n          q1 = arguments[2],\n          q2 = arguments[3];\n      var px = p1.y - p2.y;\n      var py = p2.x - p1.x;\n      var pw = p1.x * p2.y - p2.x * p1.y;\n      var qx = q1.y - q2.y;\n      var qy = q2.x - q1.x;\n      var qw = q1.x * q2.y - q2.x * q1.y;\n      this.x = py * qw - qy * pw;\n      this.y = qx * pw - px * qw;\n      this.w = px * qy - qx * py;\n    }\n  };\n\n  class MathUtil {\n    constructor() {\n      MathUtil.constructor_.apply(this, arguments);\n    }\n\n    static log10(x) {\n      var ln = Math.log(x);\n      if (Double.isInfinite(ln)) return ln;\n      if (Double.isNaN(ln)) return ln;\n      return ln / MathUtil.LOG_10;\n    }\n\n    static min(v1, v2, v3, v4) {\n      var min = v1;\n      if (v2 < min) min = v2;\n      if (v3 < min) min = v3;\n      if (v4 < min) min = v4;\n      return min;\n    }\n\n    static clamp() {\n      if (typeof arguments[2] === \"number\" && typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\n        let x = arguments[0],\n            min = arguments[1],\n            max = arguments[2];\n        if (x < min) return min;\n        if (x > max) return max;\n        return x;\n      } else if (Number.isInteger(arguments[2]) && Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\n        let x = arguments[0],\n            min = arguments[1],\n            max = arguments[2];\n        if (x < min) return min;\n        if (x > max) return max;\n        return x;\n      }\n    }\n\n    static wrap(index, max) {\n      if (index < 0) {\n        return max - -index % max;\n      }\n\n      return index % max;\n    }\n\n    static max() {\n      if (arguments.length === 3) {\n        let v1 = arguments[0],\n            v2 = arguments[1],\n            v3 = arguments[2];\n        var max = v1;\n        if (v2 > max) max = v2;\n        if (v3 > max) max = v3;\n        return max;\n      } else if (arguments.length === 4) {\n        let v1 = arguments[0],\n            v2 = arguments[1],\n            v3 = arguments[2],\n            v4 = arguments[3];\n        var max = v1;\n        if (v2 > max) max = v2;\n        if (v3 > max) max = v3;\n        if (v4 > max) max = v4;\n        return max;\n      }\n    }\n\n    static average(x1, x2) {\n      return (x1 + x2) / 2.0;\n    }\n\n    getClass() {\n      return MathUtil;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  MathUtil.constructor_ = function () {};\n\n  MathUtil.LOG_10 = Math.log(10);\n\n  class Distance {\n    constructor() {\n      Distance.constructor_.apply(this, arguments);\n    }\n\n    static segmentToSegment(A, B, C, D) {\n      if (A.equals(B)) return Distance.pointToSegment(A, C, D);\n      if (C.equals(D)) return Distance.pointToSegment(D, A, B);\n      var noIntersection = false;\n\n      if (!Envelope.intersects(A, B, C, D)) {\n        noIntersection = true;\n      } else {\n        var denom = (B.x - A.x) * (D.y - C.y) - (B.y - A.y) * (D.x - C.x);\n\n        if (denom === 0) {\n          noIntersection = true;\n        } else {\n          var r_num = (A.y - C.y) * (D.x - C.x) - (A.x - C.x) * (D.y - C.y);\n          var s_num = (A.y - C.y) * (B.x - A.x) - (A.x - C.x) * (B.y - A.y);\n          var s = s_num / denom;\n          var r = r_num / denom;\n\n          if (r < 0 || r > 1 || s < 0 || s > 1) {\n            noIntersection = true;\n          }\n        }\n      }\n\n      if (noIntersection) {\n        return MathUtil.min(Distance.pointToSegment(A, C, D), Distance.pointToSegment(B, C, D), Distance.pointToSegment(C, A, B), Distance.pointToSegment(D, A, B));\n      }\n\n      return 0.0;\n    }\n\n    static pointToSegment(p, A, B) {\n      if (A.x === B.x && A.y === B.y) return p.distance(A);\n      var len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n      var r = ((p.x - A.x) * (B.x - A.x) + (p.y - A.y) * (B.y - A.y)) / len2;\n      if (r <= 0.0) return p.distance(A);\n      if (r >= 1.0) return p.distance(B);\n      var s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2;\n      return Math.abs(s) * Math.sqrt(len2);\n    }\n\n    static pointToLinePerpendicular(p, A, B) {\n      var len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n      var s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2;\n      return Math.abs(s) * Math.sqrt(len2);\n    }\n\n    static pointToSegmentString(p, line) {\n      if (line.length === 0) throw new IllegalArgumentException(\"Line array must contain at least one vertex\");\n      var minDistance = p.distance(line[0]);\n\n      for (var i = 0; i < line.length - 1; i++) {\n        var dist = Distance.pointToSegment(p, line[i], line[i + 1]);\n\n        if (dist < minDistance) {\n          minDistance = dist;\n        }\n      }\n\n      return minDistance;\n    }\n\n    getClass() {\n      return Distance;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  Distance.constructor_ = function () {};\n\n  class CoordinateSequence {\n    constructor() {\n      CoordinateSequence.constructor_.apply(this, arguments);\n    }\n\n    setOrdinate(index, ordinateIndex, value) {}\n\n    size() {}\n\n    getOrdinate(index, ordinateIndex) {}\n\n    getCoordinate() {\n    }\n\n    getCoordinateCopy(i) {}\n\n    getDimension() {}\n\n    getX(index) {}\n\n    expandEnvelope(env) {}\n\n    copy() {}\n\n    getY(index) {}\n\n    toCoordinateArray() {}\n\n    getClass() {\n      return CoordinateSequence;\n    }\n\n    get interfaces_() {\n      return [Clonable];\n    }\n\n  }\n\n  CoordinateSequence.constructor_ = function () {};\n\n  CoordinateSequence.X = 0;\n  CoordinateSequence.Y = 1;\n  CoordinateSequence.Z = 2;\n  CoordinateSequence.M = 3;\n\n  class CoordinateSequenceFactory {\n    constructor() {\n      CoordinateSequenceFactory.constructor_.apply(this, arguments);\n    }\n\n    create() {\n      if (arguments.length === 1) {\n        if (arguments[0] instanceof Array) ; else if (hasInterface(arguments[0], CoordinateSequence)) ;\n      }\n    }\n\n    getClass() {\n      return CoordinateSequenceFactory;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  CoordinateSequenceFactory.constructor_ = function () {};\n\n  class GeometryComponentFilter {\n    constructor() {\n      GeometryComponentFilter.constructor_.apply(this, arguments);\n    }\n\n    filter(geom) {}\n\n    getClass() {\n      return GeometryComponentFilter;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  GeometryComponentFilter.constructor_ = function () {};\n\n  class Geometry {\n    constructor() {\n      Geometry.constructor_.apply(this, arguments);\n    }\n\n    isGeometryCollection() {\n      return this.getTypeCode() === Geometry.TYPECODE_GEOMETRYCOLLECTION;\n    }\n\n    getFactory() {\n      return this._factory;\n    }\n\n    getGeometryN(n) {\n      return this;\n    }\n\n    getArea() {\n      return 0.0;\n    }\n\n    isRectangle() {\n      return false;\n    }\n\n    equals() {\n      if (arguments[0] instanceof Geometry) {\n        let g = arguments[0];\n        if (g === null) return false;\n        return this.equalsTopo(g);\n      } else if (arguments[0] instanceof Object) {\n        let o = arguments[0];\n        if (!(o instanceof Geometry)) return false;\n        var g = o;\n        return this.equalsExact(g);\n      }\n    }\n\n    equalsExact(other) {\n      return this === other || this.equalsExact(other, 0);\n    }\n\n    geometryChanged() {\n      this.apply(Geometry.geometryChangedFilter);\n    }\n\n    geometryChangedAction() {\n      this._envelope = null;\n    }\n\n    equalsNorm(g) {\n      if (g === null) return false;\n      return this.norm().equalsExact(g.norm());\n    }\n\n    getLength() {\n      return 0.0;\n    }\n\n    getNumGeometries() {\n      return 1;\n    }\n\n    compareTo() {\n      if (arguments.length === 1) {\n        let o = arguments[0];\n        var other = o;\n\n        if (this.getTypeCode() !== other.getTypeCode()) {\n          return this.getTypeCode() - other.getTypeCode();\n        }\n\n        if (this.isEmpty() && other.isEmpty()) {\n          return 0;\n        }\n\n        if (this.isEmpty()) {\n          return -1;\n        }\n\n        if (other.isEmpty()) {\n          return 1;\n        }\n\n        return this.compareToSameClass(o);\n      } else if (arguments.length === 2) {\n        let o = arguments[0],\n            comp = arguments[1];\n        var other = o;\n\n        if (this.getTypeCode() !== other.getTypeCode()) {\n          return this.getTypeCode() - other.getTypeCode();\n        }\n\n        if (this.isEmpty() && other.isEmpty()) {\n          return 0;\n        }\n\n        if (this.isEmpty()) {\n          return -1;\n        }\n\n        if (other.isEmpty()) {\n          return 1;\n        }\n\n        return this.compareToSameClass(o, comp);\n      }\n    }\n\n    getUserData() {\n      return this._userData;\n    }\n\n    getSRID() {\n      return this._SRID;\n    }\n\n    getEnvelope() {\n      return this.getFactory().toGeometry(this.getEnvelopeInternal());\n    }\n\n    checkNotGeometryCollection(g) {\n      if (g.getTypeCode() === Geometry.TYPECODE_GEOMETRYCOLLECTION) {\n        throw new IllegalArgumentException(\"This method does not support GeometryCollection arguments\");\n      }\n    }\n\n    equal(a, b, tolerance) {\n      if (tolerance === 0) {\n        return a.equals(b);\n      }\n\n      return a.distance(b) <= tolerance;\n    }\n\n    norm() {\n      var copy = this.copy();\n      copy.normalize();\n      return copy;\n    }\n\n    getPrecisionModel() {\n      return this._factory.getPrecisionModel();\n    }\n\n    getEnvelopeInternal() {\n      if (this._envelope === null) {\n        this._envelope = this.computeEnvelopeInternal();\n      }\n\n      return new Envelope(this._envelope);\n    }\n\n    setSRID(SRID) {\n      this._SRID = SRID;\n    }\n\n    setUserData(userData) {\n      this._userData = userData;\n    }\n\n    compare(a, b) {\n      var i = a.iterator();\n      var j = b.iterator();\n\n      while (i.hasNext() && j.hasNext()) {\n        var aElement = i.next();\n        var bElement = j.next();\n        var comparison = aElement.compareTo(bElement);\n\n        if (comparison !== 0) {\n          return comparison;\n        }\n      }\n\n      if (i.hasNext()) {\n        return 1;\n      }\n\n      if (j.hasNext()) {\n        return -1;\n      }\n\n      return 0;\n    }\n\n    hashCode() {\n      return this.getEnvelopeInternal().hashCode();\n    }\n\n    isGeometryCollectionOrDerived() {\n      if (this.getTypeCode() === Geometry.TYPECODE_GEOMETRYCOLLECTION || this.getTypeCode() === Geometry.TYPECODE_MULTIPOINT || this.getTypeCode() === Geometry.TYPECODE_MULTILINESTRING || this.getTypeCode() === Geometry.TYPECODE_MULTIPOLYGON) {\n        return true;\n      }\n\n      return false;\n    }\n\n    get interfaces_() {\n      return [Clonable, Comparable, Serializable];\n    }\n\n    getClass() {\n      return Geometry;\n    }\n\n    static hasNonEmptyElements(geometries) {\n      for (var i = 0; i < geometries.length; i++) {\n        if (!geometries[i].isEmpty()) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    static hasNullElements(array) {\n      for (var i = 0; i < array.length; i++) {\n        if (array[i] === null) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n  }\n\n  Geometry.constructor_ = function (factory) {\n    if (!factory) return;\n    this._envelope = null;\n    this._userData = null;\n    this._factory = factory;\n    this._SRID = factory.getSRID();\n  };\n\n  Geometry.serialVersionUID = 8763622679187376702;\n  Geometry.TYPECODE_POINT = 0;\n  Geometry.TYPECODE_MULTIPOINT = 1;\n  Geometry.TYPECODE_LINESTRING = 2;\n  Geometry.TYPECODE_LINEARRING = 3;\n  Geometry.TYPECODE_MULTILINESTRING = 4;\n  Geometry.TYPECODE_POLYGON = 5;\n  Geometry.TYPECODE_MULTIPOLYGON = 6;\n  Geometry.TYPECODE_GEOMETRYCOLLECTION = 7;\n  Geometry.TYPENAME_POINT = \"Point\";\n  Geometry.TYPENAME_MULTIPOINT = \"MultiPoint\";\n  Geometry.TYPENAME_LINESTRING = \"LineString\";\n  Geometry.TYPENAME_LINEARRING = \"LinearRing\";\n  Geometry.TYPENAME_MULTILINESTRING = \"MultiLineString\";\n  Geometry.TYPENAME_POLYGON = \"Polygon\";\n  Geometry.TYPENAME_MULTIPOLYGON = \"MultiPolygon\";\n  Geometry.TYPENAME_GEOMETRYCOLLECTION = \"GeometryCollection\";\n  Geometry.geometryChangedFilter = {\n    get interfaces_() {\n      return [GeometryComponentFilter];\n    },\n\n    filter(geom) {\n      geom.geometryChangedAction();\n    }\n\n  };\n\n  class CoordinateFilter {\n    constructor() {\n      CoordinateFilter.constructor_.apply(this, arguments);\n    }\n\n    filter(coord) {}\n\n    getClass() {\n      return CoordinateFilter;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  CoordinateFilter.constructor_ = function () {};\n\n  class BoundaryNodeRule {\n    constructor() {\n      BoundaryNodeRule.constructor_.apply(this, arguments);\n    }\n\n    isInBoundary(boundaryCount) {}\n\n    getClass() {\n      return BoundaryNodeRule;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  class Mod2BoundaryNodeRule {\n    constructor() {\n      Mod2BoundaryNodeRule.constructor_.apply(this, arguments);\n    }\n\n    isInBoundary(boundaryCount) {\n      return boundaryCount % 2 === 1;\n    }\n\n    getClass() {\n      return Mod2BoundaryNodeRule;\n    }\n\n    get interfaces_() {\n      return [BoundaryNodeRule];\n    }\n\n  }\n\n  Mod2BoundaryNodeRule.constructor_ = function () {};\n\n  class EndPointBoundaryNodeRule {\n    constructor() {\n      EndPointBoundaryNodeRule.constructor_.apply(this, arguments);\n    }\n\n    isInBoundary(boundaryCount) {\n      return boundaryCount > 0;\n    }\n\n    getClass() {\n      return EndPointBoundaryNodeRule;\n    }\n\n    get interfaces_() {\n      return [BoundaryNodeRule];\n    }\n\n  }\n\n  EndPointBoundaryNodeRule.constructor_ = function () {};\n\n  class MultiValentEndPointBoundaryNodeRule {\n    constructor() {\n      MultiValentEndPointBoundaryNodeRule.constructor_.apply(this, arguments);\n    }\n\n    isInBoundary(boundaryCount) {\n      return boundaryCount > 1;\n    }\n\n    getClass() {\n      return MultiValentEndPointBoundaryNodeRule;\n    }\n\n    get interfaces_() {\n      return [BoundaryNodeRule];\n    }\n\n  }\n\n  MultiValentEndPointBoundaryNodeRule.constructor_ = function () {};\n\n  class MonoValentEndPointBoundaryNodeRule {\n    constructor() {\n      MonoValentEndPointBoundaryNodeRule.constructor_.apply(this, arguments);\n    }\n\n    isInBoundary(boundaryCount) {\n      return boundaryCount === 1;\n    }\n\n    getClass() {\n      return MonoValentEndPointBoundaryNodeRule;\n    }\n\n    get interfaces_() {\n      return [BoundaryNodeRule];\n    }\n\n  }\n\n  MonoValentEndPointBoundaryNodeRule.constructor_ = function () {};\n\n  BoundaryNodeRule.Mod2BoundaryNodeRule = Mod2BoundaryNodeRule;\n  BoundaryNodeRule.EndPointBoundaryNodeRule = EndPointBoundaryNodeRule;\n  BoundaryNodeRule.MultiValentEndPointBoundaryNodeRule = MultiValentEndPointBoundaryNodeRule;\n  BoundaryNodeRule.MonoValentEndPointBoundaryNodeRule = MonoValentEndPointBoundaryNodeRule;\n\n  BoundaryNodeRule.constructor_ = function () {};\n\n  BoundaryNodeRule.MOD2_BOUNDARY_RULE = new Mod2BoundaryNodeRule();\n  BoundaryNodeRule.ENDPOINT_BOUNDARY_RULE = new EndPointBoundaryNodeRule();\n  BoundaryNodeRule.MULTIVALENT_ENDPOINT_BOUNDARY_RULE = new MultiValentEndPointBoundaryNodeRule();\n  BoundaryNodeRule.MONOVALENT_ENDPOINT_BOUNDARY_RULE = new MonoValentEndPointBoundaryNodeRule();\n  BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE = BoundaryNodeRule.MOD2_BOUNDARY_RULE;\n\n  class CoordinateArrays {\n    constructor() {\n      CoordinateArrays.constructor_.apply(this, arguments);\n    }\n\n    static isRing(pts) {\n      if (pts.length < 4) return false;\n      if (!pts[0].equals2D(pts[pts.length - 1])) return false;\n      return true;\n    }\n\n    static ptNotInList(testPts, pts) {\n      for (var i = 0; i < testPts.length; i++) {\n        var testPt = testPts[i];\n        if (CoordinateArrays.indexOf(testPt, pts) < 0) return testPt;\n      }\n\n      return null;\n    }\n\n    static scroll(coordinates, firstCoordinate) {\n      var i = CoordinateArrays.indexOf(firstCoordinate, coordinates);\n      if (i < 0) return null;\n      var newCoordinates = new Array(coordinates.length).fill(null);\n      System.arraycopy(coordinates, i, newCoordinates, 0, coordinates.length - i);\n      System.arraycopy(coordinates, 0, newCoordinates, coordinates.length - i, i);\n      System.arraycopy(newCoordinates, 0, coordinates, 0, coordinates.length);\n    }\n\n    static equals() {\n      if (arguments.length === 2) {\n        let coord1 = arguments[0],\n            coord2 = arguments[1];\n        if (coord1 === coord2) return true;\n        if (coord1 === null || coord2 === null) return false;\n        if (coord1.length !== coord2.length) return false;\n\n        for (var i = 0; i < coord1.length; i++) {\n          if (!coord1[i].equals(coord2[i])) return false;\n        }\n\n        return true;\n      } else if (arguments.length === 3) {\n        let coord1 = arguments[0],\n            coord2 = arguments[1],\n            coordinateComparator = arguments[2];\n        if (coord1 === coord2) return true;\n        if (coord1 === null || coord2 === null) return false;\n        if (coord1.length !== coord2.length) return false;\n\n        for (var i = 0; i < coord1.length; i++) {\n          if (coordinateComparator.compare(coord1[i], coord2[i]) !== 0) return false;\n        }\n\n        return true;\n      }\n    }\n\n    static intersection(coordinates, env) {\n      var coordList = new CoordinateList();\n\n      for (var i = 0; i < coordinates.length; i++) {\n        if (env.intersects(coordinates[i])) coordList.add(coordinates[i], true);\n      }\n\n      return coordList.toCoordinateArray();\n    }\n\n    static hasRepeatedPoints(coord) {\n      for (var i = 1; i < coord.length; i++) {\n        if (coord[i - 1].equals(coord[i])) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    static removeRepeatedPoints(coord) {\n      if (!CoordinateArrays.hasRepeatedPoints(coord)) return coord;\n      var coordList = new CoordinateList(coord, false);\n      return coordList.toCoordinateArray();\n    }\n\n    static reverse(coord) {\n      var last = coord.length - 1;\n      var mid = Math.trunc(last / 2);\n\n      for (var i = 0; i <= mid; i++) {\n        var tmp = coord[i];\n        coord[i] = coord[last - i];\n        coord[last - i] = tmp;\n      }\n    }\n\n    static removeNull(coord) {\n      var nonNull = 0;\n\n      for (var i = 0; i < coord.length; i++) {\n        if (coord[i] !== null) nonNull++;\n      }\n\n      var newCoord = new Array(nonNull).fill(null);\n      if (nonNull === 0) return newCoord;\n      var j = 0;\n\n      for (var i = 0; i < coord.length; i++) {\n        if (coord[i] !== null) newCoord[j++] = coord[i];\n      }\n\n      return newCoord;\n    }\n\n    static copyDeep() {\n      if (arguments.length === 1) {\n        let coordinates = arguments[0];\n        var copy = new Array(coordinates.length).fill(null);\n\n        for (var i = 0; i < coordinates.length; i++) {\n          copy[i] = new Coordinate(coordinates[i]);\n        }\n\n        return copy;\n      } else if (arguments.length === 5) {\n        let src = arguments[0],\n            srcStart = arguments[1],\n            dest = arguments[2],\n            destStart = arguments[3],\n            length = arguments[4];\n\n        for (var i = 0; i < length; i++) {\n          dest[destStart + i] = new Coordinate(src[srcStart + i]);\n        }\n      }\n    }\n\n    static isEqualReversed(pts1, pts2) {\n      for (var i = 0; i < pts1.length; i++) {\n        var p1 = pts1[i];\n        var p2 = pts2[pts1.length - i - 1];\n        if (p1.compareTo(p2) !== 0) return false;\n      }\n\n      return true;\n    }\n\n    static envelope(coordinates) {\n      var env = new Envelope();\n\n      for (var i = 0; i < coordinates.length; i++) {\n        env.expandToInclude(coordinates[i]);\n      }\n\n      return env;\n    }\n\n    static toCoordinateArray(coordList) {\n      return coordList.toArray(CoordinateArrays.coordArrayType);\n    }\n\n    static atLeastNCoordinatesOrNothing(n, c) {\n      return c.length >= n ? c : [];\n    }\n\n    static indexOf(coordinate, coordinates) {\n      for (var i = 0; i < coordinates.length; i++) {\n        if (coordinate.equals(coordinates[i])) {\n          return i;\n        }\n      }\n\n      return -1;\n    }\n\n    static increasingDirection(pts) {\n      for (var i = 0; i < Math.trunc(pts.length / 2); i++) {\n        var j = pts.length - 1 - i;\n        var comp = pts[i].compareTo(pts[j]);\n        if (comp !== 0) return comp;\n      }\n\n      return 1;\n    }\n\n    static compare(pts1, pts2) {\n      var i = 0;\n\n      while (i < pts1.length && i < pts2.length) {\n        var compare = pts1[i].compareTo(pts2[i]);\n        if (compare !== 0) return compare;\n        i++;\n      }\n\n      if (i < pts2.length) return -1;\n      if (i < pts1.length) return 1;\n      return 0;\n    }\n\n    static minCoordinate(coordinates) {\n      var minCoord = null;\n\n      for (var i = 0; i < coordinates.length; i++) {\n        if (minCoord === null || minCoord.compareTo(coordinates[i]) > 0) {\n          minCoord = coordinates[i];\n        }\n      }\n\n      return minCoord;\n    }\n\n    static extract(pts, start, end) {\n      start = MathUtil.clamp(start, 0, pts.length);\n      end = MathUtil.clamp(end, -1, pts.length);\n      var npts = end - start + 1;\n      if (end < 0) npts = 0;\n      if (start >= pts.length) npts = 0;\n      if (end < start) npts = 0;\n      var extractPts = new Array(npts).fill(null);\n      if (npts === 0) return extractPts;\n      var iPts = 0;\n\n      for (var i = start; i <= end; i++) {\n        extractPts[iPts++] = pts[i];\n      }\n\n      return extractPts;\n    }\n\n    getClass() {\n      return CoordinateArrays;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  class ForwardComparator {\n    constructor() {\n      ForwardComparator.constructor_.apply(this, arguments);\n    }\n\n    compare(o1, o2) {\n      var pts1 = o1;\n      var pts2 = o2;\n      return CoordinateArrays.compare(pts1, pts2);\n    }\n\n    getClass() {\n      return ForwardComparator;\n    }\n\n    get interfaces_() {\n      return [Comparator];\n    }\n\n  }\n\n  ForwardComparator.constructor_ = function () {};\n\n  class BidirectionalComparator {\n    constructor() {\n      BidirectionalComparator.constructor_.apply(this, arguments);\n    }\n\n    compare(o1, o2) {\n      var pts1 = o1;\n      var pts2 = o2;\n      if (pts1.length < pts2.length) return -1;\n      if (pts1.length > pts2.length) return 1;\n      if (pts1.length === 0) return 0;\n      var forwardComp = CoordinateArrays.compare(pts1, pts2);\n      var isEqualRev = CoordinateArrays.isEqualReversed(pts1, pts2);\n      if (isEqualRev) return 0;\n      return forwardComp;\n    }\n\n    OLDcompare(o1, o2) {\n      var pts1 = o1;\n      var pts2 = o2;\n      if (pts1.length < pts2.length) return -1;\n      if (pts1.length > pts2.length) return 1;\n      if (pts1.length === 0) return 0;\n      var dir1 = CoordinateArrays.increasingDirection(pts1);\n      var dir2 = CoordinateArrays.increasingDirection(pts2);\n      var i1 = dir1 > 0 ? 0 : pts1.length - 1;\n      var i2 = dir2 > 0 ? 0 : pts1.length - 1;\n\n      for (var i = 0; i < pts1.length; i++) {\n        var comparePt = pts1[i1].compareTo(pts2[i2]);\n        if (comparePt !== 0) return comparePt;\n        i1 += dir1;\n        i2 += dir2;\n      }\n\n      return 0;\n    }\n\n    getClass() {\n      return BidirectionalComparator;\n    }\n\n    get interfaces_() {\n      return [Comparator];\n    }\n\n  }\n\n  BidirectionalComparator.constructor_ = function () {};\n\n  CoordinateArrays.ForwardComparator = ForwardComparator;\n  CoordinateArrays.BidirectionalComparator = BidirectionalComparator;\n\n  CoordinateArrays.constructor_ = function () {};\n\n  CoordinateArrays.coordArrayType = new Array(0).fill(null);\n\n  /**\n   * @see http://download.oracle.com/javase/6/docs/api/java/util/Map.html\n   *\n   * @constructor\n   * @private\n   */\n  function Map$1() {}\n  /**\n   * Returns the value to which the specified key is mapped, or null if this map\n   * contains no mapping for the key.\n   * @param {Object} key\n   * @return {Object}\n   */\n\n  Map$1.prototype.get = function () {};\n  /**\n   * Associates the specified value with the specified key in this map (optional\n   * operation).\n   * @param {Object} key\n   * @param {Object} value\n   * @return {Object}\n   */\n\n\n  Map$1.prototype.put = function () {};\n  /**\n   * Returns the number of key-value mappings in this map.\n   * @return {number}\n   */\n\n\n  Map$1.prototype.size = function () {};\n  /**\n   * Returns a Collection view of the values contained in this map.\n   * @return {javascript.util.Collection}\n   */\n\n\n  Map$1.prototype.values = function () {};\n  /**\n   * Returns a {@link Set} view of the mappings contained in this map.\n   * The set is backed by the map, so changes to the map are\n   * reflected in the set, and vice-versa.  If the map is modified\n   * while an iteration over the set is in progress (except through\n   * the iterator's own <tt>remove</tt> operation, or through the\n   * <tt>setValue</tt> operation on a map entry returned by the\n   * iterator) the results of the iteration are undefined.  The set\n   * supports element removal, which removes the corresponding\n   * mapping from the map, via the <tt>Iterator.remove</tt>,\n   * <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\n   * <tt>clear</tt> operations.  It does not support the\n   * <tt>add</tt> or <tt>addAll</tt> operations.\n   *\n   * @return {Set} a set view of the mappings contained in this map\n   */\n\n\n  Map$1.prototype.entrySet = function () {};\n\n  /**\n   * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedMap.html\n   *\n   * @extends {Map}\n   * @constructor\n   * @private\n   */\n\n  function SortedMap() {}\n  SortedMap.prototype = new Map$1();\n\n  /**\n   * @see http://download.oracle.com/javase/6/docs/api/java/util/Set.html\n   *\n   * @extends {Collection}\n   * @constructor\n   * @private\n   */\n\n  function Set() {}\n  Set.prototype = new Collection();\n  /**\n   * Returns true if this set contains the specified element. More formally,\n   * returns true if and only if this set contains an element e such that (o==null ?\n   * e==null : o.equals(e)).\n   * @param {Object} e\n   * @return {boolean}\n   */\n\n  Set.prototype.contains = function () {};\n\n  /**\n   * @see http://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html\n   *\n   * @extends {javascript.util.Set}\n   * @constructor\n   * @private\n   */\n\n  function HashSet() {\n    /**\n     * @type {Array}\n     * @private\n    */\n    this.array_ = [];\n\n    if (arguments[0] instanceof Collection) {\n      this.addAll(arguments[0]);\n    }\n  }\n  HashSet.prototype = new Set();\n  /**\n   * @override\n   */\n\n  HashSet.prototype.contains = function (o) {\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      var e = this.array_[i];\n\n      if (e === o) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * @override\n   */\n\n\n  HashSet.prototype.add = function (o) {\n    if (this.contains(o)) {\n      return false;\n    }\n\n    this.array_.push(o);\n    return true;\n  };\n  /**\n   * @override\n   */\n\n\n  HashSet.prototype.addAll = function (c) {\n    for (var i = c.iterator(); i.hasNext();) {\n      this.add(i.next());\n    }\n\n    return true;\n  };\n  /**\n   * @override\n   */\n\n\n  HashSet.prototype.remove = function (o) {\n    throw new javascript.util.OperationNotSupported();\n  };\n  /**\n   * @override\n   */\n\n\n  HashSet.prototype.size = function () {\n    return this.array_.length;\n  };\n  /**\n   * @override\n   */\n\n\n  HashSet.prototype.isEmpty = function () {\n    return this.array_.length === 0;\n  };\n  /**\n   * @override\n   */\n\n\n  HashSet.prototype.toArray = function () {\n    var array = [];\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      array.push(this.array_[i]);\n    }\n\n    return array;\n  };\n  /**\n   * @override\n   */\n\n\n  HashSet.prototype.iterator = function () {\n    return new Iterator_$1(this);\n  };\n  /**\n   * @extends {Iterator}\n   * @param {HashSet} hashSet\n   * @constructor\n   * @private\n   */\n\n\n  var Iterator_$1 = function Iterator_(hashSet) {\n    /**\n     * @type {HashSet}\n     * @private\n     */\n    this.hashSet_ = hashSet;\n    /**\n     * @type {number}\n     * @private\n     */\n\n    this.position_ = 0;\n  };\n  /**\n   * @override\n   */\n\n\n  Iterator_$1.prototype.next = function () {\n    if (this.position_ === this.hashSet_.size()) {\n      throw new NoSuchElementException();\n    }\n\n    return this.hashSet_.array_[this.position_++];\n  };\n  /**\n   * @override\n   */\n\n\n  Iterator_$1.prototype.hasNext = function () {\n    if (this.position_ < this.hashSet_.size()) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\n   * @override\n   */\n\n\n  Iterator_$1.prototype.remove = function () {\n    throw new OperationNotSupported();\n  };\n\n  const BLACK = 0;\n  const RED = 1;\n\n  function colorOf(p) {\n    return p == null ? BLACK : p.color;\n  }\n\n  function parentOf(p) {\n    return p == null ? null : p.parent;\n  }\n\n  function setColor(p, c) {\n    if (p !== null) p.color = c;\n  }\n\n  function leftOf(p) {\n    return p == null ? null : p.left;\n  }\n\n  function rightOf(p) {\n    return p == null ? null : p.right;\n  }\n  /**\n   * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeMap.html\n   *\n   * @extends {SortedMap}\n   * @constructor\n   * @private\n   */\n\n\n  function TreeMap() {\n    /**\n     * @type {Object}\n     * @private\n     */\n    this.root_ = null;\n    /**\n     * @type {number}\n     * @private\n    */\n\n    this.size_ = 0;\n  }\n  TreeMap.prototype = new SortedMap();\n  /**\n   * @override\n   */\n\n  TreeMap.prototype.get = function (key) {\n    var p = this.root_;\n\n    while (p !== null) {\n      var cmp = key['compareTo'](p.key);\n\n      if (cmp < 0) {\n        p = p.left;\n      } else if (cmp > 0) {\n        p = p.right;\n      } else {\n        return p.value;\n      }\n    }\n\n    return null;\n  };\n  /**\n   * @override\n   */\n\n\n  TreeMap.prototype.put = function (key, value) {\n    if (this.root_ === null) {\n      this.root_ = {\n        key: key,\n        value: value,\n        left: null,\n        right: null,\n        parent: null,\n        color: BLACK,\n\n        getValue() {\n          return this.value;\n        },\n\n        getKey() {\n          return this.key;\n        }\n\n      };\n      this.size_ = 1;\n      return null;\n    }\n\n    var t = this.root_,\n        parent,\n        cmp;\n\n    do {\n      parent = t;\n      cmp = key['compareTo'](t.key);\n\n      if (cmp < 0) {\n        t = t.left;\n      } else if (cmp > 0) {\n        t = t.right;\n      } else {\n        var oldValue = t.value;\n        t.value = value;\n        return oldValue;\n      }\n    } while (t !== null);\n\n    var e = {\n      key: key,\n      left: null,\n      right: null,\n      value: value,\n      parent: parent,\n      color: BLACK,\n\n      getValue() {\n        return this.value;\n      },\n\n      getKey() {\n        return this.key;\n      }\n\n    };\n\n    if (cmp < 0) {\n      parent.left = e;\n    } else {\n      parent.right = e;\n    }\n\n    this.fixAfterInsertion(e);\n    this.size_++;\n    return null;\n  };\n  /**\n   * @param {Object} x\n   */\n\n\n  TreeMap.prototype.fixAfterInsertion = function (x) {\n    x.color = RED;\n\n    while (x != null && x != this.root_ && x.parent.color == RED) {\n      if (parentOf(x) == leftOf(parentOf(parentOf(x)))) {\n        var y = rightOf(parentOf(parentOf(x)));\n\n        if (colorOf(y) == RED) {\n          setColor(parentOf(x), BLACK);\n          setColor(y, BLACK);\n          setColor(parentOf(parentOf(x)), RED);\n          x = parentOf(parentOf(x));\n        } else {\n          if (x == rightOf(parentOf(x))) {\n            x = parentOf(x);\n            this.rotateLeft(x);\n          }\n\n          setColor(parentOf(x), BLACK);\n          setColor(parentOf(parentOf(x)), RED);\n          this.rotateRight(parentOf(parentOf(x)));\n        }\n      } else {\n        var y = leftOf(parentOf(parentOf(x)));\n\n        if (colorOf(y) == RED) {\n          setColor(parentOf(x), BLACK);\n          setColor(y, BLACK);\n          setColor(parentOf(parentOf(x)), RED);\n          x = parentOf(parentOf(x));\n        } else {\n          if (x == leftOf(parentOf(x))) {\n            x = parentOf(x);\n            this.rotateRight(x);\n          }\n\n          setColor(parentOf(x), BLACK);\n          setColor(parentOf(parentOf(x)), RED);\n          this.rotateLeft(parentOf(parentOf(x)));\n        }\n      }\n    }\n\n    this.root_.color = BLACK;\n  };\n  /**\n   * @override\n   */\n\n\n  TreeMap.prototype.values = function () {\n    var arrayList = new ArrayList();\n    var p = this.getFirstEntry();\n\n    if (p !== null) {\n      arrayList.add(p.value);\n\n      while ((p = TreeMap.successor(p)) !== null) {\n        arrayList.add(p.value);\n      }\n    }\n\n    return arrayList;\n  };\n  /**\n   * @override\n   */\n\n\n  TreeMap.prototype.entrySet = function () {\n    var hashSet = new HashSet();\n    var p = this.getFirstEntry();\n\n    if (p !== null) {\n      hashSet.add(p);\n\n      while ((p = TreeMap.successor(p)) !== null) {\n        hashSet.add(p);\n      }\n    }\n\n    return hashSet;\n  };\n  /**\n   * @param {Object} p\n   */\n\n\n  TreeMap.prototype.rotateLeft = function (p) {\n    if (p != null) {\n      var r = p.right;\n      p.right = r.left;\n      if (r.left != null) r.left.parent = p;\n      r.parent = p.parent;\n      if (p.parent == null) this.root_ = r;else if (p.parent.left == p) p.parent.left = r;else p.parent.right = r;\n      r.left = p;\n      p.parent = r;\n    }\n  };\n  /**\n   * @param {Object} p\n   */\n\n\n  TreeMap.prototype.rotateRight = function (p) {\n    if (p != null) {\n      var l = p.left;\n      p.left = l.right;\n      if (l.right != null) l.right.parent = p;\n      l.parent = p.parent;\n      if (p.parent == null) this.root_ = l;else if (p.parent.right == p) p.parent.right = l;else p.parent.left = l;\n      l.right = p;\n      p.parent = l;\n    }\n  };\n  /**\n   * @return {Object}\n   */\n\n\n  TreeMap.prototype.getFirstEntry = function () {\n    var p = this.root_;\n\n    if (p != null) {\n      while (p.left != null) {\n        p = p.left;\n      }\n    }\n\n    return p;\n  };\n  /**\n   * @param {Object} t\n   * @return {Object}\n   * @private\n   */\n\n\n  TreeMap.successor = function (t) {\n    if (t === null) return null;else if (t.right !== null) {\n      var p = t.right;\n\n      while (p.left !== null) {\n        p = p.left;\n      }\n\n      return p;\n    } else {\n      var p = t.parent;\n      var ch = t;\n\n      while (p !== null && ch === p.right) {\n        ch = p;\n        p = p.parent;\n      }\n\n      return p;\n    }\n  };\n  /**\n   * @override\n   */\n\n\n  TreeMap.prototype.size = function () {\n    return this.size_;\n  };\n\n  TreeMap.prototype.containsKey = function (key) {\n    var p = this.root_;\n\n    while (p !== null) {\n      var cmp = key['compareTo'](p.key);\n\n      if (cmp < 0) {\n        p = p.left;\n      } else if (cmp > 0) {\n        p = p.right;\n      } else {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  class Lineal {\n    constructor() {\n      Lineal.constructor_.apply(this, arguments);\n    }\n\n    getClass() {\n      return Lineal;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  Lineal.constructor_ = function () {};\n\n  /**\n   * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedSet.html\n   *\n   * @extends {Set}\n   * @constructor\n   * @private\n   */\n\n  function SortedSet() {}\n  SortedSet.prototype = new Set();\n\n  /**\n   * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeSet.html\n   *\n   * @extends {SortedSet}\n   * @constructor\n   * @private\n   */\n\n  function TreeSet() {\n    /**\n     * @type {Array}\n     * @private\n    */\n    this.array_ = [];\n\n    if (arguments[0] instanceof Collection) {\n      this.addAll(arguments[0]);\n    }\n  }\n  TreeSet.prototype = new SortedSet();\n  /**\n   * @override\n   */\n\n  TreeSet.prototype.contains = function (o) {\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      var e = this.array_[i];\n\n      if (e['compareTo'](o) === 0) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * @override\n   */\n\n\n  TreeSet.prototype.add = function (o) {\n    if (this.contains(o)) {\n      return false;\n    }\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      var e = this.array_[i];\n\n      if (e['compareTo'](o) === 1) {\n        this.array_.splice(i, 0, o);\n        return true;\n      }\n    }\n\n    this.array_.push(o);\n    return true;\n  };\n  /**\n   * @override\n   */\n\n\n  TreeSet.prototype.addAll = function (c) {\n    for (var i = c.iterator(); i.hasNext();) {\n      this.add(i.next());\n    }\n\n    return true;\n  };\n  /**\n   * @override\n   */\n\n\n  TreeSet.prototype.remove = function (e) {\n    throw new OperationNotSupported();\n  };\n  /**\n   * @override\n   */\n\n\n  TreeSet.prototype.size = function () {\n    return this.array_.length;\n  };\n  /**\n   * @override\n   */\n\n\n  TreeSet.prototype.isEmpty = function () {\n    return this.array_.length === 0;\n  };\n  /**\n   * @override\n   */\n\n\n  TreeSet.prototype.toArray = function () {\n    var array = [];\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      array.push(this.array_[i]);\n    }\n\n    return array;\n  };\n  /**\n   * @override\n   */\n\n\n  TreeSet.prototype.iterator = function () {\n    return new Iterator_$2(this);\n  };\n  /**\n   * @extends {javascript.util.Iterator}\n   * @param {javascript.util.TreeSet} treeSet\n   * @constructor\n   * @private\n   */\n\n\n  var Iterator_$2 = function Iterator_(treeSet) {\n    /**\n     * @type {javascript.util.TreeSet}\n     * @private\n     */\n    this.treeSet_ = treeSet;\n    /**\n     * @type {number}\n     * @private\n     */\n\n    this.position_ = 0;\n  };\n  /**\n   * @override\n   */\n\n\n  Iterator_$2.prototype.next = function () {\n    if (this.position_ === this.treeSet_.size()) {\n      throw new NoSuchElementException();\n    }\n\n    return this.treeSet_.array_[this.position_++];\n  };\n  /**\n   * @override\n   */\n\n\n  Iterator_$2.prototype.hasNext = function () {\n    if (this.position_ < this.treeSet_.size()) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\n   * @override\n   */\n\n\n  Iterator_$2.prototype.remove = function () {\n    throw new OperationNotSupported();\n  };\n\n  /**\n   * @see http://download.oracle.com/javase/6/docs/api/java/util/Arrays.html\n   *\n   * @constructor\n   * @private\n   */\n\n  function Arrays() {}\n  /**\n   */\n\n  Arrays.sort = function () {\n    var a = arguments[0],\n        i,\n        t,\n        comparator,\n        compare;\n\n    if (arguments.length === 1) {\n      compare = function compare(a, b) {\n        return a.compareTo(b);\n      };\n\n      a.sort(compare);\n      return;\n    } else if (arguments.length === 2) {\n      comparator = arguments[1];\n\n      compare = function compare(a, b) {\n        return comparator['compare'](a, b);\n      };\n\n      a.sort(compare);\n    } else if (arguments.length === 3) {\n      t = a.slice(arguments[1], arguments[2]);\n      t.sort();\n      var r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n      a.splice(0, a.length);\n\n      for (i = 0; i < r.length; i++) {\n        a.push(r[i]);\n      }\n\n      return;\n    } else if (arguments.length === 4) {\n      t = a.slice(arguments[1], arguments[2]);\n      comparator = arguments[3];\n\n      compare = function compare(a, b) {\n        return comparator['compare'](a, b);\n      };\n\n      t.sort(compare);\n      r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n      a.splice(0, a.length);\n\n      for (i = 0; i < r.length; i++) {\n        a.push(r[i]);\n      }\n\n      return;\n    }\n  };\n  /**\n   * @param {Array} array\n   * @return {ArrayList}\n   */\n\n\n  Arrays.asList = function (array) {\n    var arrayList = new ArrayList();\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      arrayList.add(array[i]);\n    }\n\n    return arrayList;\n  };\n\n  class Dimension {\n    constructor() {\n      Dimension.constructor_.apply(this, arguments);\n    }\n\n    static toDimensionSymbol(dimensionValue) {\n      switch (dimensionValue) {\n        case Dimension.FALSE:\n          return Dimension.SYM_FALSE;\n\n        case Dimension.TRUE:\n          return Dimension.SYM_TRUE;\n\n        case Dimension.DONTCARE:\n          return Dimension.SYM_DONTCARE;\n\n        case Dimension.P:\n          return Dimension.SYM_P;\n\n        case Dimension.L:\n          return Dimension.SYM_L;\n\n        case Dimension.A:\n          return Dimension.SYM_A;\n      }\n\n      throw new IllegalArgumentException(\"Unknown dimension value: \" + dimensionValue);\n    }\n\n    static toDimensionValue(dimensionSymbol) {\n      switch (Character.toUpperCase(dimensionSymbol)) {\n        case Dimension.SYM_FALSE:\n          return Dimension.FALSE;\n\n        case Dimension.SYM_TRUE:\n          return Dimension.TRUE;\n\n        case Dimension.SYM_DONTCARE:\n          return Dimension.DONTCARE;\n\n        case Dimension.SYM_P:\n          return Dimension.P;\n\n        case Dimension.SYM_L:\n          return Dimension.L;\n\n        case Dimension.SYM_A:\n          return Dimension.A;\n      }\n\n      throw new IllegalArgumentException(\"Unknown dimension symbol: \" + dimensionSymbol);\n    }\n\n    getClass() {\n      return Dimension;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  Dimension.constructor_ = function () {};\n\n  Dimension.P = 0;\n  Dimension.L = 1;\n  Dimension.A = 2;\n  Dimension.FALSE = -1;\n  Dimension.TRUE = -2;\n  Dimension.DONTCARE = -3;\n  Dimension.SYM_FALSE = 'F';\n  Dimension.SYM_TRUE = 'T';\n  Dimension.SYM_DONTCARE = '*';\n  Dimension.SYM_P = '0';\n  Dimension.SYM_L = '1';\n  Dimension.SYM_A = '2';\n\n  class GeometryFilter {\n    constructor() {\n      GeometryFilter.constructor_.apply(this, arguments);\n    }\n\n    filter(geom) {}\n\n    getClass() {\n      return GeometryFilter;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  GeometryFilter.constructor_ = function () {};\n\n  class CoordinateSequenceFilter {\n    constructor() {\n      CoordinateSequenceFilter.constructor_.apply(this, arguments);\n    }\n\n    filter(seq, i) {}\n\n    isDone() {}\n\n    isGeometryChanged() {}\n\n    getClass() {\n      return CoordinateSequenceFilter;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  CoordinateSequenceFilter.constructor_ = function () {};\n\n  class GeometryCollection extends Geometry {\n    constructor() {\n      super();\n      GeometryCollection.constructor_.apply(this, arguments);\n    }\n\n    computeEnvelopeInternal() {\n      var envelope = new Envelope();\n\n      for (var i = 0; i < this._geometries.length; i++) {\n        envelope.expandToInclude(this._geometries[i].getEnvelopeInternal());\n      }\n\n      return envelope;\n    }\n\n    getGeometryN(n) {\n      return this._geometries[n];\n    }\n\n    getCoordinates() {\n      var coordinates = new Array(this.getNumPoints()).fill(null);\n      var k = -1;\n\n      for (var i = 0; i < this._geometries.length; i++) {\n        var childCoordinates = this._geometries[i].getCoordinates();\n\n        for (var j = 0; j < childCoordinates.length; j++) {\n          k++;\n          coordinates[k] = childCoordinates[j];\n        }\n      }\n\n      return coordinates;\n    }\n\n    getArea() {\n      var area = 0.0;\n\n      for (var i = 0; i < this._geometries.length; i++) {\n        area += this._geometries[i].getArea();\n      }\n\n      return area;\n    }\n\n    equalsExact() {\n      if (arguments.length === 2 && typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry) {\n        let other = arguments[0],\n            tolerance = arguments[1];\n\n        if (!this.isEquivalentClass(other)) {\n          return false;\n        }\n\n        var otherCollection = other;\n\n        if (this._geometries.length !== otherCollection._geometries.length) {\n          return false;\n        }\n\n        for (var i = 0; i < this._geometries.length; i++) {\n          if (!this._geometries[i].equalsExact(otherCollection._geometries[i], tolerance)) {\n            return false;\n          }\n        }\n\n        return true;\n      } else return super.equalsExact.apply(this, arguments);\n    }\n\n    normalize() {\n      for (var i = 0; i < this._geometries.length; i++) {\n        this._geometries[i].normalize();\n      }\n\n      Arrays.sort(this._geometries);\n    }\n\n    getCoordinate() {\n      if (this.isEmpty()) return null;\n      return this._geometries[0].getCoordinate();\n    }\n\n    getBoundaryDimension() {\n      var dimension = Dimension.FALSE;\n\n      for (var i = 0; i < this._geometries.length; i++) {\n        dimension = Math.max(dimension, this._geometries[i].getBoundaryDimension());\n      }\n\n      return dimension;\n    }\n\n    getTypeCode() {\n      return Geometry.TYPECODE_GEOMETRYCOLLECTION;\n    }\n\n    getDimension() {\n      var dimension = Dimension.FALSE;\n\n      for (var i = 0; i < this._geometries.length; i++) {\n        dimension = Math.max(dimension, this._geometries[i].getDimension());\n      }\n\n      return dimension;\n    }\n\n    getLength() {\n      var sum = 0.0;\n\n      for (var i = 0; i < this._geometries.length; i++) {\n        sum += this._geometries[i].getLength();\n      }\n\n      return sum;\n    }\n\n    getNumPoints() {\n      var numPoints = 0;\n\n      for (var i = 0; i < this._geometries.length; i++) {\n        numPoints += this._geometries[i].getNumPoints();\n      }\n\n      return numPoints;\n    }\n\n    getNumGeometries() {\n      return this._geometries.length;\n    }\n\n    reverse() {\n      var n = this._geometries.length;\n      var revGeoms = new Array(n).fill(null);\n\n      for (var i = 0; i < this._geometries.length; i++) {\n        revGeoms[i] = this._geometries[i].reverse();\n      }\n\n      return this.getFactory().createGeometryCollection(revGeoms);\n    }\n\n    compareToSameClass() {\n      if (arguments.length === 1) {\n        let o = arguments[0];\n        var theseElements = new TreeSet(Arrays.asList(this._geometries));\n        var otherElements = new TreeSet(Arrays.asList(o._geometries));\n        return this.compare(theseElements, otherElements);\n      } else if (arguments.length === 2) {\n        let o = arguments[0],\n            comp = arguments[1];\n        var gc = o;\n        var n1 = this.getNumGeometries();\n        var n2 = gc.getNumGeometries();\n        var i = 0;\n\n        while (i < n1 && i < n2) {\n          var thisGeom = this.getGeometryN(i);\n          var otherGeom = gc.getGeometryN(i);\n          var holeComp = thisGeom.compareToSameClass(otherGeom, comp);\n          if (holeComp !== 0) return holeComp;\n          i++;\n        }\n\n        if (i < n1) return 1;\n        if (i < n2) return -1;\n        return 0;\n      }\n    }\n\n    apply() {\n      if (hasInterface(arguments[0], CoordinateFilter)) {\n        let filter = arguments[0];\n\n        for (var i = 0; i < this._geometries.length; i++) {\n          this._geometries[i].apply(filter);\n        }\n      } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n        let filter = arguments[0];\n        if (this._geometries.length === 0) return null;\n\n        for (var i = 0; i < this._geometries.length; i++) {\n          this._geometries[i].apply(filter);\n\n          if (filter.isDone()) {\n            break;\n          }\n        }\n\n        if (filter.isGeometryChanged()) this.geometryChanged();\n      } else if (hasInterface(arguments[0], GeometryFilter)) {\n        let filter = arguments[0];\n        filter.filter(this);\n\n        for (var i = 0; i < this._geometries.length; i++) {\n          this._geometries[i].apply(filter);\n        }\n      } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n        let filter = arguments[0];\n        filter.filter(this);\n\n        for (var i = 0; i < this._geometries.length; i++) {\n          this._geometries[i].apply(filter);\n        }\n      }\n    }\n\n    getBoundary() {\n      this.checkNotGeometryCollection(this);\n      Assert.shouldNeverReachHere();\n      return null;\n    }\n\n    getGeometryType() {\n      return Geometry.TYPENAME_GEOMETRYCOLLECTION;\n    }\n\n    copy() {\n      var geometries = new Array(this._geometries.length).fill(null);\n\n      for (var i = 0; i < geometries.length; i++) {\n        geometries[i] = this._geometries[i].copy();\n      }\n\n      return new GeometryCollection(geometries, this._factory);\n    }\n\n    isEmpty() {\n      for (var i = 0; i < this._geometries.length; i++) {\n        if (!this._geometries[i].isEmpty()) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    getClass() {\n      return GeometryCollection;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  GeometryCollection.constructor_ = function () {\n    this._geometries = null;\n\n    if (arguments.length === 0) ; else if (arguments.length === 2) {\n      let geometries = arguments[0],\n          factory = arguments[1];\n      Geometry.constructor_.call(this, factory);\n\n      if (geometries === null) {\n        geometries = [];\n      }\n\n      if (Geometry.hasNullElements(geometries)) {\n        throw new IllegalArgumentException(\"geometries must not contain null elements\");\n      }\n\n      this._geometries = geometries;\n    }\n  };\n\n  GeometryCollection.serialVersionUID = -5694727726395021467;\n\n  class MultiLineString extends GeometryCollection {\n    constructor() {\n      super();\n      MultiLineString.constructor_.apply(this, arguments);\n    }\n\n    equalsExact() {\n      if (arguments.length === 2 && typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry) {\n        let other = arguments[0],\n            tolerance = arguments[1];\n\n        if (!this.isEquivalentClass(other)) {\n          return false;\n        }\n\n        return super.equalsExact.call(this, other, tolerance);\n      } else return super.equalsExact.apply(this, arguments);\n    }\n\n    getBoundaryDimension() {\n      if (this.isClosed()) {\n        return Dimension.FALSE;\n      }\n\n      return 0;\n    }\n\n    isClosed() {\n      if (this.isEmpty()) {\n        return false;\n      }\n\n      for (var i = 0; i < this._geometries.length; i++) {\n        if (!this._geometries[i].isClosed()) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    getTypeCode() {\n      return Geometry.TYPECODE_MULTILINESTRING;\n    }\n\n    getDimension() {\n      return 1;\n    }\n\n    reverse() {\n      var nLines = this._geometries.length;\n      var revLines = new Array(nLines).fill(null);\n\n      for (var i = 0; i < this._geometries.length; i++) {\n        revLines[nLines - 1 - i] = this._geometries[i].reverse();\n      }\n\n      return this.getFactory().createMultiLineString(revLines);\n    }\n\n    getBoundary() {\n      return new BoundaryOp(this).getBoundary();\n    }\n\n    getGeometryType() {\n      return Geometry.TYPENAME_MULTILINESTRING;\n    }\n\n    copy() {\n      var lineStrings = new Array(this._geometries.length).fill(null);\n\n      for (var i = 0; i < lineStrings.length; i++) {\n        lineStrings[i] = this._geometries[i].copy();\n      }\n\n      return new MultiLineString(lineStrings, this._factory);\n    }\n\n    getClass() {\n      return MultiLineString;\n    }\n\n    get interfaces_() {\n      return [Lineal];\n    }\n\n  }\n\n  MultiLineString.constructor_ = function () {\n    let lineStrings = arguments[0],\n        factory = arguments[1];\n    GeometryCollection.constructor_.call(this, lineStrings, factory);\n  };\n\n  MultiLineString.serialVersionUID = 8166665132445433741;\n\n  class BoundaryOp {\n    constructor() {\n      BoundaryOp.constructor_.apply(this, arguments);\n    }\n\n    static getBoundary() {\n      if (arguments.length === 1) {\n        let g = arguments[0];\n        var bop = new BoundaryOp(g);\n        return bop.getBoundary();\n      } else if (arguments.length === 2) {\n        let g = arguments[0],\n            bnRule = arguments[1];\n        var bop = new BoundaryOp(g, bnRule);\n        return bop.getBoundary();\n      }\n    }\n\n    boundaryMultiLineString(mLine) {\n      if (this._geom.isEmpty()) {\n        return this.getEmptyMultiPoint();\n      }\n\n      var bdyPts = this.computeBoundaryCoordinates(mLine);\n\n      if (bdyPts.length === 1) {\n        return this._geomFact.createPoint(bdyPts[0]);\n      }\n\n      return this._geomFact.createMultiPointFromCoords(bdyPts);\n    }\n\n    getBoundary() {\n      if (this._geom instanceof LineString) return this.boundaryLineString(this._geom);\n      if (this._geom instanceof MultiLineString) return this.boundaryMultiLineString(this._geom);\n      return this._geom.getBoundary();\n    }\n\n    boundaryLineString(line) {\n      if (this._geom.isEmpty()) {\n        return this.getEmptyMultiPoint();\n      }\n\n      if (line.isClosed()) {\n        var closedEndpointOnBoundary = this._bnRule.isInBoundary(2);\n\n        if (closedEndpointOnBoundary) {\n          return line.getStartPoint();\n        } else {\n          return this._geomFact.createMultiPoint();\n        }\n      }\n\n      return this._geomFact.createMultiPoint([line.getStartPoint(), line.getEndPoint()]);\n    }\n\n    getEmptyMultiPoint() {\n      return this._geomFact.createMultiPoint();\n    }\n\n    computeBoundaryCoordinates(mLine) {\n      var bdyPts = new ArrayList();\n      this._endpointMap = new TreeMap();\n\n      for (var i = 0; i < mLine.getNumGeometries(); i++) {\n        var line = mLine.getGeometryN(i);\n        if (line.getNumPoints() === 0) continue;\n        this.addEndpoint(line.getCoordinateN(0));\n        this.addEndpoint(line.getCoordinateN(line.getNumPoints() - 1));\n      }\n\n      for (var it = this._endpointMap.entrySet().iterator(); it.hasNext();) {\n        var entry = it.next();\n        var counter = entry.getValue();\n        var valence = counter.count;\n\n        if (this._bnRule.isInBoundary(valence)) {\n          bdyPts.add(entry.getKey());\n        }\n      }\n\n      return CoordinateArrays.toCoordinateArray(bdyPts);\n    }\n\n    addEndpoint(pt) {\n      var counter = this._endpointMap.get(pt);\n\n      if (counter === null) {\n        counter = new Counter();\n\n        this._endpointMap.put(pt, counter);\n      }\n\n      counter.count++;\n    }\n\n    getClass() {\n      return BoundaryOp;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  BoundaryOp.constructor_ = function () {\n    this._geom = null;\n    this._geomFact = null;\n    this._bnRule = null;\n    this._endpointMap = null;\n\n    if (arguments.length === 1) {\n      let geom = arguments[0];\n      BoundaryOp.constructor_.call(this, geom, BoundaryNodeRule.MOD2_BOUNDARY_RULE);\n    } else if (arguments.length === 2) {\n      let geom = arguments[0],\n          bnRule = arguments[1];\n      this._geom = geom;\n      this._geomFact = geom.getFactory();\n      this._bnRule = bnRule;\n    }\n  };\n\n  class Counter {\n    constructor() {\n      Counter.constructor_.apply(this, arguments);\n    }\n\n    getClass() {\n      return Counter;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  Counter.constructor_ = function () {\n    this.count = null;\n  };\n\n  class Length {\n    constructor() {\n      Length.constructor_.apply(this, arguments);\n    }\n\n    static ofLine(pts) {\n      var n = pts.size();\n      if (n <= 1) return 0.0;\n      var len = 0.0;\n      var p = new Coordinate();\n      pts.getCoordinate(0, p);\n      var x0 = p.x;\n      var y0 = p.y;\n\n      for (var i = 1; i < n; i++) {\n        pts.getCoordinate(i, p);\n        var x1 = p.x;\n        var y1 = p.y;\n        var dx = x1 - x0;\n        var dy = y1 - y0;\n        len += Math.sqrt(dx * dx + dy * dy);\n        x0 = x1;\n        y0 = y1;\n      }\n\n      return len;\n    }\n\n    getClass() {\n      return Length;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  Length.constructor_ = function () {};\n\n  function PrintStream() {}\n\n  function StringReader() {}\n\n  function DecimalFormat() {}\n\n  function ByteArrayOutputStream() {}\n\n  function IOException() {}\n\n  function LineNumberReader() {}\n\n  class StringUtil {\n    constructor() {\n      StringUtil.constructor_.apply(this, arguments);\n    }\n\n    static chars(c, n) {\n      var ch = new Array(n).fill(null);\n\n      for (var i = 0; i < n; i++) {\n        ch[i] = c;\n      }\n\n      return new String(ch);\n    }\n\n    static getStackTrace() {\n      if (arguments.length === 1) {\n        let t = arguments[0];\n        var os = new ByteArrayOutputStream();\n        var ps = new PrintStream(os);\n        t.printStackTrace(ps);\n        return os.toString();\n      } else if (arguments.length === 2) {\n        let t = arguments[0],\n            depth = arguments[1];\n        var stackTrace = \"\";\n        var stringReader = new StringReader(StringUtil.getStackTrace(t));\n        var lineNumberReader = new LineNumberReader(stringReader);\n\n        for (var i = 0; i < depth; i++) {\n          try {\n            stackTrace += lineNumberReader.readLine() + StringUtil.NEWLINE;\n          } catch (e) {\n            if (e instanceof IOException) {\n              Assert.shouldNeverReachHere();\n            } else throw e;\n          } finally {}\n        }\n\n        return stackTrace;\n      }\n    }\n\n    static split(s, separator) {\n      var separatorlen = separator.length;\n      var tokenList = new ArrayList();\n      var tmpString = \"\" + s;\n      var pos = tmpString.indexOf(separator);\n\n      while (pos >= 0) {\n        var token = tmpString.substring(0, pos);\n        tokenList.add(token);\n        tmpString = tmpString.substring(pos + separatorlen);\n        pos = tmpString.indexOf(separator);\n      }\n\n      if (tmpString.length > 0) tokenList.add(tmpString);\n      var res = new Array(tokenList.size()).fill(null);\n\n      for (var i = 0; i < res.length; i++) {\n        res[i] = tokenList.get(i);\n      }\n\n      return res;\n    }\n\n    static toString() {\n      if (arguments.length === 1 && typeof arguments[0] === \"number\") {\n        let d = arguments[0];\n        return StringUtil.SIMPLE_ORDINATE_FORMAT.format(d);\n      }\n    }\n\n    static spaces(n) {\n      return StringUtil.chars(' ', n);\n    }\n\n    getClass() {\n      return StringUtil;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  StringUtil.constructor_ = function () {};\n\n  StringUtil.NEWLINE = System.getProperty(\"line.separator\");\n  StringUtil.SIMPLE_ORDINATE_FORMAT = new DecimalFormat(\"0.#\");\n\n  function StringBuilder(str) {\n    this.str = str;\n  }\n\n  StringBuilder.prototype.append = function (e) {\n    this.str += e;\n  };\n\n  StringBuilder.prototype.setCharAt = function (i, c) {\n    this.str = this.str.substr(0, i) + c + this.str.substr(i + 1);\n  };\n\n  StringBuilder.prototype.toString = function (e) {\n    return this.str;\n  };\n\n  class CoordinateSequences {\n    constructor() {\n      CoordinateSequences.constructor_.apply(this, arguments);\n    }\n\n    static copyCoord(src, srcPos, dest, destPos) {\n      var minDim = Math.min(src.getDimension(), dest.getDimension());\n\n      for (var dim = 0; dim < minDim; dim++) {\n        dest.setOrdinate(destPos, dim, src.getOrdinate(srcPos, dim));\n      }\n    }\n\n    static isRing(seq) {\n      var n = seq.size();\n      if (n === 0) return true;\n      if (n <= 3) return false;\n      return seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y);\n    }\n\n    static isEqual(cs1, cs2) {\n      var cs1Size = cs1.size();\n      var cs2Size = cs2.size();\n      if (cs1Size !== cs2Size) return false;\n      var dim = Math.min(cs1.getDimension(), cs2.getDimension());\n\n      for (var i = 0; i < cs1Size; i++) {\n        for (var d = 0; d < dim; d++) {\n          var v1 = cs1.getOrdinate(i, d);\n          var v2 = cs2.getOrdinate(i, d);\n          if (cs1.getOrdinate(i, d) === cs2.getOrdinate(i, d)) continue;\n          if (Double.isNaN(v1) && Double.isNaN(v2)) continue;\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    static extend(fact, seq, size) {\n      var newseq = fact.create(size, seq.getDimension());\n      var n = seq.size();\n      CoordinateSequences.copy(seq, 0, newseq, 0, n);\n\n      if (n > 0) {\n        for (var i = n; i < size; i++) CoordinateSequences.copy(seq, n - 1, newseq, i, 1);\n      }\n\n      return newseq;\n    }\n\n    static reverse(seq) {\n      var last = seq.size() - 1;\n      var mid = Math.trunc(last / 2);\n\n      for (var i = 0; i <= mid; i++) {\n        CoordinateSequences.swap(seq, i, last - i);\n      }\n    }\n\n    static swap(seq, i, j) {\n      if (i === j) return null;\n\n      for (var dim = 0; dim < seq.getDimension(); dim++) {\n        var tmp = seq.getOrdinate(i, dim);\n        seq.setOrdinate(i, dim, seq.getOrdinate(j, dim));\n        seq.setOrdinate(j, dim, tmp);\n      }\n    }\n\n    static copy(src, srcPos, dest, destPos, length) {\n      for (var i = 0; i < length; i++) {\n        CoordinateSequences.copyCoord(src, srcPos + i, dest, destPos + i);\n      }\n    }\n\n    static toString() {\n      if (arguments.length === 1 && hasInterface(arguments[0], CoordinateSequence)) {\n        let cs = arguments[0];\n        var size = cs.size();\n        if (size === 0) return \"()\";\n        var dim = cs.getDimension();\n        var builder = new StringBuilder();\n        builder.append('(');\n\n        for (var i = 0; i < size; i++) {\n          if (i > 0) builder.append(\" \");\n\n          for (var d = 0; d < dim; d++) {\n            if (d > 0) builder.append(\",\");\n            builder.append(StringUtil.toString(cs.getOrdinate(i, d)));\n          }\n        }\n\n        builder.append(')');\n        return builder.toString();\n      }\n    }\n\n    static ensureValidRing(fact, seq) {\n      var n = seq.size();\n      if (n === 0) return seq;\n      if (n <= 3) return CoordinateSequences.createClosedRing(fact, seq, 4);\n      var isClosed = seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y);\n      if (isClosed) return seq;\n      return CoordinateSequences.createClosedRing(fact, seq, n + 1);\n    }\n\n    static createClosedRing(fact, seq, size) {\n      var newseq = fact.create(size, seq.getDimension());\n      var n = seq.size();\n      CoordinateSequences.copy(seq, 0, newseq, 0, n);\n\n      for (var i = n; i < size; i++) CoordinateSequences.copy(seq, 0, newseq, i, 1);\n\n      return newseq;\n    }\n\n    getClass() {\n      return CoordinateSequences;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  CoordinateSequences.constructor_ = function () {};\n\n  class LineString extends Geometry {\n    constructor() {\n      super();\n      LineString.constructor_.apply(this, arguments);\n    }\n\n    computeEnvelopeInternal() {\n      if (this.isEmpty()) {\n        return new Envelope();\n      }\n\n      return this._points.expandEnvelope(new Envelope());\n    }\n\n    isRing() {\n      return this.isClosed() && this.isSimple();\n    }\n\n    getCoordinates() {\n      return this._points.toCoordinateArray();\n    }\n\n    equalsExact() {\n      if (arguments.length === 2 && typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry) {\n        let other = arguments[0],\n            tolerance = arguments[1];\n\n        if (!this.isEquivalentClass(other)) {\n          return false;\n        }\n\n        var otherLineString = other;\n\n        if (this._points.size() !== otherLineString._points.size()) {\n          return false;\n        }\n\n        for (var i = 0; i < this._points.size(); i++) {\n          if (!this.equal(this._points.getCoordinate(i), otherLineString._points.getCoordinate(i), tolerance)) {\n            return false;\n          }\n        }\n\n        return true;\n      } else return super.equalsExact.apply(this, arguments);\n    }\n\n    normalize() {\n      for (var i = 0; i < Math.trunc(this._points.size() / 2); i++) {\n        var j = this._points.size() - 1 - i;\n\n        if (!this._points.getCoordinate(i).equals(this._points.getCoordinate(j))) {\n          if (this._points.getCoordinate(i).compareTo(this._points.getCoordinate(j)) > 0) {\n            var copy = this._points.copy();\n\n            CoordinateSequences.reverse(copy);\n            this._points = copy;\n          }\n\n          return null;\n        }\n      }\n    }\n\n    getCoordinate() {\n      if (this.isEmpty()) return null;\n      return this._points.getCoordinate(0);\n    }\n\n    getBoundaryDimension() {\n      if (this.isClosed()) {\n        return Dimension.FALSE;\n      }\n\n      return 0;\n    }\n\n    isClosed() {\n      if (this.isEmpty()) {\n        return false;\n      }\n\n      return this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints() - 1));\n    }\n\n    getEndPoint() {\n      if (this.isEmpty()) {\n        return null;\n      }\n\n      return this.getPointN(this.getNumPoints() - 1);\n    }\n\n    getTypeCode() {\n      return Geometry.TYPECODE_LINESTRING;\n    }\n\n    getDimension() {\n      return 1;\n    }\n\n    getLength() {\n      return Length.ofLine(this._points);\n    }\n\n    getNumPoints() {\n      return this._points.size();\n    }\n\n    reverse() {\n      var seq = this._points.copy();\n\n      CoordinateSequences.reverse(seq);\n      var revLine = this.getFactory().createLineString(seq);\n      return revLine;\n    }\n\n    compareToSameClass() {\n      if (arguments.length === 1) {\n        let o = arguments[0];\n        var line = o;\n        var i = 0;\n        var j = 0;\n\n        while (i < this._points.size() && j < line._points.size()) {\n          var comparison = this._points.getCoordinate(i).compareTo(line._points.getCoordinate(j));\n\n          if (comparison !== 0) {\n            return comparison;\n          }\n\n          i++;\n          j++;\n        }\n\n        if (i < this._points.size()) {\n          return 1;\n        }\n\n        if (j < line._points.size()) {\n          return -1;\n        }\n\n        return 0;\n      } else if (arguments.length === 2) {\n        let o = arguments[0],\n            comp = arguments[1];\n        var line = o;\n        return comp.compare(this._points, line._points);\n      }\n    }\n\n    apply() {\n      if (hasInterface(arguments[0], CoordinateFilter)) {\n        let filter = arguments[0];\n\n        for (var i = 0; i < this._points.size(); i++) {\n          filter.filter(this._points.getCoordinate(i));\n        }\n      } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n        let filter = arguments[0];\n        if (this._points.size() === 0) return null;\n\n        for (var i = 0; i < this._points.size(); i++) {\n          filter.filter(this._points, i);\n          if (filter.isDone()) break;\n        }\n\n        if (filter.isGeometryChanged()) this.geometryChanged();\n      } else if (hasInterface(arguments[0], GeometryFilter)) {\n        let filter = arguments[0];\n        filter.filter(this);\n      } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n        let filter = arguments[0];\n        filter.filter(this);\n      }\n    }\n\n    getBoundary() {\n      return new BoundaryOp(this).getBoundary();\n    }\n\n    isEquivalentClass(other) {\n      return other instanceof LineString;\n    }\n\n    getCoordinateN(n) {\n      return this._points.getCoordinate(n);\n    }\n\n    getGeometryType() {\n      return Geometry.TYPENAME_LINESTRING;\n    }\n\n    copy() {\n      return new LineString(this._points.copy(), this._factory);\n    }\n\n    getCoordinateSequence() {\n      return this._points;\n    }\n\n    isEmpty() {\n      return this._points.size() === 0;\n    }\n\n    init(points) {\n      if (points === null) {\n        points = this.getFactory().getCoordinateSequenceFactory().create([]);\n      }\n\n      if (points.size() === 1) {\n        throw new IllegalArgumentException(\"Invalid number of points in LineString (found \" + points.size() + \" - must be 0 or >= 2)\");\n      }\n\n      this._points = points;\n    }\n\n    isCoordinate(pt) {\n      for (var i = 0; i < this._points.size(); i++) {\n        if (this._points.getCoordinate(i).equals(pt)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    getStartPoint() {\n      if (this.isEmpty()) {\n        return null;\n      }\n\n      return this.getPointN(0);\n    }\n\n    getPointN(n) {\n      return this.getFactory().createPoint(this._points.getCoordinate(n));\n    }\n\n    getClass() {\n      return LineString;\n    }\n\n    get interfaces_() {\n      return [Lineal];\n    }\n\n  }\n\n  LineString.constructor_ = function () {\n    this._points = null;\n\n    if (arguments.length === 0) ; else if (arguments.length === 2) {\n      let points = arguments[0],\n          factory = arguments[1];\n      Geometry.constructor_.call(this, factory);\n      this.init(points);\n    }\n  };\n\n  LineString.serialVersionUID = 3110669828065365560;\n\n  class Puntal {\n    constructor() {\n      Puntal.constructor_.apply(this, arguments);\n    }\n\n    getClass() {\n      return Puntal;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  Puntal.constructor_ = function () {};\n\n  class Point extends Geometry {\n    constructor() {\n      super();\n      Point.constructor_.apply(this, arguments);\n    }\n\n    computeEnvelopeInternal() {\n      if (this.isEmpty()) {\n        return new Envelope();\n      }\n\n      var env = new Envelope();\n      env.expandToInclude(this._coordinates.getX(0), this._coordinates.getY(0));\n      return env;\n    }\n\n    getCoordinates() {\n      return this.isEmpty() ? [] : [this.getCoordinate()];\n    }\n\n    equalsExact() {\n      if (arguments.length === 2 && typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry) {\n        let other = arguments[0],\n            tolerance = arguments[1];\n\n        if (!this.isEquivalentClass(other)) {\n          return false;\n        }\n\n        if (this.isEmpty() && other.isEmpty()) {\n          return true;\n        }\n\n        if (this.isEmpty() !== other.isEmpty()) {\n          return false;\n        }\n\n        return this.equal(other.getCoordinate(), this.getCoordinate(), tolerance);\n      } else return super.equalsExact.apply(this, arguments);\n    }\n\n    normalize() {}\n\n    getCoordinate() {\n      return this._coordinates.size() !== 0 ? this._coordinates.getCoordinate(0) : null;\n    }\n\n    getBoundaryDimension() {\n      return Dimension.FALSE;\n    }\n\n    getTypeCode() {\n      return Geometry.TYPECODE_POINT;\n    }\n\n    getDimension() {\n      return 0;\n    }\n\n    getNumPoints() {\n      return this.isEmpty() ? 0 : 1;\n    }\n\n    reverse() {\n      return this.copy();\n    }\n\n    getX() {\n      if (this.getCoordinate() === null) {\n        throw new IllegalStateException(\"getX called on empty Point\");\n      }\n\n      return this.getCoordinate().x;\n    }\n\n    compareToSameClass() {\n      if (arguments.length === 1) {\n        let other = arguments[0];\n        var point = other;\n        return this.getCoordinate().compareTo(point.getCoordinate());\n      } else if (arguments.length === 2) {\n        let other = arguments[0],\n            comp = arguments[1];\n        var point = other;\n        return comp.compare(this._coordinates, point._coordinates);\n      }\n    }\n\n    apply() {\n      if (hasInterface(arguments[0], CoordinateFilter)) {\n        let filter = arguments[0];\n\n        if (this.isEmpty()) {\n          return null;\n        }\n\n        filter.filter(this.getCoordinate());\n      } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n        let filter = arguments[0];\n        if (this.isEmpty()) return null;\n        filter.filter(this._coordinates, 0);\n        if (filter.isGeometryChanged()) this.geometryChanged();\n      } else if (hasInterface(arguments[0], GeometryFilter)) {\n        let filter = arguments[0];\n        filter.filter(this);\n      } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n        let filter = arguments[0];\n        filter.filter(this);\n      }\n    }\n\n    getBoundary() {\n      return this.getFactory().createGeometryCollection();\n    }\n\n    getGeometryType() {\n      return Geometry.TYPENAME_POINT;\n    }\n\n    copy() {\n      return new Point(this._coordinates.copy(), this._factory);\n    }\n\n    getCoordinateSequence() {\n      return this._coordinates;\n    }\n\n    getY() {\n      if (this.getCoordinate() === null) {\n        throw new IllegalStateException(\"getY called on empty Point\");\n      }\n\n      return this.getCoordinate().y;\n    }\n\n    isEmpty() {\n      return this._coordinates.size() === 0;\n    }\n\n    init(coordinates) {\n      if (coordinates === null) {\n        coordinates = this.getFactory().getCoordinateSequenceFactory().create([]);\n      }\n\n      Assert.isTrue(coordinates.size() <= 1);\n      this._coordinates = coordinates;\n    }\n\n    isSimple() {\n      return true;\n    }\n\n    getClass() {\n      return Point;\n    }\n\n    get interfaces_() {\n      return [Puntal];\n    }\n\n  }\n\n  Point.constructor_ = function () {\n    this._coordinates = null;\n    let coordinates = arguments[0],\n        factory = arguments[1];\n    Geometry.constructor_.call(this, factory);\n    this.init(coordinates);\n  };\n\n  Point.serialVersionUID = 4902022702746614570;\n\n  class Area {\n    constructor() {\n      Area.constructor_.apply(this, arguments);\n    }\n\n    static ofRing() {\n      if (arguments[0] instanceof Array) {\n        let ring = arguments[0];\n        return Math.abs(Area.ofRingSigned(ring));\n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        let ring = arguments[0];\n        return Math.abs(Area.ofRingSigned(ring));\n      }\n    }\n\n    static ofRingSigned() {\n      if (arguments[0] instanceof Array) {\n        let ring = arguments[0];\n        if (ring.length < 3) return 0.0;\n        var sum = 0.0;\n        var x0 = ring[0].x;\n\n        for (var i = 1; i < ring.length - 1; i++) {\n          var x = ring[i].x - x0;\n          var y1 = ring[i + 1].y;\n          var y2 = ring[i - 1].y;\n          sum += x * (y2 - y1);\n        }\n\n        return sum / 2.0;\n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        let ring = arguments[0];\n        var n = ring.size();\n        if (n < 3) return 0.0;\n        var p0 = new Coordinate();\n        var p1 = new Coordinate();\n        var p2 = new Coordinate();\n        ring.getCoordinate(0, p1);\n        ring.getCoordinate(1, p2);\n        var x0 = p1.x;\n        p2.x -= x0;\n        var sum = 0.0;\n\n        for (var i = 1; i < n - 1; i++) {\n          p0.y = p1.y;\n          p1.x = p2.x;\n          p1.y = p2.y;\n          ring.getCoordinate(i + 1, p2);\n          p2.x -= x0;\n          sum += p1.x * (p0.y - p2.y);\n        }\n\n        return sum / 2.0;\n      }\n    }\n\n    getClass() {\n      return Area;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  Area.constructor_ = function () {};\n\n  class Polygonal {\n    constructor() {\n      Polygonal.constructor_.apply(this, arguments);\n    }\n\n    getClass() {\n      return Polygonal;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  Polygonal.constructor_ = function () {};\n\n  class Polygon extends Geometry {\n    constructor() {\n      super();\n      Polygon.constructor_.apply(this, arguments);\n    }\n\n    computeEnvelopeInternal() {\n      return this._shell.getEnvelopeInternal();\n    }\n\n    getCoordinates() {\n      if (this.isEmpty()) {\n        return [];\n      }\n\n      var coordinates = new Array(this.getNumPoints()).fill(null);\n      var k = -1;\n\n      var shellCoordinates = this._shell.getCoordinates();\n\n      for (var x = 0; x < shellCoordinates.length; x++) {\n        k++;\n        coordinates[k] = shellCoordinates[x];\n      }\n\n      for (var i = 0; i < this._holes.length; i++) {\n        var childCoordinates = this._holes[i].getCoordinates();\n\n        for (var j = 0; j < childCoordinates.length; j++) {\n          k++;\n          coordinates[k] = childCoordinates[j];\n        }\n      }\n\n      return coordinates;\n    }\n\n    getArea() {\n      var area = 0.0;\n      area += Area.ofRing(this._shell.getCoordinateSequence());\n\n      for (var i = 0; i < this._holes.length; i++) {\n        area -= Area.ofRing(this._holes[i].getCoordinateSequence());\n      }\n\n      return area;\n    }\n\n    isRectangle() {\n      if (this.getNumInteriorRing() !== 0) return false;\n      if (this._shell === null) return false;\n      if (this._shell.getNumPoints() !== 5) return false;\n\n      var seq = this._shell.getCoordinateSequence();\n\n      var env = this.getEnvelopeInternal();\n\n      for (var i = 0; i < 5; i++) {\n        var x = seq.getX(i);\n        if (!(x === env.getMinX() || x === env.getMaxX())) return false;\n        var y = seq.getY(i);\n        if (!(y === env.getMinY() || y === env.getMaxY())) return false;\n      }\n\n      var prevX = seq.getX(0);\n      var prevY = seq.getY(0);\n\n      for (var i = 1; i <= 4; i++) {\n        var x = seq.getX(i);\n        var y = seq.getY(i);\n        var xChanged = x !== prevX;\n        var yChanged = y !== prevY;\n        if (xChanged === yChanged) return false;\n        prevX = x;\n        prevY = y;\n      }\n\n      return true;\n    }\n\n    equalsExact() {\n      if (arguments.length === 2 && typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry) {\n        let other = arguments[0],\n            tolerance = arguments[1];\n\n        if (!this.isEquivalentClass(other)) {\n          return false;\n        }\n\n        var otherPolygon = other;\n        var thisShell = this._shell;\n        var otherPolygonShell = otherPolygon._shell;\n\n        if (!thisShell.equalsExact(otherPolygonShell, tolerance)) {\n          return false;\n        }\n\n        if (this._holes.length !== otherPolygon._holes.length) {\n          return false;\n        }\n\n        for (var i = 0; i < this._holes.length; i++) {\n          if (!this._holes[i].equalsExact(otherPolygon._holes[i], tolerance)) {\n            return false;\n          }\n        }\n\n        return true;\n      } else return super.equalsExact.apply(this, arguments);\n    }\n\n    normalize() {\n      if (arguments.length === 0) {\n        this.normalize(this._shell, true);\n\n        for (var i = 0; i < this._holes.length; i++) {\n          this.normalize(this._holes[i], false);\n        }\n\n        Arrays.sort(this._holes);\n      } else if (arguments.length === 2) {\n        let ring = arguments[0],\n            clockwise = arguments[1];\n\n        if (ring.isEmpty()) {\n          return null;\n        }\n\n        var uniqueCoordinates = new Array(ring.getCoordinates().length - 1).fill(null);\n        System.arraycopy(ring.getCoordinates(), 0, uniqueCoordinates, 0, uniqueCoordinates.length);\n        var minCoordinate = CoordinateArrays.minCoordinate(ring.getCoordinates());\n        CoordinateArrays.scroll(uniqueCoordinates, minCoordinate);\n        System.arraycopy(uniqueCoordinates, 0, ring.getCoordinates(), 0, uniqueCoordinates.length);\n        ring.getCoordinates()[uniqueCoordinates.length] = uniqueCoordinates[0];\n\n        if (Orientation.isCCW(ring.getCoordinates()) === clockwise) {\n          CoordinateArrays.reverse(ring.getCoordinates());\n        }\n      }\n    }\n\n    getCoordinate() {\n      return this._shell.getCoordinate();\n    }\n\n    getNumInteriorRing() {\n      return this._holes.length;\n    }\n\n    getBoundaryDimension() {\n      return 1;\n    }\n\n    getTypeCode() {\n      return Geometry.TYPECODE_POLYGON;\n    }\n\n    getDimension() {\n      return 2;\n    }\n\n    getLength() {\n      var len = 0.0;\n      len += this._shell.getLength();\n\n      for (var i = 0; i < this._holes.length; i++) {\n        len += this._holes[i].getLength();\n      }\n\n      return len;\n    }\n\n    getNumPoints() {\n      var numPoints = this._shell.getNumPoints();\n\n      for (var i = 0; i < this._holes.length; i++) {\n        numPoints += this._holes[i].getNumPoints();\n      }\n\n      return numPoints;\n    }\n\n    reverse() {\n      var poly = this.copy();\n      poly._shell = this._shell.copy().reverse();\n      poly._holes = new Array(this._holes.length).fill(null);\n\n      for (var i = 0; i < this._holes.length; i++) {\n        poly._holes[i] = this._holes[i].copy().reverse();\n      }\n\n      return poly;\n    }\n\n    convexHull() {\n      return this.getExteriorRing().convexHull();\n    }\n\n    compareToSameClass() {\n      if (arguments.length === 1) {\n        let o = arguments[0];\n        var thisShell = this._shell;\n        var otherShell = o._shell;\n        return thisShell.compareToSameClass(otherShell);\n      } else if (arguments.length === 2) {\n        let o = arguments[0],\n            comp = arguments[1];\n        var poly = o;\n        var thisShell = this._shell;\n        var otherShell = poly._shell;\n        var shellComp = thisShell.compareToSameClass(otherShell, comp);\n        if (shellComp !== 0) return shellComp;\n        var nHole1 = this.getNumInteriorRing();\n        var nHole2 = poly.getNumInteriorRing();\n        var i = 0;\n\n        while (i < nHole1 && i < nHole2) {\n          var thisHole = this.getInteriorRingN(i);\n          var otherHole = poly.getInteriorRingN(i);\n          var holeComp = thisHole.compareToSameClass(otherHole, comp);\n          if (holeComp !== 0) return holeComp;\n          i++;\n        }\n\n        if (i < nHole1) return 1;\n        if (i < nHole2) return -1;\n        return 0;\n      }\n    }\n\n    apply() {\n      if (hasInterface(arguments[0], CoordinateFilter)) {\n        let filter = arguments[0];\n\n        this._shell.apply(filter);\n\n        for (var i = 0; i < this._holes.length; i++) {\n          this._holes[i].apply(filter);\n        }\n      } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n        let filter = arguments[0];\n\n        this._shell.apply(filter);\n\n        if (!filter.isDone()) {\n          for (var i = 0; i < this._holes.length; i++) {\n            this._holes[i].apply(filter);\n\n            if (filter.isDone()) break;\n          }\n        }\n\n        if (filter.isGeometryChanged()) this.geometryChanged();\n      } else if (hasInterface(arguments[0], GeometryFilter)) {\n        let filter = arguments[0];\n        filter.filter(this);\n      } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n        let filter = arguments[0];\n        filter.filter(this);\n\n        this._shell.apply(filter);\n\n        for (var i = 0; i < this._holes.length; i++) {\n          this._holes[i].apply(filter);\n        }\n      }\n    }\n\n    getBoundary() {\n      if (this.isEmpty()) {\n        return this.getFactory().createMultiLineString();\n      }\n\n      var rings = new Array(this._holes.length + 1).fill(null);\n      rings[0] = this._shell;\n\n      for (var i = 0; i < this._holes.length; i++) {\n        rings[i + 1] = this._holes[i];\n      }\n\n      if (rings.length <= 1) return this.getFactory().createLinearRing(rings[0].getCoordinateSequence());\n      return this.getFactory().createMultiLineString(rings);\n    }\n\n    getGeometryType() {\n      return Geometry.TYPENAME_POLYGON;\n    }\n\n    copy() {\n      var shellCopy = this._shell.copy();\n\n      var holeCopies = new Array(this._holes.length).fill(null);\n\n      for (var i = 0; i < this._holes.length; i++) {\n        holeCopies[i] = this._holes[i].copy();\n      }\n\n      return new Polygon(shellCopy, holeCopies, this._factory);\n    }\n\n    getExteriorRing() {\n      return this._shell;\n    }\n\n    isEmpty() {\n      return this._shell.isEmpty();\n    }\n\n    getInteriorRingN(n) {\n      return this._holes[n];\n    }\n\n    getClass() {\n      return Polygon;\n    }\n\n    get interfaces_() {\n      return [Polygonal];\n    }\n\n  }\n\n  Polygon.constructor_ = function () {\n    this._shell = null;\n    this._holes = null;\n    let shell = arguments[0],\n        holes = arguments[1],\n        factory = arguments[2];\n    Geometry.constructor_.call(this, factory);\n\n    if (shell === null) {\n      shell = this.getFactory().createLinearRing();\n    }\n\n    if (holes === null) {\n      holes = [];\n    }\n\n    if (Geometry.hasNullElements(holes)) {\n      throw new IllegalArgumentException(\"holes must not contain null elements\");\n    }\n\n    if (shell.isEmpty() && Geometry.hasNonEmptyElements(holes)) {\n      throw new IllegalArgumentException(\"shell is empty but holes are not\");\n    }\n\n    this._shell = shell;\n    this._holes = holes;\n  };\n\n  Polygon.serialVersionUID = -3494792200821764533;\n\n  class MultiPoint extends GeometryCollection {\n    constructor() {\n      super();\n      MultiPoint.constructor_.apply(this, arguments);\n    }\n\n    isValid() {\n      return true;\n    }\n\n    equalsExact() {\n      if (arguments.length === 2 && typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry) {\n        let other = arguments[0],\n            tolerance = arguments[1];\n\n        if (!this.isEquivalentClass(other)) {\n          return false;\n        }\n\n        return super.equalsExact.call(this, other, tolerance);\n      } else return super.equalsExact.apply(this, arguments);\n    }\n\n    getCoordinate() {\n      if (arguments.length === 1 && Number.isInteger(arguments[0])) {\n        let n = arguments[0];\n        return this._geometries[n].getCoordinate();\n      } else return super.getCoordinate.apply(this, arguments);\n    }\n\n    getBoundaryDimension() {\n      return Dimension.FALSE;\n    }\n\n    getTypeCode() {\n      return Geometry.TYPECODE_MULTIPOINT;\n    }\n\n    getDimension() {\n      return 0;\n    }\n\n    getBoundary() {\n      return this.getFactory().createGeometryCollection();\n    }\n\n    getGeometryType() {\n      return Geometry.TYPENAME_MULTIPOINT;\n    }\n\n    copy() {\n      var points = new Array(this._geometries.length).fill(null);\n\n      for (var i = 0; i < points.length; i++) {\n        points[i] = this._geometries[i].copy();\n      }\n\n      return new MultiPoint(points, this._factory);\n    }\n\n    getClass() {\n      return MultiPoint;\n    }\n\n    get interfaces_() {\n      return [Puntal];\n    }\n\n  }\n\n  MultiPoint.constructor_ = function () {\n    let points = arguments[0],\n        factory = arguments[1];\n    GeometryCollection.constructor_.call(this, points, factory);\n  };\n\n  MultiPoint.serialVersionUID = -8048474874175355449;\n\n  class LinearRing extends LineString {\n    constructor() {\n      super();\n      LinearRing.constructor_.apply(this, arguments);\n    }\n\n    getBoundaryDimension() {\n      return Dimension.FALSE;\n    }\n\n    isClosed() {\n      if (this.isEmpty()) {\n        return true;\n      }\n\n      return super.isClosed.call(this);\n    }\n\n    getTypeCode() {\n      return Geometry.TYPECODE_LINEARRING;\n    }\n\n    reverse() {\n      var seq = this._points.copy();\n\n      CoordinateSequences.reverse(seq);\n      var rev = this.getFactory().createLinearRing(seq);\n      return rev;\n    }\n\n    validateConstruction() {\n      if (!this.isEmpty() && !super.isClosed.call(this)) {\n        throw new IllegalArgumentException(\"Points of LinearRing do not form a closed linestring\");\n      }\n\n      if (this.getCoordinateSequence().size() >= 1 && this.getCoordinateSequence().size() < LinearRing.MINIMUM_VALID_SIZE) {\n        throw new IllegalArgumentException(\"Invalid number of points in LinearRing (found \" + this.getCoordinateSequence().size() + \" - must be 0 or >= 4)\");\n      }\n    }\n\n    getGeometryType() {\n      return Geometry.TYPENAME_LINEARRING;\n    }\n\n    copy() {\n      return new LinearRing(this._points.copy(), this._factory);\n    }\n\n    getClass() {\n      return LinearRing;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  LinearRing.constructor_ = function () {\n    if (arguments[0] instanceof Array && arguments[1] instanceof GeometryFactory) {\n      let points = arguments[0],\n          factory = arguments[1];\n      LinearRing.constructor_.call(this, factory.getCoordinateSequenceFactory().create(points), factory);\n    } else if (hasInterface(arguments[0], CoordinateSequence) && arguments[1] instanceof GeometryFactory) {\n      let points = arguments[0],\n          factory = arguments[1];\n      LineString.constructor_.call(this, points, factory);\n      this.validateConstruction();\n    }\n  };\n\n  LinearRing.MINIMUM_VALID_SIZE = 4;\n  LinearRing.serialVersionUID = -4261142084085851829;\n\n  class MultiPolygon extends GeometryCollection {\n    constructor() {\n      super();\n      MultiPolygon.constructor_.apply(this, arguments);\n    }\n\n    equalsExact() {\n      if (arguments.length === 2 && typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry) {\n        let other = arguments[0],\n            tolerance = arguments[1];\n\n        if (!this.isEquivalentClass(other)) {\n          return false;\n        }\n\n        return super.equalsExact.call(this, other, tolerance);\n      } else return super.equalsExact.apply(this, arguments);\n    }\n\n    getBoundaryDimension() {\n      return 1;\n    }\n\n    getTypeCode() {\n      return Geometry.TYPECODE_MULTIPOLYGON;\n    }\n\n    getDimension() {\n      return 2;\n    }\n\n    reverse() {\n      var n = this._geometries.length;\n      var revGeoms = new Array(n).fill(null);\n\n      for (var i = 0; i < this._geometries.length; i++) {\n        revGeoms[i] = this._geometries[i].reverse();\n      }\n\n      return this.getFactory().createMultiPolygon(revGeoms);\n    }\n\n    getBoundary() {\n      if (this.isEmpty()) {\n        return this.getFactory().createMultiLineString();\n      }\n\n      var allRings = new ArrayList();\n\n      for (var i = 0; i < this._geometries.length; i++) {\n        var polygon = this._geometries[i];\n        var rings = polygon.getBoundary();\n\n        for (var j = 0; j < rings.getNumGeometries(); j++) {\n          allRings.add(rings.getGeometryN(j));\n        }\n      }\n\n      var allRingsArray = new Array(allRings.size()).fill(null);\n      return this.getFactory().createMultiLineString(allRings.toArray(allRingsArray));\n    }\n\n    getGeometryType() {\n      return Geometry.TYPENAME_MULTIPOLYGON;\n    }\n\n    copy() {\n      var polygons = new Array(this._geometries.length).fill(null);\n\n      for (var i = 0; i < polygons.length; i++) {\n        polygons[i] = this._geometries[i].copy();\n      }\n\n      return new MultiPolygon(polygons, this._factory);\n    }\n\n    getClass() {\n      return MultiPolygon;\n    }\n\n    get interfaces_() {\n      return [Polygonal];\n    }\n\n  }\n\n  MultiPolygon.constructor_ = function () {\n    let polygons = arguments[0],\n        factory = arguments[1];\n    GeometryCollection.constructor_.call(this, polygons, factory);\n  };\n\n  MultiPolygon.serialVersionUID = -551033529766975875;\n\n  class GeometryEditor {\n    constructor() {\n      GeometryEditor.constructor_.apply(this, arguments);\n    }\n\n    setCopyUserData(isUserDataCopied) {\n      this._isUserDataCopied = isUserDataCopied;\n    }\n\n    edit(geometry, operation) {\n      if (geometry === null) return null;\n      var result = this.editInternal(geometry, operation);\n\n      if (this._isUserDataCopied) {\n        result.setUserData(geometry.getUserData());\n      }\n\n      return result;\n    }\n\n    editInternal(geometry, operation) {\n      if (this._factory === null) this._factory = geometry.getFactory();\n\n      if (geometry instanceof GeometryCollection) {\n        return this.editGeometryCollection(geometry, operation);\n      }\n\n      if (geometry instanceof Polygon) {\n        return this.editPolygon(geometry, operation);\n      }\n\n      if (geometry instanceof Point) {\n        return operation.edit(geometry, this._factory);\n      }\n\n      if (geometry instanceof LineString) {\n        return operation.edit(geometry, this._factory);\n      }\n\n      Assert.shouldNeverReachHere(\"Unsupported Geometry class: \" + geometry.getClass().getName());\n      return null;\n    }\n\n    editGeometryCollection(collection, operation) {\n      var collectionForType = operation.edit(collection, this._factory);\n      var geometries = new ArrayList();\n\n      for (var i = 0; i < collectionForType.getNumGeometries(); i++) {\n        var geometry = this.edit(collectionForType.getGeometryN(i), operation);\n\n        if (geometry === null || geometry.isEmpty()) {\n          continue;\n        }\n\n        geometries.add(geometry);\n      }\n\n      if (collectionForType.getClass() === MultiPoint) {\n        return this._factory.createMultiPoint(geometries.toArray([]));\n      }\n\n      if (collectionForType.getClass() === MultiLineString) {\n        return this._factory.createMultiLineString(geometries.toArray([]));\n      }\n\n      if (collectionForType.getClass() === MultiPolygon) {\n        return this._factory.createMultiPolygon(geometries.toArray([]));\n      }\n\n      return this._factory.createGeometryCollection(geometries.toArray([]));\n    }\n\n    editPolygon(polygon, operation) {\n      var newPolygon = operation.edit(polygon, this._factory);\n      if (newPolygon === null) newPolygon = this._factory.createPolygon();\n\n      if (newPolygon.isEmpty()) {\n        return newPolygon;\n      }\n\n      var shell = this.edit(newPolygon.getExteriorRing(), operation);\n\n      if (shell === null || shell.isEmpty()) {\n        return this._factory.createPolygon();\n      }\n\n      var holes = new ArrayList();\n\n      for (var i = 0; i < newPolygon.getNumInteriorRing(); i++) {\n        var hole = this.edit(newPolygon.getInteriorRingN(i), operation);\n\n        if (hole === null || hole.isEmpty()) {\n          continue;\n        }\n\n        holes.add(hole);\n      }\n\n      return this._factory.createPolygon(shell, holes.toArray([]));\n    }\n\n    getClass() {\n      return GeometryEditor;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  function GeometryEditorOperation() {}\n\n  GeometryEditor.GeometryEditorOperation = GeometryEditorOperation;\n\n  class NoOpGeometryOperation {\n    constructor() {\n      NoOpGeometryOperation.constructor_.apply(this, arguments);\n    }\n\n    edit(geometry, factory) {\n      return geometry;\n    }\n\n    getClass() {\n      return NoOpGeometryOperation;\n    }\n\n    get interfaces_() {\n      return [GeometryEditorOperation];\n    }\n\n  }\n\n  NoOpGeometryOperation.constructor_ = function () {};\n\n  class CoordinateOperation {\n    constructor() {\n      CoordinateOperation.constructor_.apply(this, arguments);\n    }\n\n    edit(geometry, factory) {\n      var coordinates = this.edit(geometry.getCoordinates(), geometry);\n\n      if (geometry instanceof LinearRing) {\n        if (coordinates === null) return factory.createLinearRing();else return factory.createLinearRing(coordinates);\n      }\n\n      if (geometry instanceof LineString) {\n        if (coordinates === null) return factory.createLineString();else return factory.createLineString(coordinates);\n      }\n\n      if (geometry instanceof Point) {\n        if (coordinates === null || coordinates.length === 0) return factory.createPoint();else return factory.createPoint(coordinates[0]);\n      }\n\n      return geometry;\n    }\n\n    getClass() {\n      return CoordinateOperation;\n    }\n\n    get interfaces_() {\n      return [GeometryEditorOperation];\n    }\n\n  }\n\n  CoordinateOperation.constructor_ = function () {};\n\n  class CoordinateSequenceOperation {\n    constructor() {\n      CoordinateSequenceOperation.constructor_.apply(this, arguments);\n    }\n\n    edit(geometry, factory) {\n      if (geometry instanceof LinearRing) {\n        return factory.createLinearRing(this.edit(geometry.getCoordinateSequence(), geometry));\n      }\n\n      if (geometry instanceof LineString) {\n        return factory.createLineString(this.edit(geometry.getCoordinateSequence(), geometry));\n      }\n\n      if (geometry instanceof Point) {\n        return factory.createPoint(this.edit(geometry.getCoordinateSequence(), geometry));\n      }\n\n      return geometry;\n    }\n\n    getClass() {\n      return CoordinateSequenceOperation;\n    }\n\n    get interfaces_() {\n      return [GeometryEditorOperation];\n    }\n\n  }\n\n  CoordinateSequenceOperation.constructor_ = function () {};\n\n  GeometryEditor.NoOpGeometryOperation = NoOpGeometryOperation;\n  GeometryEditor.CoordinateOperation = CoordinateOperation;\n  GeometryEditor.CoordinateSequenceOperation = CoordinateSequenceOperation;\n\n  GeometryEditor.constructor_ = function () {\n    this._factory = null;\n    this._isUserDataCopied = false;\n\n    if (arguments.length === 0) ; else if (arguments.length === 1) {\n      let factory = arguments[0];\n      this._factory = factory;\n    }\n  };\n\n  class CoordinateArraySequence {\n    constructor() {\n      CoordinateArraySequence.constructor_.apply(this, arguments);\n    }\n\n    setOrdinate(index, ordinateIndex, value) {\n      switch (ordinateIndex) {\n        case CoordinateSequence.X:\n          this._coordinates[index].x = value;\n          break;\n\n        case CoordinateSequence.Y:\n          this._coordinates[index].y = value;\n          break;\n\n        case CoordinateSequence.Z:\n          this._coordinates[index].z = value;\n          break;\n\n        default:\n          throw new IllegalArgumentException(\"invalid ordinateIndex\");\n      }\n    }\n\n    size() {\n      return this._coordinates.length;\n    }\n\n    getOrdinate(index, ordinateIndex) {\n      switch (ordinateIndex) {\n        case CoordinateSequence.X:\n          return this._coordinates[index].x;\n\n        case CoordinateSequence.Y:\n          return this._coordinates[index].y;\n\n        case CoordinateSequence.Z:\n          return this._coordinates[index].z;\n      }\n\n      return Double.NaN;\n    }\n\n    getCoordinate() {\n      if (arguments.length === 1) {\n        let i = arguments[0];\n        return this._coordinates[i];\n      } else if (arguments.length === 2) {\n        let index = arguments[0],\n            coord = arguments[1];\n        coord.x = this._coordinates[index].x;\n        coord.y = this._coordinates[index].y;\n        coord.z = this._coordinates[index].z;\n      }\n    }\n\n    getCoordinateCopy(i) {\n      return new Coordinate(this._coordinates[i]);\n    }\n\n    getDimension() {\n      return this._dimension;\n    }\n\n    getX(index) {\n      return this._coordinates[index].x;\n    }\n\n    expandEnvelope(env) {\n      for (var i = 0; i < this._coordinates.length; i++) {\n        env.expandToInclude(this._coordinates[i]);\n      }\n\n      return env;\n    }\n\n    copy() {\n      var cloneCoordinates = new Array(this.size()).fill(null);\n\n      for (var i = 0; i < this._coordinates.length; i++) {\n        cloneCoordinates[i] = this._coordinates[i].copy();\n      }\n\n      return new CoordinateArraySequence(cloneCoordinates, this._dimension);\n    }\n\n    toString() {\n      if (this._coordinates.length > 0) {\n        var strBuilder = new StringBuilder(17 * this._coordinates.length);\n        strBuilder.append('(');\n        strBuilder.append(this._coordinates[0]);\n\n        for (var i = 1; i < this._coordinates.length; i++) {\n          strBuilder.append(\", \");\n          strBuilder.append(this._coordinates[i]);\n        }\n\n        strBuilder.append(')');\n        return strBuilder.toString();\n      } else {\n        return \"()\";\n      }\n    }\n\n    getY(index) {\n      return this._coordinates[index].y;\n    }\n\n    toCoordinateArray() {\n      return this._coordinates;\n    }\n\n    getClass() {\n      return CoordinateArraySequence;\n    }\n\n    get interfaces_() {\n      return [CoordinateSequence, Serializable];\n    }\n\n  }\n\n  CoordinateArraySequence.constructor_ = function () {\n    this._dimension = 3;\n    this._coordinates = null;\n\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Array) {\n        let coordinates = arguments[0];\n        CoordinateArraySequence.constructor_.call(this, coordinates, 3);\n      } else if (Number.isInteger(arguments[0])) {\n        let size = arguments[0];\n        this._coordinates = new Array(size).fill(null);\n\n        for (var i = 0; i < size; i++) {\n          this._coordinates[i] = new Coordinate();\n        }\n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        let coordSeq = arguments[0];\n\n        if (coordSeq === null) {\n          this._coordinates = new Array(0).fill(null);\n          return null;\n        }\n\n        this._dimension = coordSeq.getDimension();\n        this._coordinates = new Array(coordSeq.size()).fill(null);\n\n        for (var i = 0; i < this._coordinates.length; i++) {\n          this._coordinates[i] = coordSeq.getCoordinateCopy(i);\n        }\n      }\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof Array && Number.isInteger(arguments[1])) {\n        let coordinates = arguments[0],\n            dimension = arguments[1];\n        this._coordinates = coordinates;\n        this._dimension = dimension;\n        if (coordinates === null) this._coordinates = new Array(0).fill(null);\n      } else if (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\n        let size = arguments[0],\n            dimension = arguments[1];\n        this._coordinates = new Array(size).fill(null);\n        this._dimension = dimension;\n\n        for (var i = 0; i < size; i++) {\n          this._coordinates[i] = new Coordinate();\n        }\n      }\n    }\n  };\n\n  CoordinateArraySequence.serialVersionUID = -915438501601840650;\n\n  class CoordinateArraySequenceFactory {\n    constructor() {\n      CoordinateArraySequenceFactory.constructor_.apply(this, arguments);\n    }\n\n    static instance() {\n      return CoordinateArraySequenceFactory.instanceObject;\n    }\n\n    readResolve() {\n      return CoordinateArraySequenceFactory.instance();\n    }\n\n    create() {\n      if (arguments.length === 1) {\n        if (arguments[0] instanceof Array) {\n          let coordinates = arguments[0];\n          return new CoordinateArraySequence(coordinates);\n        } else if (hasInterface(arguments[0], CoordinateSequence)) {\n          let coordSeq = arguments[0];\n          return new CoordinateArraySequence(coordSeq);\n        }\n      } else if (arguments.length === 2) {\n        let size = arguments[0],\n            dimension = arguments[1];\n        if (dimension > 3) dimension = 3;\n        if (dimension < 2) return new CoordinateArraySequence(size);\n        return new CoordinateArraySequence(size, dimension);\n      }\n    }\n\n    getClass() {\n      return CoordinateArraySequenceFactory;\n    }\n\n    get interfaces_() {\n      return [CoordinateSequenceFactory, Serializable];\n    }\n\n  }\n\n  CoordinateArraySequenceFactory.constructor_ = function () {};\n\n  CoordinateArraySequenceFactory.serialVersionUID = -4099577099607551657;\n  CoordinateArraySequenceFactory.instanceObject = new CoordinateArraySequenceFactory();\n\n  // shared pointer\n  var i; // shortcuts\n\n  var defineProperty = Object.defineProperty;\n\n  function is(a, b) {\n    return a === b || a !== a && b !== b;\n  } // eslint-disable-line\n\n\n  var MapPolyfill = createCollection({\n    // WeakMap#delete(key:void*):boolean\n    'delete': sharedDelete,\n    // :was Map#get(key:void*[, d3fault:void*]):void*\n    // Map#has(key:void*):boolean\n    has: mapHas,\n    // Map#get(key:void*):boolean\n    get: sharedGet,\n    // Map#set(key:void*, value:void*):void\n    set: sharedSet,\n    // Map#keys(void):Iterator\n    keys: sharedKeys,\n    // Map#values(void):Iterator\n    values: sharedValues,\n    // Map#entries(void):Iterator\n    entries: mapEntries,\n    // Map#forEach(callback:Function, context:void*):void ==> callback.call(context, key, value, mapObject) === not in specs`\n    forEach: sharedForEach,\n    // Map#clear():\n    clear: sharedClear\n  });\n\n  function createCollection(proto, objectOnly) {\n    function Collection(a) {\n      if (!this || this.constructor !== Collection) return new Collection(a);\n      this._keys = [];\n      this._values = [];\n      this._itp = []; // iteration pointers\n\n      this.objectOnly = objectOnly; // parse initial iterable argument passed\n\n      if (a) init.call(this, a);\n    } // define size for non object-only collections\n\n\n    if (!objectOnly) {\n      defineProperty(proto, 'size', {\n        get: sharedSize\n      });\n    } // set prototype\n\n\n    proto.constructor = Collection;\n    Collection.prototype = proto;\n    return Collection;\n  }\n\n  function init(a) {\n    // init Set argument, like `[1,2,3,{}]`\n    if (this.add) a.forEach(this.add, this); // init Map argument like `[[1,2], [{}, 4]]`\n    else a.forEach(function (a) {\n        this.set(a[0], a[1]);\n      }, this);\n  }\n\n  function sharedDelete(key) {\n    if (this.has(key)) {\n      this._keys.splice(i, 1);\n\n      this._values.splice(i, 1); // update iteration pointers\n\n\n      this._itp.forEach(function (p) {\n        if (i < p[0]) p[0]--;\n      });\n    } // Aurora here does it while Canary doesn't\n\n\n    return i > -1;\n  }\n\n  function sharedGet(key) {\n    return this.has(key) ? this._values[i] : undefined;\n  }\n\n  function has(list, key) {\n    if (this.objectOnly && key !== Object(key)) throw new TypeError('Invalid value used as weak collection key'); // NaN or 0 passed\n\n    if (key !== key || key === 0) for (i = list.length; i-- && !is(list[i], key);) {} // eslint-disable-line\n    else i = list.indexOf(key);\n    return i > -1;\n  }\n\n  function mapHas(value) {\n    return has.call(this, this._keys, value);\n  }\n\n  function sharedSet(key, value) {\n    this.has(key) ? this._values[i] = value : this._values[this._keys.push(key) - 1] = value;\n    return this;\n  }\n\n  function sharedClear() {\n    (this._keys || 0).length = this._values.length = 0;\n  }\n\n  function sharedKeys() {\n    return sharedIterator(this._itp, this._keys);\n  }\n\n  function sharedValues() {\n    return sharedIterator(this._itp, this._values);\n  }\n\n  function mapEntries() {\n    return sharedIterator(this._itp, this._keys, this._values);\n  }\n\n  function sharedIterator(itp, array, array2) {\n    var p = [0];\n    var done = false;\n    itp.push(p);\n    return {\n      next: function next() {\n        var v;\n        var k = p[0];\n\n        if (!done && k < array.length) {\n          v = array2 ? [array[k], array2[k]] : array[k];\n          p[0]++;\n        } else {\n          done = true;\n          itp.splice(itp.indexOf(p), 1);\n        }\n\n        return {\n          done: done,\n          value: v\n        };\n      }\n    };\n  }\n\n  function sharedSize() {\n    return this._values.length;\n  }\n\n  function sharedForEach(callback, context) {\n    var it = this.entries();\n\n    for (;;) {\n      var r = it.next();\n      if (r.done) break;\n      callback.call(context, r.value[1], r.value[0], this);\n    }\n  }\n\n  let MapImpl = typeof Map === 'undefined' || !Map.prototype.values ? MapPolyfill : Map;\n  /**\n   * @see http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html\n   *\n   * @extends {javascript.util.Map}\n   * @constructor\n   * @private\n   */\n\n  function HashMap() {\n    /**\n     * @type {Object}\n     * @private\n    */\n    this.map_ = new MapImpl();\n  }\n  HashMap.prototype = new Map$1();\n  /**\n   * @override\n   */\n\n  HashMap.prototype.get = function (key) {\n    return this.map_.get(key) || null;\n  };\n  /**\n   * @override\n   */\n\n\n  HashMap.prototype.put = function (key, value) {\n    this.map_.set(key, value);\n    return value;\n  };\n  /**\n   * @override\n   */\n\n\n  HashMap.prototype.values = function () {\n    const arrayList = new ArrayList();\n    const it = this.map_.values();\n    let o = it.next();\n\n    while (!o.done) {\n      arrayList.add(o.value);\n      o = it.next();\n    }\n\n    return arrayList;\n  };\n  /**\n   * @override\n   */\n\n\n  HashMap.prototype.entrySet = function () {\n    const hashSet = new HashSet();\n    this.map_.entries().forEach(entry => hashSet.add(entry));\n    return hashSet;\n  };\n  /**\n   * @override\n   */\n\n\n  HashMap.prototype.size = function () {\n    return this.map_.size();\n  };\n\n  class PrecisionModel {\n    constructor() {\n      PrecisionModel.constructor_.apply(this, arguments);\n    }\n\n    static mostPrecise(pm1, pm2) {\n      if (pm1.compareTo(pm2) >= 0) return pm1;\n      return pm2;\n    }\n\n    equals(other) {\n      if (!(other instanceof PrecisionModel)) {\n        return false;\n      }\n\n      var otherPrecisionModel = other;\n      return this._modelType === otherPrecisionModel._modelType && this._scale === otherPrecisionModel._scale;\n    }\n\n    compareTo(o) {\n      var other = o;\n      var sigDigits = this.getMaximumSignificantDigits();\n      var otherSigDigits = other.getMaximumSignificantDigits();\n      return new Integer(sigDigits).compareTo(new Integer(otherSigDigits));\n    }\n\n    getScale() {\n      return this._scale;\n    }\n\n    isFloating() {\n      return this._modelType === PrecisionModel.FLOATING || this._modelType === PrecisionModel.FLOATING_SINGLE;\n    }\n\n    getType() {\n      return this._modelType;\n    }\n\n    toString() {\n      var description = \"UNKNOWN\";\n\n      if (this._modelType === PrecisionModel.FLOATING) {\n        description = \"Floating\";\n      } else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n        description = \"Floating-Single\";\n      } else if (this._modelType === PrecisionModel.FIXED) {\n        description = \"Fixed (Scale=\" + this.getScale() + \")\";\n      }\n\n      return description;\n    }\n\n    makePrecise() {\n      if (typeof arguments[0] === \"number\") {\n        let val = arguments[0];\n        if (Double.isNaN(val)) return val;\n\n        if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n          var floatSingleVal = val;\n          return floatSingleVal;\n        }\n\n        if (this._modelType === PrecisionModel.FIXED) {\n          return Math.round(val * this._scale) / this._scale;\n        }\n\n        return val;\n      } else if (arguments[0] instanceof Coordinate) {\n        let coord = arguments[0];\n        if (this._modelType === PrecisionModel.FLOATING) return null;\n        coord.x = this.makePrecise(coord.x);\n        coord.y = this.makePrecise(coord.y);\n      }\n    }\n\n    getMaximumSignificantDigits() {\n      var maxSigDigits = 16;\n\n      if (this._modelType === PrecisionModel.FLOATING) {\n        maxSigDigits = 16;\n      } else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n        maxSigDigits = 6;\n      } else if (this._modelType === PrecisionModel.FIXED) {\n        maxSigDigits = 1 + Math.trunc(Math.ceil(Math.log(this.getScale()) / Math.log(10)));\n      }\n\n      return maxSigDigits;\n    }\n\n    setScale(scale) {\n      this._scale = Math.abs(scale);\n    }\n\n    getClass() {\n      return PrecisionModel;\n    }\n\n    get interfaces_() {\n      return [Serializable, Comparable];\n    }\n\n  }\n\n  class Type {\n    constructor() {\n      Type.constructor_.apply(this, arguments);\n    }\n\n    readResolve() {\n      return Type.nameToTypeMap.get(this._name);\n    }\n\n    toString() {\n      return this._name;\n    }\n\n    getClass() {\n      return Type;\n    }\n\n    get interfaces_() {\n      return [Serializable];\n    }\n\n  }\n\n  Type.constructor_ = function () {\n    this._name = null;\n    let name = arguments[0];\n    this._name = name;\n    Type.nameToTypeMap.put(name, this);\n  };\n\n  Type.serialVersionUID = -5528602631731589822;\n  Type.nameToTypeMap = new HashMap();\n  PrecisionModel.Type = Type;\n\n  PrecisionModel.constructor_ = function () {\n    this._modelType = null;\n    this._scale = null;\n\n    if (arguments.length === 0) {\n      this._modelType = PrecisionModel.FLOATING;\n    } else if (arguments.length === 1) {\n      if (arguments[0] instanceof Type) {\n        let modelType = arguments[0];\n        this._modelType = modelType;\n\n        if (modelType === PrecisionModel.FIXED) {\n          this.setScale(1.0);\n        }\n      } else if (typeof arguments[0] === \"number\") {\n        let scale = arguments[0];\n        this._modelType = PrecisionModel.FIXED;\n        this.setScale(scale);\n      } else if (arguments[0] instanceof PrecisionModel) {\n        let pm = arguments[0];\n        this._modelType = pm._modelType;\n        this._scale = pm._scale;\n      }\n    }\n  };\n\n  PrecisionModel.serialVersionUID = 7777263578777803835;\n  PrecisionModel.FIXED = new Type(\"FIXED\");\n  PrecisionModel.FLOATING = new Type(\"FLOATING\");\n  PrecisionModel.FLOATING_SINGLE = new Type(\"FLOATING SINGLE\");\n  PrecisionModel.maximumPreciseValue = 9007199254740992.0;\n\n  class GeometryFactory {\n    constructor() {\n      GeometryFactory.constructor_.apply(this, arguments);\n    }\n\n    static toMultiPolygonArray(multiPolygons) {\n      var multiPolygonArray = new Array(multiPolygons.size()).fill(null);\n      return multiPolygons.toArray(multiPolygonArray);\n    }\n\n    static toGeometryArray(geometries) {\n      if (geometries === null) return null;\n      var geometryArray = new Array(geometries.size()).fill(null);\n      return geometries.toArray(geometryArray);\n    }\n\n    static getDefaultCoordinateSequenceFactory() {\n      return CoordinateArraySequenceFactory.instance();\n    }\n\n    static toMultiLineStringArray(multiLineStrings) {\n      var multiLineStringArray = new Array(multiLineStrings.size()).fill(null);\n      return multiLineStrings.toArray(multiLineStringArray);\n    }\n\n    static toLineStringArray(lineStrings) {\n      var lineStringArray = new Array(lineStrings.size()).fill(null);\n      return lineStrings.toArray(lineStringArray);\n    }\n\n    static toMultiPointArray(multiPoints) {\n      var multiPointArray = new Array(multiPoints.size()).fill(null);\n      return multiPoints.toArray(multiPointArray);\n    }\n\n    static toLinearRingArray(linearRings) {\n      var linearRingArray = new Array(linearRings.size()).fill(null);\n      return linearRings.toArray(linearRingArray);\n    }\n\n    static toPointArray(points) {\n      var pointArray = new Array(points.size()).fill(null);\n      return points.toArray(pointArray);\n    }\n\n    static toPolygonArray(polygons) {\n      var polygonArray = new Array(polygons.size()).fill(null);\n      return polygons.toArray(polygonArray);\n    }\n\n    static createPointFromInternalCoord(coord, exemplar) {\n      exemplar.getPrecisionModel().makePrecise(coord);\n      return exemplar.getFactory().createPoint(coord);\n    }\n\n    toGeometry(envelope) {\n      if (envelope.isNull()) {\n        return this.createPoint();\n      }\n\n      if (envelope.getMinX() === envelope.getMaxX() && envelope.getMinY() === envelope.getMaxY()) {\n        return this.createPoint(new Coordinate(envelope.getMinX(), envelope.getMinY()));\n      }\n\n      if (envelope.getMinX() === envelope.getMaxX() || envelope.getMinY() === envelope.getMaxY()) {\n        return this.createLineString([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY())]);\n      }\n\n      return this.createPolygon(this.createLinearRing([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMinY())]), null);\n    }\n\n    createLineString() {\n      if (arguments.length === 0) {\n        return this.createLineString(this.getCoordinateSequenceFactory().create([]));\n      } else if (arguments.length === 1) {\n        if (arguments[0] instanceof Array) {\n          let coordinates = arguments[0];\n          return this.createLineString(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null);\n        } else if (hasInterface(arguments[0], CoordinateSequence)) {\n          let coordinates = arguments[0];\n          return new LineString(coordinates, this);\n        }\n      }\n    }\n\n    createMultiLineString() {\n      if (arguments.length === 0) {\n        return new MultiLineString(null, this);\n      } else if (arguments.length === 1) {\n        let lineStrings = arguments[0];\n        return new MultiLineString(lineStrings, this);\n      }\n    }\n\n    buildGeometry(geomList) {\n      var geomClass = null;\n      var isHeterogeneous = false;\n      var hasGeometryCollection = false;\n\n      for (var i = geomList.iterator(); i.hasNext();) {\n        var geom = i.next();\n        var partClass = geom.getClass();\n\n        if (geomClass === null) {\n          geomClass = partClass;\n        }\n\n        if (partClass !== geomClass) {\n          isHeterogeneous = true;\n        }\n\n        if (geom instanceof GeometryCollection) hasGeometryCollection = true;\n      }\n\n      if (geomClass === null) {\n        return this.createGeometryCollection();\n      }\n\n      if (isHeterogeneous || hasGeometryCollection) {\n        return this.createGeometryCollection(GeometryFactory.toGeometryArray(geomList));\n      }\n\n      var geom0 = geomList.iterator().next();\n      var isCollection = geomList.size() > 1;\n\n      if (isCollection) {\n        if (geom0 instanceof Polygon) {\n          return this.createMultiPolygon(GeometryFactory.toPolygonArray(geomList));\n        } else if (geom0 instanceof LineString) {\n          return this.createMultiLineString(GeometryFactory.toLineStringArray(geomList));\n        } else if (geom0 instanceof Point) {\n          return this.createMultiPoint(GeometryFactory.toPointArray(geomList));\n        }\n\n        Assert.shouldNeverReachHere(\"Unhandled class: \" + geom0.getClass().getName());\n      }\n\n      return geom0;\n    }\n\n    createMultiPointFromCoords(coordinates) {\n      return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null);\n    }\n\n    createPoint() {\n      if (arguments.length === 0) {\n        return this.createPoint(this.getCoordinateSequenceFactory().create([]));\n      } else if (arguments.length === 1) {\n        if (arguments[0] instanceof Coordinate) {\n          let coordinate = arguments[0];\n          return this.createPoint(coordinate !== null ? this.getCoordinateSequenceFactory().create([coordinate]) : null);\n        } else if (hasInterface(arguments[0], CoordinateSequence)) {\n          let coordinates = arguments[0];\n          return new Point(coordinates, this);\n        }\n      }\n    }\n\n    getCoordinateSequenceFactory() {\n      return this._coordinateSequenceFactory;\n    }\n\n    createPolygon() {\n      if (arguments.length === 0) {\n        return this.createPolygon(null, null);\n      } else if (arguments.length === 1) {\n        if (hasInterface(arguments[0], CoordinateSequence)) {\n          let shell = arguments[0];\n          return this.createPolygon(this.createLinearRing(shell));\n        } else if (arguments[0] instanceof Array) {\n          let shell = arguments[0];\n          return this.createPolygon(this.createLinearRing(shell));\n        } else if (arguments[0] instanceof LinearRing) {\n          let shell = arguments[0];\n          return this.createPolygon(shell, null);\n        }\n      } else if (arguments.length === 2) {\n        let shell = arguments[0],\n            holes = arguments[1];\n        return new Polygon(shell, holes, this);\n      }\n    }\n\n    getSRID() {\n      return this._SRID;\n    }\n\n    createGeometryCollection() {\n      if (arguments.length === 0) {\n        return new GeometryCollection(null, this);\n      } else if (arguments.length === 1) {\n        let geometries = arguments[0];\n        return new GeometryCollection(geometries, this);\n      }\n    }\n\n    createGeometry(g) {\n      var editor = new GeometryEditor(this);\n      return editor.edit(g, new CloneOp(this._coordinateSequenceFactory));\n    }\n\n    getPrecisionModel() {\n      return this._precisionModel;\n    }\n\n    createLinearRing() {\n      if (arguments.length === 0) {\n        return this.createLinearRing(this.getCoordinateSequenceFactory().create([]));\n      } else if (arguments.length === 1) {\n        if (arguments[0] instanceof Array) {\n          let coordinates = arguments[0];\n          return this.createLinearRing(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null);\n        } else if (hasInterface(arguments[0], CoordinateSequence)) {\n          let coordinates = arguments[0];\n          return new LinearRing(coordinates, this);\n        }\n      }\n    }\n\n    createMultiPolygon() {\n      if (arguments.length === 0) {\n        return new MultiPolygon(null, this);\n      } else if (arguments.length === 1) {\n        let polygons = arguments[0];\n        return new MultiPolygon(polygons, this);\n      }\n    }\n\n    createMultiPoint() {\n      if (arguments.length === 0) {\n        return new MultiPoint(null, this);\n      } else if (arguments.length === 1) {\n        if (arguments[0] instanceof Array) {\n          let point = arguments[0];\n          return new MultiPoint(point, this);\n        } else if (hasInterface(arguments[0], CoordinateSequence)) {\n          let coordinates = arguments[0];\n\n          if (coordinates === null) {\n            return this.createMultiPoint(new Array(0).fill(null));\n          }\n\n          var points = new Array(coordinates.size()).fill(null);\n\n          for (var i = 0; i < coordinates.size(); i++) {\n            var ptSeq = this.getCoordinateSequenceFactory().create(1, coordinates.getDimension());\n            CoordinateSequences.copy(coordinates, i, ptSeq, 0, 1);\n            points[i] = this.createPoint(ptSeq);\n          }\n\n          return this.createMultiPoint(points);\n        }\n      }\n    }\n\n    getClass() {\n      return GeometryFactory;\n    }\n\n    get interfaces_() {\n      return [Serializable];\n    }\n\n  }\n\n  class CloneOp extends GeometryEditor.CoordinateSequenceOperation {\n    constructor() {\n      super();\n      CloneOp.constructor_.apply(this, arguments);\n    }\n\n    edit() {\n      if (arguments.length === 2 && arguments[1] instanceof Geometry && hasInterface(arguments[0], CoordinateSequence)) {\n        let coordSeq = arguments[0];\n        return this.coordinateSequenceFactory.create(coordSeq);\n      } else return super.edit.apply(this, arguments);\n    }\n\n    getClass() {\n      return CloneOp;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  CloneOp.constructor_ = function () {\n    this.coordinateSequenceFactory = null;\n    let coordinateSequenceFactory = arguments[0];\n    this.coordinateSequenceFactory = coordinateSequenceFactory;\n  };\n\n  GeometryFactory.CloneOp = CloneOp;\n\n  GeometryFactory.constructor_ = function () {\n    this._precisionModel = null;\n    this._coordinateSequenceFactory = null;\n    this._SRID = null;\n\n    if (arguments.length === 0) {\n      GeometryFactory.constructor_.call(this, new PrecisionModel(), 0);\n    } else if (arguments.length === 1) {\n      if (hasInterface(arguments[0], CoordinateSequenceFactory)) {\n        let coordinateSequenceFactory = arguments[0];\n        GeometryFactory.constructor_.call(this, new PrecisionModel(), 0, coordinateSequenceFactory);\n      } else if (arguments[0] instanceof PrecisionModel) {\n        let precisionModel = arguments[0];\n        GeometryFactory.constructor_.call(this, precisionModel, 0, GeometryFactory.getDefaultCoordinateSequenceFactory());\n      }\n    } else if (arguments.length === 2) {\n      let precisionModel = arguments[0],\n          SRID = arguments[1];\n      GeometryFactory.constructor_.call(this, precisionModel, SRID, GeometryFactory.getDefaultCoordinateSequenceFactory());\n    } else if (arguments.length === 3) {\n      let precisionModel = arguments[0],\n          SRID = arguments[1],\n          coordinateSequenceFactory = arguments[2];\n      this._precisionModel = precisionModel;\n      this._coordinateSequenceFactory = coordinateSequenceFactory;\n      this._SRID = SRID;\n    }\n  };\n\n  GeometryFactory.serialVersionUID = -6820524753094095635;\n\n  const regExes = {\n    'typeStr': /^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,\n    'emptyTypeStr': /^\\s*(\\w+)\\s*EMPTY\\s*$/,\n    'spaces': /\\s+/,\n    'parenComma': /\\)\\s*,\\s*\\(/,\n    'doubleParenComma': /\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/,\n    // can't use {2} here\n    'trimParens': /^\\s*\\(?(.*?)\\)?\\s*$/\n    /**\n     * Class for reading and writing Well-Known Text.\n     *\n     * NOTE: Adapted from OpenLayers 2.11 implementation.\n     */\n\n  };\n  class WKTParser {\n    /** Create a new parser for WKT\n     *\n     * @param {GeometryFactory} geometryFactory\n     * @return An instance of WKTParser.\n     * @private\n     */\n    constructor(geometryFactory) {\n      this.geometryFactory = geometryFactory || new GeometryFactory();\n      this.precisionModel = this.geometryFactory.getPrecisionModel();\n    }\n    /**\n     * Deserialize a WKT string and return a geometry. Supports WKT for POINT,\n     * MULTIPOINT, LINESTRING, LINEARRING, MULTILINESTRING, POLYGON, MULTIPOLYGON,\n     * and GEOMETRYCOLLECTION.\n     *\n     * @param {String} wkt A WKT string.\n     * @return {Geometry} A geometry instance.\n     * @private\n     */\n\n\n    read(wkt) {\n      var geometry, type, str;\n      wkt = wkt.replace(/[\\n\\r]/g, ' ');\n      var matches = regExes.typeStr.exec(wkt);\n\n      if (wkt.search('EMPTY') !== -1) {\n        matches = regExes.emptyTypeStr.exec(wkt);\n        matches[2] = undefined;\n      }\n\n      if (matches) {\n        type = matches[1].toLowerCase();\n        str = matches[2];\n\n        if (parse[type]) {\n          geometry = parse[type].call(this, str);\n        }\n      }\n\n      if (geometry === undefined) throw new Error('Could not parse WKT ' + wkt);\n      return geometry;\n    }\n    /**\n     * Serialize a geometry into a WKT string.\n     *\n     * @param {Geometry} geometry A feature or array of features.\n     * @return {String} The WKT string representation of the input geometries.\n     * @private\n     */\n\n\n    write(geometry) {\n      return this.extractGeometry(geometry);\n    }\n    /**\n     * Entry point to construct the WKT for a single Geometry object.\n     *\n     * @param {Geometry} geometry\n     * @return {String} A WKT string of representing the geometry.\n     * @private\n     */\n\n\n    extractGeometry(geometry) {\n      var type = geometry.getGeometryType().toLowerCase();\n\n      if (!extract[type]) {\n        return null;\n      }\n\n      var wktType = type.toUpperCase();\n      var data;\n\n      if (geometry.isEmpty()) {\n        data = wktType + ' EMPTY';\n      } else {\n        data = wktType + '(' + extract[type].call(this, geometry) + ')';\n      }\n\n      return data;\n    }\n\n  }\n  /**\n   * Object with properties corresponding to the geometry types. Property values\n   * are functions that do the actual data extraction.\n   * @private\n   */\n\n  const extract = {\n    coordinate(coordinate) {\n      this.precisionModel.makePrecise(coordinate);\n      return coordinate.x + ' ' + coordinate.y;\n    },\n\n    /**\n     * Return a space delimited string of point coordinates.\n     *\n     * @param {Point}\n     *          point\n     * @return {String} A string of coordinates representing the point.\n     */\n    point(point) {\n      return extract.coordinate.call(this, point._coordinates._coordinates[0]);\n    },\n\n    /**\n     * Return a comma delimited string of point coordinates from a multipoint.\n     *\n     * @param {MultiPoint}\n     *          multipoint\n     * @return {String} A string of point coordinate strings representing the\n     *         multipoint.\n     */\n    multipoint(multipoint) {\n      var array = [];\n\n      for (let i = 0, len = multipoint._geometries.length; i < len; ++i) {\n        array.push('(' + extract.point.call(this, multipoint._geometries[i]) + ')');\n      }\n\n      return array.join(',');\n    },\n\n    /**\n     * Return a comma delimited string of point coordinates from a line.\n     *\n     * @param {LineString} linestring\n     * @return {String} A string of point coordinate strings representing the linestring.\n     */\n    linestring(linestring) {\n      var array = [];\n\n      for (let i = 0, len = linestring._points._coordinates.length; i < len; ++i) {\n        array.push(extract.coordinate.call(this, linestring._points._coordinates[i]));\n      }\n\n      return array.join(',');\n    },\n\n    linearring(linearring) {\n      var array = [];\n\n      for (let i = 0, len = linearring._points._coordinates.length; i < len; ++i) {\n        array.push(extract.coordinate.call(this, linearring._points._coordinates[i]));\n      }\n\n      return array.join(',');\n    },\n\n    /**\n     * Return a comma delimited string of linestring strings from a\n     * multilinestring.\n     *\n     * @param {MultiLineString} multilinestring\n     * @return {String} A string of of linestring strings representing the multilinestring.\n     */\n    multilinestring(multilinestring) {\n      var array = [];\n\n      for (let i = 0, len = multilinestring._geometries.length; i < len; ++i) {\n        array.push('(' + extract.linestring.call(this, multilinestring._geometries[i]) + ')');\n      }\n\n      return array.join(',');\n    },\n\n    /**\n     * Return a comma delimited string of linear ring arrays from a polygon.\n     *\n     * @param {Polygon} polygon\n     * @return {String} An array of linear ring arrays representing the polygon.\n     */\n    polygon(polygon) {\n      var array = [];\n      array.push('(' + extract.linestring.call(this, polygon._shell) + ')');\n\n      for (let i = 0, len = polygon._holes.length; i < len; ++i) {\n        array.push('(' + extract.linestring.call(this, polygon._holes[i]) + ')');\n      }\n\n      return array.join(',');\n    },\n\n    /**\n     * Return an array of polygon arrays from a multipolygon.\n     *\n     * @param {MultiPolygon} multipolygon\n     * @return {String} An array of polygon arrays representing the multipolygon.\n     */\n    multipolygon(multipolygon) {\n      var array = [];\n\n      for (let i = 0, len = multipolygon._geometries.length; i < len; ++i) {\n        array.push('(' + extract.polygon.call(this, multipolygon._geometries[i]) + ')');\n      }\n\n      return array.join(',');\n    },\n\n    /**\n     * Return the WKT portion between 'GEOMETRYCOLLECTION(' and ')' for an\n     * geometrycollection.\n     *\n     * @param {GeometryCollection} collection\n     * @return {String} internal WKT representation of the collection.\n     */\n    geometrycollection(collection) {\n      var array = [];\n\n      for (let i = 0, len = collection._geometries.length; i < len; ++i) {\n        array.push(this.extractGeometry(collection._geometries[i]));\n      }\n\n      return array.join(',');\n    }\n\n  };\n  /**\n   * Object with properties corresponding to the geometry types. Property values\n   * are functions that do the actual parsing.\n   * @private\n   */\n\n  const parse = {\n    coord(str) {\n      var coords = str.trim().split(regExes.spaces);\n      var coord = new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1]));\n      this.precisionModel.makePrecise(coord);\n      return coord;\n    },\n\n    /**\n     * Return point geometry given a point WKT fragment.\n     *\n     * @param {String} str A WKT fragment representing the point.\n     * @return {Point} A point geometry.\n     * @private\n     */\n    point(str) {\n      if (str === undefined) return this.geometryFactory.createPoint();\n      return this.geometryFactory.createPoint(parse.coord.call(this, str));\n    },\n\n    /**\n     * Return a multipoint geometry given a multipoint WKT fragment.\n     *\n     * @param {String} str A WKT fragment representing the multipoint.\n     * @return {Point} A multipoint feature.\n     * @private\n     */\n    multipoint(str) {\n      if (str === undefined) return this.geometryFactory.createMultiPoint();\n      var point;\n      var points = str.trim().split(',');\n      var components = [];\n\n      for (let i = 0, len = points.length; i < len; ++i) {\n        point = points[i].replace(regExes.trimParens, '$1');\n        components.push(parse.point.call(this, point));\n      }\n\n      return this.geometryFactory.createMultiPoint(components);\n    },\n\n    /**\n     * Return a linestring geometry given a linestring WKT fragment.\n     *\n     * @param {String} str A WKT fragment representing the linestring.\n     * @return {LineString} A linestring geometry.\n     * @private\n     */\n    linestring(str) {\n      if (str === undefined) {\n        return this.geometryFactory.createLineString();\n      }\n\n      var points = str.trim().split(',');\n      var components = [];\n\n      for (let i = 0, len = points.length; i < len; ++i) {\n        components.push(parse.coord.call(this, points[i]));\n      }\n\n      return this.geometryFactory.createLineString(components);\n    },\n\n    /**\n     * Return a linearring geometry given a linearring WKT fragment.\n     *\n     * @param {String} str A WKT fragment representing the linearring.\n     * @return {LinearRing} A linearring geometry.\n     * @private\n     */\n    linearring(str) {\n      if (str === undefined) {\n        return this.geometryFactory.createLinearRing();\n      }\n\n      var points = str.trim().split(',');\n      var components = [];\n\n      for (let i = 0, len = points.length; i < len; ++i) {\n        components.push(parse.coord.call(this, points[i]));\n      }\n\n      return this.geometryFactory.createLinearRing(components);\n    },\n\n    /**\n     * Return a multilinestring geometry given a multilinestring WKT fragment.\n     *\n     * @param {String} str A WKT fragment representing the multilinestring.\n     * @return {MultiLineString} A multilinestring geometry.\n     * @private\n     */\n    multilinestring(str) {\n      if (str === undefined) {\n        return this.geometryFactory.createMultiLineString();\n      }\n\n      var line;\n      var lines = str.trim().split(regExes.parenComma);\n      var components = [];\n\n      for (let i = 0, len = lines.length; i < len; ++i) {\n        line = lines[i].replace(regExes.trimParens, '$1');\n        components.push(parse.linestring.call(this, line));\n      }\n\n      return this.geometryFactory.createMultiLineString(components);\n    },\n\n    /**\n     * Return a polygon geometry given a polygon WKT fragment.\n     *\n     * @param {String} str A WKT fragment representing the polygon.\n     * @return {Polygon} A polygon geometry.\n     * @private\n     */\n    polygon(str) {\n      if (str === undefined) {\n        return this.geometryFactory.createPolygon();\n      }\n\n      var ring, linestring, linearring;\n      var rings = str.trim().split(regExes.parenComma);\n      var shell;\n      var holes = [];\n\n      for (let i = 0, len = rings.length; i < len; ++i) {\n        ring = rings[i].replace(regExes.trimParens, '$1');\n        linestring = parse.linestring.call(this, ring);\n        linearring = this.geometryFactory.createLinearRing(linestring._points);\n\n        if (i === 0) {\n          shell = linearring;\n        } else {\n          holes.push(linearring);\n        }\n      }\n\n      return this.geometryFactory.createPolygon(shell, holes);\n    },\n\n    /**\n     * Return a multipolygon geometry given a multipolygon WKT fragment.\n     *\n     * @param {String} str A WKT fragment representing the multipolygon.\n     * @return {MultiPolygon} A multipolygon geometry.\n     * @private\n     */\n    multipolygon(str) {\n      if (str === undefined) {\n        return this.geometryFactory.createMultiPolygon();\n      }\n\n      var polygon;\n      var polygons = str.trim().split(regExes.doubleParenComma);\n      var components = [];\n\n      for (let i = 0, len = polygons.length; i < len; ++i) {\n        polygon = polygons[i].replace(regExes.trimParens, '$1');\n        components.push(parse.polygon.call(this, polygon));\n      }\n\n      return this.geometryFactory.createMultiPolygon(components);\n    },\n\n    /**\n     * Return a geometrycollection given a geometrycollection WKT fragment.\n     *\n     * @param {String} str A WKT fragment representing the geometrycollection.\n     * @return {GeometryCollection}\n     * @private\n     */\n    geometrycollection(str) {\n      if (str === undefined) {\n        return this.geometryFactory.createGeometryCollection();\n      } // separate components of the collection with |\n\n\n      str = str.replace(/,\\s*([A-Za-z])/g, '|$1');\n      var wktArray = str.trim().split('|');\n      var components = [];\n\n      for (let i = 0, len = wktArray.length; i < len; ++i) {\n        components.push(this.read(wktArray[i]));\n      }\n\n      return this.geometryFactory.createGeometryCollection(components);\n    }\n\n  };\n\n  /**\n   * @module org/locationtech/jts/io/WKTWriter\n   */\n  /**\n   * Writes the Well-Known Text representation of a {@link Geometry}. The\n   * Well-Known Text format is defined in the <A\n   * HREF=\"http://www.opengis.org/techno/specs.htm\"> OGC Simple Features\n   * Specification for SQL</A>.\n   * <p>\n   * The <code>WKTWriter</code> outputs coordinates rounded to the precision\n   * model. Only the maximum number of decimal places necessary to represent the\n   * ordinates to the required precision will be output.\n   * <p>\n   * The SFS WKT spec does not define a special tag for {@link LinearRing}s.\n   * Under the spec, rings are output as <code>LINESTRING</code>s.\n   */\n\n  class WKTWriter {\n    /**\n     * @param {GeometryFactory} geometryFactory\n     */\n    constructor(geometryFactory) {\n      this.parser = new WKTParser(geometryFactory);\n    }\n    /**\n     * Converts a <code>Geometry</code> to its Well-known Text representation.\n     *\n     * @param {Geometry} geometry a <code>Geometry</code> to process.\n     * @return {string} a <Geometry Tagged Text> string (see the OpenGIS Simple\n     *         Features Specification).\n     * @memberof module:org/locationtech/jts/io/WKTWriter#\n     */\n\n\n    write(geometry) {\n      return this.parser.write(geometry);\n    }\n    /**\n     * Generates the WKT for a <tt>LINESTRING</tt> specified by two\n     * {@link Coordinate}s.\n     *\n     * @param p0 the first coordinate.\n     * @param p1 the second coordinate.\n     *\n     * @return the WKT.\n     * @private\n     */\n\n\n    static toLineString(p0, p1) {\n      if (arguments.length !== 2) {\n        throw new Error('Not implemented');\n      }\n\n      return 'LINESTRING ( ' + p0.x + ' ' + p0.y + ', ' + p1.x + ' ' + p1.y + ' )';\n    }\n\n  }\n\n  class LineIntersector {\n    constructor() {\n      LineIntersector.constructor_.apply(this, arguments);\n    }\n\n    static computeEdgeDistance(p, p0, p1) {\n      var dx = Math.abs(p1.x - p0.x);\n      var dy = Math.abs(p1.y - p0.y);\n      var dist = -1.0;\n\n      if (p.equals(p0)) {\n        dist = 0.0;\n      } else if (p.equals(p1)) {\n        if (dx > dy) dist = dx;else dist = dy;\n      } else {\n        var pdx = Math.abs(p.x - p0.x);\n        var pdy = Math.abs(p.y - p0.y);\n        if (dx > dy) dist = pdx;else dist = pdy;\n\n        if (dist === 0.0 && !p.equals(p0)) {\n          dist = Math.max(pdx, pdy);\n        }\n      }\n\n      Assert.isTrue(!(dist === 0.0 && !p.equals(p0)), \"Bad distance calculation\");\n      return dist;\n    }\n\n    static nonRobustComputeEdgeDistance(p, p1, p2) {\n      var dx = p.x - p1.x;\n      var dy = p.y - p1.y;\n      var dist = Math.sqrt(dx * dx + dy * dy);\n      Assert.isTrue(!(dist === 0.0 && !p.equals(p1)), \"Invalid distance calculation\");\n      return dist;\n    }\n\n    getIndexAlongSegment(segmentIndex, intIndex) {\n      this.computeIntLineIndex();\n      return this._intLineIndex[segmentIndex][intIndex];\n    }\n\n    getTopologySummary() {\n      var catBuilder = new StringBuilder();\n      if (this.isEndPoint()) catBuilder.append(\" endpoint\");\n      if (this._isProper) catBuilder.append(\" proper\");\n      if (this.isCollinear()) catBuilder.append(\" collinear\");\n      return catBuilder.toString();\n    }\n\n    computeIntersection(p1, p2, p3, p4) {\n      this._inputLines[0][0] = p1;\n      this._inputLines[0][1] = p2;\n      this._inputLines[1][0] = p3;\n      this._inputLines[1][1] = p4;\n      this._result = this.computeIntersect(p1, p2, p3, p4);\n    }\n\n    getIntersectionNum() {\n      return this._result;\n    }\n\n    computeIntLineIndex() {\n      if (arguments.length === 0) {\n        if (this._intLineIndex === null) {\n          this._intLineIndex = Array(2).fill().map(() => Array(2));\n          this.computeIntLineIndex(0);\n          this.computeIntLineIndex(1);\n        }\n      } else if (arguments.length === 1) {\n        let segmentIndex = arguments[0];\n        var dist0 = this.getEdgeDistance(segmentIndex, 0);\n        var dist1 = this.getEdgeDistance(segmentIndex, 1);\n\n        if (dist0 > dist1) {\n          this._intLineIndex[segmentIndex][0] = 0;\n          this._intLineIndex[segmentIndex][1] = 1;\n        } else {\n          this._intLineIndex[segmentIndex][0] = 1;\n          this._intLineIndex[segmentIndex][1] = 0;\n        }\n      }\n    }\n\n    isProper() {\n      return this.hasIntersection() && this._isProper;\n    }\n\n    setPrecisionModel(precisionModel) {\n      this._precisionModel = precisionModel;\n    }\n\n    isInteriorIntersection() {\n      if (arguments.length === 0) {\n        if (this.isInteriorIntersection(0)) return true;\n        if (this.isInteriorIntersection(1)) return true;\n        return false;\n      } else if (arguments.length === 1) {\n        let inputLineIndex = arguments[0];\n\n        for (var i = 0; i < this._result; i++) {\n          if (!(this._intPt[i].equals2D(this._inputLines[inputLineIndex][0]) || this._intPt[i].equals2D(this._inputLines[inputLineIndex][1]))) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n    }\n\n    getIntersection(intIndex) {\n      return this._intPt[intIndex];\n    }\n\n    isEndPoint() {\n      return this.hasIntersection() && !this._isProper;\n    }\n\n    hasIntersection() {\n      return this._result !== LineIntersector.NO_INTERSECTION;\n    }\n\n    getEdgeDistance(segmentIndex, intIndex) {\n      var dist = LineIntersector.computeEdgeDistance(this._intPt[intIndex], this._inputLines[segmentIndex][0], this._inputLines[segmentIndex][1]);\n      return dist;\n    }\n\n    isCollinear() {\n      return this._result === LineIntersector.COLLINEAR_INTERSECTION;\n    }\n\n    toString() {\n      return WKTWriter.toLineString(this._inputLines[0][0], this._inputLines[0][1]) + \" - \" + WKTWriter.toLineString(this._inputLines[1][0], this._inputLines[1][1]) + this.getTopologySummary();\n    }\n\n    getEndpoint(segmentIndex, ptIndex) {\n      return this._inputLines[segmentIndex][ptIndex];\n    }\n\n    isIntersection(pt) {\n      for (var i = 0; i < this._result; i++) {\n        if (this._intPt[i].equals2D(pt)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    getIntersectionAlongSegment(segmentIndex, intIndex) {\n      this.computeIntLineIndex();\n      return this._intPt[this._intLineIndex[segmentIndex][intIndex]];\n    }\n\n    getClass() {\n      return LineIntersector;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  LineIntersector.constructor_ = function () {\n    this._result = null;\n    this._inputLines = Array(2).fill().map(() => Array(2));\n    this._intPt = new Array(2).fill(null);\n    this._intLineIndex = null;\n    this._isProper = null;\n    this._pa = null;\n    this._pb = null;\n    this._precisionModel = null;\n    this._intPt[0] = new Coordinate();\n    this._intPt[1] = new Coordinate();\n    this._pa = this._intPt[0];\n    this._pb = this._intPt[1];\n    this._result = 0;\n  };\n\n  LineIntersector.DONT_INTERSECT = 0;\n  LineIntersector.DO_INTERSECT = 1;\n  LineIntersector.COLLINEAR = 2;\n  LineIntersector.NO_INTERSECTION = 0;\n  LineIntersector.POINT_INTERSECTION = 1;\n  LineIntersector.COLLINEAR_INTERSECTION = 2;\n\n  class RobustLineIntersector extends LineIntersector {\n    constructor() {\n      super();\n      RobustLineIntersector.constructor_.apply(this, arguments);\n    }\n\n    static nearestEndpoint(p1, p2, q1, q2) {\n      var nearestPt = p1;\n      var minDist = Distance.pointToSegment(p1, q1, q2);\n      var dist = Distance.pointToSegment(p2, q1, q2);\n\n      if (dist < minDist) {\n        minDist = dist;\n        nearestPt = p2;\n      }\n\n      dist = Distance.pointToSegment(q1, p1, p2);\n\n      if (dist < minDist) {\n        minDist = dist;\n        nearestPt = q1;\n      }\n\n      dist = Distance.pointToSegment(q2, p1, p2);\n\n      if (dist < minDist) {\n        minDist = dist;\n        nearestPt = q2;\n      }\n\n      return nearestPt;\n    }\n\n    isInSegmentEnvelopes(intPt) {\n      var env0 = new Envelope(this._inputLines[0][0], this._inputLines[0][1]);\n      var env1 = new Envelope(this._inputLines[1][0], this._inputLines[1][1]);\n      return env0.contains(intPt) && env1.contains(intPt);\n    }\n\n    computeIntersection() {\n      if (arguments.length === 3) {\n        let p = arguments[0],\n            p1 = arguments[1],\n            p2 = arguments[2];\n        this._isProper = false;\n\n        if (Envelope.intersects(p1, p2, p)) {\n          if (Orientation.index(p1, p2, p) === 0 && Orientation.index(p2, p1, p) === 0) {\n            this._isProper = true;\n\n            if (p.equals(p1) || p.equals(p2)) {\n              this._isProper = false;\n            }\n\n            this._result = LineIntersector.POINT_INTERSECTION;\n            return null;\n          }\n        }\n\n        this._result = LineIntersector.NO_INTERSECTION;\n      } else return super.computeIntersection.apply(this, arguments);\n    }\n\n    normalizeToMinimum(n1, n2, n3, n4, normPt) {\n      normPt.x = this.smallestInAbsValue(n1.x, n2.x, n3.x, n4.x);\n      normPt.y = this.smallestInAbsValue(n1.y, n2.y, n3.y, n4.y);\n      n1.x -= normPt.x;\n      n1.y -= normPt.y;\n      n2.x -= normPt.x;\n      n2.y -= normPt.y;\n      n3.x -= normPt.x;\n      n3.y -= normPt.y;\n      n4.x -= normPt.x;\n      n4.y -= normPt.y;\n    }\n\n    safeHCoordinateIntersection(p1, p2, q1, q2) {\n      var intPt = null;\n\n      try {\n        intPt = HCoordinate.intersection(p1, p2, q1, q2);\n      } catch (e) {\n        if (e instanceof NotRepresentableException) {\n          intPt = RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2);\n        } else throw e;\n      } finally {}\n\n      return intPt;\n    }\n\n    intersection(p1, p2, q1, q2) {\n      var intPt = this.intersectionWithNormalization(p1, p2, q1, q2);\n\n      if (!this.isInSegmentEnvelopes(intPt)) {\n        intPt = new Coordinate(RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2));\n      }\n\n      if (this._precisionModel !== null) {\n        this._precisionModel.makePrecise(intPt);\n      }\n\n      return intPt;\n    }\n\n    smallestInAbsValue(x1, x2, x3, x4) {\n      var x = x1;\n      var xabs = Math.abs(x);\n\n      if (Math.abs(x2) < xabs) {\n        x = x2;\n        xabs = Math.abs(x2);\n      }\n\n      if (Math.abs(x3) < xabs) {\n        x = x3;\n        xabs = Math.abs(x3);\n      }\n\n      if (Math.abs(x4) < xabs) {\n        x = x4;\n      }\n\n      return x;\n    }\n\n    checkDD(p1, p2, q1, q2, intPt) {\n      var intPtDD = CGAlgorithmsDD.intersection(p1, p2, q1, q2);\n      var isIn = this.isInSegmentEnvelopes(intPtDD);\n      System.out.println(\"DD in env = \" + isIn + \"  --------------------- \" + intPtDD);\n\n      if (intPt.distance(intPtDD) > 0.0001) {\n        System.out.println(\"Distance = \" + intPt.distance(intPtDD));\n      }\n    }\n\n    intersectionWithNormalization(p1, p2, q1, q2) {\n      var n1 = new Coordinate(p1);\n      var n2 = new Coordinate(p2);\n      var n3 = new Coordinate(q1);\n      var n4 = new Coordinate(q2);\n      var normPt = new Coordinate();\n      this.normalizeToEnvCentre(n1, n2, n3, n4, normPt);\n      var intPt = this.safeHCoordinateIntersection(n1, n2, n3, n4);\n      intPt.x += normPt.x;\n      intPt.y += normPt.y;\n      return intPt;\n    }\n\n    computeCollinearIntersection(p1, p2, q1, q2) {\n      var p1q1p2 = Envelope.intersects(p1, p2, q1);\n      var p1q2p2 = Envelope.intersects(p1, p2, q2);\n      var q1p1q2 = Envelope.intersects(q1, q2, p1);\n      var q1p2q2 = Envelope.intersects(q1, q2, p2);\n\n      if (p1q1p2 && p1q2p2) {\n        this._intPt[0] = q1;\n        this._intPt[1] = q2;\n        return LineIntersector.COLLINEAR_INTERSECTION;\n      }\n\n      if (q1p1q2 && q1p2q2) {\n        this._intPt[0] = p1;\n        this._intPt[1] = p2;\n        return LineIntersector.COLLINEAR_INTERSECTION;\n      }\n\n      if (p1q1p2 && q1p1q2) {\n        this._intPt[0] = q1;\n        this._intPt[1] = p1;\n        return q1.equals(p1) && !p1q2p2 && !q1p2q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION;\n      }\n\n      if (p1q1p2 && q1p2q2) {\n        this._intPt[0] = q1;\n        this._intPt[1] = p2;\n        return q1.equals(p2) && !p1q2p2 && !q1p1q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION;\n      }\n\n      if (p1q2p2 && q1p1q2) {\n        this._intPt[0] = q2;\n        this._intPt[1] = p1;\n        return q2.equals(p1) && !p1q1p2 && !q1p2q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION;\n      }\n\n      if (p1q2p2 && q1p2q2) {\n        this._intPt[0] = q2;\n        this._intPt[1] = p2;\n        return q2.equals(p2) && !p1q1p2 && !q1p1q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION;\n      }\n\n      return LineIntersector.NO_INTERSECTION;\n    }\n\n    normalizeToEnvCentre(n00, n01, n10, n11, normPt) {\n      var minX0 = n00.x < n01.x ? n00.x : n01.x;\n      var minY0 = n00.y < n01.y ? n00.y : n01.y;\n      var maxX0 = n00.x > n01.x ? n00.x : n01.x;\n      var maxY0 = n00.y > n01.y ? n00.y : n01.y;\n      var minX1 = n10.x < n11.x ? n10.x : n11.x;\n      var minY1 = n10.y < n11.y ? n10.y : n11.y;\n      var maxX1 = n10.x > n11.x ? n10.x : n11.x;\n      var maxY1 = n10.y > n11.y ? n10.y : n11.y;\n      var intMinX = minX0 > minX1 ? minX0 : minX1;\n      var intMaxX = maxX0 < maxX1 ? maxX0 : maxX1;\n      var intMinY = minY0 > minY1 ? minY0 : minY1;\n      var intMaxY = maxY0 < maxY1 ? maxY0 : maxY1;\n      var intMidX = (intMinX + intMaxX) / 2.0;\n      var intMidY = (intMinY + intMaxY) / 2.0;\n      normPt.x = intMidX;\n      normPt.y = intMidY;\n      n00.x -= normPt.x;\n      n00.y -= normPt.y;\n      n01.x -= normPt.x;\n      n01.y -= normPt.y;\n      n10.x -= normPt.x;\n      n10.y -= normPt.y;\n      n11.x -= normPt.x;\n      n11.y -= normPt.y;\n    }\n\n    computeIntersect(p1, p2, q1, q2) {\n      this._isProper = false;\n      if (!Envelope.intersects(p1, p2, q1, q2)) return LineIntersector.NO_INTERSECTION;\n      var Pq1 = Orientation.index(p1, p2, q1);\n      var Pq2 = Orientation.index(p1, p2, q2);\n\n      if (Pq1 > 0 && Pq2 > 0 || Pq1 < 0 && Pq2 < 0) {\n        return LineIntersector.NO_INTERSECTION;\n      }\n\n      var Qp1 = Orientation.index(q1, q2, p1);\n      var Qp2 = Orientation.index(q1, q2, p2);\n\n      if (Qp1 > 0 && Qp2 > 0 || Qp1 < 0 && Qp2 < 0) {\n        return LineIntersector.NO_INTERSECTION;\n      }\n\n      var collinear = Pq1 === 0 && Pq2 === 0 && Qp1 === 0 && Qp2 === 0;\n\n      if (collinear) {\n        return this.computeCollinearIntersection(p1, p2, q1, q2);\n      }\n\n      if (Pq1 === 0 || Pq2 === 0 || Qp1 === 0 || Qp2 === 0) {\n        this._isProper = false;\n\n        if (p1.equals2D(q1) || p1.equals2D(q2)) {\n          this._intPt[0] = p1;\n        } else if (p2.equals2D(q1) || p2.equals2D(q2)) {\n          this._intPt[0] = p2;\n        } else if (Pq1 === 0) {\n          this._intPt[0] = new Coordinate(q1);\n        } else if (Pq2 === 0) {\n          this._intPt[0] = new Coordinate(q2);\n        } else if (Qp1 === 0) {\n          this._intPt[0] = new Coordinate(p1);\n        } else if (Qp2 === 0) {\n          this._intPt[0] = new Coordinate(p2);\n        }\n      } else {\n        this._isProper = true;\n        this._intPt[0] = this.intersection(p1, p2, q1, q2);\n      }\n\n      return LineIntersector.POINT_INTERSECTION;\n    }\n\n    getClass() {\n      return RobustLineIntersector;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  RobustLineIntersector.constructor_ = function () {};\n\n  class LineSegment {\n    constructor() {\n      LineSegment.constructor_.apply(this, arguments);\n    }\n\n    static midPoint(p0, p1) {\n      return new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2);\n    }\n\n    minX() {\n      return Math.min(this.p0.x, this.p1.x);\n    }\n\n    orientationIndex() {\n      if (arguments[0] instanceof LineSegment) {\n        let seg = arguments[0];\n        var orient0 = Orientation.index(this.p0, this.p1, seg.p0);\n        var orient1 = Orientation.index(this.p0, this.p1, seg.p1);\n        if (orient0 >= 0 && orient1 >= 0) return Math.max(orient0, orient1);\n        if (orient0 <= 0 && orient1 <= 0) return Math.max(orient0, orient1);\n        return 0;\n      } else if (arguments[0] instanceof Coordinate) {\n        let p = arguments[0];\n        return Orientation.index(this.p0, this.p1, p);\n      }\n    }\n\n    toGeometry(geomFactory) {\n      return geomFactory.createLineString([this.p0, this.p1]);\n    }\n\n    isVertical() {\n      return this.p0.x === this.p1.x;\n    }\n\n    equals(o) {\n      if (!(o instanceof LineSegment)) {\n        return false;\n      }\n\n      var other = o;\n      return this.p0.equals(other.p0) && this.p1.equals(other.p1);\n    }\n\n    intersection(line) {\n      var li = new RobustLineIntersector();\n      li.computeIntersection(this.p0, this.p1, line.p0, line.p1);\n      if (li.hasIntersection()) return li.getIntersection(0);\n      return null;\n    }\n\n    project() {\n      if (arguments[0] instanceof Coordinate) {\n        let p = arguments[0];\n        if (p.equals(this.p0) || p.equals(this.p1)) return new Coordinate(p);\n        var r = this.projectionFactor(p);\n        var coord = new Coordinate();\n        coord.x = this.p0.x + r * (this.p1.x - this.p0.x);\n        coord.y = this.p0.y + r * (this.p1.y - this.p0.y);\n        return coord;\n      } else if (arguments[0] instanceof LineSegment) {\n        let seg = arguments[0];\n        var pf0 = this.projectionFactor(seg.p0);\n        var pf1 = this.projectionFactor(seg.p1);\n        if (pf0 >= 1.0 && pf1 >= 1.0) return null;\n        if (pf0 <= 0.0 && pf1 <= 0.0) return null;\n        var newp0 = this.project(seg.p0);\n        if (pf0 < 0.0) newp0 = this.p0;\n        if (pf0 > 1.0) newp0 = this.p1;\n        var newp1 = this.project(seg.p1);\n        if (pf1 < 0.0) newp1 = this.p0;\n        if (pf1 > 1.0) newp1 = this.p1;\n        return new LineSegment(newp0, newp1);\n      }\n    }\n\n    normalize() {\n      if (this.p1.compareTo(this.p0) < 0) this.reverse();\n    }\n\n    angle() {\n      return Math.atan2(this.p1.y - this.p0.y, this.p1.x - this.p0.x);\n    }\n\n    getCoordinate(i) {\n      if (i === 0) return this.p0;\n      return this.p1;\n    }\n\n    distancePerpendicular(p) {\n      return Distance.pointToLinePerpendicular(p, this.p0, this.p1);\n    }\n\n    minY() {\n      return Math.min(this.p0.y, this.p1.y);\n    }\n\n    midPoint() {\n      return LineSegment.midPoint(this.p0, this.p1);\n    }\n\n    projectionFactor(p) {\n      if (p.equals(this.p0)) return 0.0;\n      if (p.equals(this.p1)) return 1.0;\n      var dx = this.p1.x - this.p0.x;\n      var dy = this.p1.y - this.p0.y;\n      var len = dx * dx + dy * dy;\n      if (len <= 0.0) return Double.NaN;\n      var r = ((p.x - this.p0.x) * dx + (p.y - this.p0.y) * dy) / len;\n      return r;\n    }\n\n    closestPoints(line) {\n      var intPt = this.intersection(line);\n\n      if (intPt !== null) {\n        return [intPt, intPt];\n      }\n\n      var closestPt = new Array(2).fill(null);\n      var minDistance = Double.MAX_VALUE;\n      var dist = null;\n      var close00 = this.closestPoint(line.p0);\n      minDistance = close00.distance(line.p0);\n      closestPt[0] = close00;\n      closestPt[1] = line.p0;\n      var close01 = this.closestPoint(line.p1);\n      dist = close01.distance(line.p1);\n\n      if (dist < minDistance) {\n        minDistance = dist;\n        closestPt[0] = close01;\n        closestPt[1] = line.p1;\n      }\n\n      var close10 = line.closestPoint(this.p0);\n      dist = close10.distance(this.p0);\n\n      if (dist < minDistance) {\n        minDistance = dist;\n        closestPt[0] = this.p0;\n        closestPt[1] = close10;\n      }\n\n      var close11 = line.closestPoint(this.p1);\n      dist = close11.distance(this.p1);\n\n      if (dist < minDistance) {\n        minDistance = dist;\n        closestPt[0] = this.p1;\n        closestPt[1] = close11;\n      }\n\n      return closestPt;\n    }\n\n    closestPoint(p) {\n      var factor = this.projectionFactor(p);\n\n      if (factor > 0 && factor < 1) {\n        return this.project(p);\n      }\n\n      var dist0 = this.p0.distance(p);\n      var dist1 = this.p1.distance(p);\n      if (dist0 < dist1) return this.p0;\n      return this.p1;\n    }\n\n    maxX() {\n      return Math.max(this.p0.x, this.p1.x);\n    }\n\n    getLength() {\n      return this.p0.distance(this.p1);\n    }\n\n    compareTo(o) {\n      var other = o;\n      var comp0 = this.p0.compareTo(other.p0);\n      if (comp0 !== 0) return comp0;\n      return this.p1.compareTo(other.p1);\n    }\n\n    reverse() {\n      var temp = this.p0;\n      this.p0 = this.p1;\n      this.p1 = temp;\n    }\n\n    equalsTopo(other) {\n      return this.p0.equals(other.p0) && this.p1.equals(other.p1) || this.p0.equals(other.p1) && this.p1.equals(other.p0);\n    }\n\n    lineIntersection(line) {\n      try {\n        var intPt = HCoordinate.intersection(this.p0, this.p1, line.p0, line.p1);\n        return intPt;\n      } catch (ex) {\n        if (ex instanceof NotRepresentableException) ; else throw ex;\n      } finally {}\n\n      return null;\n    }\n\n    maxY() {\n      return Math.max(this.p0.y, this.p1.y);\n    }\n\n    pointAlongOffset(segmentLengthFraction, offsetDistance) {\n      var segx = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n      var segy = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n      var dx = this.p1.x - this.p0.x;\n      var dy = this.p1.y - this.p0.y;\n      var len = Math.sqrt(dx * dx + dy * dy);\n      var ux = 0.0;\n      var uy = 0.0;\n\n      if (offsetDistance !== 0.0) {\n        if (len <= 0.0) throw new IllegalStateException(\"Cannot compute offset from zero-length line segment\");\n        ux = offsetDistance * dx / len;\n        uy = offsetDistance * dy / len;\n      }\n\n      var offsetx = segx - uy;\n      var offsety = segy + ux;\n      var coord = new Coordinate(offsetx, offsety);\n      return coord;\n    }\n\n    setCoordinates() {\n      if (arguments.length === 1) {\n        let ls = arguments[0];\n        this.setCoordinates(ls.p0, ls.p1);\n      } else if (arguments.length === 2) {\n        let p0 = arguments[0],\n            p1 = arguments[1];\n        this.p0.x = p0.x;\n        this.p0.y = p0.y;\n        this.p1.x = p1.x;\n        this.p1.y = p1.y;\n      }\n    }\n\n    segmentFraction(inputPt) {\n      var segFrac = this.projectionFactor(inputPt);\n      if (segFrac < 0.0) segFrac = 0.0;else if (segFrac > 1.0 || Double.isNaN(segFrac)) segFrac = 1.0;\n      return segFrac;\n    }\n\n    toString() {\n      return \"LINESTRING( \" + this.p0.x + \" \" + this.p0.y + \", \" + this.p1.x + \" \" + this.p1.y + \")\";\n    }\n\n    isHorizontal() {\n      return this.p0.y === this.p1.y;\n    }\n\n    distance() {\n      if (arguments[0] instanceof LineSegment) {\n        let ls = arguments[0];\n        return Distance.segmentToSegment(this.p0, this.p1, ls.p0, ls.p1);\n      } else if (arguments[0] instanceof Coordinate) {\n        let p = arguments[0];\n        return Distance.pointToSegment(p, this.p0, this.p1);\n      }\n    }\n\n    pointAlong(segmentLengthFraction) {\n      var coord = new Coordinate();\n      coord.x = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n      coord.y = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n      return coord;\n    }\n\n    hashCode() {\n      var bits0 = java.lang.Double.doubleToLongBits(this.p0.x);\n      bits0 ^= java.lang.Double.doubleToLongBits(this.p0.y) * 31;\n      var hash0 = Math.trunc(bits0) ^ Math.trunc(bits0 >> 32);\n      var bits1 = java.lang.Double.doubleToLongBits(this.p1.x);\n      bits1 ^= java.lang.Double.doubleToLongBits(this.p1.y) * 31;\n      var hash1 = Math.trunc(bits1) ^ Math.trunc(bits1 >> 32);\n      return hash0 ^ hash1;\n    }\n\n    getClass() {\n      return LineSegment;\n    }\n\n    get interfaces_() {\n      return [Comparable, Serializable];\n    }\n\n  }\n\n  LineSegment.constructor_ = function () {\n    this.p0 = null;\n    this.p1 = null;\n\n    if (arguments.length === 0) {\n      LineSegment.constructor_.call(this, new Coordinate(), new Coordinate());\n    } else if (arguments.length === 1) {\n      let ls = arguments[0];\n      LineSegment.constructor_.call(this, ls.p0, ls.p1);\n    } else if (arguments.length === 2) {\n      let p0 = arguments[0],\n          p1 = arguments[1];\n      this.p0 = p0;\n      this.p1 = p1;\n    } else if (arguments.length === 4) {\n      let x0 = arguments[0],\n          y0 = arguments[1],\n          x1 = arguments[2],\n          y1 = arguments[3];\n      LineSegment.constructor_.call(this, new Coordinate(x0, y0), new Coordinate(x1, y1));\n    }\n  };\n\n  LineSegment.serialVersionUID = 3252005833466256227;\n\n  class Location {\n    constructor() {\n      Location.constructor_.apply(this, arguments);\n    }\n\n    static toLocationSymbol(locationValue) {\n      switch (locationValue) {\n        case Location.EXTERIOR:\n          return 'e';\n\n        case Location.BOUNDARY:\n          return 'b';\n\n        case Location.INTERIOR:\n          return 'i';\n\n        case Location.NONE:\n          return '-';\n      }\n\n      throw new IllegalArgumentException(\"Unknown location value: \" + locationValue);\n    }\n\n    getClass() {\n      return Location;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  Location.constructor_ = function () {};\n\n  Location.INTERIOR = 0;\n  Location.BOUNDARY = 1;\n  Location.EXTERIOR = 2;\n  Location.NONE = -1;\n\n  class IntersectionMatrix {\n    constructor() {\n      IntersectionMatrix.constructor_.apply(this, arguments);\n    }\n\n    static matches() {\n      if (Number.isInteger(arguments[0]) && typeof arguments[1] === \"string\") {\n        let actualDimensionValue = arguments[0],\n            requiredDimensionSymbol = arguments[1];\n\n        if (requiredDimensionSymbol === Dimension.SYM_DONTCARE) {\n          return true;\n        }\n\n        if (requiredDimensionSymbol === Dimension.SYM_TRUE && (actualDimensionValue >= 0 || actualDimensionValue === Dimension.TRUE)) {\n          return true;\n        }\n\n        if (requiredDimensionSymbol === Dimension.SYM_FALSE && actualDimensionValue === Dimension.FALSE) {\n          return true;\n        }\n\n        if (requiredDimensionSymbol === Dimension.SYM_P && actualDimensionValue === Dimension.P) {\n          return true;\n        }\n\n        if (requiredDimensionSymbol === Dimension.SYM_L && actualDimensionValue === Dimension.L) {\n          return true;\n        }\n\n        if (requiredDimensionSymbol === Dimension.SYM_A && actualDimensionValue === Dimension.A) {\n          return true;\n        }\n\n        return false;\n      } else if (typeof arguments[0] === \"string\" && typeof arguments[1] === \"string\") {\n        let actualDimensionSymbols = arguments[0],\n            requiredDimensionSymbols = arguments[1];\n        var m = new IntersectionMatrix(actualDimensionSymbols);\n        return m.matches(requiredDimensionSymbols);\n      }\n    }\n\n    static isTrue(actualDimensionValue) {\n      if (actualDimensionValue >= 0 || actualDimensionValue === Dimension.TRUE) {\n        return true;\n      }\n\n      return false;\n    }\n\n    isIntersects() {\n      return !this.isDisjoint();\n    }\n\n    isCovers() {\n      var hasPointInCommon = IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.BOUNDARY]);\n      return hasPointInCommon && this._matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE;\n    }\n\n    isCoveredBy() {\n      var hasPointInCommon = IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.BOUNDARY]);\n      return hasPointInCommon && this._matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE;\n    }\n\n    set() {\n      if (arguments.length === 1) {\n        let dimensionSymbols = arguments[0];\n\n        for (var i = 0; i < dimensionSymbols.length; i++) {\n          var row = Math.trunc(i / 3);\n          var col = i % 3;\n          this._matrix[row][col] = Dimension.toDimensionValue(dimensionSymbols.charAt(i));\n        }\n      } else if (arguments.length === 3) {\n        let row = arguments[0],\n            column = arguments[1],\n            dimensionValue = arguments[2];\n        this._matrix[row][column] = dimensionValue;\n      }\n    }\n\n    isContains() {\n      return IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && this._matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE;\n    }\n\n    setAtLeast() {\n      if (arguments.length === 1) {\n        let minimumDimensionSymbols = arguments[0];\n\n        for (var i = 0; i < minimumDimensionSymbols.length; i++) {\n          var row = Math.trunc(i / 3);\n          var col = i % 3;\n          this.setAtLeast(row, col, Dimension.toDimensionValue(minimumDimensionSymbols.charAt(i)));\n        }\n      } else if (arguments.length === 3) {\n        let row = arguments[0],\n            column = arguments[1],\n            minimumDimensionValue = arguments[2];\n\n        if (this._matrix[row][column] < minimumDimensionValue) {\n          this._matrix[row][column] = minimumDimensionValue;\n        }\n      }\n    }\n\n    setAtLeastIfValid(row, column, minimumDimensionValue) {\n      if (row >= 0 && column >= 0) {\n        this.setAtLeast(row, column, minimumDimensionValue);\n      }\n    }\n\n    isWithin() {\n      return IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && this._matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE;\n    }\n\n    isTouches(dimensionOfGeometryA, dimensionOfGeometryB) {\n      if (dimensionOfGeometryA > dimensionOfGeometryB) {\n        return this.isTouches(dimensionOfGeometryB, dimensionOfGeometryA);\n      }\n\n      if (dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.L) {\n        return this._matrix[Location.INTERIOR][Location.INTERIOR] === Dimension.FALSE && (IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.BOUNDARY]));\n      }\n\n      return false;\n    }\n\n    isOverlaps(dimensionOfGeometryA, dimensionOfGeometryB) {\n      if (dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.A) {\n        return IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.EXTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.EXTERIOR][Location.INTERIOR]);\n      }\n\n      if (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L) {\n        return this._matrix[Location.INTERIOR][Location.INTERIOR] === 1 && IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.EXTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.EXTERIOR][Location.INTERIOR]);\n      }\n\n      return false;\n    }\n\n    isEquals(dimensionOfGeometryA, dimensionOfGeometryB) {\n      if (dimensionOfGeometryA !== dimensionOfGeometryB) {\n        return false;\n      }\n\n      return IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && this._matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE;\n    }\n\n    toString() {\n      var builder = new StringBuilder(\"123456789\");\n\n      for (var ai = 0; ai < 3; ai++) {\n        for (var bi = 0; bi < 3; bi++) {\n          builder.setCharAt(3 * ai + bi, Dimension.toDimensionSymbol(this._matrix[ai][bi]));\n        }\n      }\n\n      return builder.toString();\n    }\n\n    setAll(dimensionValue) {\n      for (var ai = 0; ai < 3; ai++) {\n        for (var bi = 0; bi < 3; bi++) {\n          this._matrix[ai][bi] = dimensionValue;\n        }\n      }\n    }\n\n    get(row, column) {\n      return this._matrix[row][column];\n    }\n\n    transpose() {\n      var temp = this._matrix[1][0];\n      this._matrix[1][0] = this._matrix[0][1];\n      this._matrix[0][1] = temp;\n      temp = this._matrix[2][0];\n      this._matrix[2][0] = this._matrix[0][2];\n      this._matrix[0][2] = temp;\n      temp = this._matrix[2][1];\n      this._matrix[2][1] = this._matrix[1][2];\n      this._matrix[1][2] = temp;\n      return this;\n    }\n\n    matches(requiredDimensionSymbols) {\n      if (requiredDimensionSymbols.length !== 9) {\n        throw new IllegalArgumentException(\"Should be length 9: \" + requiredDimensionSymbols);\n      }\n\n      for (var ai = 0; ai < 3; ai++) {\n        for (var bi = 0; bi < 3; bi++) {\n          if (!IntersectionMatrix.matches(this._matrix[ai][bi], requiredDimensionSymbols.charAt(3 * ai + bi))) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    }\n\n    add(im) {\n      for (var i = 0; i < 3; i++) {\n        for (var j = 0; j < 3; j++) {\n          this.setAtLeast(i, j, im.get(i, j));\n        }\n      }\n    }\n\n    isDisjoint() {\n      return this._matrix[Location.INTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.INTERIOR][Location.BOUNDARY] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.BOUNDARY] === Dimension.FALSE;\n    }\n\n    isCrosses(dimensionOfGeometryA, dimensionOfGeometryB) {\n      if (dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.L || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.A) {\n        return IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.EXTERIOR]);\n      }\n\n      if (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.L) {\n        return IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.EXTERIOR][Location.INTERIOR]);\n      }\n\n      if (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L) {\n        return this._matrix[Location.INTERIOR][Location.INTERIOR] === 0;\n      }\n\n      return false;\n    }\n\n    getClass() {\n      return IntersectionMatrix;\n    }\n\n    get interfaces_() {\n      return [Clonable];\n    }\n\n  }\n\n  IntersectionMatrix.constructor_ = function () {\n    this._matrix = null;\n\n    if (arguments.length === 0) {\n      this._matrix = Array(3).fill().map(() => Array(3));\n      this.setAll(Dimension.FALSE);\n    } else if (arguments.length === 1) {\n      if (typeof arguments[0] === \"string\") {\n        let elements = arguments[0];\n        IntersectionMatrix.constructor_.call(this);\n        this.set(elements);\n      } else if (arguments[0] instanceof IntersectionMatrix) {\n        let other = arguments[0];\n        IntersectionMatrix.constructor_.call(this);\n        this._matrix[Location.INTERIOR][Location.INTERIOR] = other._matrix[Location.INTERIOR][Location.INTERIOR];\n        this._matrix[Location.INTERIOR][Location.BOUNDARY] = other._matrix[Location.INTERIOR][Location.BOUNDARY];\n        this._matrix[Location.INTERIOR][Location.EXTERIOR] = other._matrix[Location.INTERIOR][Location.EXTERIOR];\n        this._matrix[Location.BOUNDARY][Location.INTERIOR] = other._matrix[Location.BOUNDARY][Location.INTERIOR];\n        this._matrix[Location.BOUNDARY][Location.BOUNDARY] = other._matrix[Location.BOUNDARY][Location.BOUNDARY];\n        this._matrix[Location.BOUNDARY][Location.EXTERIOR] = other._matrix[Location.BOUNDARY][Location.EXTERIOR];\n        this._matrix[Location.EXTERIOR][Location.INTERIOR] = other._matrix[Location.EXTERIOR][Location.INTERIOR];\n        this._matrix[Location.EXTERIOR][Location.BOUNDARY] = other._matrix[Location.EXTERIOR][Location.BOUNDARY];\n        this._matrix[Location.EXTERIOR][Location.EXTERIOR] = other._matrix[Location.EXTERIOR][Location.EXTERIOR];\n      }\n    }\n  };\n\n  class Angle {\n    constructor() {\n      Angle.constructor_.apply(this, arguments);\n    }\n\n    static toDegrees(radians) {\n      return radians * 180 / Math.PI;\n    }\n\n    static normalize(angle) {\n      while (angle > Math.PI) angle -= Angle.PI_TIMES_2;\n\n      while (angle <= -Math.PI) angle += Angle.PI_TIMES_2;\n\n      return angle;\n    }\n\n    static angle() {\n      if (arguments.length === 1) {\n        let p = arguments[0];\n        return Math.atan2(p.y, p.x);\n      } else if (arguments.length === 2) {\n        let p0 = arguments[0],\n            p1 = arguments[1];\n        var dx = p1.x - p0.x;\n        var dy = p1.y - p0.y;\n        return Math.atan2(dy, dx);\n      }\n    }\n\n    static isAcute(p0, p1, p2) {\n      var dx0 = p0.x - p1.x;\n      var dy0 = p0.y - p1.y;\n      var dx1 = p2.x - p1.x;\n      var dy1 = p2.y - p1.y;\n      var dotprod = dx0 * dx1 + dy0 * dy1;\n      return dotprod > 0;\n    }\n\n    static isObtuse(p0, p1, p2) {\n      var dx0 = p0.x - p1.x;\n      var dy0 = p0.y - p1.y;\n      var dx1 = p2.x - p1.x;\n      var dy1 = p2.y - p1.y;\n      var dotprod = dx0 * dx1 + dy0 * dy1;\n      return dotprod < 0;\n    }\n\n    static interiorAngle(p0, p1, p2) {\n      var anglePrev = Angle.angle(p1, p0);\n      var angleNext = Angle.angle(p1, p2);\n      return Math.abs(angleNext - anglePrev);\n    }\n\n    static normalizePositive(angle) {\n      if (angle < 0.0) {\n        while (angle < 0.0) angle += Angle.PI_TIMES_2;\n\n        if (angle >= Angle.PI_TIMES_2) angle = 0.0;\n      } else {\n        while (angle >= Angle.PI_TIMES_2) angle -= Angle.PI_TIMES_2;\n\n        if (angle < 0.0) angle = 0.0;\n      }\n\n      return angle;\n    }\n\n    static angleBetween(tip1, tail, tip2) {\n      var a1 = Angle.angle(tail, tip1);\n      var a2 = Angle.angle(tail, tip2);\n      return Angle.diff(a1, a2);\n    }\n\n    static diff(ang1, ang2) {\n      var delAngle = null;\n\n      if (ang1 < ang2) {\n        delAngle = ang2 - ang1;\n      } else {\n        delAngle = ang1 - ang2;\n      }\n\n      if (delAngle > Math.PI) {\n        delAngle = 2 * Math.PI - delAngle;\n      }\n\n      return delAngle;\n    }\n\n    static toRadians(angleDegrees) {\n      return angleDegrees * Math.PI / 180.0;\n    }\n\n    static getTurn(ang1, ang2) {\n      var crossproduct = Math.sin(ang2 - ang1);\n\n      if (crossproduct > 0) {\n        return Angle.COUNTERCLOCKWISE;\n      }\n\n      if (crossproduct < 0) {\n        return Angle.CLOCKWISE;\n      }\n\n      return Angle.NONE;\n    }\n\n    static angleBetweenOriented(tip1, tail, tip2) {\n      var a1 = Angle.angle(tail, tip1);\n      var a2 = Angle.angle(tail, tip2);\n      var angDel = a2 - a1;\n      if (angDel <= -Math.PI) return angDel + Angle.PI_TIMES_2;\n      if (angDel > Math.PI) return angDel - Angle.PI_TIMES_2;\n      return angDel;\n    }\n\n    getClass() {\n      return Angle;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  Angle.constructor_ = function () {};\n\n  Angle.PI_TIMES_2 = 2.0 * Math.PI;\n  Angle.PI_OVER_2 = Math.PI / 2.0;\n  Angle.PI_OVER_4 = Math.PI / 4.0;\n  Angle.COUNTERCLOCKWISE = Orientation.COUNTERCLOCKWISE;\n  Angle.CLOCKWISE = Orientation.CLOCKWISE;\n  Angle.NONE = Orientation.COLLINEAR;\n\n  class Triangle {\n    constructor() {\n      Triangle.constructor_.apply(this, arguments);\n    }\n\n    static area(a, b, c) {\n      return Math.abs(((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2);\n    }\n\n    static signedArea(a, b, c) {\n      return ((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2;\n    }\n\n    static det(m00, m01, m10, m11) {\n      return m00 * m11 - m01 * m10;\n    }\n\n    static interpolateZ(p, v0, v1, v2) {\n      var x0 = v0.x;\n      var y0 = v0.y;\n      var a = v1.x - x0;\n      var b = v2.x - x0;\n      var c = v1.y - y0;\n      var d = v2.y - y0;\n      var det = a * d - b * c;\n      var dx = p.x - x0;\n      var dy = p.y - y0;\n      var t = (d * dx - b * dy) / det;\n      var u = (-c * dx + a * dy) / det;\n      var z = v0.z + t * (v1.z - v0.z) + u * (v2.z - v0.z);\n      return z;\n    }\n\n    static longestSideLength(a, b, c) {\n      var lenAB = a.distance(b);\n      var lenBC = b.distance(c);\n      var lenCA = c.distance(a);\n      var maxLen = lenAB;\n      if (lenBC > maxLen) maxLen = lenBC;\n      if (lenCA > maxLen) maxLen = lenCA;\n      return maxLen;\n    }\n\n    static isAcute(a, b, c) {\n      if (!Angle.isAcute(a, b, c)) return false;\n      if (!Angle.isAcute(b, c, a)) return false;\n      if (!Angle.isAcute(c, a, b)) return false;\n      return true;\n    }\n\n    static circumcentre(a, b, c) {\n      var cx = c.x;\n      var cy = c.y;\n      var ax = a.x - cx;\n      var ay = a.y - cy;\n      var bx = b.x - cx;\n      var by = b.y - cy;\n      var denom = 2 * Triangle.det(ax, ay, bx, by);\n      var numx = Triangle.det(ay, ax * ax + ay * ay, by, bx * bx + by * by);\n      var numy = Triangle.det(ax, ax * ax + ay * ay, bx, bx * bx + by * by);\n      var ccx = cx - numx / denom;\n      var ccy = cy + numy / denom;\n      return new Coordinate(ccx, ccy);\n    }\n\n    static perpendicularBisector(a, b) {\n      var dx = b.x - a.x;\n      var dy = b.y - a.y;\n      var l1 = new HCoordinate(a.x + dx / 2.0, a.y + dy / 2.0, 1.0);\n      var l2 = new HCoordinate(a.x - dy + dx / 2.0, a.y + dx + dy / 2.0, 1.0);\n      return new HCoordinate(l1, l2);\n    }\n\n    static angleBisector(a, b, c) {\n      var len0 = b.distance(a);\n      var len2 = b.distance(c);\n      var frac = len0 / (len0 + len2);\n      var dx = c.x - a.x;\n      var dy = c.y - a.y;\n      var splitPt = new Coordinate(a.x + frac * dx, a.y + frac * dy);\n      return splitPt;\n    }\n\n    static area3D(a, b, c) {\n      var ux = b.x - a.x;\n      var uy = b.y - a.y;\n      var uz = b.z - a.z;\n      var vx = c.x - a.x;\n      var vy = c.y - a.y;\n      var vz = c.z - a.z;\n      var crossx = uy * vz - uz * vy;\n      var crossy = uz * vx - ux * vz;\n      var crossz = ux * vy - uy * vx;\n      var absSq = crossx * crossx + crossy * crossy + crossz * crossz;\n      var area3D = Math.sqrt(absSq) / 2;\n      return area3D;\n    }\n\n    static centroid(a, b, c) {\n      var x = (a.x + b.x + c.x) / 3;\n      var y = (a.y + b.y + c.y) / 3;\n      return new Coordinate(x, y);\n    }\n\n    static inCentre(a, b, c) {\n      var len0 = b.distance(c);\n      var len1 = a.distance(c);\n      var len2 = a.distance(b);\n      var circum = len0 + len1 + len2;\n      var inCentreX = (len0 * a.x + len1 * b.x + len2 * c.x) / circum;\n      var inCentreY = (len0 * a.y + len1 * b.y + len2 * c.y) / circum;\n      return new Coordinate(inCentreX, inCentreY);\n    }\n\n    area() {\n      return Triangle.area(this.p0, this.p1, this.p2);\n    }\n\n    signedArea() {\n      return Triangle.signedArea(this.p0, this.p1, this.p2);\n    }\n\n    interpolateZ(p) {\n      if (p === null) throw new IllegalArgumentException(\"Supplied point is null.\");\n      return Triangle.interpolateZ(p, this.p0, this.p1, this.p2);\n    }\n\n    longestSideLength() {\n      return Triangle.longestSideLength(this.p0, this.p1, this.p2);\n    }\n\n    isAcute() {\n      return Triangle.isAcute(this.p0, this.p1, this.p2);\n    }\n\n    circumcentre() {\n      return Triangle.circumcentre(this.p0, this.p1, this.p2);\n    }\n\n    area3D() {\n      return Triangle.area3D(this.p0, this.p1, this.p2);\n    }\n\n    centroid() {\n      return Triangle.centroid(this.p0, this.p1, this.p2);\n    }\n\n    inCentre() {\n      return Triangle.inCentre(this.p0, this.p1, this.p2);\n    }\n\n    getClass() {\n      return Triangle;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  Triangle.constructor_ = function () {\n    this.p0 = null;\n    this.p1 = null;\n    this.p2 = null;\n    let p0 = arguments[0],\n        p1 = arguments[1],\n        p2 = arguments[2];\n    this.p0 = p0;\n    this.p1 = p1;\n    this.p2 = p2;\n  };\n\n\n\n  var geom = /*#__PURE__*/Object.freeze({\n    Coordinate: Coordinate,\n    CoordinateList: CoordinateList,\n    Envelope: Envelope,\n    LineSegment: LineSegment,\n    GeometryFactory: GeometryFactory,\n    Geometry: Geometry,\n    Point: Point,\n    LineString: LineString,\n    LinearRing: LinearRing,\n    Polygon: Polygon,\n    GeometryCollection: GeometryCollection,\n    MultiPoint: MultiPoint,\n    MultiLineString: MultiLineString,\n    MultiPolygon: MultiPolygon,\n    Dimension: Dimension,\n    IntersectionMatrix: IntersectionMatrix,\n    PrecisionModel: PrecisionModel,\n    Location: Location,\n    Triangle: Triangle\n  });\n\n  class PointPairDistance {\n    constructor() {\n      PointPairDistance.constructor_.apply(this, arguments);\n    }\n\n    getCoordinates() {\n      return this._pt;\n    }\n\n    getCoordinate(i) {\n      return this._pt[i];\n    }\n\n    setMinimum() {\n      if (arguments.length === 1) {\n        let ptDist = arguments[0];\n        this.setMinimum(ptDist._pt[0], ptDist._pt[1]);\n      } else if (arguments.length === 2) {\n        let p0 = arguments[0],\n            p1 = arguments[1];\n\n        if (this._isNull) {\n          this.initialize(p0, p1);\n          return null;\n        }\n\n        var dist = p0.distance(p1);\n        if (dist < this._distance) this.initialize(p0, p1, dist);\n      }\n    }\n\n    initialize() {\n      if (arguments.length === 0) {\n        this._isNull = true;\n      } else if (arguments.length === 2) {\n        let p0 = arguments[0],\n            p1 = arguments[1];\n\n        this._pt[0].setCoordinate(p0);\n\n        this._pt[1].setCoordinate(p1);\n\n        this._distance = p0.distance(p1);\n        this._isNull = false;\n      } else if (arguments.length === 3) {\n        let p0 = arguments[0],\n            p1 = arguments[1],\n            distance = arguments[2];\n\n        this._pt[0].setCoordinate(p0);\n\n        this._pt[1].setCoordinate(p1);\n\n        this._distance = distance;\n        this._isNull = false;\n      }\n    }\n\n    toString() {\n      return WKTWriter.toLineString(this._pt[0], this._pt[1]);\n    }\n\n    getDistance() {\n      return this._distance;\n    }\n\n    setMaximum() {\n      if (arguments.length === 1) {\n        let ptDist = arguments[0];\n        this.setMaximum(ptDist._pt[0], ptDist._pt[1]);\n      } else if (arguments.length === 2) {\n        let p0 = arguments[0],\n            p1 = arguments[1];\n\n        if (this._isNull) {\n          this.initialize(p0, p1);\n          return null;\n        }\n\n        var dist = p0.distance(p1);\n        if (dist > this._distance) this.initialize(p0, p1, dist);\n      }\n    }\n\n    getClass() {\n      return PointPairDistance;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  PointPairDistance.constructor_ = function () {\n    this._pt = [new Coordinate(), new Coordinate()];\n    this._distance = Double.NaN;\n    this._isNull = true;\n  };\n\n  class DistanceToPoint {\n    constructor() {\n      DistanceToPoint.constructor_.apply(this, arguments);\n    }\n\n    static computeDistance() {\n      if (arguments[2] instanceof PointPairDistance && arguments[0] instanceof LineString && arguments[1] instanceof Coordinate) {\n        let line = arguments[0],\n            pt = arguments[1],\n            ptDist = arguments[2];\n        var tempSegment = new LineSegment();\n        var coords = line.getCoordinates();\n\n        for (var i = 0; i < coords.length - 1; i++) {\n          tempSegment.setCoordinates(coords[i], coords[i + 1]);\n          var closestPt = tempSegment.closestPoint(pt);\n          ptDist.setMinimum(closestPt, pt);\n        }\n      } else if (arguments[2] instanceof PointPairDistance && arguments[0] instanceof Polygon && arguments[1] instanceof Coordinate) {\n        let poly = arguments[0],\n            pt = arguments[1],\n            ptDist = arguments[2];\n        DistanceToPoint.computeDistance(poly.getExteriorRing(), pt, ptDist);\n\n        for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n          DistanceToPoint.computeDistance(poly.getInteriorRingN(i), pt, ptDist);\n        }\n      } else if (arguments[2] instanceof PointPairDistance && arguments[0] instanceof Geometry && arguments[1] instanceof Coordinate) {\n        let geom = arguments[0],\n            pt = arguments[1],\n            ptDist = arguments[2];\n\n        if (geom instanceof LineString) {\n          DistanceToPoint.computeDistance(geom, pt, ptDist);\n        } else if (geom instanceof Polygon) {\n          DistanceToPoint.computeDistance(geom, pt, ptDist);\n        } else if (geom instanceof GeometryCollection) {\n          var gc = geom;\n\n          for (var i = 0; i < gc.getNumGeometries(); i++) {\n            var g = gc.getGeometryN(i);\n            DistanceToPoint.computeDistance(g, pt, ptDist);\n          }\n        } else {\n          ptDist.setMinimum(geom.getCoordinate(), pt);\n        }\n      } else if (arguments[2] instanceof PointPairDistance && arguments[0] instanceof LineSegment && arguments[1] instanceof Coordinate) {\n        let segment = arguments[0],\n            pt = arguments[1],\n            ptDist = arguments[2];\n        var closestPt = segment.closestPoint(pt);\n        ptDist.setMinimum(closestPt, pt);\n      }\n    }\n\n    getClass() {\n      return DistanceToPoint;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  DistanceToPoint.constructor_ = function () {};\n\n  class DiscreteHausdorffDistance {\n    constructor() {\n      DiscreteHausdorffDistance.constructor_.apply(this, arguments);\n    }\n\n    static distance() {\n      if (arguments.length === 2) {\n        let g0 = arguments[0],\n            g1 = arguments[1];\n        var dist = new DiscreteHausdorffDistance(g0, g1);\n        return dist.distance();\n      } else if (arguments.length === 3) {\n        let g0 = arguments[0],\n            g1 = arguments[1],\n            densifyFrac = arguments[2];\n        var dist = new DiscreteHausdorffDistance(g0, g1);\n        dist.setDensifyFraction(densifyFrac);\n        return dist.distance();\n      }\n    }\n\n    getCoordinates() {\n      return this._ptDist.getCoordinates();\n    }\n\n    setDensifyFraction(densifyFrac) {\n      if (densifyFrac > 1.0 || densifyFrac <= 0.0) throw new IllegalArgumentException(\"Fraction is not in range (0.0 - 1.0]\");\n      this._densifyFrac = densifyFrac;\n    }\n\n    compute(g0, g1) {\n      this.computeOrientedDistance(g0, g1, this._ptDist);\n      this.computeOrientedDistance(g1, g0, this._ptDist);\n    }\n\n    distance() {\n      this.compute(this._g0, this._g1);\n      return this._ptDist.getDistance();\n    }\n\n    computeOrientedDistance(discreteGeom, geom, ptDist) {\n      var distFilter = new MaxPointDistanceFilter(geom);\n      discreteGeom.apply(distFilter);\n      ptDist.setMaximum(distFilter.getMaxPointDistance());\n\n      if (this._densifyFrac > 0) {\n        var fracFilter = new MaxDensifiedByFractionDistanceFilter(geom, this._densifyFrac);\n        discreteGeom.apply(fracFilter);\n        ptDist.setMaximum(fracFilter.getMaxPointDistance());\n      }\n    }\n\n    orientedDistance() {\n      this.computeOrientedDistance(this._g0, this._g1, this._ptDist);\n      return this._ptDist.getDistance();\n    }\n\n    getClass() {\n      return DiscreteHausdorffDistance;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  class MaxPointDistanceFilter {\n    constructor() {\n      MaxPointDistanceFilter.constructor_.apply(this, arguments);\n    }\n\n    filter(pt) {\n      this._minPtDist.initialize();\n\n      DistanceToPoint.computeDistance(this._geom, pt, this._minPtDist);\n\n      this._maxPtDist.setMaximum(this._minPtDist);\n    }\n\n    getMaxPointDistance() {\n      return this._maxPtDist;\n    }\n\n    getClass() {\n      return MaxPointDistanceFilter;\n    }\n\n    get interfaces_() {\n      return [CoordinateFilter];\n    }\n\n  }\n\n  MaxPointDistanceFilter.constructor_ = function () {\n    this._maxPtDist = new PointPairDistance();\n    this._minPtDist = new PointPairDistance();\n    this._euclideanDist = new DistanceToPoint();\n    this._geom = null;\n    let geom = arguments[0];\n    this._geom = geom;\n  };\n\n  class MaxDensifiedByFractionDistanceFilter {\n    constructor() {\n      MaxDensifiedByFractionDistanceFilter.constructor_.apply(this, arguments);\n    }\n\n    filter(seq, index) {\n      if (index === 0) return null;\n      var p0 = seq.getCoordinate(index - 1);\n      var p1 = seq.getCoordinate(index);\n      var delx = (p1.x - p0.x) / this._numSubSegs;\n      var dely = (p1.y - p0.y) / this._numSubSegs;\n\n      for (var i = 0; i < this._numSubSegs; i++) {\n        var x = p0.x + i * delx;\n        var y = p0.y + i * dely;\n        var pt = new Coordinate(x, y);\n\n        this._minPtDist.initialize();\n\n        DistanceToPoint.computeDistance(this._geom, pt, this._minPtDist);\n\n        this._maxPtDist.setMaximum(this._minPtDist);\n      }\n    }\n\n    isDone() {\n      return false;\n    }\n\n    isGeometryChanged() {\n      return false;\n    }\n\n    getMaxPointDistance() {\n      return this._maxPtDist;\n    }\n\n    getClass() {\n      return MaxDensifiedByFractionDistanceFilter;\n    }\n\n    get interfaces_() {\n      return [CoordinateSequenceFilter];\n    }\n\n  }\n\n  MaxDensifiedByFractionDistanceFilter.constructor_ = function () {\n    this._maxPtDist = new PointPairDistance();\n    this._minPtDist = new PointPairDistance();\n    this._geom = null;\n    this._numSubSegs = 0;\n    let geom = arguments[0],\n        fraction = arguments[1];\n    this._geom = geom;\n    this._numSubSegs = Math.trunc(Math.round(1.0 / fraction));\n  };\n\n  DiscreteHausdorffDistance.MaxPointDistanceFilter = MaxPointDistanceFilter;\n  DiscreteHausdorffDistance.MaxDensifiedByFractionDistanceFilter = MaxDensifiedByFractionDistanceFilter;\n\n  DiscreteHausdorffDistance.constructor_ = function () {\n    this._g0 = null;\n    this._g1 = null;\n    this._ptDist = new PointPairDistance();\n    this._densifyFrac = 0.0;\n    let g0 = arguments[0],\n        g1 = arguments[1];\n    this._g0 = g0;\n    this._g1 = g1;\n  };\n\n\n\n  var distance_module = /*#__PURE__*/Object.freeze({\n    DiscreteHausdorffDistance: DiscreteHausdorffDistance,\n    DistanceToPoint: DistanceToPoint,\n    PointPairDistance: PointPairDistance\n  });\n\n  class ItemVisitor {\n    constructor() {\n      ItemVisitor.constructor_.apply(this, arguments);\n    }\n\n    visitItem(item) {}\n\n    getClass() {\n      return ItemVisitor;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  ItemVisitor.constructor_ = function () {};\n\n  class PointOnGeometryLocator {\n    constructor() {\n      PointOnGeometryLocator.constructor_.apply(this, arguments);\n    }\n\n    locate(p) {}\n\n    getClass() {\n      return PointOnGeometryLocator;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  PointOnGeometryLocator.constructor_ = function () {};\n\n  class IntervalRTreeNode {\n    constructor() {\n      IntervalRTreeNode.constructor_.apply(this, arguments);\n    }\n\n    getMin() {\n      return this._min;\n    }\n\n    intersects(queryMin, queryMax) {\n      if (this._min > queryMax || this._max < queryMin) return false;\n      return true;\n    }\n\n    getMax() {\n      return this._max;\n    }\n\n    toString() {\n      return WKTWriter.toLineString(new Coordinate(this._min, 0), new Coordinate(this._max, 0));\n    }\n\n    getClass() {\n      return IntervalRTreeNode;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  class NodeComparator {\n    constructor() {\n      NodeComparator.constructor_.apply(this, arguments);\n    }\n\n    compare(o1, o2) {\n      var n1 = o1;\n      var n2 = o2;\n      var mid1 = (n1._min + n1._max) / 2;\n      var mid2 = (n2._min + n2._max) / 2;\n      if (mid1 < mid2) return -1;\n      if (mid1 > mid2) return 1;\n      return 0;\n    }\n\n    getClass() {\n      return NodeComparator;\n    }\n\n    get interfaces_() {\n      return [Comparator];\n    }\n\n  }\n\n  NodeComparator.constructor_ = function () {};\n\n  IntervalRTreeNode.NodeComparator = NodeComparator;\n\n  IntervalRTreeNode.constructor_ = function () {\n    this._min = Double.POSITIVE_INFINITY;\n    this._max = Double.NEGATIVE_INFINITY;\n  };\n\n  class IntervalRTreeLeafNode extends IntervalRTreeNode {\n    constructor() {\n      super();\n      IntervalRTreeLeafNode.constructor_.apply(this, arguments);\n    }\n\n    query(queryMin, queryMax, visitor) {\n      if (!this.intersects(queryMin, queryMax)) return null;\n      visitor.visitItem(this._item);\n    }\n\n    getClass() {\n      return IntervalRTreeLeafNode;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  IntervalRTreeLeafNode.constructor_ = function () {\n    this._item = null;\n    let min = arguments[0],\n        max = arguments[1],\n        item = arguments[2];\n    this._min = min;\n    this._max = max;\n    this._item = item;\n  };\n\n  const Collections = {\n    reverseOrder: function reverseOrder() {\n      return {\n        compare(a, b) {\n          return b.compareTo(a);\n        }\n\n      };\n    },\n    min: function min(l) {\n      Collections.sort(l);\n      return l.get(0);\n    },\n    sort: function sort(l, c) {\n      const a = l.toArray();\n\n      if (c) {\n        Arrays.sort(a, c);\n      } else {\n        Arrays.sort(a);\n      }\n\n      const i = l.iterator();\n\n      for (let pos = 0, alen = a.length; pos < alen; pos++) {\n        i.next();\n        i.set(a[pos]);\n      }\n    },\n    singletonList: function singletonList(o) {\n      const arrayList = new ArrayList();\n      arrayList.add(o);\n      return arrayList;\n    }\n  };\n\n  class IntervalRTreeBranchNode extends IntervalRTreeNode {\n    constructor() {\n      super();\n      IntervalRTreeBranchNode.constructor_.apply(this, arguments);\n    }\n\n    buildExtent(n1, n2) {\n      this._min = Math.min(n1._min, n2._min);\n      this._max = Math.max(n1._max, n2._max);\n    }\n\n    query(queryMin, queryMax, visitor) {\n      if (!this.intersects(queryMin, queryMax)) {\n        return null;\n      }\n\n      if (this._node1 !== null) this._node1.query(queryMin, queryMax, visitor);\n      if (this._node2 !== null) this._node2.query(queryMin, queryMax, visitor);\n    }\n\n    getClass() {\n      return IntervalRTreeBranchNode;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  IntervalRTreeBranchNode.constructor_ = function () {\n    this._node1 = null;\n    this._node2 = null;\n    let n1 = arguments[0],\n        n2 = arguments[1];\n    this._node1 = n1;\n    this._node2 = n2;\n    this.buildExtent(this._node1, this._node2);\n  };\n\n  class SortedPackedIntervalRTree {\n    constructor() {\n      SortedPackedIntervalRTree.constructor_.apply(this, arguments);\n    }\n\n    buildTree() {\n      Collections.sort(this._leaves, new IntervalRTreeNode.NodeComparator());\n      var src = this._leaves;\n      var temp = null;\n      var dest = new ArrayList();\n\n      while (true) {\n        this.buildLevel(src, dest);\n        if (dest.size() === 1) return dest.get(0);\n        temp = src;\n        src = dest;\n        dest = temp;\n      }\n    }\n\n    insert(min, max, item) {\n      if (this._root !== null) throw new IllegalStateException(\"Index cannot be added to once it has been queried\");\n\n      this._leaves.add(new IntervalRTreeLeafNode(min, max, item));\n    }\n\n    query(min, max, visitor) {\n      this.init();\n\n      this._root.query(min, max, visitor);\n    }\n\n    buildRoot() {\n      if (this._root !== null) return null;\n      this._root = this.buildTree();\n    }\n\n    printNode(node) {\n      System.out.println(WKTWriter.toLineString(new Coordinate(node._min, this._level), new Coordinate(node._max, this._level)));\n    }\n\n    init() {\n      if (this._root !== null) return null;\n      this.buildRoot();\n    }\n\n    buildLevel(src, dest) {\n      this._level++;\n      dest.clear();\n\n      for (var i = 0; i < src.size(); i += 2) {\n        var n1 = src.get(i);\n        var n2 = i + 1 < src.size() ? src.get(i) : null;\n\n        if (n2 === null) {\n          dest.add(n1);\n        } else {\n          var node = new IntervalRTreeBranchNode(src.get(i), src.get(i + 1));\n          dest.add(node);\n        }\n      }\n    }\n\n    getClass() {\n      return SortedPackedIntervalRTree;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  SortedPackedIntervalRTree.constructor_ = function () {\n    this._leaves = new ArrayList();\n    this._root = null;\n    this._level = 0;\n  };\n\n  class LinearComponentExtracter {\n    constructor() {\n      LinearComponentExtracter.constructor_.apply(this, arguments);\n    }\n\n    static getGeometry() {\n      if (arguments.length === 1) {\n        let geom = arguments[0];\n        return geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom));\n      } else if (arguments.length === 2) {\n        let geom = arguments[0],\n            forceToLineString = arguments[1];\n        return geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom, forceToLineString));\n      }\n    }\n\n    static getLines() {\n      if (arguments.length === 1) {\n        let geom = arguments[0];\n        return LinearComponentExtracter.getLines(geom, false);\n      } else if (arguments.length === 2) {\n        if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection)) {\n          let geoms = arguments[0],\n              lines = arguments[1];\n\n          for (var i = geoms.iterator(); i.hasNext();) {\n            var g = i.next();\n            LinearComponentExtracter.getLines(g, lines);\n          }\n\n          return lines;\n        } else if (arguments[0] instanceof Geometry && typeof arguments[1] === \"boolean\") {\n          let geom = arguments[0],\n              forceToLineString = arguments[1];\n          var lines = new ArrayList();\n          geom.apply(new LinearComponentExtracter(lines, forceToLineString));\n          return lines;\n        } else if (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection)) {\n          let geom = arguments[0],\n              lines = arguments[1];\n\n          if (geom instanceof LineString) {\n            lines.add(geom);\n          } else {\n            geom.apply(new LinearComponentExtracter(lines));\n          }\n\n          return lines;\n        }\n      } else if (arguments.length === 3) {\n        if (typeof arguments[2] === \"boolean\" && hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection)) {\n          let geoms = arguments[0],\n              lines = arguments[1],\n              forceToLineString = arguments[2];\n\n          for (var i = geoms.iterator(); i.hasNext();) {\n            var g = i.next();\n            LinearComponentExtracter.getLines(g, lines, forceToLineString);\n          }\n\n          return lines;\n        } else if (typeof arguments[2] === \"boolean\" && arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection)) {\n          let geom = arguments[0],\n              lines = arguments[1],\n              forceToLineString = arguments[2];\n          geom.apply(new LinearComponentExtracter(lines, forceToLineString));\n          return lines;\n        }\n      }\n    }\n\n    filter(geom) {\n      if (this._isForcedToLineString && geom instanceof LinearRing) {\n        var line = geom.getFactory().createLineString(geom.getCoordinateSequence());\n\n        this._lines.add(line);\n\n        return null;\n      }\n\n      if (geom instanceof LineString) this._lines.add(geom);\n    }\n\n    setForceToLineString(isForcedToLineString) {\n      this._isForcedToLineString = isForcedToLineString;\n    }\n\n    getClass() {\n      return LinearComponentExtracter;\n    }\n\n    get interfaces_() {\n      return [GeometryComponentFilter];\n    }\n\n  }\n\n  LinearComponentExtracter.constructor_ = function () {\n    this._lines = null;\n    this._isForcedToLineString = false;\n\n    if (arguments.length === 1) {\n      let lines = arguments[0];\n      this._lines = lines;\n    } else if (arguments.length === 2) {\n      let lines = arguments[0],\n          isForcedToLineString = arguments[1];\n      this._lines = lines;\n      this._isForcedToLineString = isForcedToLineString;\n    }\n  };\n\n  class ArrayListVisitor {\n    constructor() {\n      ArrayListVisitor.constructor_.apply(this, arguments);\n    }\n\n    visitItem(item) {\n      this._items.add(item);\n    }\n\n    getItems() {\n      return this._items;\n    }\n\n    getClass() {\n      return ArrayListVisitor;\n    }\n\n    get interfaces_() {\n      return [ItemVisitor];\n    }\n\n  }\n\n  ArrayListVisitor.constructor_ = function () {\n    this._items = new ArrayList();\n  };\n\n  class RayCrossingCounter {\n    constructor() {\n      RayCrossingCounter.constructor_.apply(this, arguments);\n    }\n\n    static locatePointInRing() {\n      if (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\n        let p = arguments[0],\n            ring = arguments[1];\n        var counter = new RayCrossingCounter(p);\n        var p1 = new Coordinate();\n        var p2 = new Coordinate();\n\n        for (var i = 1; i < ring.size(); i++) {\n          ring.getCoordinate(i, p1);\n          ring.getCoordinate(i - 1, p2);\n          counter.countSegment(p1, p2);\n          if (counter.isOnSegment()) return counter.getLocation();\n        }\n\n        return counter.getLocation();\n      } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\n        let p = arguments[0],\n            ring = arguments[1];\n        var counter = new RayCrossingCounter(p);\n\n        for (var i = 1; i < ring.length; i++) {\n          var p1 = ring[i];\n          var p2 = ring[i - 1];\n          counter.countSegment(p1, p2);\n          if (counter.isOnSegment()) return counter.getLocation();\n        }\n\n        return counter.getLocation();\n      }\n    }\n\n    countSegment(p1, p2) {\n      if (p1.x < this._p.x && p2.x < this._p.x) return null;\n\n      if (this._p.x === p2.x && this._p.y === p2.y) {\n        this._isPointOnSegment = true;\n        return null;\n      }\n\n      if (p1.y === this._p.y && p2.y === this._p.y) {\n        var minx = p1.x;\n        var maxx = p2.x;\n\n        if (minx > maxx) {\n          minx = p2.x;\n          maxx = p1.x;\n        }\n\n        if (this._p.x >= minx && this._p.x <= maxx) {\n          this._isPointOnSegment = true;\n        }\n\n        return null;\n      }\n\n      if (p1.y > this._p.y && p2.y <= this._p.y || p2.y > this._p.y && p1.y <= this._p.y) {\n        var orient = Orientation.index(p1, p2, this._p);\n\n        if (orient === Orientation.COLLINEAR) {\n          this._isPointOnSegment = true;\n          return null;\n        }\n\n        if (p2.y < p1.y) {\n          orient = -orient;\n        }\n\n        if (orient === Orientation.LEFT) {\n          this._crossingCount++;\n        }\n      }\n    }\n\n    isPointInPolygon() {\n      return this.getLocation() !== Location.EXTERIOR;\n    }\n\n    getLocation() {\n      if (this._isPointOnSegment) return Location.BOUNDARY;\n\n      if (this._crossingCount % 2 === 1) {\n        return Location.INTERIOR;\n      }\n\n      return Location.EXTERIOR;\n    }\n\n    isOnSegment() {\n      return this._isPointOnSegment;\n    }\n\n    getClass() {\n      return RayCrossingCounter;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  RayCrossingCounter.constructor_ = function () {\n    this._p = null;\n    this._crossingCount = 0;\n    this._isPointOnSegment = false;\n    let p = arguments[0];\n    this._p = p;\n  };\n\n  class IndexedPointInAreaLocator {\n    constructor() {\n      IndexedPointInAreaLocator.constructor_.apply(this, arguments);\n    }\n\n    locate(p) {\n      var rcc = new RayCrossingCounter(p);\n      var visitor = new SegmentVisitor(rcc);\n\n      this._index.query(p.y, p.y, visitor);\n\n      return rcc.getLocation();\n    }\n\n    getClass() {\n      return IndexedPointInAreaLocator;\n    }\n\n    get interfaces_() {\n      return [PointOnGeometryLocator];\n    }\n\n  }\n\n  class SegmentVisitor {\n    constructor() {\n      SegmentVisitor.constructor_.apply(this, arguments);\n    }\n\n    visitItem(item) {\n      var seg = item;\n\n      this._counter.countSegment(seg.getCoordinate(0), seg.getCoordinate(1));\n    }\n\n    getClass() {\n      return SegmentVisitor;\n    }\n\n    get interfaces_() {\n      return [ItemVisitor];\n    }\n\n  }\n\n  SegmentVisitor.constructor_ = function () {\n    this._counter = null;\n    let counter = arguments[0];\n    this._counter = counter;\n  };\n\n  class IntervalIndexedGeometry {\n    constructor() {\n      IntervalIndexedGeometry.constructor_.apply(this, arguments);\n    }\n\n    init(geom) {\n      var lines = LinearComponentExtracter.getLines(geom);\n\n      for (var i = lines.iterator(); i.hasNext();) {\n        var line = i.next();\n        var pts = line.getCoordinates();\n        this.addLine(pts);\n      }\n    }\n\n    addLine(pts) {\n      for (var i = 1; i < pts.length; i++) {\n        var seg = new LineSegment(pts[i - 1], pts[i]);\n        var min = Math.min(seg.p0.y, seg.p1.y);\n        var max = Math.max(seg.p0.y, seg.p1.y);\n\n        this._index.insert(min, max, seg);\n      }\n    }\n\n    query() {\n      if (arguments.length === 2) {\n        let min = arguments[0],\n            max = arguments[1];\n        var visitor = new ArrayListVisitor();\n\n        this._index.query(min, max, visitor);\n\n        return visitor.getItems();\n      } else if (arguments.length === 3) {\n        let min = arguments[0],\n            max = arguments[1],\n            visitor = arguments[2];\n\n        this._index.query(min, max, visitor);\n      }\n    }\n\n    getClass() {\n      return IntervalIndexedGeometry;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  IntervalIndexedGeometry.constructor_ = function () {\n    this._index = new SortedPackedIntervalRTree();\n    let geom = arguments[0];\n    this.init(geom);\n  };\n\n  IndexedPointInAreaLocator.SegmentVisitor = SegmentVisitor;\n  IndexedPointInAreaLocator.IntervalIndexedGeometry = IntervalIndexedGeometry;\n\n  IndexedPointInAreaLocator.constructor_ = function () {\n    this._index = null;\n    let g = arguments[0];\n    if (!(hasInterface(g, Polygonal) || g instanceof LinearRing)) throw new IllegalArgumentException(\"Argument must be Polygonal or LinearRing\");\n    this._index = new IntervalIndexedGeometry(g);\n  };\n\n  class PointLocation {\n    constructor() {\n      PointLocation.constructor_.apply(this, arguments);\n    }\n\n    static isOnLine() {\n      if (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\n        let p = arguments[0],\n            line = arguments[1];\n        var lineIntersector = new RobustLineIntersector();\n        var p0 = new Coordinate();\n        var p1 = new Coordinate();\n        var n = line.size();\n\n        for (var i = 1; i < n; i++) {\n          line.getCoordinate(i - 1, p0);\n          line.getCoordinate(i, p1);\n          lineIntersector.computeIntersection(p, p0, p1);\n\n          if (lineIntersector.hasIntersection()) {\n            return true;\n          }\n        }\n\n        return false;\n      } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\n        let p = arguments[0],\n            line = arguments[1];\n        var lineIntersector = new RobustLineIntersector();\n\n        for (var i = 1; i < line.length; i++) {\n          var p0 = line[i - 1];\n          var p1 = line[i];\n          lineIntersector.computeIntersection(p, p0, p1);\n\n          if (lineIntersector.hasIntersection()) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n    }\n\n    static locateInRing(p, ring) {\n      return RayCrossingCounter.locatePointInRing(p, ring);\n    }\n\n    static isInRing(p, ring) {\n      return PointLocation.locateInRing(p, ring) !== Location.EXTERIOR;\n    }\n\n    getClass() {\n      return PointLocation;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  PointLocation.constructor_ = function () {};\n\n  class GeometryCollectionIterator {\n    constructor() {\n      GeometryCollectionIterator.constructor_.apply(this, arguments);\n    }\n\n    static isAtomic(geom) {\n      return !(geom instanceof GeometryCollection);\n    }\n\n    next() {\n      if (this._atStart) {\n        this._atStart = false;\n        if (GeometryCollectionIterator.isAtomic(this._parent)) this._index++;\n        return this._parent;\n      }\n\n      if (this._subcollectionIterator !== null) {\n        if (this._subcollectionIterator.hasNext()) {\n          return this._subcollectionIterator.next();\n        } else {\n          this._subcollectionIterator = null;\n        }\n      }\n\n      if (this._index >= this._max) {\n        throw new NoSuchElementException();\n      }\n\n      var obj = this._parent.getGeometryN(this._index++);\n\n      if (obj instanceof GeometryCollection) {\n        this._subcollectionIterator = new GeometryCollectionIterator(obj);\n        return this._subcollectionIterator.next();\n      }\n\n      return obj;\n    }\n\n    remove() {\n      throw new UnsupportedOperationException(this.getClass().getName());\n    }\n\n    hasNext() {\n      if (this._atStart) {\n        return true;\n      }\n\n      if (this._subcollectionIterator !== null) {\n        if (this._subcollectionIterator.hasNext()) {\n          return true;\n        }\n\n        this._subcollectionIterator = null;\n      }\n\n      if (this._index >= this._max) {\n        return false;\n      }\n\n      return true;\n    }\n\n    getClass() {\n      return GeometryCollectionIterator;\n    }\n\n    get interfaces_() {\n      return [Iterator];\n    }\n\n  }\n\n  GeometryCollectionIterator.constructor_ = function () {\n    this._parent = null;\n    this._atStart = null;\n    this._max = null;\n    this._index = null;\n    this._subcollectionIterator = null;\n    let parent = arguments[0];\n    this._parent = parent;\n    this._atStart = true;\n    this._index = 0;\n    this._max = parent.getNumGeometries();\n  };\n\n  class SimplePointInAreaLocator {\n    constructor() {\n      SimplePointInAreaLocator.constructor_.apply(this, arguments);\n    }\n\n    static locatePointInPolygon(p, poly) {\n      if (poly.isEmpty()) return Location.EXTERIOR;\n      var shell = poly.getExteriorRing();\n      var shellLoc = SimplePointInAreaLocator.locatePointInRing(p, shell);\n      if (shellLoc !== Location.INTERIOR) return shellLoc;\n\n      for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n        var hole = poly.getInteriorRingN(i);\n        var holeLoc = SimplePointInAreaLocator.locatePointInRing(p, hole);\n        if (holeLoc === Location.BOUNDARY) return Location.BOUNDARY;\n        if (holeLoc === Location.INTERIOR) return Location.EXTERIOR;\n      }\n\n      return Location.INTERIOR;\n    }\n\n    static locatePointInRing(p, ring) {\n      if (!ring.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR;\n      return PointLocation.locateInRing(p, ring.getCoordinates());\n    }\n\n    static containsPointInPolygon(p, poly) {\n      return Location.EXTERIOR !== SimplePointInAreaLocator.locatePointInPolygon(p, poly);\n    }\n\n    static locateInGeometry(p, geom) {\n      if (geom instanceof Polygon) {\n        return SimplePointInAreaLocator.locatePointInPolygon(p, geom);\n      } else if (geom instanceof GeometryCollection) {\n        var geomi = new GeometryCollectionIterator(geom);\n\n        while (geomi.hasNext()) {\n          var g2 = geomi.next();\n\n          if (g2 !== geom) {\n            var loc = SimplePointInAreaLocator.locateInGeometry(p, g2);\n            if (loc !== Location.EXTERIOR) return loc;\n          }\n        }\n      }\n\n      return Location.EXTERIOR;\n    }\n\n    static locate(p, geom) {\n      if (geom.isEmpty()) return Location.EXTERIOR;\n      return SimplePointInAreaLocator.locateInGeometry(p, geom);\n    }\n\n    locate(p) {\n      return SimplePointInAreaLocator.locate(p, this._geom);\n    }\n\n    getClass() {\n      return SimplePointInAreaLocator;\n    }\n\n    get interfaces_() {\n      return [PointOnGeometryLocator];\n    }\n\n  }\n\n  SimplePointInAreaLocator.constructor_ = function () {\n    this._geom = null;\n    let geom = arguments[0];\n    this._geom = geom;\n  };\n\n\n\n  var locate = /*#__PURE__*/Object.freeze({\n    IndexedPointInAreaLocator: IndexedPointInAreaLocator,\n    PointOnGeometryLocator: PointOnGeometryLocator,\n    SimplePointInAreaLocator: SimplePointInAreaLocator\n  });\n\n  class SimilarityMeasure {\n    constructor() {\n      SimilarityMeasure.constructor_.apply(this, arguments);\n    }\n\n    measure(g1, g2) {}\n\n    getClass() {\n      return SimilarityMeasure;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  SimilarityMeasure.constructor_ = function () {};\n\n  class AreaSimilarityMeasure {\n    constructor() {\n      AreaSimilarityMeasure.constructor_.apply(this, arguments);\n    }\n\n    measure(g1, g2) {\n      var areaInt = g1.intersection(g2).getArea();\n      var areaUnion = g1.union(g2).getArea();\n      return areaInt / areaUnion;\n    }\n\n    getClass() {\n      return AreaSimilarityMeasure;\n    }\n\n    get interfaces_() {\n      return [SimilarityMeasure];\n    }\n\n  }\n\n  AreaSimilarityMeasure.constructor_ = function () {};\n\n  class HausdorffSimilarityMeasure {\n    constructor() {\n      HausdorffSimilarityMeasure.constructor_.apply(this, arguments);\n    }\n\n    static diagonalSize(env) {\n      if (env.isNull()) return 0.0;\n      var width = env.getWidth();\n      var hgt = env.getHeight();\n      return Math.sqrt(width * width + hgt * hgt);\n    }\n\n    measure(g1, g2) {\n      var distance = DiscreteHausdorffDistance.distance(g1, g2, HausdorffSimilarityMeasure.DENSIFY_FRACTION);\n      var env = new Envelope(g1.getEnvelopeInternal());\n      env.expandToInclude(g2.getEnvelopeInternal());\n      var envSize = HausdorffSimilarityMeasure.diagonalSize(env);\n      var measure = 1 - distance / envSize;\n      return measure;\n    }\n\n    getClass() {\n      return HausdorffSimilarityMeasure;\n    }\n\n    get interfaces_() {\n      return [SimilarityMeasure];\n    }\n\n  }\n\n  HausdorffSimilarityMeasure.constructor_ = function () {};\n\n  HausdorffSimilarityMeasure.DENSIFY_FRACTION = 0.25;\n\n  class SimilarityMeasureCombiner {\n    constructor() {\n      SimilarityMeasureCombiner.constructor_.apply(this, arguments);\n    }\n\n    static combine(measure1, measure2) {\n      return Math.min(measure1, measure2);\n    }\n\n    getClass() {\n      return SimilarityMeasureCombiner;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  SimilarityMeasureCombiner.constructor_ = function () {};\n\n\n\n  var match = /*#__PURE__*/Object.freeze({\n    AreaSimilarityMeasure: AreaSimilarityMeasure,\n    HausdorffSimilarityMeasure: HausdorffSimilarityMeasure,\n    SimilarityMeasure: SimilarityMeasure,\n    SimilarityMeasureCombiner: SimilarityMeasureCombiner\n  });\n\n  class Centroid {\n    constructor() {\n      Centroid.constructor_.apply(this, arguments);\n    }\n\n    static area2(p1, p2, p3) {\n      return (p2.x - p1.x) * (p3.y - p1.y) - (p3.x - p1.x) * (p2.y - p1.y);\n    }\n\n    static centroid3(p1, p2, p3, c) {\n      c.x = p1.x + p2.x + p3.x;\n      c.y = p1.y + p2.y + p3.y;\n      return null;\n    }\n\n    static getCentroid(geom) {\n      var cent = new Centroid(geom);\n      return cent.getCentroid();\n    }\n\n    setAreaBasePoint(basePt) {\n      this._areaBasePt = basePt;\n    }\n\n    addPoint(pt) {\n      this._ptCount += 1;\n      this._ptCentSum.x += pt.x;\n      this._ptCentSum.y += pt.y;\n    }\n\n    addLineSegments(pts) {\n      var lineLen = 0.0;\n\n      for (var i = 0; i < pts.length - 1; i++) {\n        var segmentLen = pts[i].distance(pts[i + 1]);\n        if (segmentLen === 0.0) continue;\n        lineLen += segmentLen;\n        var midx = (pts[i].x + pts[i + 1].x) / 2;\n        this._lineCentSum.x += segmentLen * midx;\n        var midy = (pts[i].y + pts[i + 1].y) / 2;\n        this._lineCentSum.y += segmentLen * midy;\n      }\n\n      this._totalLength += lineLen;\n      if (lineLen === 0.0 && pts.length > 0) this.addPoint(pts[0]);\n    }\n\n    addHole(pts) {\n      var isPositiveArea = Orientation.isCCW(pts);\n\n      for (var i = 0; i < pts.length - 1; i++) {\n        this.addTriangle(this._areaBasePt, pts[i], pts[i + 1], isPositiveArea);\n      }\n\n      this.addLineSegments(pts);\n    }\n\n    getCentroid() {\n      var cent = new Coordinate();\n\n      if (Math.abs(this._areasum2) > 0.0) {\n        cent.x = this._cg3.x / 3 / this._areasum2;\n        cent.y = this._cg3.y / 3 / this._areasum2;\n      } else if (this._totalLength > 0.0) {\n        cent.x = this._lineCentSum.x / this._totalLength;\n        cent.y = this._lineCentSum.y / this._totalLength;\n      } else if (this._ptCount > 0) {\n        cent.x = this._ptCentSum.x / this._ptCount;\n        cent.y = this._ptCentSum.y / this._ptCount;\n      } else {\n        return null;\n      }\n\n      return cent;\n    }\n\n    addShell(pts) {\n      if (pts.length > 0) this.setAreaBasePoint(pts[0]);\n      var isPositiveArea = !Orientation.isCCW(pts);\n\n      for (var i = 0; i < pts.length - 1; i++) {\n        this.addTriangle(this._areaBasePt, pts[i], pts[i + 1], isPositiveArea);\n      }\n\n      this.addLineSegments(pts);\n    }\n\n    addTriangle(p0, p1, p2, isPositiveArea) {\n      var sign = isPositiveArea ? 1.0 : -1.0;\n      Centroid.centroid3(p0, p1, p2, this._triangleCent3);\n      var area2 = Centroid.area2(p0, p1, p2);\n      this._cg3.x += sign * area2 * this._triangleCent3.x;\n      this._cg3.y += sign * area2 * this._triangleCent3.y;\n      this._areasum2 += sign * area2;\n    }\n\n    add() {\n      if (arguments[0] instanceof Polygon) {\n        let poly = arguments[0];\n        this.addShell(poly.getExteriorRing().getCoordinates());\n\n        for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n          this.addHole(poly.getInteriorRingN(i).getCoordinates());\n        }\n      } else if (arguments[0] instanceof Geometry) {\n        let geom = arguments[0];\n        if (geom.isEmpty()) return null;\n\n        if (geom instanceof Point) {\n          this.addPoint(geom.getCoordinate());\n        } else if (geom instanceof LineString) {\n          this.addLineSegments(geom.getCoordinates());\n        } else if (geom instanceof Polygon) {\n          var poly = geom;\n          this.add(poly);\n        } else if (geom instanceof GeometryCollection) {\n          var gc = geom;\n\n          for (var i = 0; i < gc.getNumGeometries(); i++) {\n            this.add(gc.getGeometryN(i));\n          }\n        }\n      }\n    }\n\n    getClass() {\n      return Centroid;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  Centroid.constructor_ = function () {\n    this._areaBasePt = null;\n    this._triangleCent3 = new Coordinate();\n    this._areasum2 = 0;\n    this._cg3 = new Coordinate();\n    this._lineCentSum = new Coordinate();\n    this._totalLength = 0.0;\n    this._ptCount = 0;\n    this._ptCentSum = new Coordinate();\n    let geom = arguments[0];\n    this._areaBasePt = null;\n    this.add(geom);\n  };\n\n  /**\n   * @param {string=} message Optional message\n   * @extends {Error}\n   * @constructor\n   * @private\n   */\n  function EmptyStackException(message) {\n    this.message = message || '';\n  }\n  EmptyStackException.prototype = new Error();\n  /**\n   * @type {string}\n   */\n\n  EmptyStackException.prototype.name = 'EmptyStackException';\n\n  /**\n   * @see http://download.oracle.com/javase/6/docs/api/java/util/Stack.html\n   *\n   * @extends {List}\n   * @constructor\n   * @private\n   */\n\n  function Stack() {\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.array_ = [];\n  }\n  Stack.prototype = new List();\n  /**\n   * @override\n   */\n\n  Stack.prototype.add = function (e) {\n    this.array_.push(e);\n    return true;\n  };\n  /**\n   * @override\n   */\n\n\n  Stack.prototype.get = function (index) {\n    if (index < 0 || index >= this.size()) {\n      throw new IndexOutOfBoundsException();\n    }\n\n    return this.array_[index];\n  };\n  /**\n   * Pushes an item onto the top of this stack.\n   * @param {Object} e\n   * @return {Object}\n   */\n\n\n  Stack.prototype.push = function (e) {\n    this.array_.push(e);\n    return e;\n  };\n  /**\n   * Pushes an item onto the top of this stack.\n   * @param {Object} e\n   * @return {Object}\n   */\n\n\n  Stack.prototype.pop = function (e) {\n    if (this.array_.length === 0) {\n      throw new EmptyStackException();\n    }\n\n    return this.array_.pop();\n  };\n  /**\n   * Looks at the object at the top of this stack without removing it from the\n   * stack.\n   * @return {Object}\n   */\n\n\n  Stack.prototype.peek = function () {\n    if (this.array_.length === 0) {\n      throw new EmptyStackException();\n    }\n\n    return this.array_[this.array_.length - 1];\n  };\n  /**\n   * Tests if this stack is empty.\n   * @return {boolean} true if and only if this stack contains no items; false\n   *         otherwise.\n   */\n\n\n  Stack.prototype.empty = function () {\n    if (this.array_.length === 0) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\n   * @return {boolean}\n   */\n\n\n  Stack.prototype.isEmpty = function () {\n    return this.empty();\n  };\n  /**\n   * Returns the 1-based position where an object is on this stack. If the object\n   * o occurs as an item in this stack, this method returns the distance from the\n   * top of the stack of the occurrence nearest the top of the stack; the topmost\n   * item on the stack is considered to be at distance 1. The equals method is\n   * used to compare o to the items in this stack.\n   *\n   * NOTE: does not currently actually use equals. (=== is used)\n   *\n   * @param {Object} o\n   * @return {number} the 1-based position from the top of the stack where the\n   *         object is located; the return value -1 indicates that the object is\n   *         not on the stack.\n   */\n\n\n  Stack.prototype.search = function (o) {\n    return this.array_.indexOf(o);\n  };\n  /**\n   * @return {number}\n   * @export\n   */\n\n\n  Stack.prototype.size = function () {\n    return this.array_.length;\n  };\n  /**\n   * @return {Array}\n   */\n\n\n  Stack.prototype.toArray = function () {\n    var array = [];\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      array.push(this.array_[i]);\n    }\n\n    return array;\n  };\n\n  class UniqueCoordinateArrayFilter {\n    constructor() {\n      UniqueCoordinateArrayFilter.constructor_.apply(this, arguments);\n    }\n\n    static filterCoordinates(coords) {\n      var filter = new UniqueCoordinateArrayFilter();\n\n      for (var i = 0; i < coords.length; i++) {\n        filter.filter(coords[i]);\n      }\n\n      return filter.getCoordinates();\n    }\n\n    filter(coord) {\n      if (!this.treeSet.contains(coord)) {\n        this.list.add(coord);\n        this.treeSet.add(coord);\n      }\n    }\n\n    getCoordinates() {\n      var coordinates = new Array(this.list.size()).fill(null);\n      return this.list.toArray(coordinates);\n    }\n\n    getClass() {\n      return UniqueCoordinateArrayFilter;\n    }\n\n    get interfaces_() {\n      return [CoordinateFilter];\n    }\n\n  }\n\n  UniqueCoordinateArrayFilter.constructor_ = function () {\n    this.treeSet = new TreeSet();\n    this.list = new ArrayList();\n  };\n\n  class ConvexHull {\n    constructor() {\n      ConvexHull.constructor_.apply(this, arguments);\n    }\n\n    static extractCoordinates(geom) {\n      var filter = new UniqueCoordinateArrayFilter();\n      geom.apply(filter);\n      return filter.getCoordinates();\n    }\n\n    preSort(pts) {\n      var t = null;\n\n      for (var i = 1; i < pts.length; i++) {\n        if (pts[i].y < pts[0].y || pts[i].y === pts[0].y && pts[i].x < pts[0].x) {\n          t = pts[0];\n          pts[0] = pts[i];\n          pts[i] = t;\n        }\n      }\n\n      Arrays.sort(pts, 1, pts.length, new RadialComparator(pts[0]));\n      return pts;\n    }\n\n    computeOctRing(inputPts) {\n      var octPts = this.computeOctPts(inputPts);\n      var coordList = new CoordinateList();\n      coordList.add(octPts, false);\n\n      if (coordList.size() < 3) {\n        return null;\n      }\n\n      coordList.closeRing();\n      return coordList.toCoordinateArray();\n    }\n\n    lineOrPolygon(coordinates) {\n      coordinates = this.cleanRing(coordinates);\n\n      if (coordinates.length === 3) {\n        return this._geomFactory.createLineString([coordinates[0], coordinates[1]]);\n      }\n\n      var linearRing = this._geomFactory.createLinearRing(coordinates);\n\n      return this._geomFactory.createPolygon(linearRing);\n    }\n\n    cleanRing(original) {\n      Assert.equals(original[0], original[original.length - 1]);\n      var cleanedRing = new ArrayList();\n      var previousDistinctCoordinate = null;\n\n      for (var i = 0; i <= original.length - 2; i++) {\n        var currentCoordinate = original[i];\n        var nextCoordinate = original[i + 1];\n\n        if (currentCoordinate.equals(nextCoordinate)) {\n          continue;\n        }\n\n        if (previousDistinctCoordinate !== null && this.isBetween(previousDistinctCoordinate, currentCoordinate, nextCoordinate)) {\n          continue;\n        }\n\n        cleanedRing.add(currentCoordinate);\n        previousDistinctCoordinate = currentCoordinate;\n      }\n\n      cleanedRing.add(original[original.length - 1]);\n      var cleanedRingCoordinates = new Array(cleanedRing.size()).fill(null);\n      return cleanedRing.toArray(cleanedRingCoordinates);\n    }\n\n    isBetween(c1, c2, c3) {\n      if (Orientation.index(c1, c2, c3) !== 0) {\n        return false;\n      }\n\n      if (c1.x !== c3.x) {\n        if (c1.x <= c2.x && c2.x <= c3.x) {\n          return true;\n        }\n\n        if (c3.x <= c2.x && c2.x <= c1.x) {\n          return true;\n        }\n      }\n\n      if (c1.y !== c3.y) {\n        if (c1.y <= c2.y && c2.y <= c3.y) {\n          return true;\n        }\n\n        if (c3.y <= c2.y && c2.y <= c1.y) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    reduce(inputPts) {\n      var polyPts = this.computeOctRing(inputPts);\n      if (polyPts === null) return inputPts;\n      var reducedSet = new TreeSet();\n\n      for (var i = 0; i < polyPts.length; i++) {\n        reducedSet.add(polyPts[i]);\n      }\n\n      for (var i = 0; i < inputPts.length; i++) {\n        if (!PointLocation.isInRing(inputPts[i], polyPts)) {\n          reducedSet.add(inputPts[i]);\n        }\n      }\n\n      var reducedPts = CoordinateArrays.toCoordinateArray(reducedSet);\n      if (reducedPts.length < 3) return this.padArray3(reducedPts);\n      return reducedPts;\n    }\n\n    getConvexHull() {\n      if (this._inputPts.length === 0) {\n        return this._geomFactory.createGeometryCollection();\n      }\n\n      if (this._inputPts.length === 1) {\n        return this._geomFactory.createPoint(this._inputPts[0]);\n      }\n\n      if (this._inputPts.length === 2) {\n        return this._geomFactory.createLineString(this._inputPts);\n      }\n\n      var reducedPts = this._inputPts;\n\n      if (this._inputPts.length > 50) {\n        reducedPts = this.reduce(this._inputPts);\n      }\n\n      var sortedPts = this.preSort(reducedPts);\n      var cHS = this.grahamScan(sortedPts);\n      var cH = this.toCoordinateArray(cHS);\n      return this.lineOrPolygon(cH);\n    }\n\n    padArray3(pts) {\n      var pad = new Array(3).fill(null);\n\n      for (var i = 0; i < pad.length; i++) {\n        if (i < pts.length) {\n          pad[i] = pts[i];\n        } else pad[i] = pts[0];\n      }\n\n      return pad;\n    }\n\n    computeOctPts(inputPts) {\n      var pts = new Array(8).fill(null);\n\n      for (var j = 0; j < pts.length; j++) {\n        pts[j] = inputPts[0];\n      }\n\n      for (var i = 1; i < inputPts.length; i++) {\n        if (inputPts[i].x < pts[0].x) {\n          pts[0] = inputPts[i];\n        }\n\n        if (inputPts[i].x - inputPts[i].y < pts[1].x - pts[1].y) {\n          pts[1] = inputPts[i];\n        }\n\n        if (inputPts[i].y > pts[2].y) {\n          pts[2] = inputPts[i];\n        }\n\n        if (inputPts[i].x + inputPts[i].y > pts[3].x + pts[3].y) {\n          pts[3] = inputPts[i];\n        }\n\n        if (inputPts[i].x > pts[4].x) {\n          pts[4] = inputPts[i];\n        }\n\n        if (inputPts[i].x - inputPts[i].y > pts[5].x - pts[5].y) {\n          pts[5] = inputPts[i];\n        }\n\n        if (inputPts[i].y < pts[6].y) {\n          pts[6] = inputPts[i];\n        }\n\n        if (inputPts[i].x + inputPts[i].y < pts[7].x + pts[7].y) {\n          pts[7] = inputPts[i];\n        }\n      }\n\n      return pts;\n    }\n\n    toCoordinateArray(stack) {\n      var coordinates = new Array(stack.size()).fill(null);\n\n      for (var i = 0; i < stack.size(); i++) {\n        var coordinate = stack.get(i);\n        coordinates[i] = coordinate;\n      }\n\n      return coordinates;\n    }\n\n    grahamScan(c) {\n      var p = null;\n      var ps = new Stack();\n      ps.push(c[0]);\n      ps.push(c[1]);\n      ps.push(c[2]);\n\n      for (var i = 3; i < c.length; i++) {\n        p = ps.pop();\n\n        while (!ps.empty() && Orientation.index(ps.peek(), p, c[i]) > 0) {\n          p = ps.pop();\n        }\n\n        ps.push(p);\n        ps.push(c[i]);\n      }\n\n      ps.push(c[0]);\n      return ps;\n    }\n\n    getClass() {\n      return ConvexHull;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  class RadialComparator {\n    constructor() {\n      RadialComparator.constructor_.apply(this, arguments);\n    }\n\n    static polarCompare(o, p, q) {\n      var dxp = p.x - o.x;\n      var dyp = p.y - o.y;\n      var dxq = q.x - o.x;\n      var dyq = q.y - o.y;\n      var orient = Orientation.index(o, p, q);\n      if (orient === Orientation.COUNTERCLOCKWISE) return 1;\n      if (orient === Orientation.CLOCKWISE) return -1;\n      var op = dxp * dxp + dyp * dyp;\n      var oq = dxq * dxq + dyq * dyq;\n\n      if (op < oq) {\n        return -1;\n      }\n\n      if (op > oq) {\n        return 1;\n      }\n\n      return 0;\n    }\n\n    compare(o1, o2) {\n      var p1 = o1;\n      var p2 = o2;\n      return RadialComparator.polarCompare(this._origin, p1, p2);\n    }\n\n    getClass() {\n      return RadialComparator;\n    }\n\n    get interfaces_() {\n      return [Comparator];\n    }\n\n  }\n\n  RadialComparator.constructor_ = function () {\n    this._origin = null;\n    let origin = arguments[0];\n    this._origin = origin;\n  };\n\n  ConvexHull.RadialComparator = RadialComparator;\n\n  ConvexHull.constructor_ = function () {\n    this._geomFactory = null;\n    this._inputPts = null;\n\n    if (arguments.length === 1) {\n      let geometry = arguments[0];\n      ConvexHull.constructor_.call(this, ConvexHull.extractCoordinates(geometry), geometry.getFactory());\n    } else if (arguments.length === 2) {\n      let pts = arguments[0],\n          geomFactory = arguments[1];\n      this._inputPts = UniqueCoordinateArrayFilter.filterCoordinates(pts);\n      this._geomFactory = geomFactory;\n    }\n  };\n\n  class InteriorPointArea {\n    constructor() {\n      InteriorPointArea.constructor_.apply(this, arguments);\n    }\n\n    static centre(envelope) {\n      return new Coordinate(InteriorPointArea.avg(envelope.getMinX(), envelope.getMaxX()), InteriorPointArea.avg(envelope.getMinY(), envelope.getMaxY()));\n    }\n\n    static avg(a, b) {\n      return (a + b) / 2.0;\n    }\n\n    addPolygon(geometry) {\n      if (geometry.isEmpty()) return null;\n      var intPt = null;\n      var width = null;\n      var bisector = this.horizontalBisector(geometry);\n\n      if (bisector.getLength() === 0.0) {\n        width = 0;\n        intPt = bisector.getCoordinate();\n      } else {\n        var intersections = bisector.intersection(geometry);\n        var widestIntersection = this.widestGeometry(intersections);\n        width = widestIntersection.getEnvelopeInternal().getWidth();\n        intPt = InteriorPointArea.centre(widestIntersection.getEnvelopeInternal());\n      }\n\n      if (this._interiorPoint === null || width > this._maxWidth) {\n        this._interiorPoint = intPt;\n        this._maxWidth = width;\n      }\n    }\n\n    getInteriorPoint() {\n      return this._interiorPoint;\n    }\n\n    widestGeometry() {\n      if (arguments[0] instanceof GeometryCollection) {\n        let gc = arguments[0];\n\n        if (gc.isEmpty()) {\n          return gc;\n        }\n\n        var widestGeometry = gc.getGeometryN(0);\n\n        for (var i = 1; i < gc.getNumGeometries(); i++) {\n          if (gc.getGeometryN(i).getEnvelopeInternal().getWidth() > widestGeometry.getEnvelopeInternal().getWidth()) {\n            widestGeometry = gc.getGeometryN(i);\n          }\n        }\n\n        return widestGeometry;\n      } else if (arguments[0] instanceof Geometry) {\n        let geometry = arguments[0];\n\n        if (!(geometry instanceof GeometryCollection)) {\n          return geometry;\n        }\n\n        return this.widestGeometry(geometry);\n      }\n    }\n\n    horizontalBisector(geometry) {\n      var envelope = geometry.getEnvelopeInternal();\n      var bisectY = SafeBisectorFinder.getBisectorY(geometry);\n      return this._factory.createLineString([new Coordinate(envelope.getMinX(), bisectY), new Coordinate(envelope.getMaxX(), bisectY)]);\n    }\n\n    add(geom) {\n      if (geom instanceof Polygon) {\n        this.addPolygon(geom);\n      } else if (geom instanceof GeometryCollection) {\n        var gc = geom;\n\n        for (var i = 0; i < gc.getNumGeometries(); i++) {\n          this.add(gc.getGeometryN(i));\n        }\n      }\n    }\n\n    getClass() {\n      return InteriorPointArea;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  class SafeBisectorFinder {\n    constructor() {\n      SafeBisectorFinder.constructor_.apply(this, arguments);\n    }\n\n    static getBisectorY(poly) {\n      var finder = new SafeBisectorFinder(poly);\n      return finder.getBisectorY();\n    }\n\n    updateInterval(y) {\n      if (y <= this._centreY) {\n        if (y > this._loY) this._loY = y;\n      } else if (y > this._centreY) {\n        if (y < this._hiY) {\n          this._hiY = y;\n        }\n      }\n    }\n\n    getBisectorY() {\n      this.process(this._poly.getExteriorRing());\n\n      for (var i = 0; i < this._poly.getNumInteriorRing(); i++) {\n        this.process(this._poly.getInteriorRingN(i));\n      }\n\n      var bisectY = InteriorPointArea.avg(this._hiY, this._loY);\n      return bisectY;\n    }\n\n    process(line) {\n      var seq = line.getCoordinateSequence();\n\n      for (var i = 0; i < seq.size(); i++) {\n        var y = seq.getY(i);\n        this.updateInterval(y);\n      }\n    }\n\n    getClass() {\n      return SafeBisectorFinder;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  SafeBisectorFinder.constructor_ = function () {\n    this._poly = null;\n    this._centreY = null;\n    this._hiY = Double.MAX_VALUE;\n    this._loY = -Double.MAX_VALUE;\n    let poly = arguments[0];\n    this._poly = poly;\n    this._hiY = poly.getEnvelopeInternal().getMaxY();\n    this._loY = poly.getEnvelopeInternal().getMinY();\n    this._centreY = InteriorPointArea.avg(this._loY, this._hiY);\n  };\n\n  InteriorPointArea.SafeBisectorFinder = SafeBisectorFinder;\n\n  InteriorPointArea.constructor_ = function () {\n    this._factory = null;\n    this._interiorPoint = null;\n    this._maxWidth = 0.0;\n    let g = arguments[0];\n    this._factory = g.getFactory();\n    this.add(g);\n  };\n\n  class InteriorPointLine {\n    constructor() {\n      InteriorPointLine.constructor_.apply(this, arguments);\n    }\n\n    addEndpoints() {\n      if (arguments[0] instanceof Geometry) {\n        let geom = arguments[0];\n\n        if (geom instanceof LineString) {\n          this.addEndpoints(geom.getCoordinates());\n        } else if (geom instanceof GeometryCollection) {\n          var gc = geom;\n\n          for (var i = 0; i < gc.getNumGeometries(); i++) {\n            this.addEndpoints(gc.getGeometryN(i));\n          }\n        }\n      } else if (arguments[0] instanceof Array) {\n        let pts = arguments[0];\n        this.add(pts[0]);\n        this.add(pts[pts.length - 1]);\n      }\n    }\n\n    getInteriorPoint() {\n      return this._interiorPoint;\n    }\n\n    addInterior() {\n      if (arguments[0] instanceof Geometry) {\n        let geom = arguments[0];\n\n        if (geom instanceof LineString) {\n          this.addInterior(geom.getCoordinates());\n        } else if (geom instanceof GeometryCollection) {\n          var gc = geom;\n\n          for (var i = 0; i < gc.getNumGeometries(); i++) {\n            this.addInterior(gc.getGeometryN(i));\n          }\n        }\n      } else if (arguments[0] instanceof Array) {\n        let pts = arguments[0];\n\n        for (var i = 1; i < pts.length - 1; i++) {\n          this.add(pts[i]);\n        }\n      }\n    }\n\n    add(point) {\n      var dist = point.distance(this._centroid);\n\n      if (dist < this._minDistance) {\n        this._interiorPoint = new Coordinate(point);\n        this._minDistance = dist;\n      }\n    }\n\n    getClass() {\n      return InteriorPointLine;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  InteriorPointLine.constructor_ = function () {\n    this._centroid = null;\n    this._minDistance = Double.MAX_VALUE;\n    this._interiorPoint = null;\n    let g = arguments[0];\n    this._centroid = g.getCentroid().getCoordinate();\n    this.addInterior(g);\n    if (this._interiorPoint === null) this.addEndpoints(g);\n  };\n\n  class InteriorPointPoint {\n    constructor() {\n      InteriorPointPoint.constructor_.apply(this, arguments);\n    }\n\n    getInteriorPoint() {\n      return this._interiorPoint;\n    }\n\n    add() {\n      if (arguments[0] instanceof Geometry) {\n        let geom = arguments[0];\n\n        if (geom instanceof Point) {\n          this.add(geom.getCoordinate());\n        } else if (geom instanceof GeometryCollection) {\n          var gc = geom;\n\n          for (var i = 0; i < gc.getNumGeometries(); i++) {\n            this.add(gc.getGeometryN(i));\n          }\n        }\n      } else if (arguments[0] instanceof Coordinate) {\n        let point = arguments[0];\n        var dist = point.distance(this._centroid);\n\n        if (dist < this._minDistance) {\n          this._interiorPoint = new Coordinate(point);\n          this._minDistance = dist;\n        }\n      }\n    }\n\n    getClass() {\n      return InteriorPointPoint;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  InteriorPointPoint.constructor_ = function () {\n    this._centroid = null;\n    this._minDistance = Double.MAX_VALUE;\n    this._interiorPoint = null;\n    let g = arguments[0];\n    this._centroid = g.getCentroid().getCoordinate();\n    this.add(g);\n  };\n\n  class PointLocator {\n    constructor() {\n      PointLocator.constructor_.apply(this, arguments);\n    }\n\n    locateInPolygonRing(p, ring) {\n      if (!ring.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR;\n      return PointLocation.locateInRing(p, ring.getCoordinates());\n    }\n\n    intersects(p, geom) {\n      return this.locate(p, geom) !== Location.EXTERIOR;\n    }\n\n    updateLocationInfo(loc) {\n      if (loc === Location.INTERIOR) this._isIn = true;\n      if (loc === Location.BOUNDARY) this._numBoundaries++;\n    }\n\n    computeLocation(p, geom) {\n      if (geom instanceof Point) {\n        this.updateLocationInfo(this.locateOnPoint(p, geom));\n      }\n\n      if (geom instanceof LineString) {\n        this.updateLocationInfo(this.locateOnLineString(p, geom));\n      } else if (geom instanceof Polygon) {\n        this.updateLocationInfo(this.locateInPolygon(p, geom));\n      } else if (geom instanceof MultiLineString) {\n        var ml = geom;\n\n        for (var i = 0; i < ml.getNumGeometries(); i++) {\n          var l = ml.getGeometryN(i);\n          this.updateLocationInfo(this.locateOnLineString(p, l));\n        }\n      } else if (geom instanceof MultiPolygon) {\n        var mpoly = geom;\n\n        for (var i = 0; i < mpoly.getNumGeometries(); i++) {\n          var poly = mpoly.getGeometryN(i);\n          this.updateLocationInfo(this.locateInPolygon(p, poly));\n        }\n      } else if (geom instanceof GeometryCollection) {\n        var geomi = new GeometryCollectionIterator(geom);\n\n        while (geomi.hasNext()) {\n          var g2 = geomi.next();\n          if (g2 !== geom) this.computeLocation(p, g2);\n        }\n      }\n    }\n\n    locateOnPoint(p, pt) {\n      var ptCoord = pt.getCoordinate();\n      if (ptCoord.equals2D(p)) return Location.INTERIOR;\n      return Location.EXTERIOR;\n    }\n\n    locateOnLineString(p, l) {\n      if (!l.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR;\n      var seq = l.getCoordinateSequence();\n\n      if (!l.isClosed()) {\n        if (p.equals(seq.getCoordinate(0)) || p.equals(seq.getCoordinate(seq.size() - 1))) {\n          return Location.BOUNDARY;\n        }\n      }\n\n      if (PointLocation.isOnLine(p, seq)) {\n        return Location.INTERIOR;\n      }\n\n      return Location.EXTERIOR;\n    }\n\n    locateInPolygon(p, poly) {\n      if (poly.isEmpty()) return Location.EXTERIOR;\n      var shell = poly.getExteriorRing();\n      var shellLoc = this.locateInPolygonRing(p, shell);\n      if (shellLoc === Location.EXTERIOR) return Location.EXTERIOR;\n      if (shellLoc === Location.BOUNDARY) return Location.BOUNDARY;\n\n      for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n        var hole = poly.getInteriorRingN(i);\n        var holeLoc = this.locateInPolygonRing(p, hole);\n        if (holeLoc === Location.INTERIOR) return Location.EXTERIOR;\n        if (holeLoc === Location.BOUNDARY) return Location.BOUNDARY;\n      }\n\n      return Location.INTERIOR;\n    }\n\n    locate(p, geom) {\n      if (geom.isEmpty()) return Location.EXTERIOR;\n\n      if (geom instanceof LineString) {\n        return this.locateOnLineString(p, geom);\n      } else if (geom instanceof Polygon) {\n        return this.locateInPolygon(p, geom);\n      }\n\n      this._isIn = false;\n      this._numBoundaries = 0;\n      this.computeLocation(p, geom);\n      if (this._boundaryRule.isInBoundary(this._numBoundaries)) return Location.BOUNDARY;\n      if (this._numBoundaries > 0 || this._isIn) return Location.INTERIOR;\n      return Location.EXTERIOR;\n    }\n\n    getClass() {\n      return PointLocator;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  PointLocator.constructor_ = function () {\n    this._boundaryRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n    this._isIn = null;\n    this._numBoundaries = null;\n\n    if (arguments.length === 0) ; else if (arguments.length === 1) {\n      let boundaryRule = arguments[0];\n      if (boundaryRule === null) throw new IllegalArgumentException(\"Rule must be non-null\");\n      this._boundaryRule = boundaryRule;\n    }\n  };\n\n  class MinimumBoundingCircle {\n    constructor() {\n      MinimumBoundingCircle.constructor_.apply(this, arguments);\n    }\n\n    static pointWitMinAngleWithX(pts, P) {\n      var minSin = Double.MAX_VALUE;\n      var minAngPt = null;\n\n      for (var i = 0; i < pts.length; i++) {\n        var p = pts[i];\n        if (p === P) continue;\n        var dx = p.x - P.x;\n        var dy = p.y - P.y;\n        if (dy < 0) dy = -dy;\n        var len = Math.sqrt(dx * dx + dy * dy);\n        var sin = dy / len;\n\n        if (sin < minSin) {\n          minSin = sin;\n          minAngPt = p;\n        }\n      }\n\n      return minAngPt;\n    }\n\n    static lowestPoint(pts) {\n      var min = pts[0];\n\n      for (var i = 1; i < pts.length; i++) {\n        if (pts[i].y < min.y) min = pts[i];\n      }\n\n      return min;\n    }\n\n    static pointWithMinAngleWithSegment(pts, P, Q) {\n      var minAng = Double.MAX_VALUE;\n      var minAngPt = null;\n\n      for (var i = 0; i < pts.length; i++) {\n        var p = pts[i];\n        if (p === P) continue;\n        if (p === Q) continue;\n        var ang = Angle.angleBetween(P, p, Q);\n\n        if (ang < minAng) {\n          minAng = ang;\n          minAngPt = p;\n        }\n      }\n\n      return minAngPt;\n    }\n\n    getRadius() {\n      this.compute();\n      return this._radius;\n    }\n\n    getDiameter() {\n      this.compute();\n\n      switch (this._extremalPts.length) {\n        case 0:\n          return this._input.getFactory().createLineString();\n\n        case 1:\n          return this._input.getFactory().createPoint(this._centre);\n      }\n\n      var p0 = this._extremalPts[0];\n      var p1 = this._extremalPts[1];\n      return this._input.getFactory().createLineString([p0, p1]);\n    }\n\n    getExtremalPoints() {\n      this.compute();\n      return this._extremalPts;\n    }\n\n    computeCirclePoints() {\n      if (this._input.isEmpty()) {\n        this._extremalPts = new Array(0).fill(null);\n        return null;\n      }\n\n      if (this._input.getNumPoints() === 1) {\n        var pts = this._input.getCoordinates();\n\n        this._extremalPts = [new Coordinate(pts[0])];\n        return null;\n      }\n\n      var convexHull = this._input.convexHull();\n\n      var hullPts = convexHull.getCoordinates();\n      var pts = hullPts;\n\n      if (hullPts[0].equals2D(hullPts[hullPts.length - 1])) {\n        pts = new Array(hullPts.length - 1).fill(null);\n        CoordinateArrays.copyDeep(hullPts, 0, pts, 0, hullPts.length - 1);\n      }\n\n      if (pts.length <= 2) {\n        this._extremalPts = CoordinateArrays.copyDeep(pts);\n        return null;\n      }\n\n      var P = MinimumBoundingCircle.lowestPoint(pts);\n      var Q = MinimumBoundingCircle.pointWitMinAngleWithX(pts, P);\n\n      for (var i = 0; i < pts.length; i++) {\n        var R = MinimumBoundingCircle.pointWithMinAngleWithSegment(pts, P, Q);\n\n        if (Angle.isObtuse(P, R, Q)) {\n          this._extremalPts = [new Coordinate(P), new Coordinate(Q)];\n          return null;\n        }\n\n        if (Angle.isObtuse(R, P, Q)) {\n          P = R;\n          continue;\n        }\n\n        if (Angle.isObtuse(R, Q, P)) {\n          Q = R;\n          continue;\n        }\n\n        this._extremalPts = [new Coordinate(P), new Coordinate(Q), new Coordinate(R)];\n        return null;\n      }\n\n      Assert.shouldNeverReachHere(\"Logic failure in Minimum Bounding Circle algorithm!\");\n    }\n\n    compute() {\n      if (this._extremalPts !== null) return null;\n      this.computeCirclePoints();\n      this.computeCentre();\n      if (this._centre !== null) this._radius = this._centre.distance(this._extremalPts[0]);\n    }\n\n    getFarthestPoints() {\n      this.compute();\n\n      switch (this._extremalPts.length) {\n        case 0:\n          return this._input.getFactory().createLineString();\n\n        case 1:\n          return this._input.getFactory().createPoint(this._centre);\n      }\n\n      var p0 = this._extremalPts[0];\n      var p1 = this._extremalPts[this._extremalPts.length - 1];\n      return this._input.getFactory().createLineString([p0, p1]);\n    }\n\n    getCircle() {\n      this.compute();\n      if (this._centre === null) return this._input.getFactory().createPolygon();\n\n      var centrePoint = this._input.getFactory().createPoint(this._centre);\n\n      if (this._radius === 0.0) return centrePoint;\n      return centrePoint.buffer(this._radius);\n    }\n\n    getCentre() {\n      this.compute();\n      return this._centre;\n    }\n\n    computeCentre() {\n      switch (this._extremalPts.length) {\n        case 0:\n          this._centre = null;\n          break;\n\n        case 1:\n          this._centre = this._extremalPts[0];\n          break;\n\n        case 2:\n          this._centre = new Coordinate((this._extremalPts[0].x + this._extremalPts[1].x) / 2.0, (this._extremalPts[0].y + this._extremalPts[1].y) / 2.0);\n          break;\n\n        case 3:\n          this._centre = Triangle.circumcentre(this._extremalPts[0], this._extremalPts[1], this._extremalPts[2]);\n          break;\n      }\n    }\n\n    getClass() {\n      return MinimumBoundingCircle;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  MinimumBoundingCircle.constructor_ = function () {\n    this._input = null;\n    this._extremalPts = null;\n    this._centre = null;\n    this._radius = 0.0;\n    let geom = arguments[0];\n    this._input = geom;\n  };\n\n  class MinimumDiameter {\n    constructor() {\n      MinimumDiameter.constructor_.apply(this, arguments);\n    }\n\n    static nextIndex(pts, index) {\n      index++;\n      if (index >= pts.length) index = 0;\n      return index;\n    }\n\n    static computeC(a, b, p) {\n      return a * p.y - b * p.x;\n    }\n\n    static getMinimumDiameter(geom) {\n      return new MinimumDiameter(geom).getDiameter();\n    }\n\n    static getMinimumRectangle(geom) {\n      return new MinimumDiameter(geom).getMinimumRectangle();\n    }\n\n    static computeSegmentForLine(a, b, c) {\n      var p0 = null;\n      var p1 = null;\n\n      if (Math.abs(b) > Math.abs(a)) {\n        p0 = new Coordinate(0.0, c / b);\n        p1 = new Coordinate(1.0, c / b - a / b);\n      } else {\n        p0 = new Coordinate(c / a, 0.0);\n        p1 = new Coordinate(c / a - b / a, 1.0);\n      }\n\n      return new LineSegment(p0, p1);\n    }\n\n    getWidthCoordinate() {\n      this.computeMinimumDiameter();\n      return this._minWidthPt;\n    }\n\n    getSupportingSegment() {\n      this.computeMinimumDiameter();\n      return this._inputGeom.getFactory().createLineString([this._minBaseSeg.p0, this._minBaseSeg.p1]);\n    }\n\n    getDiameter() {\n      this.computeMinimumDiameter();\n      if (this._minWidthPt === null) return this._inputGeom.getFactory().createLineString();\n\n      var basePt = this._minBaseSeg.project(this._minWidthPt);\n\n      return this._inputGeom.getFactory().createLineString([basePt, this._minWidthPt]);\n    }\n\n    computeWidthConvex(convexGeom) {\n      if (convexGeom instanceof Polygon) this._convexHullPts = convexGeom.getExteriorRing().getCoordinates();else this._convexHullPts = convexGeom.getCoordinates();\n\n      if (this._convexHullPts.length === 0) {\n        this._minWidth = 0.0;\n        this._minWidthPt = null;\n        this._minBaseSeg = null;\n      } else if (this._convexHullPts.length === 1) {\n        this._minWidth = 0.0;\n        this._minWidthPt = this._convexHullPts[0];\n        this._minBaseSeg.p0 = this._convexHullPts[0];\n        this._minBaseSeg.p1 = this._convexHullPts[0];\n      } else if (this._convexHullPts.length === 2 || this._convexHullPts.length === 3) {\n        this._minWidth = 0.0;\n        this._minWidthPt = this._convexHullPts[0];\n        this._minBaseSeg.p0 = this._convexHullPts[0];\n        this._minBaseSeg.p1 = this._convexHullPts[1];\n      } else this.computeConvexRingMinDiameter(this._convexHullPts);\n    }\n\n    computeConvexRingMinDiameter(pts) {\n      this._minWidth = Double.MAX_VALUE;\n      var currMaxIndex = 1;\n      var seg = new LineSegment();\n\n      for (var i = 0; i < pts.length - 1; i++) {\n        seg.p0 = pts[i];\n        seg.p1 = pts[i + 1];\n        currMaxIndex = this.findMaxPerpDistance(pts, seg, currMaxIndex);\n      }\n    }\n\n    computeMinimumDiameter() {\n      if (this._minWidthPt !== null) return null;\n      if (this._isConvex) this.computeWidthConvex(this._inputGeom);else {\n        var convexGeom = new ConvexHull(this._inputGeom).getConvexHull();\n        this.computeWidthConvex(convexGeom);\n      }\n    }\n\n    getLength() {\n      this.computeMinimumDiameter();\n      return this._minWidth;\n    }\n\n    findMaxPerpDistance(pts, seg, startIndex) {\n      var maxPerpDistance = seg.distancePerpendicular(pts[startIndex]);\n      var nextPerpDistance = maxPerpDistance;\n      var maxIndex = startIndex;\n      var nextIndex = maxIndex;\n\n      while (nextPerpDistance >= maxPerpDistance) {\n        maxPerpDistance = nextPerpDistance;\n        maxIndex = nextIndex;\n        nextIndex = MinimumDiameter.nextIndex(pts, maxIndex);\n        nextPerpDistance = seg.distancePerpendicular(pts[nextIndex]);\n      }\n\n      if (maxPerpDistance < this._minWidth) {\n        this._minPtIndex = maxIndex;\n        this._minWidth = maxPerpDistance;\n        this._minWidthPt = pts[this._minPtIndex];\n        this._minBaseSeg = new LineSegment(seg);\n      }\n\n      return maxIndex;\n    }\n\n    getMinimumRectangle() {\n      this.computeMinimumDiameter();\n\n      if (this._minWidth === 0.0) {\n        if (this._minBaseSeg.p0.equals2D(this._minBaseSeg.p1)) {\n          return this._inputGeom.getFactory().createPoint(this._minBaseSeg.p0);\n        }\n\n        return this._minBaseSeg.toGeometry(this._inputGeom.getFactory());\n      }\n\n      var dx = this._minBaseSeg.p1.x - this._minBaseSeg.p0.x;\n      var dy = this._minBaseSeg.p1.y - this._minBaseSeg.p0.y;\n      var minPara = Double.MAX_VALUE;\n      var maxPara = -Double.MAX_VALUE;\n      var minPerp = Double.MAX_VALUE;\n      var maxPerp = -Double.MAX_VALUE;\n\n      for (var i = 0; i < this._convexHullPts.length; i++) {\n        var paraC = MinimumDiameter.computeC(dx, dy, this._convexHullPts[i]);\n        if (paraC > maxPara) maxPara = paraC;\n        if (paraC < minPara) minPara = paraC;\n        var perpC = MinimumDiameter.computeC(-dy, dx, this._convexHullPts[i]);\n        if (perpC > maxPerp) maxPerp = perpC;\n        if (perpC < minPerp) minPerp = perpC;\n      }\n\n      var maxPerpLine = MinimumDiameter.computeSegmentForLine(-dx, -dy, maxPerp);\n      var minPerpLine = MinimumDiameter.computeSegmentForLine(-dx, -dy, minPerp);\n      var maxParaLine = MinimumDiameter.computeSegmentForLine(-dy, dx, maxPara);\n      var minParaLine = MinimumDiameter.computeSegmentForLine(-dy, dx, minPara);\n      var p0 = maxParaLine.lineIntersection(maxPerpLine);\n      var p1 = minParaLine.lineIntersection(maxPerpLine);\n      var p2 = minParaLine.lineIntersection(minPerpLine);\n      var p3 = maxParaLine.lineIntersection(minPerpLine);\n\n      var shell = this._inputGeom.getFactory().createLinearRing([p0, p1, p2, p3, p0]);\n\n      return this._inputGeom.getFactory().createPolygon(shell);\n    }\n\n    getClass() {\n      return MinimumDiameter;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  MinimumDiameter.constructor_ = function () {\n    this._inputGeom = null;\n    this._isConvex = null;\n    this._convexHullPts = null;\n    this._minBaseSeg = new LineSegment();\n    this._minWidthPt = null;\n    this._minPtIndex = null;\n    this._minWidth = 0.0;\n\n    if (arguments.length === 1) {\n      let inputGeom = arguments[0];\n      MinimumDiameter.constructor_.call(this, inputGeom, false);\n    } else if (arguments.length === 2) {\n      let inputGeom = arguments[0],\n          isConvex = arguments[1];\n      this._inputGeom = inputGeom;\n      this._isConvex = isConvex;\n    }\n  };\n\n\n\n  var algorithm = /*#__PURE__*/Object.freeze({\n    distance: distance_module,\n    locate: locate,\n    match: match,\n    Angle: Angle,\n    Area: Area,\n    Centroid: Centroid,\n    ConvexHull: ConvexHull,\n    Distance: Distance,\n    InteriorPointArea: InteriorPointArea,\n    InteriorPointLine: InteriorPointLine,\n    InteriorPointPoint: InteriorPointPoint,\n    Length: Length,\n    Orientation: Orientation,\n    PointLocation: PointLocation,\n    PointLocator: PointLocator,\n    RobustLineIntersector: RobustLineIntersector,\n    MinimumBoundingCircle: MinimumBoundingCircle,\n    MinimumDiameter: MinimumDiameter\n  });\n\n  class GeometryTransformer {\n    constructor() {\n      GeometryTransformer.constructor_.apply(this, arguments);\n    }\n\n    transformPoint(geom, parent) {\n      return this._factory.createPoint(this.transformCoordinates(geom.getCoordinateSequence(), geom));\n    }\n\n    transformPolygon(geom, parent) {\n      var isAllValidLinearRings = true;\n      var shell = this.transformLinearRing(geom.getExteriorRing(), geom);\n      if (shell === null || !(shell instanceof LinearRing) || shell.isEmpty()) isAllValidLinearRings = false;\n      var holes = new ArrayList();\n\n      for (var i = 0; i < geom.getNumInteriorRing(); i++) {\n        var hole = this.transformLinearRing(geom.getInteriorRingN(i), geom);\n\n        if (hole === null || hole.isEmpty()) {\n          continue;\n        }\n\n        if (!(hole instanceof LinearRing)) isAllValidLinearRings = false;\n        holes.add(hole);\n      }\n\n      if (isAllValidLinearRings) return this._factory.createPolygon(shell, holes.toArray([]));else {\n        var components = new ArrayList();\n        if (shell !== null) components.add(shell);\n        components.addAll(holes);\n        return this._factory.buildGeometry(components);\n      }\n    }\n\n    createCoordinateSequence(coords) {\n      return this._factory.getCoordinateSequenceFactory().create(coords);\n    }\n\n    getInputGeometry() {\n      return this._inputGeom;\n    }\n\n    transformMultiLineString(geom, parent) {\n      var transGeomList = new ArrayList();\n\n      for (var i = 0; i < geom.getNumGeometries(); i++) {\n        var transformGeom = this.transformLineString(geom.getGeometryN(i), geom);\n        if (transformGeom === null) continue;\n        if (transformGeom.isEmpty()) continue;\n        transGeomList.add(transformGeom);\n      }\n\n      return this._factory.buildGeometry(transGeomList);\n    }\n\n    transformCoordinates(coords, parent) {\n      return this.copy(coords);\n    }\n\n    transformLineString(geom, parent) {\n      return this._factory.createLineString(this.transformCoordinates(geom.getCoordinateSequence(), geom));\n    }\n\n    transformMultiPoint(geom, parent) {\n      var transGeomList = new ArrayList();\n\n      for (var i = 0; i < geom.getNumGeometries(); i++) {\n        var transformGeom = this.transformPoint(geom.getGeometryN(i), geom);\n        if (transformGeom === null) continue;\n        if (transformGeom.isEmpty()) continue;\n        transGeomList.add(transformGeom);\n      }\n\n      return this._factory.buildGeometry(transGeomList);\n    }\n\n    transformMultiPolygon(geom, parent) {\n      var transGeomList = new ArrayList();\n\n      for (var i = 0; i < geom.getNumGeometries(); i++) {\n        var transformGeom = this.transformPolygon(geom.getGeometryN(i), geom);\n        if (transformGeom === null) continue;\n        if (transformGeom.isEmpty()) continue;\n        transGeomList.add(transformGeom);\n      }\n\n      return this._factory.buildGeometry(transGeomList);\n    }\n\n    copy(seq) {\n      return seq.copy();\n    }\n\n    transformGeometryCollection(geom, parent) {\n      var transGeomList = new ArrayList();\n\n      for (var i = 0; i < geom.getNumGeometries(); i++) {\n        var transformGeom = this.transform(geom.getGeometryN(i));\n        if (transformGeom === null) continue;\n        if (this._pruneEmptyGeometry && transformGeom.isEmpty()) continue;\n        transGeomList.add(transformGeom);\n      }\n\n      if (this._preserveGeometryCollectionType) return this._factory.createGeometryCollection(GeometryFactory.toGeometryArray(transGeomList));\n      return this._factory.buildGeometry(transGeomList);\n    }\n\n    transform(inputGeom) {\n      this._inputGeom = inputGeom;\n      this._factory = inputGeom.getFactory();\n      if (inputGeom instanceof Point) return this.transformPoint(inputGeom, null);\n      if (inputGeom instanceof MultiPoint) return this.transformMultiPoint(inputGeom, null);\n      if (inputGeom instanceof LinearRing) return this.transformLinearRing(inputGeom, null);\n      if (inputGeom instanceof LineString) return this.transformLineString(inputGeom, null);\n      if (inputGeom instanceof MultiLineString) return this.transformMultiLineString(inputGeom, null);\n      if (inputGeom instanceof Polygon) return this.transformPolygon(inputGeom, null);\n      if (inputGeom instanceof MultiPolygon) return this.transformMultiPolygon(inputGeom, null);\n      if (inputGeom instanceof GeometryCollection) return this.transformGeometryCollection(inputGeom, null);\n      throw new IllegalArgumentException(\"Unknown Geometry subtype: \" + inputGeom.getClass().getName());\n    }\n\n    transformLinearRing(geom, parent) {\n      var seq = this.transformCoordinates(geom.getCoordinateSequence(), geom);\n      if (seq === null) return this._factory.createLinearRing(null);\n      var seqSize = seq.size();\n      if (seqSize > 0 && seqSize < 4 && !this._preserveType) return this._factory.createLineString(seq);\n      return this._factory.createLinearRing(seq);\n    }\n\n    getClass() {\n      return GeometryTransformer;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  GeometryTransformer.constructor_ = function () {\n    this._inputGeom = null;\n    this._factory = null;\n    this._pruneEmptyGeometry = true;\n    this._preserveGeometryCollectionType = true;\n    this._preserveCollections = false;\n    this._preserveType = false;\n  };\n\n  class Densifier {\n    constructor() {\n      Densifier.constructor_.apply(this, arguments);\n    }\n\n    static densifyPoints(pts, distanceTolerance, precModel) {\n      var seg = new LineSegment();\n      var coordList = new CoordinateList();\n\n      for (var i = 0; i < pts.length - 1; i++) {\n        seg.p0 = pts[i];\n        seg.p1 = pts[i + 1];\n        coordList.add(seg.p0, false);\n        var len = seg.getLength();\n        var densifiedSegCount = Math.trunc(len / distanceTolerance) + 1;\n\n        if (densifiedSegCount > 1) {\n          var densifiedSegLen = len / densifiedSegCount;\n\n          for (var j = 1; j < densifiedSegCount; j++) {\n            var segFract = j * densifiedSegLen / len;\n            var p = seg.pointAlong(segFract);\n            precModel.makePrecise(p);\n            coordList.add(p, false);\n          }\n        }\n      }\n\n      coordList.add(pts[pts.length - 1], false);\n      return coordList.toCoordinateArray();\n    }\n\n    static densify(geom, distanceTolerance) {\n      var densifier = new Densifier(geom);\n      densifier.setDistanceTolerance(distanceTolerance);\n      return densifier.getResultGeometry();\n    }\n\n    getResultGeometry() {\n      return new DensifyTransformer(this._distanceTolerance).transform(this._inputGeom);\n    }\n\n    setDistanceTolerance(distanceTolerance) {\n      if (distanceTolerance <= 0.0) throw new IllegalArgumentException(\"Tolerance must be positive\");\n      this._distanceTolerance = distanceTolerance;\n    }\n\n    getClass() {\n      return Densifier;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  class DensifyTransformer extends GeometryTransformer {\n    constructor() {\n      super();\n      DensifyTransformer.constructor_.apply(this, arguments);\n    }\n\n    transformMultiPolygon(geom, parent) {\n      var roughGeom = super.transformMultiPolygon.call(this, geom, parent);\n      return this.createValidArea(roughGeom);\n    }\n\n    transformPolygon(geom, parent) {\n      var roughGeom = super.transformPolygon.call(this, geom, parent);\n\n      if (parent instanceof MultiPolygon) {\n        return roughGeom;\n      }\n\n      return this.createValidArea(roughGeom);\n    }\n\n    transformCoordinates(coords, parent) {\n      var inputPts = coords.toCoordinateArray();\n      var newPts = Densifier.densifyPoints(inputPts, this.distanceTolerance, parent.getPrecisionModel());\n\n      if (parent instanceof LineString && newPts.length === 1) {\n        newPts = new Array(0).fill(null);\n      }\n\n      return this._factory.getCoordinateSequenceFactory().create(newPts);\n    }\n\n    createValidArea(roughAreaGeom) {\n      return roughAreaGeom.buffer(0.0);\n    }\n\n    getClass() {\n      return DensifyTransformer;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  DensifyTransformer.constructor_ = function () {\n    this.distanceTolerance = null;\n    let distanceTolerance = arguments[0];\n    this.distanceTolerance = distanceTolerance;\n  };\n\n  Densifier.DensifyTransformer = DensifyTransformer;\n\n  Densifier.constructor_ = function () {\n    this._inputGeom = null;\n    this._distanceTolerance = null;\n    let inputGeom = arguments[0];\n    this._inputGeom = inputGeom;\n  };\n\n\n\n  var densify = /*#__PURE__*/Object.freeze({\n    Densifier: Densifier\n  });\n\n  class Quadrant {\n    constructor() {\n      Quadrant.constructor_.apply(this, arguments);\n    }\n\n    static isNorthern(quad) {\n      return quad === Quadrant.NE || quad === Quadrant.NW;\n    }\n\n    static isOpposite(quad1, quad2) {\n      if (quad1 === quad2) return false;\n      var diff = (quad1 - quad2 + 4) % 4;\n      if (diff === 2) return true;\n      return false;\n    }\n\n    static commonHalfPlane(quad1, quad2) {\n      if (quad1 === quad2) return quad1;\n      var diff = (quad1 - quad2 + 4) % 4;\n      if (diff === 2) return -1;\n      var min = quad1 < quad2 ? quad1 : quad2;\n      var max = quad1 > quad2 ? quad1 : quad2;\n      if (min === 0 && max === 3) return 3;\n      return min;\n    }\n\n    static isInHalfPlane(quad, halfPlane) {\n      if (halfPlane === Quadrant.SE) {\n        return quad === Quadrant.SE || quad === Quadrant.SW;\n      }\n\n      return quad === halfPlane || quad === halfPlane + 1;\n    }\n\n    static quadrant() {\n      if (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\n        let dx = arguments[0],\n            dy = arguments[1];\n        if (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException(\"Cannot compute the quadrant for point ( \" + dx + \", \" + dy + \" )\");\n\n        if (dx >= 0.0) {\n          if (dy >= 0.0) return Quadrant.NE;else return Quadrant.SE;\n        } else {\n          if (dy >= 0.0) return Quadrant.NW;else return Quadrant.SW;\n        }\n      } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n        let p0 = arguments[0],\n            p1 = arguments[1];\n        if (p1.x === p0.x && p1.y === p0.y) throw new IllegalArgumentException(\"Cannot compute the quadrant for two identical points \" + p0);\n\n        if (p1.x >= p0.x) {\n          if (p1.y >= p0.y) return Quadrant.NE;else return Quadrant.SE;\n        } else {\n          if (p1.y >= p0.y) return Quadrant.NW;else return Quadrant.SW;\n        }\n      }\n    }\n\n    getClass() {\n      return Quadrant;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  Quadrant.constructor_ = function () {};\n\n  Quadrant.NE = 0;\n  Quadrant.NW = 1;\n  Quadrant.SW = 2;\n  Quadrant.SE = 3;\n\n  class HalfEdge {\n    constructor() {\n      HalfEdge.constructor_.apply(this, arguments);\n    }\n\n    static init(e0, e1) {\n      if (e0._sym !== null || e1._sym !== null || e0._next !== null || e1._next !== null) throw new IllegalStateException(\"Edges are already initialized\");\n      e0.init(e1);\n      return e0;\n    }\n\n    static create(p0, p1) {\n      var e0 = new HalfEdge(p0);\n      var e1 = new HalfEdge(p1);\n      e0.init(e1);\n      return e0;\n    }\n\n    find(dest) {\n      var oNext = this;\n\n      do {\n        if (oNext === null) return null;\n        if (oNext.dest().equals2D(dest)) return oNext;\n        oNext = oNext.oNext();\n      } while (oNext !== this);\n\n      return null;\n    }\n\n    dest() {\n      return this._sym._orig;\n    }\n\n    oNext() {\n      return this._sym._next;\n    }\n\n    insert(e) {\n      if (this.oNext() === this) {\n        this.insertAfter(e);\n        return null;\n      }\n\n      var ecmp = this.compareTo(e);\n      var ePrev = this;\n\n      do {\n        var oNext = ePrev.oNext();\n        var cmp = oNext.compareTo(e);\n\n        if (cmp !== ecmp || oNext === this) {\n          ePrev.insertAfter(e);\n          return null;\n        }\n\n        ePrev = oNext;\n      } while (ePrev !== this);\n\n      Assert.shouldNeverReachHere();\n    }\n\n    insertAfter(e) {\n      Assert.equals(this._orig, e.orig());\n      var save = this.oNext();\n\n      this._sym.setNext(e);\n\n      e.sym().setNext(save);\n    }\n\n    degree() {\n      var degree = 0;\n      var e = this;\n\n      do {\n        degree++;\n        e = e.oNext();\n      } while (e !== this);\n\n      return degree;\n    }\n\n    equals() {\n      if (arguments.length === 2 && arguments[1] instanceof Coordinate && arguments[0] instanceof Coordinate) {\n        let p0 = arguments[0],\n            p1 = arguments[1];\n        return this._orig.equals2D(p0) && this._sym._orig.equals(p1);\n      }\n    }\n\n    deltaY() {\n      return this._sym._orig.y - this._orig.y;\n    }\n\n    sym() {\n      return this._sym;\n    }\n\n    prev() {\n      return this._sym.next()._sym;\n    }\n\n    compareAngularDirection(e) {\n      var dx = this.deltaX();\n      var dy = this.deltaY();\n      var dx2 = e.deltaX();\n      var dy2 = e.deltaY();\n      if (dx === dx2 && dy === dy2) return 0;\n      var quadrant = Quadrant.quadrant(dx, dy);\n      var quadrant2 = Quadrant.quadrant(dx2, dy2);\n      if (quadrant > quadrant2) return 1;\n      if (quadrant < quadrant2) return -1;\n      return Orientation.index(e._orig, e.dest(), this.dest());\n    }\n\n    prevNode() {\n      var e = this;\n\n      while (e.degree() === 2) {\n        e = e.prev();\n        if (e === this) return null;\n      }\n\n      return e;\n    }\n\n    compareTo(obj) {\n      var e = obj;\n      var comp = this.compareAngularDirection(e);\n      return comp;\n    }\n\n    next() {\n      return this._next;\n    }\n\n    setSym(e) {\n      this._sym = e;\n    }\n\n    orig() {\n      return this._orig;\n    }\n\n    toString() {\n      return \"HE(\" + this._orig.x + \" \" + this._orig.y + \", \" + this._sym._orig.x + \" \" + this._sym._orig.y + \")\";\n    }\n\n    setNext(e) {\n      this._next = e;\n    }\n\n    init(e) {\n      this.setSym(e);\n      e.setSym(this);\n      this.setNext(e);\n      e.setNext(this);\n    }\n\n    deltaX() {\n      return this._sym._orig.x - this._orig.x;\n    }\n\n    getClass() {\n      return HalfEdge;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  HalfEdge.constructor_ = function () {\n    this._orig = null;\n    this._sym = null;\n    this._next = null;\n    let orig = arguments[0];\n    this._orig = orig;\n  };\n\n  class MarkHalfEdge extends HalfEdge {\n    constructor() {\n      super();\n      MarkHalfEdge.constructor_.apply(this, arguments);\n    }\n\n    static setMarkBoth(e, isMarked) {\n      e.setMark(isMarked);\n      e.sym().setMark(isMarked);\n    }\n\n    static isMarked(e) {\n      return e.isMarked();\n    }\n\n    static setMark(e, isMarked) {\n      e.setMark(isMarked);\n    }\n\n    static markBoth(e) {\n      e.mark();\n      e.sym().mark();\n    }\n\n    static mark(e) {\n      e.mark();\n    }\n\n    mark() {\n      this._isMarked = true;\n    }\n\n    setMark(isMarked) {\n      this._isMarked = isMarked;\n    }\n\n    isMarked() {\n      return this._isMarked;\n    }\n\n    getClass() {\n      return MarkHalfEdge;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  MarkHalfEdge.constructor_ = function () {\n    this._isMarked = false;\n    let orig = arguments[0];\n    HalfEdge.constructor_.call(this, orig);\n  };\n\n  class EdgeGraph {\n    constructor() {\n      EdgeGraph.constructor_.apply(this, arguments);\n    }\n\n    static isValidEdge(orig, dest) {\n      var cmp = dest.compareTo(orig);\n      return cmp !== 0;\n    }\n\n    insert(orig, dest, eAdj) {\n      var e = this.create(orig, dest);\n\n      if (eAdj !== null) {\n        eAdj.insert(e);\n      } else {\n        this._vertexMap.put(orig, e);\n      }\n\n      var eAdjDest = this._vertexMap.get(dest);\n\n      if (eAdjDest !== null) {\n        eAdjDest.insert(e.sym());\n      } else {\n        this._vertexMap.put(dest, e.sym());\n      }\n\n      return e;\n    }\n\n    create(p0, p1) {\n      var e0 = this.createEdge(p0);\n      var e1 = this.createEdge(p1);\n      HalfEdge.init(e0, e1);\n      return e0;\n    }\n\n    createEdge(orig) {\n      return new HalfEdge(orig);\n    }\n\n    addEdge(orig, dest) {\n      if (!EdgeGraph.isValidEdge(orig, dest)) return null;\n\n      var eAdj = this._vertexMap.get(orig);\n\n      var eSame = null;\n\n      if (eAdj !== null) {\n        eSame = eAdj.find(dest);\n      }\n\n      if (eSame !== null) {\n        return eSame;\n      }\n\n      var e = this.insert(orig, dest, eAdj);\n      return e;\n    }\n\n    getVertexEdges() {\n      return this._vertexMap.values();\n    }\n\n    findEdge(orig, dest) {\n      var e = this._vertexMap.get(orig);\n\n      if (e === null) return null;\n      return e.find(dest);\n    }\n\n    getClass() {\n      return EdgeGraph;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  EdgeGraph.constructor_ = function () {\n    this._vertexMap = new HashMap();\n  };\n\n  class DissolveHalfEdge extends MarkHalfEdge {\n    constructor() {\n      super();\n      DissolveHalfEdge.constructor_.apply(this, arguments);\n    }\n\n    setStart() {\n      this._isStart = true;\n    }\n\n    isStart() {\n      return this._isStart;\n    }\n\n    getClass() {\n      return DissolveHalfEdge;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  DissolveHalfEdge.constructor_ = function () {\n    this._isStart = false;\n    let orig = arguments[0];\n    MarkHalfEdge.constructor_.call(this, orig);\n  };\n\n  class DissolveEdgeGraph extends EdgeGraph {\n    constructor() {\n      super();\n      DissolveEdgeGraph.constructor_.apply(this, arguments);\n    }\n\n    createEdge(p0) {\n      return new DissolveHalfEdge(p0);\n    }\n\n    getClass() {\n      return DissolveEdgeGraph;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  DissolveEdgeGraph.constructor_ = function () {};\n\n  class LineDissolver {\n    constructor() {\n      LineDissolver.constructor_.apply(this, arguments);\n    }\n\n    static dissolve(g) {\n      var d = new LineDissolver();\n      d.add(g);\n      return d.getResult();\n    }\n\n    addLine(line) {\n      this._lines.add(this._factory.createLineString(line.toCoordinateArray()));\n    }\n\n    updateRingStartEdge(e) {\n      if (!e.isStart()) {\n        e = e.sym();\n        if (!e.isStart()) return null;\n      }\n\n      if (this._ringStartEdge === null) {\n        this._ringStartEdge = e;\n        return null;\n      }\n\n      if (e.orig().compareTo(this._ringStartEdge.orig()) < 0) {\n        this._ringStartEdge = e;\n      }\n    }\n\n    getResult() {\n      if (this._result === null) this.computeResult();\n      return this._result;\n    }\n\n    process(e) {\n      var eNode = e.prevNode();\n      if (eNode === null) eNode = e;\n      this.stackEdges(eNode);\n      this.buildLines();\n    }\n\n    buildRing(eStartRing) {\n      var line = new CoordinateList();\n      var e = eStartRing;\n      line.add(e.orig().copy(), false);\n\n      while (e.sym().degree() === 2) {\n        var eNext = e.next();\n        if (eNext === eStartRing) break;\n        line.add(eNext.orig().copy(), false);\n        e = eNext;\n      }\n\n      line.add(e.dest().copy(), false);\n      this.addLine(line);\n    }\n\n    buildLine(eStart) {\n      var line = new CoordinateList();\n      var e = eStart;\n      this._ringStartEdge = null;\n      MarkHalfEdge.markBoth(e);\n      line.add(e.orig().copy(), false);\n\n      while (e.sym().degree() === 2) {\n        this.updateRingStartEdge(e);\n        var eNext = e.next();\n\n        if (eNext === eStart) {\n          this.buildRing(this._ringStartEdge);\n          return null;\n        }\n\n        line.add(eNext.orig().copy(), false);\n        e = eNext;\n        MarkHalfEdge.markBoth(e);\n      }\n\n      line.add(e.dest().clone(), false);\n      this.stackEdges(e.sym());\n      this.addLine(line);\n    }\n\n    stackEdges(node) {\n      var e = node;\n\n      do {\n        if (!MarkHalfEdge.isMarked(e)) this._nodeEdgeStack.add(e);\n        e = e.oNext();\n      } while (e !== node);\n    }\n\n    computeResult() {\n      var edges = this._graph.getVertexEdges();\n\n      for (var i = edges.iterator(); i.hasNext();) {\n        var e = i.next();\n        if (MarkHalfEdge.isMarked(e)) continue;\n        this.process(e);\n      }\n\n      this._result = this._factory.buildGeometry(this._lines);\n    }\n\n    buildLines() {\n      while (!this._nodeEdgeStack.empty()) {\n        var e = this._nodeEdgeStack.pop();\n\n        if (MarkHalfEdge.isMarked(e)) continue;\n        this.buildLine(e);\n      }\n    }\n\n    add() {\n      if (arguments[0] instanceof Geometry) {\n        let geometry = arguments[0];\n        geometry.apply(new class {\n          get interfaces_() {\n            return [GeometryComponentFilter];\n          }\n\n          filter(component) {\n            if (component instanceof LineString) {\n              this.add(component);\n            }\n          }\n\n        }());\n      } else if (hasInterface(arguments[0], Collection)) {\n        let geometries = arguments[0];\n\n        for (var i = geometries.iterator(); i.hasNext();) {\n          var geometry = i.next();\n          this.add(geometry);\n        }\n      } else if (arguments[0] instanceof LineString) {\n        let lineString = arguments[0];\n\n        if (this._factory === null) {\n          this._factory = lineString.getFactory();\n        }\n\n        var seq = lineString.getCoordinateSequence();\n        var doneStart = false;\n\n        for (var i = 1; i < seq.size(); i++) {\n          var e = this._graph.addEdge(seq.getCoordinate(i - 1), seq.getCoordinate(i));\n\n          if (e === null) continue;\n\n          if (!doneStart) {\n            e.setStart();\n            doneStart = true;\n          }\n        }\n      }\n    }\n\n    getClass() {\n      return LineDissolver;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  LineDissolver.constructor_ = function () {\n    this._result = null;\n    this._factory = null;\n    this._graph = null;\n    this._lines = new ArrayList();\n    this._nodeEdgeStack = new Stack();\n    this._ringStartEdge = null;\n    this._graph = new DissolveEdgeGraph();\n  };\n\n\n\n  var dissolve = /*#__PURE__*/Object.freeze({\n    LineDissolver: LineDissolver\n  });\n\n  class Position {\n    constructor() {\n      Position.constructor_.apply(this, arguments);\n    }\n\n    static opposite(position) {\n      if (position === Position.LEFT) return Position.RIGHT;\n      if (position === Position.RIGHT) return Position.LEFT;\n      return position;\n    }\n\n    getClass() {\n      return Position;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  Position.constructor_ = function () {};\n\n  Position.ON = 0;\n  Position.LEFT = 1;\n  Position.RIGHT = 2;\n\n  class MonotoneChain {\n    constructor() {\n      MonotoneChain.constructor_.apply(this, arguments);\n    }\n\n    computeIntersections(mc, si) {\n      this.mce.computeIntersectsForChain(this.chainIndex, mc.mce, mc.chainIndex, si);\n    }\n\n    getClass() {\n      return MonotoneChain;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  MonotoneChain.constructor_ = function () {\n    this.mce = null;\n    this.chainIndex = null;\n    let mce = arguments[0],\n        chainIndex = arguments[1];\n    this.mce = mce;\n    this.chainIndex = chainIndex;\n  };\n\n  class SweepLineEvent {\n    constructor() {\n      SweepLineEvent.constructor_.apply(this, arguments);\n    }\n\n    isDelete() {\n      return this._eventType === SweepLineEvent.DELETE;\n    }\n\n    setDeleteEventIndex(deleteEventIndex) {\n      this._deleteEventIndex = deleteEventIndex;\n    }\n\n    getObject() {\n      return this._obj;\n    }\n\n    compareTo(o) {\n      var pe = o;\n      if (this._xValue < pe._xValue) return -1;\n      if (this._xValue > pe._xValue) return 1;\n      if (this._eventType < pe._eventType) return -1;\n      if (this._eventType > pe._eventType) return 1;\n      return 0;\n    }\n\n    getInsertEvent() {\n      return this._insertEvent;\n    }\n\n    isInsert() {\n      return this._eventType === SweepLineEvent.INSERT;\n    }\n\n    isSameLabel(ev) {\n      if (this._label === null) return false;\n      return this._label === ev._label;\n    }\n\n    getDeleteEventIndex() {\n      return this._deleteEventIndex;\n    }\n\n    getClass() {\n      return SweepLineEvent;\n    }\n\n    get interfaces_() {\n      return [Comparable];\n    }\n\n  }\n\n  SweepLineEvent.constructor_ = function () {\n    this._label = null;\n    this._xValue = null;\n    this._eventType = null;\n    this._insertEvent = null;\n    this._deleteEventIndex = null;\n    this._obj = null;\n\n    if (arguments.length === 2) {\n      let x = arguments[0],\n          insertEvent = arguments[1];\n      this._eventType = SweepLineEvent.DELETE;\n      this._xValue = x;\n      this._insertEvent = insertEvent;\n    } else if (arguments.length === 3) {\n      let label = arguments[0],\n          x = arguments[1],\n          obj = arguments[2];\n      this._eventType = SweepLineEvent.INSERT;\n      this._label = label;\n      this._xValue = x;\n      this._obj = obj;\n    }\n  };\n\n  SweepLineEvent.INSERT = 1;\n  SweepLineEvent.DELETE = 2;\n\n  class EdgeSetIntersector {\n    constructor() {\n      EdgeSetIntersector.constructor_.apply(this, arguments);\n    }\n\n    getClass() {\n      return EdgeSetIntersector;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  EdgeSetIntersector.constructor_ = function () {};\n\n  class SegmentIntersector {\n    constructor() {\n      SegmentIntersector.constructor_.apply(this, arguments);\n    }\n\n    static isAdjacentSegments(i1, i2) {\n      return Math.abs(i1 - i2) === 1;\n    }\n\n    isTrivialIntersection(e0, segIndex0, e1, segIndex1) {\n      if (e0 === e1) {\n        if (this._li.getIntersectionNum() === 1) {\n          if (SegmentIntersector.isAdjacentSegments(segIndex0, segIndex1)) return true;\n\n          if (e0.isClosed()) {\n            var maxSegIndex = e0.getNumPoints() - 1;\n\n            if (segIndex0 === 0 && segIndex1 === maxSegIndex || segIndex1 === 0 && segIndex0 === maxSegIndex) {\n              return true;\n            }\n          }\n        }\n      }\n\n      return false;\n    }\n\n    getProperIntersectionPoint() {\n      return this._properIntersectionPoint;\n    }\n\n    setIsDoneIfProperInt(isDoneWhenProperInt) {\n      this._isDoneWhenProperInt = isDoneWhenProperInt;\n    }\n\n    hasProperInteriorIntersection() {\n      return this._hasProperInterior;\n    }\n\n    isBoundaryPointInternal(li, bdyNodes) {\n      for (var i = bdyNodes.iterator(); i.hasNext();) {\n        var node = i.next();\n        var pt = node.getCoordinate();\n        if (li.isIntersection(pt)) return true;\n      }\n\n      return false;\n    }\n\n    hasProperIntersection() {\n      return this._hasProper;\n    }\n\n    hasIntersection() {\n      return this._hasIntersection;\n    }\n\n    isDone() {\n      return this._isDone;\n    }\n\n    isBoundaryPoint(li, bdyNodes) {\n      if (bdyNodes === null) return false;\n      if (this.isBoundaryPointInternal(li, bdyNodes[0])) return true;\n      if (this.isBoundaryPointInternal(li, bdyNodes[1])) return true;\n      return false;\n    }\n\n    setBoundaryNodes(bdyNodes0, bdyNodes1) {\n      this._bdyNodes = new Array(2).fill(null);\n      this._bdyNodes[0] = bdyNodes0;\n      this._bdyNodes[1] = bdyNodes1;\n    }\n\n    addIntersections(e0, segIndex0, e1, segIndex1) {\n      if (e0 === e1 && segIndex0 === segIndex1) return null;\n      this.numTests++;\n      var p00 = e0.getCoordinates()[segIndex0];\n      var p01 = e0.getCoordinates()[segIndex0 + 1];\n      var p10 = e1.getCoordinates()[segIndex1];\n      var p11 = e1.getCoordinates()[segIndex1 + 1];\n\n      this._li.computeIntersection(p00, p01, p10, p11);\n\n      if (this._li.hasIntersection()) {\n        if (this._recordIsolated) {\n          e0.setIsolated(false);\n          e1.setIsolated(false);\n        }\n\n        this._numIntersections++;\n\n        if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n          this._hasIntersection = true;\n\n          if (this._includeProper || !this._li.isProper()) {\n            e0.addIntersections(this._li, segIndex0, 0);\n            e1.addIntersections(this._li, segIndex1, 1);\n          }\n\n          if (this._li.isProper()) {\n            this._properIntersectionPoint = this._li.getIntersection(0).copy();\n            this._hasProper = true;\n\n            if (this._isDoneWhenProperInt) {\n              this._isDone = true;\n            }\n\n            if (!this.isBoundaryPoint(this._li, this._bdyNodes)) this._hasProperInterior = true;\n          }\n        }\n      }\n    }\n\n    getClass() {\n      return SegmentIntersector;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  SegmentIntersector.constructor_ = function () {\n    this._hasIntersection = false;\n    this._hasProper = false;\n    this._hasProperInterior = false;\n    this._properIntersectionPoint = null;\n    this._li = null;\n    this._includeProper = null;\n    this._recordIsolated = null;\n    this._isSelfIntersection = null;\n    this._numIntersections = 0;\n    this.numTests = 0;\n    this._bdyNodes = null;\n    this._isDone = false;\n    this._isDoneWhenProperInt = false;\n    let li = arguments[0],\n        includeProper = arguments[1],\n        recordIsolated = arguments[2];\n    this._li = li;\n    this._includeProper = includeProper;\n    this._recordIsolated = recordIsolated;\n  };\n\n  class SimpleMCSweepLineIntersector extends EdgeSetIntersector {\n    constructor() {\n      super();\n      SimpleMCSweepLineIntersector.constructor_.apply(this, arguments);\n    }\n\n    prepareEvents() {\n      Collections.sort(this.events);\n\n      for (var i = 0; i < this.events.size(); i++) {\n        var ev = this.events.get(i);\n\n        if (ev.isDelete()) {\n          ev.getInsertEvent().setDeleteEventIndex(i);\n        }\n      }\n    }\n\n    computeIntersections() {\n      if (arguments.length === 1) {\n        let si = arguments[0];\n        this.nOverlaps = 0;\n        this.prepareEvents();\n\n        for (var i = 0; i < this.events.size(); i++) {\n          var ev = this.events.get(i);\n\n          if (ev.isInsert()) {\n            this.processOverlaps(i, ev.getDeleteEventIndex(), ev, si);\n          }\n\n          if (si.isDone()) {\n            break;\n          }\n        }\n      } else if (arguments.length === 3) {\n        if (arguments[2] instanceof SegmentIntersector && hasInterface(arguments[0], List) && hasInterface(arguments[1], List)) {\n          let edges0 = arguments[0],\n              edges1 = arguments[1],\n              si = arguments[2];\n          this.addEdges(edges0, edges0);\n          this.addEdges(edges1, edges1);\n          this.computeIntersections(si);\n        } else if (typeof arguments[2] === \"boolean\" && hasInterface(arguments[0], List) && arguments[1] instanceof SegmentIntersector) {\n          let edges = arguments[0],\n              si = arguments[1],\n              testAllSegments = arguments[2];\n          if (testAllSegments) this.addEdges(edges, null);else this.addEdges(edges);\n          this.computeIntersections(si);\n        }\n      }\n    }\n\n    addEdge(edge, edgeSet) {\n      var mce = edge.getMonotoneChainEdge();\n      var startIndex = mce.getStartIndexes();\n\n      for (var i = 0; i < startIndex.length - 1; i++) {\n        var mc = new MonotoneChain(mce, i);\n        var insertEvent = new SweepLineEvent(edgeSet, mce.getMinX(i), mc);\n        this.events.add(insertEvent);\n        this.events.add(new SweepLineEvent(mce.getMaxX(i), insertEvent));\n      }\n    }\n\n    processOverlaps(start, end, ev0, si) {\n      var mc0 = ev0.getObject();\n\n      for (var i = start; i < end; i++) {\n        var ev1 = this.events.get(i);\n\n        if (ev1.isInsert()) {\n          var mc1 = ev1.getObject();\n\n          if (!ev0.isSameLabel(ev1)) {\n            mc0.computeIntersections(mc1, si);\n            this.nOverlaps++;\n          }\n        }\n      }\n    }\n\n    addEdges() {\n      if (arguments.length === 1) {\n        let edges = arguments[0];\n\n        for (var i = edges.iterator(); i.hasNext();) {\n          var edge = i.next();\n          this.addEdge(edge, edge);\n        }\n      } else if (arguments.length === 2) {\n        let edges = arguments[0],\n            edgeSet = arguments[1];\n\n        for (var i = edges.iterator(); i.hasNext();) {\n          var edge = i.next();\n          this.addEdge(edge, edgeSet);\n        }\n      }\n    }\n\n    getClass() {\n      return SimpleMCSweepLineIntersector;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  SimpleMCSweepLineIntersector.constructor_ = function () {\n    this.events = new ArrayList();\n    this.nOverlaps = null;\n  };\n\n  class TopologyLocation {\n    constructor() {\n      TopologyLocation.constructor_.apply(this, arguments);\n    }\n\n    setAllLocations(locValue) {\n      for (var i = 0; i < this.location.length; i++) {\n        this.location[i] = locValue;\n      }\n    }\n\n    isNull() {\n      for (var i = 0; i < this.location.length; i++) {\n        if (this.location[i] !== Location.NONE) return false;\n      }\n\n      return true;\n    }\n\n    setAllLocationsIfNull(locValue) {\n      for (var i = 0; i < this.location.length; i++) {\n        if (this.location[i] === Location.NONE) this.location[i] = locValue;\n      }\n    }\n\n    isLine() {\n      return this.location.length === 1;\n    }\n\n    merge(gl) {\n      if (gl.location.length > this.location.length) {\n        var newLoc = new Array(3).fill(null);\n        newLoc[Position.ON] = this.location[Position.ON];\n        newLoc[Position.LEFT] = Location.NONE;\n        newLoc[Position.RIGHT] = Location.NONE;\n        this.location = newLoc;\n      }\n\n      for (var i = 0; i < this.location.length; i++) {\n        if (this.location[i] === Location.NONE && i < gl.location.length) this.location[i] = gl.location[i];\n      }\n    }\n\n    getLocations() {\n      return this.location;\n    }\n\n    flip() {\n      if (this.location.length <= 1) return null;\n      var temp = this.location[Position.LEFT];\n      this.location[Position.LEFT] = this.location[Position.RIGHT];\n      this.location[Position.RIGHT] = temp;\n    }\n\n    toString() {\n      var buf = new StringBuffer();\n      if (this.location.length > 1) buf.append(Location.toLocationSymbol(this.location[Position.LEFT]));\n      buf.append(Location.toLocationSymbol(this.location[Position.ON]));\n      if (this.location.length > 1) buf.append(Location.toLocationSymbol(this.location[Position.RIGHT]));\n      return buf.toString();\n    }\n\n    setLocations(on, left, right) {\n      this.location[Position.ON] = on;\n      this.location[Position.LEFT] = left;\n      this.location[Position.RIGHT] = right;\n    }\n\n    get(posIndex) {\n      if (posIndex < this.location.length) return this.location[posIndex];\n      return Location.NONE;\n    }\n\n    isArea() {\n      return this.location.length > 1;\n    }\n\n    isAnyNull() {\n      for (var i = 0; i < this.location.length; i++) {\n        if (this.location[i] === Location.NONE) return true;\n      }\n\n      return false;\n    }\n\n    setLocation() {\n      if (arguments.length === 1) {\n        let locValue = arguments[0];\n        this.setLocation(Position.ON, locValue);\n      } else if (arguments.length === 2) {\n        let locIndex = arguments[0],\n            locValue = arguments[1];\n        this.location[locIndex] = locValue;\n      }\n    }\n\n    init(size) {\n      this.location = new Array(size).fill(null);\n      this.setAllLocations(Location.NONE);\n    }\n\n    isEqualOnSide(le, locIndex) {\n      return this.location[locIndex] === le.location[locIndex];\n    }\n\n    allPositionsEqual(loc) {\n      for (var i = 0; i < this.location.length; i++) {\n        if (this.location[i] !== loc) return false;\n      }\n\n      return true;\n    }\n\n    getClass() {\n      return TopologyLocation;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  TopologyLocation.constructor_ = function () {\n    this.location = null;\n\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Array) {\n        let location = arguments[0];\n        this.init(location.length);\n      } else if (Number.isInteger(arguments[0])) {\n        let on = arguments[0];\n        this.init(1);\n        this.location[Position.ON] = on;\n      } else if (arguments[0] instanceof TopologyLocation) {\n        let gl = arguments[0];\n        this.init(gl.location.length);\n\n        if (gl !== null) {\n          for (var i = 0; i < this.location.length; i++) {\n            this.location[i] = gl.location[i];\n          }\n        }\n      }\n    } else if (arguments.length === 3) {\n      let on = arguments[0],\n          left = arguments[1],\n          right = arguments[2];\n      this.init(3);\n      this.location[Position.ON] = on;\n      this.location[Position.LEFT] = left;\n      this.location[Position.RIGHT] = right;\n    }\n  };\n\n  class Label {\n    constructor() {\n      Label.constructor_.apply(this, arguments);\n    }\n\n    static toLineLabel(label) {\n      var lineLabel = new Label(Location.NONE);\n\n      for (var i = 0; i < 2; i++) {\n        lineLabel.setLocation(i, label.getLocation(i));\n      }\n\n      return lineLabel;\n    }\n\n    getGeometryCount() {\n      var count = 0;\n      if (!this.elt[0].isNull()) count++;\n      if (!this.elt[1].isNull()) count++;\n      return count;\n    }\n\n    setAllLocations(geomIndex, location) {\n      this.elt[geomIndex].setAllLocations(location);\n    }\n\n    isNull(geomIndex) {\n      return this.elt[geomIndex].isNull();\n    }\n\n    setAllLocationsIfNull() {\n      if (arguments.length === 1) {\n        let location = arguments[0];\n        this.setAllLocationsIfNull(0, location);\n        this.setAllLocationsIfNull(1, location);\n      } else if (arguments.length === 2) {\n        let geomIndex = arguments[0],\n            location = arguments[1];\n        this.elt[geomIndex].setAllLocationsIfNull(location);\n      }\n    }\n\n    isLine(geomIndex) {\n      return this.elt[geomIndex].isLine();\n    }\n\n    merge(lbl) {\n      for (var i = 0; i < 2; i++) {\n        if (this.elt[i] === null && lbl.elt[i] !== null) {\n          this.elt[i] = new TopologyLocation(lbl.elt[i]);\n        } else {\n          this.elt[i].merge(lbl.elt[i]);\n        }\n      }\n    }\n\n    flip() {\n      this.elt[0].flip();\n      this.elt[1].flip();\n    }\n\n    getLocation() {\n      if (arguments.length === 1) {\n        let geomIndex = arguments[0];\n        return this.elt[geomIndex].get(Position.ON);\n      } else if (arguments.length === 2) {\n        let geomIndex = arguments[0],\n            posIndex = arguments[1];\n        return this.elt[geomIndex].get(posIndex);\n      }\n    }\n\n    toString() {\n      var buf = new StringBuffer();\n\n      if (this.elt[0] !== null) {\n        buf.append(\"A:\");\n        buf.append(this.elt[0].toString());\n      }\n\n      if (this.elt[1] !== null) {\n        buf.append(\" B:\");\n        buf.append(this.elt[1].toString());\n      }\n\n      return buf.toString();\n    }\n\n    isArea() {\n      if (arguments.length === 0) {\n        return this.elt[0].isArea() || this.elt[1].isArea();\n      } else if (arguments.length === 1) {\n        let geomIndex = arguments[0];\n        return this.elt[geomIndex].isArea();\n      }\n    }\n\n    isAnyNull(geomIndex) {\n      return this.elt[geomIndex].isAnyNull();\n    }\n\n    setLocation() {\n      if (arguments.length === 2) {\n        let geomIndex = arguments[0],\n            location = arguments[1];\n        this.elt[geomIndex].setLocation(Position.ON, location);\n      } else if (arguments.length === 3) {\n        let geomIndex = arguments[0],\n            posIndex = arguments[1],\n            location = arguments[2];\n        this.elt[geomIndex].setLocation(posIndex, location);\n      }\n    }\n\n    isEqualOnSide(lbl, side) {\n      return this.elt[0].isEqualOnSide(lbl.elt[0], side) && this.elt[1].isEqualOnSide(lbl.elt[1], side);\n    }\n\n    allPositionsEqual(geomIndex, loc) {\n      return this.elt[geomIndex].allPositionsEqual(loc);\n    }\n\n    toLine(geomIndex) {\n      if (this.elt[geomIndex].isArea()) this.elt[geomIndex] = new TopologyLocation(this.elt[geomIndex].location[0]);\n    }\n\n    getClass() {\n      return Label;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  Label.constructor_ = function () {\n    this.elt = new Array(2).fill(null);\n\n    if (arguments.length === 1) {\n      if (Number.isInteger(arguments[0])) {\n        let onLoc = arguments[0];\n        this.elt[0] = new TopologyLocation(onLoc);\n        this.elt[1] = new TopologyLocation(onLoc);\n      } else if (arguments[0] instanceof Label) {\n        let lbl = arguments[0];\n        this.elt[0] = new TopologyLocation(lbl.elt[0]);\n        this.elt[1] = new TopologyLocation(lbl.elt[1]);\n      }\n    } else if (arguments.length === 2) {\n      let geomIndex = arguments[0],\n          onLoc = arguments[1];\n      this.elt[0] = new TopologyLocation(Location.NONE);\n      this.elt[1] = new TopologyLocation(Location.NONE);\n      this.elt[geomIndex].setLocation(onLoc);\n    } else if (arguments.length === 3) {\n      let onLoc = arguments[0],\n          leftLoc = arguments[1],\n          rightLoc = arguments[2];\n      this.elt[0] = new TopologyLocation(onLoc, leftLoc, rightLoc);\n      this.elt[1] = new TopologyLocation(onLoc, leftLoc, rightLoc);\n    } else if (arguments.length === 4) {\n      let geomIndex = arguments[0],\n          onLoc = arguments[1],\n          leftLoc = arguments[2],\n          rightLoc = arguments[3];\n      this.elt[0] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n      this.elt[1] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n      this.elt[geomIndex].setLocations(onLoc, leftLoc, rightLoc);\n    }\n  };\n\n  class EdgeIntersection {\n    constructor() {\n      EdgeIntersection.constructor_.apply(this, arguments);\n    }\n\n    getSegmentIndex() {\n      return this.segmentIndex;\n    }\n\n    getCoordinate() {\n      return this.coord;\n    }\n\n    print(out) {\n      out.print(this.coord);\n      out.print(\" seg # = \" + this.segmentIndex);\n      out.println(\" dist = \" + this.dist);\n    }\n\n    compareTo(obj) {\n      var other = obj;\n      return this.compare(other.segmentIndex, other.dist);\n    }\n\n    isEndPoint(maxSegmentIndex) {\n      if (this.segmentIndex === 0 && this.dist === 0.0) return true;\n      if (this.segmentIndex === maxSegmentIndex) return true;\n      return false;\n    }\n\n    toString() {\n      return this.coord + \" seg # = \" + this.segmentIndex + \" dist = \" + this.dist;\n    }\n\n    getDistance() {\n      return this.dist;\n    }\n\n    compare(segmentIndex, dist) {\n      if (this.segmentIndex < segmentIndex) return -1;\n      if (this.segmentIndex > segmentIndex) return 1;\n      if (this.dist < dist) return -1;\n      if (this.dist > dist) return 1;\n      return 0;\n    }\n\n    getClass() {\n      return EdgeIntersection;\n    }\n\n    get interfaces_() {\n      return [Comparable];\n    }\n\n  }\n\n  EdgeIntersection.constructor_ = function () {\n    this.coord = null;\n    this.segmentIndex = null;\n    this.dist = null;\n    let coord = arguments[0],\n        segmentIndex = arguments[1],\n        dist = arguments[2];\n    this.coord = new Coordinate(coord);\n    this.segmentIndex = segmentIndex;\n    this.dist = dist;\n  };\n\n  class EdgeIntersectionList {\n    constructor() {\n      EdgeIntersectionList.constructor_.apply(this, arguments);\n    }\n\n    print(out) {\n      out.println(\"Intersections:\");\n\n      for (var it = this.iterator(); it.hasNext();) {\n        var ei = it.next();\n        ei.print(out);\n      }\n    }\n\n    iterator() {\n      return this._nodeMap.values().iterator();\n    }\n\n    addSplitEdges(edgeList) {\n      this.addEndpoints();\n      var it = this.iterator();\n      var eiPrev = it.next();\n\n      while (it.hasNext()) {\n        var ei = it.next();\n        var newEdge = this.createSplitEdge(eiPrev, ei);\n        edgeList.add(newEdge);\n        eiPrev = ei;\n      }\n    }\n\n    addEndpoints() {\n      var maxSegIndex = this.edge.pts.length - 1;\n      this.add(this.edge.pts[0], 0, 0.0);\n      this.add(this.edge.pts[maxSegIndex], maxSegIndex, 0.0);\n    }\n\n    createSplitEdge(ei0, ei1) {\n      var npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n      var lastSegStartPt = this.edge.pts[ei1.segmentIndex];\n      var useIntPt1 = ei1.dist > 0.0 || !ei1.coord.equals2D(lastSegStartPt);\n\n      if (!useIntPt1) {\n        npts--;\n      }\n\n      var pts = new Array(npts).fill(null);\n      var ipt = 0;\n      pts[ipt++] = new Coordinate(ei0.coord);\n\n      for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n        pts[ipt++] = this.edge.pts[i];\n      }\n\n      if (useIntPt1) pts[ipt] = ei1.coord;\n      return new Edge(pts, new Label(this.edge._label));\n    }\n\n    add(intPt, segmentIndex, dist) {\n      var eiNew = new EdgeIntersection(intPt, segmentIndex, dist);\n\n      var ei = this._nodeMap.get(eiNew);\n\n      if (ei !== null) {\n        return ei;\n      }\n\n      this._nodeMap.put(eiNew, eiNew);\n\n      return eiNew;\n    }\n\n    isIntersection(pt) {\n      for (var it = this.iterator(); it.hasNext();) {\n        var ei = it.next();\n        if (ei.coord.equals(pt)) return true;\n      }\n\n      return false;\n    }\n\n    getClass() {\n      return EdgeIntersectionList;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  EdgeIntersectionList.constructor_ = function () {\n    this._nodeMap = new TreeMap();\n    this.edge = null;\n    let edge = arguments[0];\n    this.edge = edge;\n  };\n\n  class MonotoneChainIndexer {\n    constructor() {\n      MonotoneChainIndexer.constructor_.apply(this, arguments);\n    }\n\n    static toIntArray(list) {\n      var array = new Array(list.size()).fill(null);\n\n      for (var i = 0; i < array.length; i++) {\n        array[i] = list.get(i).intValue();\n      }\n\n      return array;\n    }\n\n    getChainStartIndices(pts) {\n      var start = 0;\n      var startIndexList = new ArrayList();\n      startIndexList.add(new Integer(start));\n\n      do {\n        var last = this.findChainEnd(pts, start);\n        startIndexList.add(new Integer(last));\n        start = last;\n      } while (start < pts.length - 1);\n\n      var startIndex = MonotoneChainIndexer.toIntArray(startIndexList);\n      return startIndex;\n    }\n\n    findChainEnd(pts, start) {\n      var chainQuad = Quadrant.quadrant(pts[start], pts[start + 1]);\n      var last = start + 1;\n\n      while (last < pts.length) {\n        var quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n        if (quad !== chainQuad) break;\n        last++;\n      }\n\n      return last - 1;\n    }\n\n    getClass() {\n      return MonotoneChainIndexer;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  MonotoneChainIndexer.constructor_ = function () {};\n\n  class MonotoneChainEdge {\n    constructor() {\n      MonotoneChainEdge.constructor_.apply(this, arguments);\n    }\n\n    getCoordinates() {\n      return this.pts;\n    }\n\n    getMaxX(chainIndex) {\n      var x1 = this.pts[this.startIndex[chainIndex]].x;\n      var x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n      return x1 > x2 ? x1 : x2;\n    }\n\n    getMinX(chainIndex) {\n      var x1 = this.pts[this.startIndex[chainIndex]].x;\n      var x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n      return x1 < x2 ? x1 : x2;\n    }\n\n    computeIntersectsForChain() {\n      if (arguments.length === 4) {\n        let chainIndex0 = arguments[0],\n            mce = arguments[1],\n            chainIndex1 = arguments[2],\n            si = arguments[3];\n        this.computeIntersectsForChain(this.startIndex[chainIndex0], this.startIndex[chainIndex0 + 1], mce, mce.startIndex[chainIndex1], mce.startIndex[chainIndex1 + 1], si);\n      } else if (arguments.length === 6) {\n        let start0 = arguments[0],\n            end0 = arguments[1],\n            mce = arguments[2],\n            start1 = arguments[3],\n            end1 = arguments[4],\n            ei = arguments[5];\n\n        if (end0 - start0 === 1 && end1 - start1 === 1) {\n          ei.addIntersections(this.e, start0, mce.e, start1);\n          return null;\n        }\n\n        if (!this.overlaps(start0, end0, mce, start1, end1)) return null;\n        var mid0 = Math.trunc((start0 + end0) / 2);\n        var mid1 = Math.trunc((start1 + end1) / 2);\n\n        if (start0 < mid0) {\n          if (start1 < mid1) this.computeIntersectsForChain(start0, mid0, mce, start1, mid1, ei);\n          if (mid1 < end1) this.computeIntersectsForChain(start0, mid0, mce, mid1, end1, ei);\n        }\n\n        if (mid0 < end0) {\n          if (start1 < mid1) this.computeIntersectsForChain(mid0, end0, mce, start1, mid1, ei);\n          if (mid1 < end1) this.computeIntersectsForChain(mid0, end0, mce, mid1, end1, ei);\n        }\n      }\n    }\n\n    overlaps(start0, end0, mce, start1, end1) {\n      return Envelope.intersects(this.pts[start0], this.pts[end0], mce.pts[start1], mce.pts[end1]);\n    }\n\n    getStartIndexes() {\n      return this.startIndex;\n    }\n\n    computeIntersects(mce, si) {\n      for (var i = 0; i < this.startIndex.length - 1; i++) {\n        for (var j = 0; j < mce.startIndex.length - 1; j++) {\n          this.computeIntersectsForChain(i, mce, j, si);\n        }\n      }\n    }\n\n    getClass() {\n      return MonotoneChainEdge;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  MonotoneChainEdge.constructor_ = function () {\n    this.e = null;\n    this.pts = null;\n    this.startIndex = null;\n    let e = arguments[0];\n    this.e = e;\n    this.pts = e.getCoordinates();\n    var mcb = new MonotoneChainIndexer();\n    this.startIndex = mcb.getChainStartIndices(this.pts);\n  };\n\n  class Depth {\n    constructor() {\n      Depth.constructor_.apply(this, arguments);\n    }\n\n    static depthAtLocation(location) {\n      if (location === Location.EXTERIOR) return 0;\n      if (location === Location.INTERIOR) return 1;\n      return Depth.NULL_VALUE;\n    }\n\n    getDepth(geomIndex, posIndex) {\n      return this._depth[geomIndex][posIndex];\n    }\n\n    setDepth(geomIndex, posIndex, depthValue) {\n      this._depth[geomIndex][posIndex] = depthValue;\n    }\n\n    isNull() {\n      if (arguments.length === 0) {\n        for (var i = 0; i < 2; i++) {\n          for (var j = 0; j < 3; j++) {\n            if (this._depth[i][j] !== Depth.NULL_VALUE) return false;\n          }\n        }\n\n        return true;\n      } else if (arguments.length === 1) {\n        let geomIndex = arguments[0];\n        return this._depth[geomIndex][1] === Depth.NULL_VALUE;\n      } else if (arguments.length === 2) {\n        let geomIndex = arguments[0],\n            posIndex = arguments[1];\n        return this._depth[geomIndex][posIndex] === Depth.NULL_VALUE;\n      }\n    }\n\n    normalize() {\n      for (var i = 0; i < 2; i++) {\n        if (!this.isNull(i)) {\n          var minDepth = this._depth[i][1];\n          if (this._depth[i][2] < minDepth) minDepth = this._depth[i][2];\n          if (minDepth < 0) minDepth = 0;\n\n          for (var j = 1; j < 3; j++) {\n            var newValue = 0;\n            if (this._depth[i][j] > minDepth) newValue = 1;\n            this._depth[i][j] = newValue;\n          }\n        }\n      }\n    }\n\n    getDelta(geomIndex) {\n      return this._depth[geomIndex][Position.RIGHT] - this._depth[geomIndex][Position.LEFT];\n    }\n\n    getLocation(geomIndex, posIndex) {\n      if (this._depth[geomIndex][posIndex] <= 0) return Location.EXTERIOR;\n      return Location.INTERIOR;\n    }\n\n    toString() {\n      return \"A: \" + this._depth[0][1] + \",\" + this._depth[0][2] + \" B: \" + this._depth[1][1] + \",\" + this._depth[1][2];\n    }\n\n    add() {\n      if (arguments.length === 1) {\n        let lbl = arguments[0];\n\n        for (var i = 0; i < 2; i++) {\n          for (var j = 1; j < 3; j++) {\n            var loc = lbl.getLocation(i, j);\n\n            if (loc === Location.EXTERIOR || loc === Location.INTERIOR) {\n              if (this.isNull(i, j)) {\n                this._depth[i][j] = Depth.depthAtLocation(loc);\n              } else this._depth[i][j] += Depth.depthAtLocation(loc);\n            }\n          }\n        }\n      } else if (arguments.length === 3) {\n        let geomIndex = arguments[0],\n            posIndex = arguments[1],\n            location = arguments[2];\n        if (location === Location.INTERIOR) this._depth[geomIndex][posIndex]++;\n      }\n    }\n\n    getClass() {\n      return Depth;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  Depth.constructor_ = function () {\n    this._depth = Array(2).fill().map(() => Array(3));\n\n    for (var i = 0; i < 2; i++) {\n      for (var j = 0; j < 3; j++) {\n        this._depth[i][j] = Depth.NULL_VALUE;\n      }\n    }\n  };\n\n  Depth.NULL_VALUE = -1;\n\n  class GraphComponent {\n    constructor() {\n      GraphComponent.constructor_.apply(this, arguments);\n    }\n\n    setVisited(isVisited) {\n      this._isVisited = isVisited;\n    }\n\n    setInResult(isInResult) {\n      this._isInResult = isInResult;\n    }\n\n    isCovered() {\n      return this._isCovered;\n    }\n\n    isCoveredSet() {\n      return this._isCoveredSet;\n    }\n\n    setLabel(label) {\n      this._label = label;\n    }\n\n    getLabel() {\n      return this._label;\n    }\n\n    setCovered(isCovered) {\n      this._isCovered = isCovered;\n      this._isCoveredSet = true;\n    }\n\n    updateIM(im) {\n      Assert.isTrue(this._label.getGeometryCount() >= 2, \"found partial label\");\n      this.computeIM(im);\n    }\n\n    isInResult() {\n      return this._isInResult;\n    }\n\n    isVisited() {\n      return this._isVisited;\n    }\n\n    getClass() {\n      return GraphComponent;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  GraphComponent.constructor_ = function () {\n    this._label = null;\n    this._isInResult = false;\n    this._isCovered = false;\n    this._isCoveredSet = false;\n    this._isVisited = false;\n\n    if (arguments.length === 0) ; else if (arguments.length === 1) {\n      let label = arguments[0];\n      this._label = label;\n    }\n  };\n\n  class Edge extends GraphComponent {\n    constructor() {\n      super();\n      Edge.constructor_.apply(this, arguments);\n    }\n\n    static updateIM() {\n      if (arguments.length === 2 && arguments[1] instanceof IntersectionMatrix && arguments[0] instanceof Label) {\n        let label = arguments[0],\n            im = arguments[1];\n        im.setAtLeastIfValid(label.getLocation(0, Position.ON), label.getLocation(1, Position.ON), 1);\n\n        if (label.isArea()) {\n          im.setAtLeastIfValid(label.getLocation(0, Position.LEFT), label.getLocation(1, Position.LEFT), 2);\n          im.setAtLeastIfValid(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), 2);\n        }\n      } else return super.updateIM.apply(this, arguments);\n    }\n\n    getDepth() {\n      return this._depth;\n    }\n\n    getCollapsedEdge() {\n      var newPts = new Array(2).fill(null);\n      newPts[0] = this.pts[0];\n      newPts[1] = this.pts[1];\n      var newe = new Edge(newPts, Label.toLineLabel(this._label));\n      return newe;\n    }\n\n    isIsolated() {\n      return this._isIsolated;\n    }\n\n    getCoordinates() {\n      return this.pts;\n    }\n\n    setIsolated(isIsolated) {\n      this._isIsolated = isIsolated;\n    }\n\n    setName(name) {\n      this._name = name;\n    }\n\n    equals(o) {\n      if (!(o instanceof Edge)) return false;\n      var e = o;\n      if (this.pts.length !== e.pts.length) return false;\n      var isEqualForward = true;\n      var isEqualReverse = true;\n      var iRev = this.pts.length;\n\n      for (var i = 0; i < this.pts.length; i++) {\n        if (!this.pts[i].equals2D(e.pts[i])) {\n          isEqualForward = false;\n        }\n\n        if (!this.pts[i].equals2D(e.pts[--iRev])) {\n          isEqualReverse = false;\n        }\n\n        if (!isEqualForward && !isEqualReverse) return false;\n      }\n\n      return true;\n    }\n\n    getCoordinate() {\n      if (arguments.length === 0) {\n        if (this.pts.length > 0) return this.pts[0];\n        return null;\n      } else if (arguments.length === 1) {\n        let i = arguments[0];\n        return this.pts[i];\n      }\n    }\n\n    print(out) {\n      out.print(\"edge \" + this._name + \": \");\n      out.print(\"LINESTRING (\");\n\n      for (var i = 0; i < this.pts.length; i++) {\n        if (i > 0) out.print(\",\");\n        out.print(this.pts[i].x + \" \" + this.pts[i].y);\n      }\n\n      out.print(\")  \" + this._label + \" \" + this._depthDelta);\n    }\n\n    computeIM(im) {\n      Edge.updateIM(this._label, im);\n    }\n\n    isCollapsed() {\n      if (!this._label.isArea()) return false;\n      if (this.pts.length !== 3) return false;\n      if (this.pts[0].equals(this.pts[2])) return true;\n      return false;\n    }\n\n    isClosed() {\n      return this.pts[0].equals(this.pts[this.pts.length - 1]);\n    }\n\n    getMaximumSegmentIndex() {\n      return this.pts.length - 1;\n    }\n\n    getDepthDelta() {\n      return this._depthDelta;\n    }\n\n    getNumPoints() {\n      return this.pts.length;\n    }\n\n    printReverse(out) {\n      out.print(\"edge \" + this._name + \": \");\n\n      for (var i = this.pts.length - 1; i >= 0; i--) {\n        out.print(this.pts[i] + \" \");\n      }\n\n      out.println(\"\");\n    }\n\n    getMonotoneChainEdge() {\n      if (this._mce === null) this._mce = new MonotoneChainEdge(this);\n      return this._mce;\n    }\n\n    getEnvelope() {\n      if (this._env === null) {\n        this._env = new Envelope();\n\n        for (var i = 0; i < this.pts.length; i++) {\n          this._env.expandToInclude(this.pts[i]);\n        }\n      }\n\n      return this._env;\n    }\n\n    addIntersection(li, segmentIndex, geomIndex, intIndex) {\n      var intPt = new Coordinate(li.getIntersection(intIndex));\n      var normalizedSegmentIndex = segmentIndex;\n      var dist = li.getEdgeDistance(geomIndex, intIndex);\n      var nextSegIndex = normalizedSegmentIndex + 1;\n\n      if (nextSegIndex < this.pts.length) {\n        var nextPt = this.pts[nextSegIndex];\n\n        if (intPt.equals2D(nextPt)) {\n          normalizedSegmentIndex = nextSegIndex;\n          dist = 0.0;\n        }\n      }\n\n      var ei = this.eiList.add(intPt, normalizedSegmentIndex, dist);\n    }\n\n    toString() {\n      var builder = new StringBuilder();\n      builder.append(\"edge \" + this._name + \": \");\n      builder.append(\"LINESTRING (\");\n\n      for (var i = 0; i < this.pts.length; i++) {\n        if (i > 0) builder.append(\",\");\n        builder.append(this.pts[i].x + \" \" + this.pts[i].y);\n      }\n\n      builder.append(\")  \" + this._label + \" \" + this._depthDelta);\n      return builder.toString();\n    }\n\n    isPointwiseEqual(e) {\n      if (this.pts.length !== e.pts.length) return false;\n\n      for (var i = 0; i < this.pts.length; i++) {\n        if (!this.pts[i].equals2D(e.pts[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    setDepthDelta(depthDelta) {\n      this._depthDelta = depthDelta;\n    }\n\n    getEdgeIntersectionList() {\n      return this.eiList;\n    }\n\n    addIntersections(li, segmentIndex, geomIndex) {\n      for (var i = 0; i < li.getIntersectionNum(); i++) {\n        this.addIntersection(li, segmentIndex, geomIndex, i);\n      }\n    }\n\n    getClass() {\n      return Edge;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  Edge.constructor_ = function () {\n    this.pts = null;\n    this._env = null;\n    this.eiList = new EdgeIntersectionList(this);\n    this._name = null;\n    this._mce = null;\n    this._isIsolated = true;\n    this._depth = new Depth();\n    this._depthDelta = 0;\n\n    if (arguments.length === 1) {\n      let pts = arguments[0];\n      Edge.constructor_.call(this, pts, null);\n    } else if (arguments.length === 2) {\n      let pts = arguments[0],\n          label = arguments[1];\n      this.pts = pts;\n      this._label = label;\n    }\n  };\n\n  class Node extends GraphComponent {\n    constructor() {\n      super();\n      Node.constructor_.apply(this, arguments);\n    }\n\n    isIncidentEdgeInResult() {\n      for (var it = this.getEdges().getEdges().iterator(); it.hasNext();) {\n        var de = it.next();\n        if (de.getEdge().isInResult()) return true;\n      }\n\n      return false;\n    }\n\n    isIsolated() {\n      return this._label.getGeometryCount() === 1;\n    }\n\n    getCoordinate() {\n      return this._coord;\n    }\n\n    print(out) {\n      out.println(\"node \" + this._coord + \" lbl: \" + this._label);\n    }\n\n    computeIM(im) {}\n\n    computeMergedLocation(label2, eltIndex) {\n      var loc = Location.NONE;\n      loc = this._label.getLocation(eltIndex);\n\n      if (!label2.isNull(eltIndex)) {\n        var nLoc = label2.getLocation(eltIndex);\n        if (loc !== Location.BOUNDARY) loc = nLoc;\n      }\n\n      return loc;\n    }\n\n    setLabel() {\n      if (arguments.length === 2 && Number.isInteger(arguments[1]) && Number.isInteger(arguments[0])) {\n        let argIndex = arguments[0],\n            onLocation = arguments[1];\n\n        if (this._label === null) {\n          this._label = new Label(argIndex, onLocation);\n        } else this._label.setLocation(argIndex, onLocation);\n      } else return super.setLabel.apply(this, arguments);\n    }\n\n    getEdges() {\n      return this._edges;\n    }\n\n    mergeLabel() {\n      if (arguments[0] instanceof Node) {\n        let n = arguments[0];\n        this.mergeLabel(n._label);\n      } else if (arguments[0] instanceof Label) {\n        let label2 = arguments[0];\n\n        for (var i = 0; i < 2; i++) {\n          var loc = this.computeMergedLocation(label2, i);\n\n          var thisLoc = this._label.getLocation(i);\n\n          if (thisLoc === Location.NONE) this._label.setLocation(i, loc);\n        }\n      }\n    }\n\n    add(e) {\n      this._edges.insert(e);\n\n      e.setNode(this);\n    }\n\n    setLabelBoundary(argIndex) {\n      if (this._label === null) return null;\n      var loc = Location.NONE;\n      if (this._label !== null) loc = this._label.getLocation(argIndex);\n      var newLoc = null;\n\n      switch (loc) {\n        case Location.BOUNDARY:\n          newLoc = Location.INTERIOR;\n          break;\n\n        case Location.INTERIOR:\n          newLoc = Location.BOUNDARY;\n          break;\n\n        default:\n          newLoc = Location.BOUNDARY;\n          break;\n      }\n\n      this._label.setLocation(argIndex, newLoc);\n    }\n\n    getClass() {\n      return Node;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  Node.constructor_ = function () {\n    this._coord = null;\n    this._edges = null;\n    let coord = arguments[0],\n        edges = arguments[1];\n    this._coord = coord;\n    this._edges = edges;\n    this._label = new Label(0, Location.NONE);\n  };\n\n  class NodeMap {\n    constructor() {\n      NodeMap.constructor_.apply(this, arguments);\n    }\n\n    find(coord) {\n      return this.nodeMap.get(coord);\n    }\n\n    addNode() {\n      if (arguments[0] instanceof Coordinate) {\n        let coord = arguments[0];\n        var node = this.nodeMap.get(coord);\n\n        if (node === null) {\n          node = this.nodeFact.createNode(coord);\n          this.nodeMap.put(coord, node);\n        }\n\n        return node;\n      } else if (arguments[0] instanceof Node) {\n        let n = arguments[0];\n        var node = this.nodeMap.get(n.getCoordinate());\n\n        if (node === null) {\n          this.nodeMap.put(n.getCoordinate(), n);\n          return n;\n        }\n\n        node.mergeLabel(n);\n        return node;\n      }\n    }\n\n    print(out) {\n      for (var it = this.iterator(); it.hasNext();) {\n        var n = it.next();\n        n.print(out);\n      }\n    }\n\n    iterator() {\n      return this.nodeMap.values().iterator();\n    }\n\n    values() {\n      return this.nodeMap.values();\n    }\n\n    getBoundaryNodes(geomIndex) {\n      var bdyNodes = new ArrayList();\n\n      for (var i = this.iterator(); i.hasNext();) {\n        var node = i.next();\n        if (node.getLabel().getLocation(geomIndex) === Location.BOUNDARY) bdyNodes.add(node);\n      }\n\n      return bdyNodes;\n    }\n\n    add(e) {\n      var p = e.getCoordinate();\n      var n = this.addNode(p);\n      n.add(e);\n    }\n\n    getClass() {\n      return NodeMap;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  NodeMap.constructor_ = function () {\n    this.nodeMap = new TreeMap();\n    this.nodeFact = null;\n    let nodeFact = arguments[0];\n    this.nodeFact = nodeFact;\n  };\n\n  class EdgeEnd {\n    constructor() {\n      EdgeEnd.constructor_.apply(this, arguments);\n    }\n\n    compareDirection(e) {\n      if (this._dx === e._dx && this._dy === e._dy) return 0;\n      if (this._quadrant > e._quadrant) return 1;\n      if (this._quadrant < e._quadrant) return -1;\n      return Orientation.index(e._p0, e._p1, this._p1);\n    }\n\n    getDy() {\n      return this._dy;\n    }\n\n    getCoordinate() {\n      return this._p0;\n    }\n\n    setNode(node) {\n      this._node = node;\n    }\n\n    print(out) {\n      var angle = Math.atan2(this._dy, this._dx);\n      var className = this.getClass().getName();\n      var lastDotPos = className.lastIndexOf('.');\n      var name = className.substring(lastDotPos + 1);\n      out.print(\"  \" + name + \": \" + this._p0 + \" - \" + this._p1 + \" \" + this._quadrant + \":\" + angle + \"   \" + this._label);\n    }\n\n    compareTo(obj) {\n      var e = obj;\n      return this.compareDirection(e);\n    }\n\n    getDirectedCoordinate() {\n      return this._p1;\n    }\n\n    getDx() {\n      return this._dx;\n    }\n\n    getLabel() {\n      return this._label;\n    }\n\n    getEdge() {\n      return this._edge;\n    }\n\n    getQuadrant() {\n      return this._quadrant;\n    }\n\n    getNode() {\n      return this._node;\n    }\n\n    toString() {\n      var angle = Math.atan2(this._dy, this._dx);\n      var className = this.getClass().getName();\n      var lastDotPos = className.lastIndexOf('.');\n      var name = className.substring(lastDotPos + 1);\n      return \"  \" + name + \": \" + this._p0 + \" - \" + this._p1 + \" \" + this._quadrant + \":\" + angle + \"   \" + this._label;\n    }\n\n    computeLabel(boundaryNodeRule) {}\n\n    init(p0, p1) {\n      this._p0 = p0;\n      this._p1 = p1;\n      this._dx = p1.x - p0.x;\n      this._dy = p1.y - p0.y;\n      this._quadrant = Quadrant.quadrant(this._dx, this._dy);\n      Assert.isTrue(!(this._dx === 0 && this._dy === 0), \"EdgeEnd with identical endpoints found\");\n    }\n\n    getClass() {\n      return EdgeEnd;\n    }\n\n    get interfaces_() {\n      return [Comparable];\n    }\n\n  }\n\n  EdgeEnd.constructor_ = function () {\n    this._edge = null;\n    this._label = null;\n    this._node = null;\n    this._p0 = null;\n    this._p1 = null;\n    this._dx = null;\n    this._dy = null;\n    this._quadrant = null;\n\n    if (arguments.length === 1) {\n      let edge = arguments[0];\n      this._edge = edge;\n    } else if (arguments.length === 3) {\n      let edge = arguments[0],\n          p0 = arguments[1],\n          p1 = arguments[2];\n      EdgeEnd.constructor_.call(this, edge, p0, p1, null);\n    } else if (arguments.length === 4) {\n      let edge = arguments[0],\n          p0 = arguments[1],\n          p1 = arguments[2],\n          label = arguments[3];\n      EdgeEnd.constructor_.call(this, edge);\n      this.init(p0, p1);\n      this._label = label;\n    }\n  };\n\n  class TopologyException extends RuntimeException {\n    constructor() {\n      if (arguments.length === 1) {\n        let msg = arguments[0];\n        super(msg);\n        RuntimeException.call(this, msg);\n      } else if (arguments.length === 2) {\n        let msg = arguments[0],\n            pt = arguments[1];\n        super(TopologyException.msgWithCoord(msg, pt));\n        this.name = 'TopologyException';\n        this.pt = new Coordinate(pt);\n      }\n    }\n\n    getCoordinate() {\n      return this.pt;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n    getClass() {\n      return TopologyException;\n    }\n\n    static msgWithCoord(msg, pt) {\n      if (pt !== null) return msg + \" [ \" + pt + \" ]\";\n      return msg;\n    }\n\n  }\n\n  class DirectedEdge extends EdgeEnd {\n    constructor() {\n      super();\n      DirectedEdge.constructor_.apply(this, arguments);\n    }\n\n    static depthFactor(currLocation, nextLocation) {\n      if (currLocation === Location.EXTERIOR && nextLocation === Location.INTERIOR) return 1;else if (currLocation === Location.INTERIOR && nextLocation === Location.EXTERIOR) return -1;\n      return 0;\n    }\n\n    getNextMin() {\n      return this._nextMin;\n    }\n\n    getDepth(position) {\n      return this._depth[position];\n    }\n\n    setVisited(isVisited) {\n      this._isVisited = isVisited;\n    }\n\n    computeDirectedLabel() {\n      this._label = new Label(this._edge.getLabel());\n      if (!this._isForward) this._label.flip();\n    }\n\n    getNext() {\n      return this._next;\n    }\n\n    setDepth(position, depthVal) {\n      if (this._depth[position] !== -999) {\n        if (this._depth[position] !== depthVal) throw new TopologyException(\"assigned depths do not match\", this.getCoordinate());\n      }\n\n      this._depth[position] = depthVal;\n    }\n\n    isInteriorAreaEdge() {\n      var isInteriorAreaEdge = true;\n\n      for (var i = 0; i < 2; i++) {\n        if (!(this._label.isArea(i) && this._label.getLocation(i, Position.LEFT) === Location.INTERIOR && this._label.getLocation(i, Position.RIGHT) === Location.INTERIOR)) {\n          isInteriorAreaEdge = false;\n        }\n      }\n\n      return isInteriorAreaEdge;\n    }\n\n    setNextMin(nextMin) {\n      this._nextMin = nextMin;\n    }\n\n    print(out) {\n      super.print.call(this, out);\n      out.print(\" \" + this._depth[Position.LEFT] + \"/\" + this._depth[Position.RIGHT]);\n      out.print(\" (\" + this.getDepthDelta() + \")\");\n      if (this._isInResult) out.print(\" inResult\");\n    }\n\n    setMinEdgeRing(minEdgeRing) {\n      this._minEdgeRing = minEdgeRing;\n    }\n\n    isLineEdge() {\n      var isLine = this._label.isLine(0) || this._label.isLine(1);\n\n      var isExteriorIfArea0 = !this._label.isArea(0) || this._label.allPositionsEqual(0, Location.EXTERIOR);\n\n      var isExteriorIfArea1 = !this._label.isArea(1) || this._label.allPositionsEqual(1, Location.EXTERIOR);\n\n      return isLine && isExteriorIfArea0 && isExteriorIfArea1;\n    }\n\n    setEdgeRing(edgeRing) {\n      this._edgeRing = edgeRing;\n    }\n\n    getMinEdgeRing() {\n      return this._minEdgeRing;\n    }\n\n    getDepthDelta() {\n      var depthDelta = this._edge.getDepthDelta();\n\n      if (!this._isForward) depthDelta = -depthDelta;\n      return depthDelta;\n    }\n\n    setInResult(isInResult) {\n      this._isInResult = isInResult;\n    }\n\n    getSym() {\n      return this._sym;\n    }\n\n    isForward() {\n      return this._isForward;\n    }\n\n    getEdge() {\n      return this._edge;\n    }\n\n    printEdge(out) {\n      this.print(out);\n      out.print(\" \");\n      if (this._isForward) this._edge.print(out);else this._edge.printReverse(out);\n    }\n\n    setSym(de) {\n      this._sym = de;\n    }\n\n    setVisitedEdge(isVisited) {\n      this.setVisited(isVisited);\n\n      this._sym.setVisited(isVisited);\n    }\n\n    setEdgeDepths(position, depth) {\n      var depthDelta = this.getEdge().getDepthDelta();\n      if (!this._isForward) depthDelta = -depthDelta;\n      var directionFactor = 1;\n      if (position === Position.LEFT) directionFactor = -1;\n      var oppositePos = Position.opposite(position);\n      var delta = depthDelta * directionFactor;\n      var oppositeDepth = depth + delta;\n      this.setDepth(position, depth);\n      this.setDepth(oppositePos, oppositeDepth);\n    }\n\n    getEdgeRing() {\n      return this._edgeRing;\n    }\n\n    isInResult() {\n      return this._isInResult;\n    }\n\n    setNext(next) {\n      this._next = next;\n    }\n\n    isVisited() {\n      return this._isVisited;\n    }\n\n    getClass() {\n      return DirectedEdge;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  DirectedEdge.constructor_ = function () {\n    this._isForward = null;\n    this._isInResult = false;\n    this._isVisited = false;\n    this._sym = null;\n    this._next = null;\n    this._nextMin = null;\n    this._edgeRing = null;\n    this._minEdgeRing = null;\n    this._depth = [0, -999, -999];\n    let edge = arguments[0],\n        isForward = arguments[1];\n    EdgeEnd.constructor_.call(this, edge);\n    this._isForward = isForward;\n\n    if (isForward) {\n      this.init(edge.getCoordinate(0), edge.getCoordinate(1));\n    } else {\n      var n = edge.getNumPoints() - 1;\n      this.init(edge.getCoordinate(n), edge.getCoordinate(n - 1));\n    }\n\n    this.computeDirectedLabel();\n  };\n\n  class NodeFactory {\n    constructor() {\n      NodeFactory.constructor_.apply(this, arguments);\n    }\n\n    createNode(coord) {\n      return new Node(coord, null);\n    }\n\n    getClass() {\n      return NodeFactory;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  NodeFactory.constructor_ = function () {};\n\n  class PlanarGraph {\n    constructor() {\n      PlanarGraph.constructor_.apply(this, arguments);\n    }\n\n    static linkResultDirectedEdges(nodes) {\n      for (var nodeit = nodes.iterator(); nodeit.hasNext();) {\n        var node = nodeit.next();\n        node.getEdges().linkResultDirectedEdges();\n      }\n    }\n\n    printEdges(out) {\n      out.println(\"Edges:\");\n\n      for (var i = 0; i < this._edges.size(); i++) {\n        out.println(\"edge \" + i + \":\");\n\n        var e = this._edges.get(i);\n\n        e.print(out);\n        e.eiList.print(out);\n      }\n    }\n\n    find(coord) {\n      return this._nodes.find(coord);\n    }\n\n    addNode() {\n      if (arguments[0] instanceof Node) {\n        let node = arguments[0];\n        return this._nodes.addNode(node);\n      } else if (arguments[0] instanceof Coordinate) {\n        let coord = arguments[0];\n        return this._nodes.addNode(coord);\n      }\n    }\n\n    getNodeIterator() {\n      return this._nodes.iterator();\n    }\n\n    linkResultDirectedEdges() {\n      for (var nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n        var node = nodeit.next();\n        node.getEdges().linkResultDirectedEdges();\n      }\n    }\n\n    debugPrintln(o) {\n      System.out.println(o);\n    }\n\n    isBoundaryNode(geomIndex, coord) {\n      var node = this._nodes.find(coord);\n\n      if (node === null) return false;\n      var label = node.getLabel();\n      if (label !== null && label.getLocation(geomIndex) === Location.BOUNDARY) return true;\n      return false;\n    }\n\n    linkAllDirectedEdges() {\n      for (var nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n        var node = nodeit.next();\n        node.getEdges().linkAllDirectedEdges();\n      }\n    }\n\n    matchInSameDirection(p0, p1, ep0, ep1) {\n      if (!p0.equals(ep0)) return false;\n      if (Orientation.index(p0, p1, ep1) === Orientation.COLLINEAR && Quadrant.quadrant(p0, p1) === Quadrant.quadrant(ep0, ep1)) return true;\n      return false;\n    }\n\n    getEdgeEnds() {\n      return this._edgeEndList;\n    }\n\n    debugPrint(o) {\n      System.out.print(o);\n    }\n\n    getEdgeIterator() {\n      return this._edges.iterator();\n    }\n\n    findEdgeInSameDirection(p0, p1) {\n      for (var i = 0; i < this._edges.size(); i++) {\n        var e = this._edges.get(i);\n\n        var eCoord = e.getCoordinates();\n        if (this.matchInSameDirection(p0, p1, eCoord[0], eCoord[1])) return e;\n        if (this.matchInSameDirection(p0, p1, eCoord[eCoord.length - 1], eCoord[eCoord.length - 2])) return e;\n      }\n\n      return null;\n    }\n\n    insertEdge(e) {\n      this._edges.add(e);\n    }\n\n    findEdgeEnd(e) {\n      for (var i = this.getEdgeEnds().iterator(); i.hasNext();) {\n        var ee = i.next();\n        if (ee.getEdge() === e) return ee;\n      }\n\n      return null;\n    }\n\n    addEdges(edgesToAdd) {\n      for (var it = edgesToAdd.iterator(); it.hasNext();) {\n        var e = it.next();\n\n        this._edges.add(e);\n\n        var de1 = new DirectedEdge(e, true);\n        var de2 = new DirectedEdge(e, false);\n        de1.setSym(de2);\n        de2.setSym(de1);\n        this.add(de1);\n        this.add(de2);\n      }\n    }\n\n    add(e) {\n      this._nodes.add(e);\n\n      this._edgeEndList.add(e);\n    }\n\n    getNodes() {\n      return this._nodes.values();\n    }\n\n    findEdge(p0, p1) {\n      for (var i = 0; i < this._edges.size(); i++) {\n        var e = this._edges.get(i);\n\n        var eCoord = e.getCoordinates();\n        if (p0.equals(eCoord[0]) && p1.equals(eCoord[1])) return e;\n      }\n\n      return null;\n    }\n\n    getClass() {\n      return PlanarGraph;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  PlanarGraph.constructor_ = function () {\n    this._edges = new ArrayList();\n    this._nodes = null;\n    this._edgeEndList = new ArrayList();\n\n    if (arguments.length === 0) {\n      this._nodes = new NodeMap(new NodeFactory());\n    } else if (arguments.length === 1) {\n      let nodeFact = arguments[0];\n      this._nodes = new NodeMap(nodeFact);\n    }\n  };\n\n  class GeometryGraph extends PlanarGraph {\n    constructor() {\n      super();\n      GeometryGraph.constructor_.apply(this, arguments);\n    }\n\n    static determineBoundary(boundaryNodeRule, boundaryCount) {\n      return boundaryNodeRule.isInBoundary(boundaryCount) ? Location.BOUNDARY : Location.INTERIOR;\n    }\n\n    insertBoundaryPoint(argIndex, coord) {\n      var n = this._nodes.addNode(coord);\n\n      var lbl = n.getLabel();\n      var boundaryCount = 1;\n      var loc = Location.NONE;\n      loc = lbl.getLocation(argIndex, Position.ON);\n      if (loc === Location.BOUNDARY) boundaryCount++;\n      var newLoc = GeometryGraph.determineBoundary(this._boundaryNodeRule, boundaryCount);\n      lbl.setLocation(argIndex, newLoc);\n    }\n\n    computeSelfNodes() {\n      if (arguments.length === 2) {\n        let li = arguments[0],\n            computeRingSelfNodes = arguments[1];\n        return this.computeSelfNodes(li, computeRingSelfNodes, false);\n      } else if (arguments.length === 3) {\n        let li = arguments[0],\n            computeRingSelfNodes = arguments[1],\n            isDoneIfProperInt = arguments[2];\n        var si = new SegmentIntersector(li, true, false);\n        si.setIsDoneIfProperInt(isDoneIfProperInt);\n        var esi = this.createEdgeSetIntersector();\n        var isRings = this._parentGeom instanceof LinearRing || this._parentGeom instanceof Polygon || this._parentGeom instanceof MultiPolygon;\n        var computeAllSegments = computeRingSelfNodes || !isRings;\n        esi.computeIntersections(this._edges, si, computeAllSegments);\n        this.addSelfIntersectionNodes(this._argIndex);\n        return si;\n      }\n    }\n\n    computeSplitEdges(edgelist) {\n      for (var i = this._edges.iterator(); i.hasNext();) {\n        var e = i.next();\n        e.eiList.addSplitEdges(edgelist);\n      }\n    }\n\n    computeEdgeIntersections(g, li, includeProper) {\n      var si = new SegmentIntersector(li, includeProper, true);\n      si.setBoundaryNodes(this.getBoundaryNodes(), g.getBoundaryNodes());\n      var esi = this.createEdgeSetIntersector();\n      esi.computeIntersections(this._edges, g._edges, si);\n      return si;\n    }\n\n    getGeometry() {\n      return this._parentGeom;\n    }\n\n    getBoundaryNodeRule() {\n      return this._boundaryNodeRule;\n    }\n\n    hasTooFewPoints() {\n      return this._hasTooFewPoints;\n    }\n\n    addPoint() {\n      if (arguments[0] instanceof Point) {\n        let p = arguments[0];\n        var coord = p.getCoordinate();\n        this.insertPoint(this._argIndex, coord, Location.INTERIOR);\n      } else if (arguments[0] instanceof Coordinate) {\n        let pt = arguments[0];\n        this.insertPoint(this._argIndex, pt, Location.INTERIOR);\n      }\n    }\n\n    addPolygon(p) {\n      this.addPolygonRing(p.getExteriorRing(), Location.EXTERIOR, Location.INTERIOR);\n\n      for (var i = 0; i < p.getNumInteriorRing(); i++) {\n        var hole = p.getInteriorRingN(i);\n        this.addPolygonRing(hole, Location.INTERIOR, Location.EXTERIOR);\n      }\n    }\n\n    addEdge(e) {\n      this.insertEdge(e);\n      var coord = e.getCoordinates();\n      this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n      this.insertPoint(this._argIndex, coord[coord.length - 1], Location.BOUNDARY);\n    }\n\n    addLineString(line) {\n      var coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n\n      if (coord.length < 2) {\n        this._hasTooFewPoints = true;\n        this._invalidPoint = coord[0];\n        return null;\n      }\n\n      var e = new Edge(coord, new Label(this._argIndex, Location.INTERIOR));\n\n      this._lineEdgeMap.put(line, e);\n\n      this.insertEdge(e);\n      Assert.isTrue(coord.length >= 2, \"found LineString with single point\");\n      this.insertBoundaryPoint(this._argIndex, coord[0]);\n      this.insertBoundaryPoint(this._argIndex, coord[coord.length - 1]);\n    }\n\n    getInvalidPoint() {\n      return this._invalidPoint;\n    }\n\n    getBoundaryPoints() {\n      var coll = this.getBoundaryNodes();\n      var pts = new Array(coll.size()).fill(null);\n      var i = 0;\n\n      for (var it = coll.iterator(); it.hasNext();) {\n        var node = it.next();\n        pts[i++] = node.getCoordinate().copy();\n      }\n\n      return pts;\n    }\n\n    getBoundaryNodes() {\n      if (this._boundaryNodes === null) this._boundaryNodes = this._nodes.getBoundaryNodes(this._argIndex);\n      return this._boundaryNodes;\n    }\n\n    addSelfIntersectionNode(argIndex, coord, loc) {\n      if (this.isBoundaryNode(argIndex, coord)) return null;\n      if (loc === Location.BOUNDARY && this._useBoundaryDeterminationRule) this.insertBoundaryPoint(argIndex, coord);else this.insertPoint(argIndex, coord, loc);\n    }\n\n    addPolygonRing(lr, cwLeft, cwRight) {\n      if (lr.isEmpty()) return null;\n      var coord = CoordinateArrays.removeRepeatedPoints(lr.getCoordinates());\n\n      if (coord.length < 4) {\n        this._hasTooFewPoints = true;\n        this._invalidPoint = coord[0];\n        return null;\n      }\n\n      var left = cwLeft;\n      var right = cwRight;\n\n      if (Orientation.isCCW(coord)) {\n        left = cwRight;\n        right = cwLeft;\n      }\n\n      var e = new Edge(coord, new Label(this._argIndex, Location.BOUNDARY, left, right));\n\n      this._lineEdgeMap.put(lr, e);\n\n      this.insertEdge(e);\n      this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n    }\n\n    insertPoint(argIndex, coord, onLocation) {\n      var n = this._nodes.addNode(coord);\n\n      var lbl = n.getLabel();\n\n      if (lbl === null) {\n        n._label = new Label(argIndex, onLocation);\n      } else lbl.setLocation(argIndex, onLocation);\n    }\n\n    createEdgeSetIntersector() {\n      return new SimpleMCSweepLineIntersector();\n    }\n\n    addSelfIntersectionNodes(argIndex) {\n      for (var i = this._edges.iterator(); i.hasNext();) {\n        var e = i.next();\n        var eLoc = e.getLabel().getLocation(argIndex);\n\n        for (var eiIt = e.eiList.iterator(); eiIt.hasNext();) {\n          var ei = eiIt.next();\n          this.addSelfIntersectionNode(argIndex, ei.coord, eLoc);\n        }\n      }\n    }\n\n    add() {\n      if (arguments.length === 1 && arguments[0] instanceof Geometry) {\n        let g = arguments[0];\n        if (g.isEmpty()) return null;\n        if (g instanceof MultiPolygon) this._useBoundaryDeterminationRule = false;\n        if (g instanceof Polygon) this.addPolygon(g);else if (g instanceof LineString) this.addLineString(g);else if (g instanceof Point) this.addPoint(g);else if (g instanceof MultiPoint) this.addCollection(g);else if (g instanceof MultiLineString) this.addCollection(g);else if (g instanceof MultiPolygon) this.addCollection(g);else if (g instanceof GeometryCollection) this.addCollection(g);else throw new UnsupportedOperationException(g.getClass().getName());\n      } else return super.add.apply(this, arguments);\n    }\n\n    addCollection(gc) {\n      for (var i = 0; i < gc.getNumGeometries(); i++) {\n        var g = gc.getGeometryN(i);\n        this.add(g);\n      }\n    }\n\n    locate(pt) {\n      if (hasInterface(this._parentGeom, Polygonal) && this._parentGeom.getNumGeometries() > 50) {\n        if (this._areaPtLocator === null) {\n          this._areaPtLocator = new IndexedPointInAreaLocator(this._parentGeom);\n        }\n\n        return this._areaPtLocator.locate(pt);\n      }\n\n      return this._ptLocator.locate(pt, this._parentGeom);\n    }\n\n    findEdge() {\n      if (arguments.length === 1 && arguments[0] instanceof LineString) {\n        let line = arguments[0];\n        return this._lineEdgeMap.get(line);\n      } else return super.findEdge.apply(this, arguments);\n    }\n\n    getClass() {\n      return GeometryGraph;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  GeometryGraph.constructor_ = function () {\n    this._parentGeom = null;\n    this._lineEdgeMap = new HashMap();\n    this._boundaryNodeRule = null;\n    this._useBoundaryDeterminationRule = true;\n    this._argIndex = null;\n    this._boundaryNodes = null;\n    this._hasTooFewPoints = false;\n    this._invalidPoint = null;\n    this._areaPtLocator = null;\n    this._ptLocator = new PointLocator();\n\n    if (arguments.length === 2) {\n      let argIndex = arguments[0],\n          parentGeom = arguments[1];\n      GeometryGraph.constructor_.call(this, argIndex, parentGeom, BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE);\n    } else if (arguments.length === 3) {\n      let argIndex = arguments[0],\n          parentGeom = arguments[1],\n          boundaryNodeRule = arguments[2];\n      this._argIndex = argIndex;\n      this._parentGeom = parentGeom;\n      this._boundaryNodeRule = boundaryNodeRule;\n\n      if (parentGeom !== null) {\n        this.add(parentGeom);\n      }\n    }\n  };\n\n\n\n  var geomgraph = /*#__PURE__*/Object.freeze({\n    GeometryGraph: GeometryGraph\n  });\n\n  class KdNodeVisitor {\n    constructor() {\n      KdNodeVisitor.constructor_.apply(this, arguments);\n    }\n\n    visit(node) {}\n\n    getClass() {\n      return KdNodeVisitor;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  KdNodeVisitor.constructor_ = function () {};\n\n  class KdNode {\n    constructor() {\n      KdNode.constructor_.apply(this, arguments);\n    }\n\n    isRepeated() {\n      return this._count > 1;\n    }\n\n    getRight() {\n      return this._right;\n    }\n\n    getCoordinate() {\n      return this._p;\n    }\n\n    setLeft(_left) {\n      this._left = _left;\n    }\n\n    getX() {\n      return this._p.x;\n    }\n\n    getData() {\n      return this._data;\n    }\n\n    getCount() {\n      return this._count;\n    }\n\n    getLeft() {\n      return this._left;\n    }\n\n    getY() {\n      return this._p.y;\n    }\n\n    increment() {\n      this._count = this._count + 1;\n    }\n\n    setRight(_right) {\n      this._right = _right;\n    }\n\n    getClass() {\n      return KdNode;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  KdNode.constructor_ = function () {\n    this._p = null;\n    this._data = null;\n    this._left = null;\n    this._right = null;\n    this._count = null;\n\n    if (arguments.length === 2) {\n      let p = arguments[0],\n          data = arguments[1];\n      this._p = new Coordinate(p);\n      this._left = null;\n      this._right = null;\n      this._count = 1;\n      this._data = data;\n    } else if (arguments.length === 3) {\n      let _x = arguments[0],\n          _y = arguments[1],\n          data = arguments[2];\n      this._p = new Coordinate(_x, _y);\n      this._left = null;\n      this._right = null;\n      this._count = 1;\n      this._data = data;\n    }\n  };\n\n  class KdTree {\n    constructor() {\n      KdTree.constructor_.apply(this, arguments);\n    }\n\n    static toCoordinates() {\n      if (arguments.length === 1) {\n        let kdnodes = arguments[0];\n        return KdTree.toCoordinates(kdnodes, false);\n      } else if (arguments.length === 2) {\n        let kdnodes = arguments[0],\n            includeRepeated = arguments[1];\n        var coord = new CoordinateList();\n\n        for (var it = kdnodes.iterator(); it.hasNext();) {\n          var node = it.next();\n          var count = includeRepeated ? node.getCount() : 1;\n\n          for (var i = 0; i < count; i++) {\n            coord.add(node.getCoordinate(), true);\n          }\n        }\n\n        return coord.toCoordinateArray();\n      }\n    }\n\n    insert() {\n      if (arguments.length === 1) {\n        let p = arguments[0];\n        return this.insert(p, null);\n      } else if (arguments.length === 2) {\n        let p = arguments[0],\n            data = arguments[1];\n\n        if (this._root === null) {\n          this._root = new KdNode(p, data);\n          return this._root;\n        }\n\n        if (this._tolerance > 0) {\n          var matchNode = this.findBestMatchNode(p);\n\n          if (matchNode !== null) {\n            matchNode.increment();\n            return matchNode;\n          }\n        }\n\n        return this.insertExact(p, data);\n      }\n    }\n\n    query() {\n      if (arguments.length === 1) {\n        let queryEnv = arguments[0];\n        var result = new ArrayList();\n        this.query(queryEnv, result);\n        return result;\n      } else if (arguments.length === 2) {\n        if (arguments[0] instanceof Envelope && hasInterface(arguments[1], List)) {\n          let queryEnv = arguments[0],\n              result = arguments[1];\n          this.queryNode(this._root, queryEnv, true, new class {\n            get interfaces_() {\n              return [KdNodeVisitor];\n            }\n\n            visit(node) {\n              result.add(node);\n            }\n\n          }());\n        } else if (arguments[0] instanceof Envelope && hasInterface(arguments[1], KdNodeVisitor)) {\n          let queryEnv = arguments[0],\n              visitor = arguments[1];\n          this.queryNode(this._root, queryEnv, true, visitor);\n        }\n      }\n    }\n\n    queryNode(currentNode, queryEnv, odd, visitor) {\n      if (currentNode === null) return null;\n      var min = null;\n      var max = null;\n      var discriminant = null;\n\n      if (odd) {\n        min = queryEnv.getMinX();\n        max = queryEnv.getMaxX();\n        discriminant = currentNode.getX();\n      } else {\n        min = queryEnv.getMinY();\n        max = queryEnv.getMaxY();\n        discriminant = currentNode.getY();\n      }\n\n      var searchLeft = min < discriminant;\n      var searchRight = discriminant <= max;\n\n      if (searchLeft) {\n        this.queryNode(currentNode.getLeft(), queryEnv, !odd, visitor);\n      }\n\n      if (queryEnv.contains(currentNode.getCoordinate())) {\n        visitor.visit(currentNode);\n      }\n\n      if (searchRight) {\n        this.queryNode(currentNode.getRight(), queryEnv, !odd, visitor);\n      }\n    }\n\n    findBestMatchNode(p) {\n      var visitor = new BestMatchVisitor(p, this._tolerance);\n      this.query(visitor.queryEnvelope(), visitor);\n      return visitor.getNode();\n    }\n\n    isEmpty() {\n      if (this._root === null) return true;\n      return false;\n    }\n\n    insertExact(p, data) {\n      var currentNode = this._root;\n      var leafNode = this._root;\n      var isOddLevel = true;\n      var isLessThan = true;\n\n      while (currentNode !== null) {\n        if (currentNode !== null) {\n          var isInTolerance = p.distance(currentNode.getCoordinate()) <= this._tolerance;\n\n          if (isInTolerance) {\n            currentNode.increment();\n            return currentNode;\n          }\n        }\n\n        if (isOddLevel) {\n          isLessThan = p.x < currentNode.getX();\n        } else {\n          isLessThan = p.y < currentNode.getY();\n        }\n\n        leafNode = currentNode;\n\n        if (isLessThan) {\n          currentNode = currentNode.getLeft();\n        } else {\n          currentNode = currentNode.getRight();\n        }\n\n        isOddLevel = !isOddLevel;\n      }\n\n      this._numberOfNodes = this._numberOfNodes + 1;\n      var node = new KdNode(p, data);\n\n      if (isLessThan) {\n        leafNode.setLeft(node);\n      } else {\n        leafNode.setRight(node);\n      }\n\n      return node;\n    }\n\n    getClass() {\n      return KdTree;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  class BestMatchVisitor {\n    constructor() {\n      BestMatchVisitor.constructor_.apply(this, arguments);\n    }\n\n    visit(node) {\n      var dist = this._p.distance(node.getCoordinate());\n\n      var isInTolerance = dist <= this._tolerance;\n      if (!isInTolerance) return null;\n      var update = false;\n      if (this._matchNode === null || dist < this._matchDist || this._matchNode !== null && dist === this._matchDist && node.getCoordinate().compareTo(this._matchNode.getCoordinate()) < 1) update = true;\n\n      if (update) {\n        this._matchNode = node;\n        this._matchDist = dist;\n      }\n    }\n\n    queryEnvelope() {\n      var queryEnv = new Envelope(this._p);\n      queryEnv.expandBy(this._tolerance);\n      return queryEnv;\n    }\n\n    getNode() {\n      return this._matchNode;\n    }\n\n    getClass() {\n      return BestMatchVisitor;\n    }\n\n    get interfaces_() {\n      return [KdNodeVisitor];\n    }\n\n  }\n\n  BestMatchVisitor.constructor_ = function () {\n    this._tolerance = null;\n    this._matchNode = null;\n    this._matchDist = 0.0;\n    this._p = null;\n    let p = arguments[0],\n        tolerance = arguments[1];\n    this._p = p;\n    this._tolerance = tolerance;\n  };\n\n  KdTree.BestMatchVisitor = BestMatchVisitor;\n\n  KdTree.constructor_ = function () {\n    this._root = null;\n    this._numberOfNodes = null;\n    this._tolerance = null;\n\n    if (arguments.length === 0) {\n      KdTree.constructor_.call(this, 0.0);\n    } else if (arguments.length === 1) {\n      let tolerance = arguments[0];\n      this._tolerance = tolerance;\n    }\n  };\n\n\n\n  var kdtree = /*#__PURE__*/Object.freeze({\n    KdTree: KdTree\n  });\n\n  class NodeBase {\n    constructor() {\n      NodeBase.constructor_.apply(this, arguments);\n    }\n\n    static getSubnodeIndex(env, centrex, centrey) {\n      var subnodeIndex = -1;\n\n      if (env.getMinX() >= centrex) {\n        if (env.getMinY() >= centrey) subnodeIndex = 3;\n        if (env.getMaxY() <= centrey) subnodeIndex = 1;\n      }\n\n      if (env.getMaxX() <= centrex) {\n        if (env.getMinY() >= centrey) subnodeIndex = 2;\n        if (env.getMaxY() <= centrey) subnodeIndex = 0;\n      }\n\n      return subnodeIndex;\n    }\n\n    hasChildren() {\n      for (var i = 0; i < 4; i++) {\n        if (this._subnode[i] !== null) return true;\n      }\n\n      return false;\n    }\n\n    isPrunable() {\n      return !(this.hasChildren() || this.hasItems());\n    }\n\n    addAllItems(resultItems) {\n      resultItems.addAll(this._items);\n\n      for (var i = 0; i < 4; i++) {\n        if (this._subnode[i] !== null) {\n          this._subnode[i].addAllItems(resultItems);\n        }\n      }\n\n      return resultItems;\n    }\n\n    getNodeCount() {\n      var subSize = 0;\n\n      for (var i = 0; i < 4; i++) {\n        if (this._subnode[i] !== null) {\n          subSize += this._subnode[i].size();\n        }\n      }\n\n      return subSize + 1;\n    }\n\n    size() {\n      var subSize = 0;\n\n      for (var i = 0; i < 4; i++) {\n        if (this._subnode[i] !== null) {\n          subSize += this._subnode[i].size();\n        }\n      }\n\n      return subSize + this._items.size();\n    }\n\n    addAllItemsFromOverlapping(searchEnv, resultItems) {\n      if (!this.isSearchMatch(searchEnv)) return null;\n      resultItems.addAll(this._items);\n\n      for (var i = 0; i < 4; i++) {\n        if (this._subnode[i] !== null) {\n          this._subnode[i].addAllItemsFromOverlapping(searchEnv, resultItems);\n        }\n      }\n    }\n\n    visitItems(searchEnv, visitor) {\n      for (var i = this._items.iterator(); i.hasNext();) {\n        visitor.visitItem(i.next());\n      }\n    }\n\n    hasItems() {\n      return !this._items.isEmpty();\n    }\n\n    remove(itemEnv, item) {\n      if (!this.isSearchMatch(itemEnv)) return false;\n      var found = false;\n\n      for (var i = 0; i < 4; i++) {\n        if (this._subnode[i] !== null) {\n          found = this._subnode[i].remove(itemEnv, item);\n\n          if (found) {\n            if (this._subnode[i].isPrunable()) this._subnode[i] = null;\n            break;\n          }\n        }\n      }\n\n      if (found) return found;\n      found = this._items.remove(item);\n      return found;\n    }\n\n    visit(searchEnv, visitor) {\n      if (!this.isSearchMatch(searchEnv)) return null;\n      this.visitItems(searchEnv, visitor);\n\n      for (var i = 0; i < 4; i++) {\n        if (this._subnode[i] !== null) {\n          this._subnode[i].visit(searchEnv, visitor);\n        }\n      }\n    }\n\n    getItems() {\n      return this._items;\n    }\n\n    depth() {\n      var maxSubDepth = 0;\n\n      for (var i = 0; i < 4; i++) {\n        if (this._subnode[i] !== null) {\n          var sqd = this._subnode[i].depth();\n\n          if (sqd > maxSubDepth) maxSubDepth = sqd;\n        }\n      }\n\n      return maxSubDepth + 1;\n    }\n\n    isEmpty() {\n      var isEmpty = true;\n      if (!this._items.isEmpty()) isEmpty = false;else {\n        for (var i = 0; i < 4; i++) {\n          if (this._subnode[i] !== null) {\n            if (!this._subnode[i].isEmpty()) {\n              isEmpty = false;\n              break;\n            }\n          }\n        }\n      }\n      return isEmpty;\n    }\n\n    add(item) {\n      this._items.add(item);\n    }\n\n    getClass() {\n      return NodeBase;\n    }\n\n    get interfaces_() {\n      return [Serializable];\n    }\n\n  }\n\n  NodeBase.constructor_ = function () {\n    this._items = new ArrayList();\n    this._subnode = new Array(4).fill(null);\n  };\n\n  function DoubleBits() {}\n\n  DoubleBits.exponent = function (d) {\n    return CVTFWD(64, d) - 1023;\n  };\n\n  DoubleBits.powerOf2 = function (exp) {\n    return Math.pow(2, exp);\n  };\n  /**\n   * Calculates the exponent of the bit-pattern for a number. Uses code from:\n   * http://www.merlyn.demon.co.uk/js-exact.htm\n   *\n   * @param {Number}\n   *          NumW 32 or 64 to denote the number of bits.\n   * @param {Number}\n   *          Qty the number to calculate the bit pattern for.\n   * @return {Number} The integer value of the exponent.\n   * @private\n   */\n\n\n  function CVTFWD(NumW, Qty) {\n    var Sign;\n    var Expo;\n    var Mant;\n    var Bin;\n    var Inf = {\n      32: {\n        d: 0x7F,\n        c: 0x80,\n        b: 0,\n        a: 0\n      },\n      64: {\n        d: 0x7FF0,\n        c: 0,\n        b: 0,\n        a: 0\n      }\n    };\n    var ExW = {\n      32: 8,\n      64: 11\n    }[NumW];\n\n    if (!Bin) {\n      Sign = Qty < 0 || 1 / Qty < 0; // OK for +-0\n\n      if (!isFinite(Qty)) {\n        Bin = Inf[NumW];\n\n        if (Sign) {\n          Bin.d += 1 << NumW / 4 - 1;\n        }\n\n        Expo = Math.pow(2, ExW) - 1;\n        Mant = 0;\n      }\n    }\n\n    if (!Bin) {\n      Expo = {\n        32: 127,\n        64: 1023\n      }[NumW];\n      Mant = Math.abs(Qty);\n\n      while (Mant >= 2) {\n        Expo++;\n        Mant /= 2;\n      }\n\n      while (Mant < 1 && Expo > 0) {\n        Expo--;\n        Mant *= 2;\n      }\n\n      if (Expo <= 0) {\n        Mant /= 2;\n      }\n\n      if (NumW === 32 && Expo > 254) {\n        Bin = {\n          d: Sign ? 0xFF : 0x7F,\n          c: 0x80,\n          b: 0,\n          a: 0\n        };\n        Expo = Math.pow(2, ExW) - 1;\n        Mant = 0;\n      }\n    }\n\n    return Expo;\n  }\n\n  class Key {\n    constructor() {\n      Key.constructor_.apply(this, arguments);\n    }\n\n    static computeQuadLevel(env) {\n      var dx = env.getWidth();\n      var dy = env.getHeight();\n      var dMax = dx > dy ? dx : dy;\n      var level = DoubleBits.exponent(dMax) + 1;\n      return level;\n    }\n\n    getLevel() {\n      return this._level;\n    }\n\n    computeKey() {\n      if (arguments.length === 1) {\n        let itemEnv = arguments[0];\n        this._level = Key.computeQuadLevel(itemEnv);\n        this._env = new Envelope();\n        this.computeKey(this._level, itemEnv);\n\n        while (!this._env.contains(itemEnv)) {\n          this._level += 1;\n          this.computeKey(this._level, itemEnv);\n        }\n      } else if (arguments.length === 2) {\n        let level = arguments[0],\n            itemEnv = arguments[1];\n        var quadSize = DoubleBits.powerOf2(level);\n        this._pt.x = Math.floor(itemEnv.getMinX() / quadSize) * quadSize;\n        this._pt.y = Math.floor(itemEnv.getMinY() / quadSize) * quadSize;\n\n        this._env.init(this._pt.x, this._pt.x + quadSize, this._pt.y, this._pt.y + quadSize);\n      }\n    }\n\n    getEnvelope() {\n      return this._env;\n    }\n\n    getCentre() {\n      return new Coordinate((this._env.getMinX() + this._env.getMaxX()) / 2, (this._env.getMinY() + this._env.getMaxY()) / 2);\n    }\n\n    getPoint() {\n      return this._pt;\n    }\n\n    getClass() {\n      return Key;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  Key.constructor_ = function () {\n    this._pt = new Coordinate();\n    this._level = 0;\n    this._env = null;\n    let itemEnv = arguments[0];\n    this.computeKey(itemEnv);\n  };\n\n  class Node$1 extends NodeBase {\n    constructor() {\n      super();\n      Node$1.constructor_.apply(this, arguments);\n    }\n\n    static createNode(env) {\n      var key = new Key(env);\n      var node = new Node$1(key.getEnvelope(), key.getLevel());\n      return node;\n    }\n\n    static createExpanded(node, addEnv) {\n      var expandEnv = new Envelope(addEnv);\n      if (node !== null) expandEnv.expandToInclude(node._env);\n      var largerNode = Node$1.createNode(expandEnv);\n      if (node !== null) largerNode.insertNode(node);\n      return largerNode;\n    }\n\n    find(searchEnv) {\n      var subnodeIndex = NodeBase.getSubnodeIndex(searchEnv, this._centrex, this._centrey);\n      if (subnodeIndex === -1) return this;\n\n      if (this._subnode[subnodeIndex] !== null) {\n        var node = this._subnode[subnodeIndex];\n        return node.find(searchEnv);\n      }\n\n      return this;\n    }\n\n    isSearchMatch(searchEnv) {\n      if (searchEnv === null) return false;\n      return this._env.intersects(searchEnv);\n    }\n\n    getSubnode(index) {\n      if (this._subnode[index] === null) {\n        this._subnode[index] = this.createSubnode(index);\n      }\n\n      return this._subnode[index];\n    }\n\n    getEnvelope() {\n      return this._env;\n    }\n\n    getNode(searchEnv) {\n      var subnodeIndex = NodeBase.getSubnodeIndex(searchEnv, this._centrex, this._centrey);\n\n      if (subnodeIndex !== -1) {\n        var node = this.getSubnode(subnodeIndex);\n        return node.getNode(searchEnv);\n      } else {\n        return this;\n      }\n    }\n\n    createSubnode(index) {\n      var minx = 0.0;\n      var maxx = 0.0;\n      var miny = 0.0;\n      var maxy = 0.0;\n\n      switch (index) {\n        case 0:\n          minx = this._env.getMinX();\n          maxx = this._centrex;\n          miny = this._env.getMinY();\n          maxy = this._centrey;\n          break;\n\n        case 1:\n          minx = this._centrex;\n          maxx = this._env.getMaxX();\n          miny = this._env.getMinY();\n          maxy = this._centrey;\n          break;\n\n        case 2:\n          minx = this._env.getMinX();\n          maxx = this._centrex;\n          miny = this._centrey;\n          maxy = this._env.getMaxY();\n          break;\n\n        case 3:\n          minx = this._centrex;\n          maxx = this._env.getMaxX();\n          miny = this._centrey;\n          maxy = this._env.getMaxY();\n          break;\n      }\n\n      var sqEnv = new Envelope(minx, maxx, miny, maxy);\n      var node = new Node$1(sqEnv, this._level - 1);\n      return node;\n    }\n\n    insertNode(node) {\n      Assert.isTrue(this._env === null || this._env.contains(node._env));\n      var index = NodeBase.getSubnodeIndex(node._env, this._centrex, this._centrey);\n\n      if (node._level === this._level - 1) {\n        this._subnode[index] = node;\n      } else {\n        var childNode = this.createSubnode(index);\n        childNode.insertNode(node);\n        this._subnode[index] = childNode;\n      }\n    }\n\n    getClass() {\n      return Node$1;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  Node$1.constructor_ = function () {\n    this._env = null;\n    this._centrex = null;\n    this._centrey = null;\n    this._level = null;\n    let env = arguments[0],\n        level = arguments[1];\n    this._env = env;\n    this._level = level;\n    this._centrex = (env.getMinX() + env.getMaxX()) / 2;\n    this._centrey = (env.getMinY() + env.getMaxY()) / 2;\n  };\n\n  class IntervalSize {\n    constructor() {\n      IntervalSize.constructor_.apply(this, arguments);\n    }\n\n    static isZeroWidth(min, max) {\n      var width = max - min;\n      if (width === 0.0) return true;\n      var maxAbs = Math.max(Math.abs(min), Math.abs(max));\n      var scaledInterval = width / maxAbs;\n      var level = DoubleBits.exponent(scaledInterval);\n      return level <= IntervalSize.MIN_BINARY_EXPONENT;\n    }\n\n    getClass() {\n      return IntervalSize;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  IntervalSize.constructor_ = function () {};\n\n  IntervalSize.MIN_BINARY_EXPONENT = -50;\n\n  class Root extends NodeBase {\n    constructor() {\n      super();\n      Root.constructor_.apply(this, arguments);\n    }\n\n    insert(itemEnv, item) {\n      var index = NodeBase.getSubnodeIndex(itemEnv, Root.origin.x, Root.origin.y);\n\n      if (index === -1) {\n        this.add(item);\n        return null;\n      }\n\n      var node = this._subnode[index];\n\n      if (node === null || !node.getEnvelope().contains(itemEnv)) {\n        var largerNode = Node$1.createExpanded(node, itemEnv);\n        this._subnode[index] = largerNode;\n      }\n\n      this.insertContained(this._subnode[index], itemEnv, item);\n    }\n\n    isSearchMatch(searchEnv) {\n      return true;\n    }\n\n    insertContained(tree, itemEnv, item) {\n      Assert.isTrue(tree.getEnvelope().contains(itemEnv));\n      var isZeroX = IntervalSize.isZeroWidth(itemEnv.getMinX(), itemEnv.getMaxX());\n      var isZeroY = IntervalSize.isZeroWidth(itemEnv.getMinY(), itemEnv.getMaxY());\n      var node = null;\n      if (isZeroX || isZeroY) node = tree.find(itemEnv);else node = tree.getNode(itemEnv);\n      node.add(item);\n    }\n\n    getClass() {\n      return Root;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  Root.constructor_ = function () {};\n\n  Root.origin = new Coordinate(0.0, 0.0);\n\n  class SpatialIndex {\n    constructor() {\n      SpatialIndex.constructor_.apply(this, arguments);\n    }\n\n    insert(itemEnv, item) {}\n\n    remove(itemEnv, item) {}\n\n    query() {\n    }\n\n    getClass() {\n      return SpatialIndex;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  SpatialIndex.constructor_ = function () {};\n\n  class Quadtree {\n    constructor() {\n      Quadtree.constructor_.apply(this, arguments);\n    }\n\n    static ensureExtent(itemEnv, minExtent) {\n      var minx = itemEnv.getMinX();\n      var maxx = itemEnv.getMaxX();\n      var miny = itemEnv.getMinY();\n      var maxy = itemEnv.getMaxY();\n      if (minx !== maxx && miny !== maxy) return itemEnv;\n\n      if (minx === maxx) {\n        minx = minx - minExtent / 2.0;\n        maxx = minx + minExtent / 2.0;\n      }\n\n      if (miny === maxy) {\n        miny = miny - minExtent / 2.0;\n        maxy = miny + minExtent / 2.0;\n      }\n\n      return new Envelope(minx, maxx, miny, maxy);\n    }\n\n    size() {\n      if (this._root !== null) return this._root.size();\n      return 0;\n    }\n\n    insert(itemEnv, item) {\n      this.collectStats(itemEnv);\n      var insertEnv = Quadtree.ensureExtent(itemEnv, this._minExtent);\n\n      this._root.insert(insertEnv, item);\n    }\n\n    query() {\n      if (arguments.length === 1) {\n        let searchEnv = arguments[0];\n        var visitor = new ArrayListVisitor();\n        this.query(searchEnv, visitor);\n        return visitor.getItems();\n      } else if (arguments.length === 2) {\n        let searchEnv = arguments[0],\n            visitor = arguments[1];\n\n        this._root.visit(searchEnv, visitor);\n      }\n    }\n\n    queryAll() {\n      var foundItems = new ArrayList();\n\n      this._root.addAllItems(foundItems);\n\n      return foundItems;\n    }\n\n    remove(itemEnv, item) {\n      var posEnv = Quadtree.ensureExtent(itemEnv, this._minExtent);\n      return this._root.remove(posEnv, item);\n    }\n\n    collectStats(itemEnv) {\n      var delX = itemEnv.getWidth();\n      if (delX < this._minExtent && delX > 0.0) this._minExtent = delX;\n      var delY = itemEnv.getHeight();\n      if (delY < this._minExtent && delY > 0.0) this._minExtent = delY;\n    }\n\n    depth() {\n      if (this._root !== null) return this._root.depth();\n      return 0;\n    }\n\n    isEmpty() {\n      if (this._root === null) return true;\n      return this._root.isEmpty();\n    }\n\n    getClass() {\n      return Quadtree;\n    }\n\n    get interfaces_() {\n      return [SpatialIndex, Serializable];\n    }\n\n  }\n\n  Quadtree.constructor_ = function () {\n    this._root = null;\n    this._minExtent = 1.0;\n    this._root = new Root();\n  };\n\n  Quadtree.serialVersionUID = -7461163625812743604;\n\n\n\n  var quadtree = /*#__PURE__*/Object.freeze({\n    Quadtree: Quadtree\n  });\n\n  class Boundable {\n    constructor() {\n      Boundable.constructor_.apply(this, arguments);\n    }\n\n    getBounds() {}\n\n    getClass() {\n      return Boundable;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  Boundable.constructor_ = function () {};\n\n  class ItemBoundable {\n    constructor() {\n      ItemBoundable.constructor_.apply(this, arguments);\n    }\n\n    getItem() {\n      return this._item;\n    }\n\n    getBounds() {\n      return this._bounds;\n    }\n\n    getClass() {\n      return ItemBoundable;\n    }\n\n    get interfaces_() {\n      return [Boundable, Serializable];\n    }\n\n  }\n\n  ItemBoundable.constructor_ = function () {\n    this._bounds = null;\n    this._item = null;\n    let bounds = arguments[0],\n        item = arguments[1];\n    this._bounds = bounds;\n    this._item = item;\n  };\n\n  class PriorityQueue {\n    constructor() {\n      PriorityQueue.constructor_.apply(this, arguments);\n    }\n\n    poll() {\n      if (this.isEmpty()) return null;\n\n      var minItem = this._items.get(1);\n\n      this._items.set(1, this._items.get(this._size));\n\n      this._size -= 1;\n      this.reorder(1);\n      return minItem;\n    }\n\n    size() {\n      return this._size;\n    }\n\n    reorder(hole) {\n      var child = null;\n\n      var tmp = this._items.get(hole);\n\n      for (; hole * 2 <= this._size; hole = child) {\n        child = hole * 2;\n        if (child !== this._size && this._items.get(child + 1).compareTo(this._items.get(child)) < 0) child++;\n        if (this._items.get(child).compareTo(tmp) < 0) this._items.set(hole, this._items.get(child));else break;\n      }\n\n      this._items.set(hole, tmp);\n    }\n\n    clear() {\n      this._size = 0;\n\n      this._items.clear();\n    }\n\n    peek() {\n      if (this.isEmpty()) return null;\n\n      var minItem = this._items.get(1);\n\n      return minItem;\n    }\n\n    isEmpty() {\n      return this._size === 0;\n    }\n\n    add(x) {\n      this._items.add(null);\n\n      this._size += 1;\n      var hole = this._size;\n\n      this._items.set(0, x);\n\n      for (; x.compareTo(this._items.get(Math.trunc(hole / 2))) < 0; hole /= 2) {\n        this._items.set(hole, this._items.get(Math.trunc(hole / 2)));\n      }\n\n      this._items.set(hole, x);\n    }\n\n    getClass() {\n      return PriorityQueue;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  PriorityQueue.constructor_ = function () {\n    this._size = null;\n    this._items = null;\n    this._size = 0;\n    this._items = new ArrayList();\n\n    this._items.add(null);\n  };\n\n  class AbstractNode {\n    constructor() {\n      AbstractNode.constructor_.apply(this, arguments);\n    }\n\n    getLevel() {\n      return this._level;\n    }\n\n    size() {\n      return this._childBoundables.size();\n    }\n\n    getChildBoundables() {\n      return this._childBoundables;\n    }\n\n    addChildBoundable(childBoundable) {\n      Assert.isTrue(this._bounds === null);\n\n      this._childBoundables.add(childBoundable);\n    }\n\n    isEmpty() {\n      return this._childBoundables.isEmpty();\n    }\n\n    getBounds() {\n      if (this._bounds === null) {\n        this._bounds = this.computeBounds();\n      }\n\n      return this._bounds;\n    }\n\n    getClass() {\n      return AbstractNode;\n    }\n\n    get interfaces_() {\n      return [Boundable, Serializable];\n    }\n\n  }\n\n  AbstractNode.constructor_ = function () {\n    this._childBoundables = new ArrayList();\n    this._bounds = null;\n    this._level = null;\n\n    if (arguments.length === 0) ; else if (arguments.length === 1) {\n      let level = arguments[0];\n      this._level = level;\n    }\n  };\n\n  AbstractNode.serialVersionUID = 6493722185909573708;\n\n  class BoundablePair {\n    constructor() {\n      BoundablePair.constructor_.apply(this, arguments);\n    }\n\n    static area(b) {\n      return b.getBounds().getArea();\n    }\n\n    static isComposite(item) {\n      return item instanceof AbstractNode;\n    }\n\n    expandToQueue(priQ, minDistance) {\n      var isComp1 = BoundablePair.isComposite(this._boundable1);\n      var isComp2 = BoundablePair.isComposite(this._boundable2);\n\n      if (isComp1 && isComp2) {\n        if (BoundablePair.area(this._boundable1) > BoundablePair.area(this._boundable2)) {\n          this.expand(this._boundable1, this._boundable2, priQ, minDistance);\n          return null;\n        } else {\n          this.expand(this._boundable2, this._boundable1, priQ, minDistance);\n          return null;\n        }\n      } else if (isComp1) {\n        this.expand(this._boundable1, this._boundable2, priQ, minDistance);\n        return null;\n      } else if (isComp2) {\n        this.expand(this._boundable2, this._boundable1, priQ, minDistance);\n        return null;\n      }\n\n      throw new IllegalArgumentException(\"neither boundable is composite\");\n    }\n\n    isLeaves() {\n      return !(BoundablePair.isComposite(this._boundable1) || BoundablePair.isComposite(this._boundable2));\n    }\n\n    compareTo(o) {\n      var nd = o;\n      if (this._distance < nd._distance) return -1;\n      if (this._distance > nd._distance) return 1;\n      return 0;\n    }\n\n    expand(bndComposite, bndOther, priQ, minDistance) {\n      var children = bndComposite.getChildBoundables();\n\n      for (var i = children.iterator(); i.hasNext();) {\n        var child = i.next();\n        var bp = new BoundablePair(child, bndOther, this._itemDistance);\n\n        if (bp.getDistance() < minDistance) {\n          priQ.add(bp);\n        }\n      }\n    }\n\n    getBoundable(i) {\n      if (i === 0) return this._boundable1;\n      return this._boundable2;\n    }\n\n    getDistance() {\n      return this._distance;\n    }\n\n    distance() {\n      if (this.isLeaves()) {\n        return this._itemDistance.distance(this._boundable1, this._boundable2);\n      }\n\n      return this._boundable1.getBounds().distance(this._boundable2.getBounds());\n    }\n\n    getClass() {\n      return BoundablePair;\n    }\n\n    get interfaces_() {\n      return [Comparable];\n    }\n\n  }\n\n  BoundablePair.constructor_ = function () {\n    this._boundable1 = null;\n    this._boundable2 = null;\n    this._distance = null;\n    this._itemDistance = null;\n    let boundable1 = arguments[0],\n        boundable2 = arguments[1],\n        itemDistance = arguments[2];\n    this._boundable1 = boundable1;\n    this._boundable2 = boundable2;\n    this._itemDistance = itemDistance;\n    this._distance = this.distance();\n  };\n\n  class AbstractSTRtree {\n    constructor() {\n      AbstractSTRtree.constructor_.apply(this, arguments);\n    }\n\n    static compareDoubles(a, b) {\n      return a > b ? 1 : a < b ? -1 : 0;\n    }\n\n    queryInternal() {\n      if (hasInterface(arguments[2], ItemVisitor) && arguments[0] instanceof Object && arguments[1] instanceof AbstractNode) {\n        let searchBounds = arguments[0],\n            node = arguments[1],\n            visitor = arguments[2];\n        var childBoundables = node.getChildBoundables();\n\n        for (var i = 0; i < childBoundables.size(); i++) {\n          var childBoundable = childBoundables.get(i);\n\n          if (!this.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds)) {\n            continue;\n          }\n\n          if (childBoundable instanceof AbstractNode) {\n            this.queryInternal(searchBounds, childBoundable, visitor);\n          } else if (childBoundable instanceof ItemBoundable) {\n            visitor.visitItem(childBoundable.getItem());\n          } else {\n            Assert.shouldNeverReachHere();\n          }\n        }\n      } else if (hasInterface(arguments[2], List) && arguments[0] instanceof Object && arguments[1] instanceof AbstractNode) {\n        let searchBounds = arguments[0],\n            node = arguments[1],\n            matches = arguments[2];\n        var childBoundables = node.getChildBoundables();\n\n        for (var i = 0; i < childBoundables.size(); i++) {\n          var childBoundable = childBoundables.get(i);\n\n          if (!this.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds)) {\n            continue;\n          }\n\n          if (childBoundable instanceof AbstractNode) {\n            this.queryInternal(searchBounds, childBoundable, matches);\n          } else if (childBoundable instanceof ItemBoundable) {\n            matches.add(childBoundable.getItem());\n          } else {\n            Assert.shouldNeverReachHere();\n          }\n        }\n      }\n    }\n\n    getNodeCapacity() {\n      return this._nodeCapacity;\n    }\n\n    lastNode(nodes) {\n      return nodes.get(nodes.size() - 1);\n    }\n\n    size() {\n      if (arguments.length === 0) {\n        if (this.isEmpty()) {\n          return 0;\n        }\n\n        this.build();\n        return this.size(this._root);\n      } else if (arguments.length === 1) {\n        let node = arguments[0];\n        var size = 0;\n\n        for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n          var childBoundable = i.next();\n\n          if (childBoundable instanceof AbstractNode) {\n            size += this.size(childBoundable);\n          } else if (childBoundable instanceof ItemBoundable) {\n            size += 1;\n          }\n        }\n\n        return size;\n      }\n    }\n\n    removeItem(node, item) {\n      var childToRemove = null;\n\n      for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n        var childBoundable = i.next();\n\n        if (childBoundable instanceof ItemBoundable) {\n          if (childBoundable.getItem() === item) childToRemove = childBoundable;\n        }\n      }\n\n      if (childToRemove !== null) {\n        node.getChildBoundables().remove(childToRemove);\n        return true;\n      }\n\n      return false;\n    }\n\n    itemsTree() {\n      if (arguments.length === 0) {\n        this.build();\n        var valuesTree = this.itemsTree(this._root);\n        if (valuesTree === null) return new ArrayList();\n        return valuesTree;\n      } else if (arguments.length === 1) {\n        let node = arguments[0];\n        var valuesTreeForNode = new ArrayList();\n\n        for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n          var childBoundable = i.next();\n\n          if (childBoundable instanceof AbstractNode) {\n            var valuesTreeForChild = this.itemsTree(childBoundable);\n            if (valuesTreeForChild !== null) valuesTreeForNode.add(valuesTreeForChild);\n          } else if (childBoundable instanceof ItemBoundable) {\n            valuesTreeForNode.add(childBoundable.getItem());\n          } else {\n            Assert.shouldNeverReachHere();\n          }\n        }\n\n        if (valuesTreeForNode.size() <= 0) return null;\n        return valuesTreeForNode;\n      }\n    }\n\n    insert(bounds, item) {\n      Assert.isTrue(!this._built, \"Cannot insert items into an STR packed R-tree after it has been built.\");\n\n      this._itemBoundables.add(new ItemBoundable(bounds, item));\n    }\n\n    boundablesAtLevel() {\n      if (arguments.length === 1) {\n        let level = arguments[0];\n        var boundables = new ArrayList();\n        this.boundablesAtLevel(level, this._root, boundables);\n        return boundables;\n      } else if (arguments.length === 3) {\n        let level = arguments[0],\n            top = arguments[1],\n            boundables = arguments[2];\n        Assert.isTrue(level > -2);\n\n        if (top.getLevel() === level) {\n          boundables.add(top);\n          return null;\n        }\n\n        for (var i = top.getChildBoundables().iterator(); i.hasNext();) {\n          var boundable = i.next();\n\n          if (boundable instanceof AbstractNode) {\n            this.boundablesAtLevel(level, boundable, boundables);\n          } else {\n            Assert.isTrue(boundable instanceof ItemBoundable);\n\n            if (level === -1) {\n              boundables.add(boundable);\n            }\n          }\n        }\n\n        return null;\n      }\n    }\n\n    query() {\n      if (arguments.length === 1) {\n        let searchBounds = arguments[0];\n        this.build();\n        var matches = new ArrayList();\n\n        if (this.isEmpty()) {\n          return matches;\n        }\n\n        if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n          this.queryInternal(searchBounds, this._root, matches);\n        }\n\n        return matches;\n      } else if (arguments.length === 2) {\n        let searchBounds = arguments[0],\n            visitor = arguments[1];\n        this.build();\n\n        if (this.isEmpty()) {\n          return null;\n        }\n\n        if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n          this.queryInternal(searchBounds, this._root, visitor);\n        }\n      }\n    }\n\n    build() {\n      if (this._built) return null;\n      this._root = this._itemBoundables.isEmpty() ? this.createNode(0) : this.createHigherLevels(this._itemBoundables, -1);\n      this._itemBoundables = null;\n      this._built = true;\n    }\n\n    getRoot() {\n      this.build();\n      return this._root;\n    }\n\n    remove() {\n      if (arguments.length === 2) {\n        let searchBounds = arguments[0],\n            item = arguments[1];\n        this.build();\n\n        if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n          return this.remove(searchBounds, this._root, item);\n        }\n\n        return false;\n      } else if (arguments.length === 3) {\n        let searchBounds = arguments[0],\n            node = arguments[1],\n            item = arguments[2];\n        var found = this.removeItem(node, item);\n        if (found) return true;\n        var childToPrune = null;\n\n        for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n          var childBoundable = i.next();\n\n          if (!this.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds)) {\n            continue;\n          }\n\n          if (childBoundable instanceof AbstractNode) {\n            found = this.remove(searchBounds, childBoundable, item);\n\n            if (found) {\n              childToPrune = childBoundable;\n              break;\n            }\n          }\n        }\n\n        if (childToPrune !== null) {\n          if (childToPrune.getChildBoundables().isEmpty()) {\n            node.getChildBoundables().remove(childToPrune);\n          }\n        }\n\n        return found;\n      }\n    }\n\n    createHigherLevels(boundablesOfALevel, level) {\n      Assert.isTrue(!boundablesOfALevel.isEmpty());\n      var parentBoundables = this.createParentBoundables(boundablesOfALevel, level + 1);\n\n      if (parentBoundables.size() === 1) {\n        return parentBoundables.get(0);\n      }\n\n      return this.createHigherLevels(parentBoundables, level + 1);\n    }\n\n    depth() {\n      if (arguments.length === 0) {\n        if (this.isEmpty()) {\n          return 0;\n        }\n\n        this.build();\n        return this.depth(this._root);\n      } else if (arguments.length === 1) {\n        let node = arguments[0];\n        var maxChildDepth = 0;\n\n        for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n          var childBoundable = i.next();\n\n          if (childBoundable instanceof AbstractNode) {\n            var childDepth = this.depth(childBoundable);\n            if (childDepth > maxChildDepth) maxChildDepth = childDepth;\n          }\n        }\n\n        return maxChildDepth + 1;\n      }\n    }\n\n    createParentBoundables(childBoundables, newLevel) {\n      Assert.isTrue(!childBoundables.isEmpty());\n      var parentBoundables = new ArrayList();\n      parentBoundables.add(this.createNode(newLevel));\n      var sortedChildBoundables = new ArrayList(childBoundables);\n      Collections.sort(sortedChildBoundables, this.getComparator());\n\n      for (var i = sortedChildBoundables.iterator(); i.hasNext();) {\n        var childBoundable = i.next();\n\n        if (this.lastNode(parentBoundables).getChildBoundables().size() === this.getNodeCapacity()) {\n          parentBoundables.add(this.createNode(newLevel));\n        }\n\n        this.lastNode(parentBoundables).addChildBoundable(childBoundable);\n      }\n\n      return parentBoundables;\n    }\n\n    isEmpty() {\n      if (!this._built) return this._itemBoundables.isEmpty();\n      return this._root.isEmpty();\n    }\n\n    getClass() {\n      return AbstractSTRtree;\n    }\n\n    get interfaces_() {\n      return [Serializable];\n    }\n\n  }\n\n  function IntersectsOp$1() {}\n\n  AbstractSTRtree.IntersectsOp = IntersectsOp$1;\n\n  AbstractSTRtree.constructor_ = function () {\n    this._root = null;\n    this._built = false;\n    this._itemBoundables = new ArrayList();\n    this._nodeCapacity = null;\n\n    if (arguments.length === 0) {\n      AbstractSTRtree.constructor_.call(this, AbstractSTRtree.DEFAULT_NODE_CAPACITY);\n    } else if (arguments.length === 1) {\n      let nodeCapacity = arguments[0];\n      Assert.isTrue(nodeCapacity > 1, \"Node capacity must be greater than 1\");\n      this._nodeCapacity = nodeCapacity;\n    }\n  };\n\n  AbstractSTRtree.serialVersionUID = -3886435814360241337;\n  AbstractSTRtree.DEFAULT_NODE_CAPACITY = 10;\n\n  class ItemDistance {\n    constructor() {\n      ItemDistance.constructor_.apply(this, arguments);\n    }\n\n    distance(item1, item2) {}\n\n    getClass() {\n      return ItemDistance;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  ItemDistance.constructor_ = function () {};\n\n  class STRtree extends AbstractSTRtree {\n    constructor() {\n      super();\n      STRtree.constructor_.apply(this, arguments);\n    }\n\n    static centreX(e) {\n      return STRtree.avg(e.getMinX(), e.getMaxX());\n    }\n\n    static avg(a, b) {\n      return (a + b) / 2;\n    }\n\n    static getItems(kNearestNeighbors) {\n      var items = new Array(kNearestNeighbors.size()).fill(null);\n      var count = 0;\n\n      while (!kNearestNeighbors.isEmpty()) {\n        var bp = kNearestNeighbors.poll();\n        items[count] = bp.getBoundable(0).getItem();\n        count++;\n      }\n\n      return items;\n    }\n\n    static centreY(e) {\n      return STRtree.avg(e.getMinY(), e.getMaxY());\n    }\n\n    createParentBoundablesFromVerticalSlices(verticalSlices, newLevel) {\n      Assert.isTrue(verticalSlices.length > 0);\n      var parentBoundables = new ArrayList();\n\n      for (var i = 0; i < verticalSlices.length; i++) {\n        parentBoundables.addAll(this.createParentBoundablesFromVerticalSlice(verticalSlices[i], newLevel));\n      }\n\n      return parentBoundables;\n    }\n\n    createNode(level) {\n      return new STRtreeNode(level);\n    }\n\n    size() {\n      if (arguments.length === 0) {\n        return super.size.call(this);\n      } else return super.size.apply(this, arguments);\n    }\n\n    insert() {\n      if (arguments.length === 2 && arguments[1] instanceof Object && arguments[0] instanceof Envelope) {\n        let itemEnv = arguments[0],\n            item = arguments[1];\n\n        if (itemEnv.isNull()) {\n          return null;\n        }\n\n        super.insert.call(this, itemEnv, item);\n      } else return super.insert.apply(this, arguments);\n    }\n\n    getIntersectsOp() {\n      return STRtree.intersectsOp;\n    }\n\n    verticalSlices(childBoundables, sliceCount) {\n      var sliceCapacity = Math.trunc(Math.ceil(childBoundables.size() / sliceCount));\n      var slices = new Array(sliceCount).fill(null);\n      var i = childBoundables.iterator();\n\n      for (var j = 0; j < sliceCount; j++) {\n        slices[j] = new ArrayList();\n        var boundablesAddedToSlice = 0;\n\n        while (i.hasNext() && boundablesAddedToSlice < sliceCapacity) {\n          var childBoundable = i.next();\n          slices[j].add(childBoundable);\n          boundablesAddedToSlice++;\n        }\n      }\n\n      return slices;\n    }\n\n    query() {\n      if (arguments.length === 1) {\n        let searchEnv = arguments[0];\n        return super.query.call(this, searchEnv);\n      } else if (arguments.length === 2) {\n        let searchEnv = arguments[0],\n            visitor = arguments[1];\n        super.query.call(this, searchEnv, visitor);\n      }\n    }\n\n    getComparator() {\n      return STRtree.yComparator;\n    }\n\n    createParentBoundablesFromVerticalSlice(childBoundables, newLevel) {\n      return super.createParentBoundables.call(this, childBoundables, newLevel);\n    }\n\n    remove() {\n      if (arguments.length === 2 && arguments[1] instanceof Object && arguments[0] instanceof Envelope) {\n        let itemEnv = arguments[0],\n            item = arguments[1];\n        return super.remove.call(this, itemEnv, item);\n      } else return super.remove.apply(this, arguments);\n    }\n\n    depth() {\n      if (arguments.length === 0) {\n        return super.depth.call(this);\n      } else return super.depth.apply(this, arguments);\n    }\n\n    createParentBoundables(childBoundables, newLevel) {\n      Assert.isTrue(!childBoundables.isEmpty());\n      var minLeafCount = Math.trunc(Math.ceil(childBoundables.size() / this.getNodeCapacity()));\n      var sortedChildBoundables = new ArrayList(childBoundables);\n      Collections.sort(sortedChildBoundables, STRtree.xComparator);\n      var verticalSlices = this.verticalSlices(sortedChildBoundables, Math.trunc(Math.ceil(Math.sqrt(minLeafCount))));\n      return this.createParentBoundablesFromVerticalSlices(verticalSlices, newLevel);\n    }\n\n    nearestNeighbour() {\n      if (arguments.length === 1) {\n        if (hasInterface(arguments[0], ItemDistance)) {\n          let itemDist = arguments[0];\n          var bp = new BoundablePair(this.getRoot(), this.getRoot(), itemDist);\n          return this.nearestNeighbour(bp);\n        } else if (arguments[0] instanceof BoundablePair) {\n          let initBndPair = arguments[0];\n          return this.nearestNeighbour(initBndPair, Double.POSITIVE_INFINITY);\n        }\n      } else if (arguments.length === 2) {\n        if (arguments[0] instanceof STRtree && hasInterface(arguments[1], ItemDistance)) {\n          let tree = arguments[0],\n              itemDist = arguments[1];\n          var bp = new BoundablePair(this.getRoot(), tree.getRoot(), itemDist);\n          return this.nearestNeighbour(bp);\n        } else if (arguments[0] instanceof BoundablePair && typeof arguments[1] === \"number\") {\n          let initBndPair = arguments[0],\n              maxDistance = arguments[1];\n          var distanceLowerBound = maxDistance;\n          var minPair = null;\n          var priQ = new PriorityQueue();\n          priQ.add(initBndPair);\n\n          while (!priQ.isEmpty() && distanceLowerBound > 0.0) {\n            var bndPair = priQ.poll();\n            var currentDistance = bndPair.getDistance();\n            if (currentDistance >= distanceLowerBound) break;\n\n            if (bndPair.isLeaves()) {\n              distanceLowerBound = currentDistance;\n              minPair = bndPair;\n            } else {\n              bndPair.expandToQueue(priQ, distanceLowerBound);\n            }\n          }\n\n          return [minPair.getBoundable(0).getItem(), minPair.getBoundable(1).getItem()];\n        } else if (arguments[0] instanceof BoundablePair && Number.isInteger(arguments[1])) {\n          let initBndPair = arguments[0],\n              k = arguments[1];\n          return this.nearestNeighbour(initBndPair, Double.POSITIVE_INFINITY, k);\n        }\n      } else if (arguments.length === 3) {\n        if (hasInterface(arguments[2], ItemDistance) && arguments[0] instanceof Envelope && arguments[1] instanceof Object) {\n          let env = arguments[0],\n              item = arguments[1],\n              itemDist = arguments[2];\n          var bnd = new ItemBoundable(env, item);\n          var bp = new BoundablePair(this.getRoot(), bnd, itemDist);\n          return this.nearestNeighbour(bp)[0];\n        } else if (Number.isInteger(arguments[2]) && arguments[0] instanceof BoundablePair && typeof arguments[1] === \"number\") {\n          let initBndPair = arguments[0],\n              maxDistance = arguments[1],\n              k = arguments[2];\n          var distanceLowerBound = maxDistance;\n          var priQ = new PriorityQueue();\n          priQ.add(initBndPair);\n          var kNearestNeighbors = new PriorityQueue();\n\n          while (!priQ.isEmpty() && distanceLowerBound >= 0.0) {\n            var bndPair = priQ.poll();\n            var currentDistance = bndPair.getDistance();\n\n            if (currentDistance >= distanceLowerBound) {\n              break;\n            }\n\n            if (bndPair.isLeaves()) {\n              if (kNearestNeighbors.size() < k) {\n                kNearestNeighbors.add(bndPair);\n              } else {\n                var bp1 = kNearestNeighbors.peek();\n\n                if (bp1.getDistance() > currentDistance) {\n                  kNearestNeighbors.poll();\n                  kNearestNeighbors.add(bndPair);\n                }\n\n                var bp2 = kNearestNeighbors.peek();\n                distanceLowerBound = bp2.getDistance();\n              }\n            } else {\n              bndPair.expandToQueue(priQ, distanceLowerBound);\n            }\n          }\n\n          return STRtree.getItems(kNearestNeighbors);\n        }\n      } else if (arguments.length === 4) {\n        let env = arguments[0],\n            item = arguments[1],\n            itemDist = arguments[2],\n            k = arguments[3];\n        var bnd = new ItemBoundable(env, item);\n        var bp = new BoundablePair(this.getRoot(), bnd, itemDist);\n        return this.nearestNeighbour(bp, k);\n      }\n    }\n\n    getClass() {\n      return STRtree;\n    }\n\n    get interfaces_() {\n      return [SpatialIndex, Serializable];\n    }\n\n  }\n\n  class STRtreeNode extends AbstractNode {\n    constructor() {\n      super();\n      STRtreeNode.constructor_.apply(this, arguments);\n    }\n\n    computeBounds() {\n      var bounds = null;\n\n      for (var i = this.getChildBoundables().iterator(); i.hasNext();) {\n        var childBoundable = i.next();\n\n        if (bounds === null) {\n          bounds = new Envelope(childBoundable.getBounds());\n        } else {\n          bounds.expandToInclude(childBoundable.getBounds());\n        }\n      }\n\n      return bounds;\n    }\n\n    getClass() {\n      return STRtreeNode;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  STRtreeNode.constructor_ = function () {\n    let level = arguments[0];\n    AbstractNode.constructor_.call(this, level);\n  };\n\n  STRtree.STRtreeNode = STRtreeNode;\n\n  STRtree.constructor_ = function () {\n    if (arguments.length === 0) {\n      STRtree.constructor_.call(this, STRtree.DEFAULT_NODE_CAPACITY);\n    } else if (arguments.length === 1) {\n      let nodeCapacity = arguments[0];\n      AbstractSTRtree.constructor_.call(this, nodeCapacity);\n    }\n  };\n\n  STRtree.serialVersionUID = 259274702368956900;\n  STRtree.xComparator = new class {\n    get interfaces_() {\n      return [Comparator];\n    }\n\n    compare(o1, o2) {\n      return AbstractSTRtree.compareDoubles(STRtree.centreX(o1.getBounds()), STRtree.centreX(o2.getBounds()));\n    }\n\n  }();\n  STRtree.yComparator = new class {\n    get interfaces_() {\n      return [Comparator];\n    }\n\n    compare(o1, o2) {\n      return AbstractSTRtree.compareDoubles(STRtree.centreY(o1.getBounds()), STRtree.centreY(o2.getBounds()));\n    }\n\n  }();\n  STRtree.intersectsOp = new class {\n    get interfaces_() {\n      return [IntersectsOp];\n    }\n\n    intersects(aBounds, bBounds) {\n      return aBounds.intersects(bBounds);\n    }\n\n  }();\n  STRtree.DEFAULT_NODE_CAPACITY = 10;\n\n\n\n  var strtree = /*#__PURE__*/Object.freeze({\n    STRtree: STRtree\n  });\n\n\n\n  var index = /*#__PURE__*/Object.freeze({\n    kdtree: kdtree,\n    quadtree: quadtree,\n    strtree: strtree\n  });\n\n  const geometryTypes = ['Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon'];\n  /**\n   * Class for reading and writing Well-Known Text.Create a new parser for GeoJSON\n   * NOTE: Adapted from OpenLayers 2.11 implementation.\n   */\n\n  /**\n   * Create a new parser for GeoJSON\n   *\n   * @param {GeometryFactory} geometryFactory\n   * @return An instance of GeoJsonParser.\n   * @constructor\n   * @private\n   */\n\n  class GeoJSONParser {\n    constructor(geometryFactory) {\n      this.geometryFactory = geometryFactory || new GeometryFactory();\n    }\n    /**\n     * Deserialize a GeoJSON object and return the Geometry or Feature(Collection) with JSTS Geometries\n     *\n     * @param {}\n     *          A GeoJSON object.\n     * @return {} A Geometry instance or object representing a Feature(Collection) with Geometry instances.\n     * @private\n     */\n\n\n    read(json) {\n      let obj;\n      if (typeof json === 'string') obj = JSON.parse(json);else obj = json;\n      const type = obj.type;\n      if (!parse$1[type]) throw new Error('Unknown GeoJSON type: ' + obj.type);\n      if (geometryTypes.indexOf(type) !== -1) return parse$1[type].call(this, obj.coordinates);else if (type === 'GeometryCollection') return parse$1[type].call(this, obj.geometries); // feature or feature collection\n\n      return parse$1[type].call(this, obj);\n    }\n    /**\n     * Serialize a Geometry object into GeoJSON\n     *\n     * @param {Geometry}\n     *          geometry A Geometry or array of Geometries.\n     * @return {Object} A GeoJSON object represting the input Geometry/Geometries.\n     * @private\n     */\n\n\n    write(geometry) {\n      const type = geometry.getGeometryType();\n      if (!extract$1[type]) throw new Error('Geometry is not supported');\n      return extract$1[type].call(this, geometry);\n    }\n\n  }\n  const parse$1 = {\n    /**\n     * Parse a GeoJSON Feature object\n     *\n     * @param {Object}\n     *          obj Object to parse.\n     *\n     * @return {Object} Feature with geometry/bbox converted to JSTS Geometries.\n     */\n    Feature: function Feature(obj) {\n      const feature = {};\n\n      for (let key in obj) feature[key] = obj[key];\n\n      if (obj.geometry) {\n        const type = obj.geometry.type;\n        if (!parse$1[type]) throw new Error('Unknown GeoJSON type: ' + obj.type);\n        feature.geometry = this.read(obj.geometry);\n      }\n\n      if (obj.bbox) feature.bbox = parse$1.bbox.call(this, obj.bbox);\n      return feature;\n    },\n\n    /**\n     * Parse a GeoJSON FeatureCollection object\n     *\n     * @param {Object}\n     *          obj Object to parse.\n     *\n     * @return {Object} FeatureCollection with geometry/bbox converted to JSTS Geometries.\n     */\n    FeatureCollection: function FeatureCollection(obj) {\n      const featureCollection = {};\n\n      if (obj.features) {\n        featureCollection.features = [];\n\n        for (let i = 0; i < obj.features.length; ++i) featureCollection.features.push(this.read(obj.features[i]));\n      }\n\n      if (obj.bbox) featureCollection.bbox = this.parse.bbox.call(this, obj.bbox);\n      return featureCollection;\n    },\n\n    /**\n     * Convert the ordinates in an array to an array of Coordinates\n     *\n     * @param {Array}\n     *          array Array with {Number}s.\n     *\n     * @return {Array} Array with Coordinates.\n     */\n    coordinates: function coordinates(array) {\n      const coordinates = [];\n\n      for (let i = 0; i < array.length; ++i) {\n        const sub = array[i];\n        coordinates.push(new Coordinate(sub[0], sub[1]));\n      }\n\n      return coordinates;\n    },\n\n    /**\n     * Convert the bbox to a LinearRing\n     *\n     * @param {Array}\n     *          array Array with [xMin, yMin, xMax, yMax].\n     *\n     * @return {Array} Array with Coordinates.\n     */\n    bbox: function bbox(array) {\n      return this.geometryFactory.createLinearRing([new Coordinate(array[0], array[1]), new Coordinate(array[2], array[1]), new Coordinate(array[2], array[3]), new Coordinate(array[0], array[3]), new Coordinate(array[0], array[1])]);\n    },\n\n    /**\n     * Convert an Array with ordinates to a Point\n     *\n     * @param {Array}\n     *          array Array with ordinates.\n     *\n     * @return {Point} Point.\n     */\n    Point: function Point(array) {\n      const coordinate = new Coordinate(array[0], array[1]);\n      return this.geometryFactory.createPoint(coordinate);\n    },\n\n    /**\n     * Convert an Array with coordinates to a MultiPoint\n     *\n     * @param {Array}\n     *          array Array with coordinates.\n     *\n     * @return {MultiPoint} MultiPoint.\n     */\n    MultiPoint: function MultiPoint(array) {\n      const points = [];\n\n      for (let i = 0; i < array.length; ++i) points.push(parse$1.Point.call(this, array[i]));\n\n      return this.geometryFactory.createMultiPoint(points);\n    },\n\n    /**\n     * Convert an Array with coordinates to a LineString\n     *\n     * @param {Array}\n     *          array Array with coordinates.\n     *\n     * @return {LineString} LineString.\n     */\n    LineString: function LineString(array) {\n      const coordinates = parse$1.coordinates.call(this, array);\n      return this.geometryFactory.createLineString(coordinates);\n    },\n\n    /**\n     * Convert an Array with coordinates to a MultiLineString\n     *\n     * @param {Array}\n     *          array Array with coordinates.\n     *\n     * @return {MultiLineString} MultiLineString.\n     */\n    MultiLineString: function MultiLineString(array) {\n      const lineStrings = [];\n\n      for (let i = 0; i < array.length; ++i) lineStrings.push(parse$1.LineString.call(this, array[i]));\n\n      return this.geometryFactory.createMultiLineString(lineStrings);\n    },\n\n    /**\n     * Convert an Array to a Polygon\n     *\n     * @param {Array}\n     *          array Array with shell and holes.\n     *\n     * @return {Polygon} Polygon.\n     */\n    Polygon: function Polygon(array) {\n      const shellCoordinates = parse$1.coordinates.call(this, array[0]);\n      const shell = this.geometryFactory.createLinearRing(shellCoordinates);\n      const holes = [];\n\n      for (let i = 1; i < array.length; ++i) {\n        var hole = array[i];\n        var coordinates = parse$1.coordinates.call(this, hole);\n        var linearRing = this.geometryFactory.createLinearRing(coordinates);\n        holes.push(linearRing);\n      }\n\n      return this.geometryFactory.createPolygon(shell, holes);\n    },\n\n    /**\n     * Convert an Array to a MultiPolygon\n     *\n     * @param {Array}\n     *          array Array of arrays with shell and rings.\n     *\n     * @return {MultiPolygon} MultiPolygon.\n     */\n    MultiPolygon: function MultiPolygon(array) {\n      const polygons = [];\n\n      for (let i = 0; i < array.length; ++i) {\n        const polygon = array[i];\n        polygons.push(parse$1.Polygon.call(this, polygon));\n      }\n\n      return this.geometryFactory.createMultiPolygon(polygons);\n    },\n\n    /**\n     * Convert an Array to a GeometryCollection\n     *\n     * @param {Array}\n     *          array Array of GeoJSON geometries.\n     *\n     * @return {GeometryCollection} GeometryCollection.\n     */\n    GeometryCollection: function GeometryCollection(array) {\n      const geometries = [];\n\n      for (let i = 0; i < array.length; ++i) {\n        const geometry = array[i];\n        geometries.push(this.read(geometry));\n      }\n\n      return this.geometryFactory.createGeometryCollection(geometries);\n    }\n  };\n  const extract$1 = {\n    /**\n     * Convert a Coordinate to an Array\n     *\n     * @param {Coordinate}\n     *          coordinate Coordinate to convert.\n     *\n     * @return {Array} Array of ordinates.\n     */\n    coordinate: function coordinate(_coordinate) {\n      return [_coordinate.x, _coordinate.y];\n    },\n\n    /**\n     * Convert a Point to a GeoJSON object\n     *\n     * @param {Point}\n     *          point Point to convert.\n     *\n     * @return {Array} Array of 2 ordinates (paired to a coordinate).\n     */\n    Point: function Point(point) {\n      const array = extract$1.coordinate.call(this, point.getCoordinate());\n      return {\n        type: 'Point',\n        coordinates: array\n      };\n    },\n\n    /**\n     * Convert a MultiPoint to a GeoJSON object\n     *\n     * @param {MultiPoint}\n     *          multipoint MultiPoint to convert.\n     *\n     * @return {Array} Array of coordinates.\n     */\n    MultiPoint: function MultiPoint(multipoint) {\n      const array = [];\n\n      for (let i = 0; i < multipoint._geometries.length; ++i) {\n        const point = multipoint._geometries[i];\n        const geoJson = extract$1.Point.call(this, point);\n        array.push(geoJson.coordinates);\n      }\n\n      return {\n        type: 'MultiPoint',\n        coordinates: array\n      };\n    },\n\n    /**\n     * Convert a LineString to a GeoJSON object\n     *\n     * @param {LineString}\n     *          linestring LineString to convert.\n     *\n     * @return {Array} Array of coordinates.\n     */\n    LineString: function LineString(linestring) {\n      const array = [];\n      const coordinates = linestring.getCoordinates();\n\n      for (let i = 0; i < coordinates.length; ++i) {\n        const coordinate = coordinates[i];\n        array.push(extract$1.coordinate.call(this, coordinate));\n      }\n\n      return {\n        type: 'LineString',\n        coordinates: array\n      };\n    },\n\n    /**\n     * Convert a MultiLineString to a GeoJSON object\n     *\n     * @param {MultiLineString}\n     *          multilinestring MultiLineString to convert.\n     *\n     * @return {Array} Array of Array of coordinates.\n     */\n    MultiLineString: function MultiLineString(multilinestring) {\n      const array = [];\n\n      for (let i = 0; i < multilinestring._geometries.length; ++i) {\n        const linestring = multilinestring._geometries[i];\n        const geoJson = extract$1.LineString.call(this, linestring);\n        array.push(geoJson.coordinates);\n      }\n\n      return {\n        type: 'MultiLineString',\n        coordinates: array\n      };\n    },\n\n    /**\n     * Convert a Polygon to a GeoJSON object\n     *\n     * @param {Polygon}\n     *          polygon Polygon to convert.\n     *\n     * @return {Array} Array with shell, holes.\n     */\n    Polygon: function Polygon(polygon) {\n      const array = [];\n      const shellGeoJson = extract$1.LineString.call(this, polygon._shell);\n      array.push(shellGeoJson.coordinates);\n\n      for (let i = 0; i < polygon._holes.length; ++i) {\n        const hole = polygon._holes[i];\n        const holeGeoJson = extract$1.LineString.call(this, hole);\n        array.push(holeGeoJson.coordinates);\n      }\n\n      return {\n        type: 'Polygon',\n        coordinates: array\n      };\n    },\n\n    /**\n     * Convert a MultiPolygon to a GeoJSON object\n     *\n     * @param {MultiPolygon}\n     *          multipolygon MultiPolygon to convert.\n     *\n     * @return {Array} Array of polygons.\n     */\n    MultiPolygon: function MultiPolygon(multipolygon) {\n      const array = [];\n\n      for (let i = 0; i < multipolygon._geometries.length; ++i) {\n        const polygon = multipolygon._geometries[i];\n        const geoJson = extract$1.Polygon.call(this, polygon);\n        array.push(geoJson.coordinates);\n      }\n\n      return {\n        type: 'MultiPolygon',\n        coordinates: array\n      };\n    },\n\n    /**\n     * Convert a GeometryCollection to a GeoJSON object\n     *\n     * @param {GeometryCollection}\n     *          collection GeometryCollection to convert.\n     *\n     * @return {Array} Array of geometries.\n     */\n    GeometryCollection: function GeometryCollection(collection) {\n      const array = [];\n\n      for (let i = 0; i < collection._geometries.length; ++i) {\n        const geometry = collection._geometries[i];\n        const type = geometry.getGeometryType();\n        array.push(extract$1[type].call(this, geometry));\n      }\n\n      return {\n        type: 'GeometryCollection',\n        geometries: array\n      };\n    }\n  };\n\n  /**\n   * @module org/locationtech/jts/io/GeoJSONReader\n   */\n  /**\n   * Converts a geometry in GeoJSON to a {@link Geometry}.\n   */\n\n  class GeoJSONReader {\n    /**\n     * A <code>GeoJSONReader</code> is parameterized by a <code>GeometryFactory</code>,\n     * to allow it to create <code>Geometry</code> objects of the appropriate\n     * implementation. In particular, the <code>GeometryFactory</code> determines\n     * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n     *\n     * @param {GeometryFactory} geometryFactory\n     */\n    constructor(geometryFactory) {\n      this.parser = new GeoJSONParser(geometryFactory || new GeometryFactory());\n    }\n    /**\n     * Reads a GeoJSON representation of a {@link Geometry}\n     *\n     * Will also parse GeoJSON Features/FeatureCollections as custom objects.\n     *\n     * @param {Object|String} geoJson a GeoJSON Object or String.\n     * @return {Geometry|Object} a <code>Geometry or Feature/FeatureCollection representation.</code>\n     * @memberof module:org/locationtech/jts/io/GeoJSONReader#\n     */\n\n\n    read(geoJson) {\n      var geometry = this.parser.read(geoJson);\n      return geometry;\n    }\n\n  }\n\n  /**\n   * @module org/locationtech/jts/io/GeoJSONWriter\n   */\n  /**\n   * Writes the GeoJSON representation of a {@link Geometry}. The\n   * The GeoJSON format is defined <A\n   * HREF=\"http://geojson.org/geojson-spec.html\">here</A>.\n   */\n\n  class GeoJSONWriter {\n    /**\n     * The <code>GeoJSONWriter</code> outputs coordinates rounded to the precision\n     * model. Only the maximum number of decimal places necessary to represent the\n     * ordinates to the required precision will be output.\n     *\n     * @param {GeometryFactory} geometryFactory\n     * @constructor\n     */\n    constructor() {\n      this.parser = new GeoJSONParser(this.geometryFactory);\n    }\n    /**\n     * Converts a <code>Geometry</code> to its GeoJSON representation.\n     *\n     * @param {Geometry}\n     *          geometry a <code>Geometry</code> to process.\n     * @return {Object} The GeoJSON representation of the Geometry.\n     * @memberof module:org/locationtech/jts/io/GeoJSONWriter#\n     */\n\n\n    write(geometry) {\n      return this.parser.write(geometry);\n    }\n\n  }\n\n  /**\n   * @module org/locationtech/jts/io/WKTReader\n   */\n  /**\n   * Converts a geometry in Well-Known Text format to a {@link Geometry}.\n   * <p>\n   * <code>WKTReader</code> supports extracting <code>Geometry</code> objects\n   * from either {@link Reader}s or {@link String}s. This allows it to function\n   * as a parser to read <code>Geometry</code> objects from text blocks embedded\n   * in other data formats (e.g. XML).\n   */\n\n  class WKTReader {\n    /**\n     * A <code>WKTReader</code> is parameterized by a <code>GeometryFactory</code>,\n     * to allow it to create <code>Geometry</code> objects of the appropriate\n     * implementation. In particular, the <code>GeometryFactory</code> determines\n     * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n     * @param {GeometryFactory} geometryFactory\n     */\n    constructor(geometryFactory) {\n      this.parser = new WKTParser(geometryFactory || new GeometryFactory());\n    }\n    /**\n     * Reads a Well-Known Text representation of a {@link Geometry}\n     *\n     * @param {string}\n     *          wkt a <Geometry Tagged Text> string (see the OpenGIS Simple Features\n     *          Specification).\n     * @return {Geometry} a <code>Geometry</code> read from\n     *         <code>string.</code>\n     * @memberof module:org/locationtech/jts/io/WKTReader#\n     */\n\n\n    read(wkt) {\n      var geometry = this.parser.read(wkt);\n      return geometry;\n    }\n\n  }\n\n  /*eslint-disable no-undef */\n\n  function p2c(p) {\n    return [p.x, p.y];\n  }\n\n  class OL3Parser {\n    /**\n     * OpenLayers Geometry parser and writer\n     * @param {GeometryFactory} geometryFactory\n     * @param {ol} olReference \n     */\n    constructor(geometryFactory, olReference) {\n      this.geometryFactory = geometryFactory || new GeometryFactory();\n      this.ol = olReference || typeof ol !== 'undefined' && ol;\n    }\n    /**\n     * Inject OpenLayers geom classes\n     */\n\n\n    inject(Point, LineString, LinearRing, Polygon, MultiPoint, MultiLineString, MultiPolygon, GeometryCollection) {\n      this.ol = {\n        geom: {\n          Point,\n          LineString,\n          LinearRing,\n          Polygon,\n          MultiPoint,\n          MultiLineString,\n          MultiPolygon,\n          GeometryCollection\n        }\n      };\n    }\n    /**\n     * @param geometry {ol.geom.Geometry}\n     * @return {Geometry}\n     * @memberof module:org/locationtech/jts/io/OL3Parser#\n     */\n\n\n    read(geometry) {\n      const ol = this.ol;\n\n      if (geometry instanceof ol.geom.Point) {\n        return this.convertFromPoint(geometry);\n      } else if (geometry instanceof ol.geom.LineString) {\n        return this.convertFromLineString(geometry);\n      } else if (geometry instanceof ol.geom.LinearRing) {\n        return this.convertFromLinearRing(geometry);\n      } else if (geometry instanceof ol.geom.Polygon) {\n        return this.convertFromPolygon(geometry);\n      } else if (geometry instanceof ol.geom.MultiPoint) {\n        return this.convertFromMultiPoint(geometry);\n      } else if (geometry instanceof ol.geom.MultiLineString) {\n        return this.convertFromMultiLineString(geometry);\n      } else if (geometry instanceof ol.geom.MultiPolygon) {\n        return this.convertFromMultiPolygon(geometry);\n      } else if (geometry instanceof ol.geom.GeometryCollection) {\n        return this.convertFromCollection(geometry);\n      }\n    }\n\n    convertFromPoint(point) {\n      const coordinates = point.getCoordinates();\n      return this.geometryFactory.createPoint(new Coordinate(coordinates[0], coordinates[1]));\n    }\n\n    convertFromLineString(lineString) {\n      return this.geometryFactory.createLineString(lineString.getCoordinates().map(function (coordinates) {\n        return new Coordinate(coordinates[0], coordinates[1]);\n      }));\n    }\n\n    convertFromLinearRing(linearRing) {\n      return this.geometryFactory.createLinearRing(linearRing.getCoordinates().map(function (coordinates) {\n        return new Coordinate(coordinates[0], coordinates[1]);\n      }));\n    }\n\n    convertFromPolygon(polygon) {\n      const linearRings = polygon.getLinearRings();\n      var shell = null;\n      var holes = [];\n\n      for (let i = 0; i < linearRings.length; i++) {\n        const linearRing = this.convertFromLinearRing(linearRings[i]);\n\n        if (i === 0) {\n          shell = linearRing;\n        } else {\n          holes.push(linearRing);\n        }\n      }\n\n      return this.geometryFactory.createPolygon(shell, holes);\n    }\n\n    convertFromMultiPoint(multiPoint) {\n      const points = multiPoint.getPoints().map(function (point) {\n        return this.convertFromPoint(point);\n      }, this);\n      return this.geometryFactory.createMultiPoint(points);\n    }\n\n    convertFromMultiLineString(multiLineString) {\n      const lineStrings = multiLineString.getLineStrings().map(function (lineString) {\n        return this.convertFromLineString(lineString);\n      }, this);\n      return this.geometryFactory.createMultiLineString(lineStrings);\n    }\n\n    convertFromMultiPolygon(multiPolygon) {\n      const polygons = multiPolygon.getPolygons().map(function (polygon) {\n        return this.convertFromPolygon(polygon);\n      }, this);\n      return this.geometryFactory.createMultiPolygon(polygons);\n    }\n\n    convertFromCollection(collection) {\n      const geometries = collection.getGeometries().map(function (geometry) {\n        return this.read(geometry);\n      }, this);\n      return this.geometryFactory.createGeometryCollection(geometries);\n    }\n    /**\n     * @param geometry\n     *          {Geometry}\n     * @return {ol.geom.Geometry}\n     * @memberof module:org/locationtech/jts/io/OL3Parser#\n     */\n\n\n    write(geometry) {\n      if (geometry.getGeometryType() === 'Point') {\n        return this.convertToPoint(geometry.getCoordinate());\n      } else if (geometry.getGeometryType() === 'LineString') {\n        return this.convertToLineString(geometry);\n      } else if (geometry.getGeometryType() === 'LinearRing') {\n        return this.convertToLinearRing(geometry);\n      } else if (geometry.getGeometryType() === 'Polygon') {\n        return this.convertToPolygon(geometry);\n      } else if (geometry.getGeometryType() === 'MultiPoint') {\n        return this.convertToMultiPoint(geometry);\n      } else if (geometry.getGeometryType() === 'MultiLineString') {\n        return this.convertToMultiLineString(geometry);\n      } else if (geometry.getGeometryType() === 'MultiPolygon') {\n        return this.convertToMultiPolygon(geometry);\n      } else if (geometry.getGeometryType() === 'GeometryCollection') {\n        return this.convertToCollection(geometry);\n      }\n    }\n\n    convertToPoint(coordinate) {\n      return new this.ol.geom.Point([coordinate.x, coordinate.y]);\n    }\n\n    convertToLineString(lineString) {\n      var points = lineString._points._coordinates.map(p2c);\n\n      return new this.ol.geom.LineString(points);\n    }\n\n    convertToLinearRing(linearRing) {\n      var points = linearRing._points._coordinates.map(p2c);\n\n      return new this.ol.geom.LinearRing(points);\n    }\n\n    convertToPolygon(polygon) {\n      var rings = [polygon._shell._points._coordinates.map(p2c)];\n\n      for (let i = 0; i < polygon._holes.length; i++) {\n        rings.push(polygon._holes[i]._points._coordinates.map(p2c));\n      }\n\n      return new this.ol.geom.Polygon(rings);\n    }\n\n    convertToMultiPoint(multiPoint) {\n      return new this.ol.geom.MultiPoint(multiPoint.getCoordinates().map(p2c));\n    }\n\n    convertToMultiLineString(multiLineString) {\n      var lineStrings = [];\n\n      for (let i = 0; i < multiLineString._geometries.length; i++) {\n        lineStrings.push(this.convertToLineString(multiLineString._geometries[i]).getCoordinates());\n      }\n\n      return new this.ol.geom.MultiLineString(lineStrings);\n    }\n\n    convertToMultiPolygon(multiPolygon) {\n      var polygons = [];\n\n      for (let i = 0; i < multiPolygon._geometries.length; i++) {\n        polygons.push(this.convertToPolygon(multiPolygon._geometries[i]).getCoordinates());\n      }\n\n      return new this.ol.geom.MultiPolygon(polygons);\n    }\n\n    convertToCollection(geometryCollection) {\n      var geometries = [];\n\n      for (let i = 0; i < geometryCollection._geometries.length; i++) {\n        var geometry = geometryCollection._geometries[i];\n        geometries.push(this.write(geometry));\n      }\n\n      return new this.ol.geom.GeometryCollection(geometries);\n    }\n\n  }\n\n\n\n  var io = /*#__PURE__*/Object.freeze({\n    GeoJSONReader: GeoJSONReader,\n    GeoJSONWriter: GeoJSONWriter,\n    OL3Parser: OL3Parser,\n    WKTReader: WKTReader,\n    WKTWriter: WKTWriter\n  });\n\n  class SegmentPointComparator {\n    constructor() {\n      SegmentPointComparator.constructor_.apply(this, arguments);\n    }\n\n    static relativeSign(x0, x1) {\n      if (x0 < x1) return -1;\n      if (x0 > x1) return 1;\n      return 0;\n    }\n\n    static compare(octant, p0, p1) {\n      if (p0.equals2D(p1)) return 0;\n      var xSign = SegmentPointComparator.relativeSign(p0.x, p1.x);\n      var ySign = SegmentPointComparator.relativeSign(p0.y, p1.y);\n\n      switch (octant) {\n        case 0:\n          return SegmentPointComparator.compareValue(xSign, ySign);\n\n        case 1:\n          return SegmentPointComparator.compareValue(ySign, xSign);\n\n        case 2:\n          return SegmentPointComparator.compareValue(ySign, -xSign);\n\n        case 3:\n          return SegmentPointComparator.compareValue(-xSign, ySign);\n\n        case 4:\n          return SegmentPointComparator.compareValue(-xSign, -ySign);\n\n        case 5:\n          return SegmentPointComparator.compareValue(-ySign, -xSign);\n\n        case 6:\n          return SegmentPointComparator.compareValue(-ySign, xSign);\n\n        case 7:\n          return SegmentPointComparator.compareValue(xSign, -ySign);\n      }\n\n      Assert.shouldNeverReachHere(\"invalid octant value\");\n      return 0;\n    }\n\n    static compareValue(compareSign0, compareSign1) {\n      if (compareSign0 < 0) return -1;\n      if (compareSign0 > 0) return 1;\n      if (compareSign1 < 0) return -1;\n      if (compareSign1 > 0) return 1;\n      return 0;\n    }\n\n    getClass() {\n      return SegmentPointComparator;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  SegmentPointComparator.constructor_ = function () {};\n\n  class SegmentNode {\n    constructor() {\n      SegmentNode.constructor_.apply(this, arguments);\n    }\n\n    getCoordinate() {\n      return this.coord;\n    }\n\n    print(out) {\n      out.print(this.coord);\n      out.print(\" seg # = \" + this.segmentIndex);\n    }\n\n    compareTo(obj) {\n      var other = obj;\n      if (this.segmentIndex < other.segmentIndex) return -1;\n      if (this.segmentIndex > other.segmentIndex) return 1;\n      if (this.coord.equals2D(other.coord)) return 0;\n      return SegmentPointComparator.compare(this._segmentOctant, this.coord, other.coord);\n    }\n\n    isEndPoint(maxSegmentIndex) {\n      if (this.segmentIndex === 0 && !this._isInterior) return true;\n      if (this.segmentIndex === maxSegmentIndex) return true;\n      return false;\n    }\n\n    isInterior() {\n      return this._isInterior;\n    }\n\n    getClass() {\n      return SegmentNode;\n    }\n\n    get interfaces_() {\n      return [Comparable];\n    }\n\n  }\n\n  SegmentNode.constructor_ = function () {\n    this._segString = null;\n    this.coord = null;\n    this.segmentIndex = null;\n    this._segmentOctant = null;\n    this._isInterior = null;\n    let segString = arguments[0],\n        coord = arguments[1],\n        segmentIndex = arguments[2],\n        segmentOctant = arguments[3];\n    this._segString = segString;\n    this.coord = new Coordinate(coord);\n    this.segmentIndex = segmentIndex;\n    this._segmentOctant = segmentOctant;\n    this._isInterior = !coord.equals2D(segString.getCoordinate(segmentIndex));\n  };\n\n  class SegmentNodeList {\n    constructor() {\n      SegmentNodeList.constructor_.apply(this, arguments);\n    }\n\n    getSplitCoordinates() {\n      var coordList = new CoordinateList();\n      this.addEndpoints();\n      var it = this.iterator();\n      var eiPrev = it.next();\n\n      while (it.hasNext()) {\n        var ei = it.next();\n        this.addEdgeCoordinates(eiPrev, ei, coordList);\n        eiPrev = ei;\n      }\n\n      return coordList.toCoordinateArray();\n    }\n\n    addCollapsedNodes() {\n      var collapsedVertexIndexes = new ArrayList();\n      this.findCollapsesFromInsertedNodes(collapsedVertexIndexes);\n      this.findCollapsesFromExistingVertices(collapsedVertexIndexes);\n\n      for (var it = collapsedVertexIndexes.iterator(); it.hasNext();) {\n        var vertexIndex = it.next().intValue();\n        this.add(this._edge.getCoordinate(vertexIndex), vertexIndex);\n      }\n    }\n\n    print(out) {\n      out.println(\"Intersections:\");\n\n      for (var it = this.iterator(); it.hasNext();) {\n        var ei = it.next();\n        ei.print(out);\n      }\n    }\n\n    findCollapsesFromExistingVertices(collapsedVertexIndexes) {\n      for (var i = 0; i < this._edge.size() - 2; i++) {\n        var p0 = this._edge.getCoordinate(i);\n\n        var p1 = this._edge.getCoordinate(i + 1);\n\n        var p2 = this._edge.getCoordinate(i + 2);\n\n        if (p0.equals2D(p2)) {\n          collapsedVertexIndexes.add(new Integer(i + 1));\n        }\n      }\n    }\n\n    addEdgeCoordinates(ei0, ei1, coordList) {\n      var npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n\n      var lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n\n      var useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n\n      if (!useIntPt1) {\n        npts--;\n      }\n      coordList.add(new Coordinate(ei0.coord), false);\n\n      for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n        coordList.add(this._edge.getCoordinate(i));\n      }\n\n      if (useIntPt1) {\n        coordList.add(new Coordinate(ei1.coord));\n      }\n    }\n\n    iterator() {\n      return this._nodeMap.values().iterator();\n    }\n\n    addSplitEdges(edgeList) {\n      this.addEndpoints();\n      this.addCollapsedNodes();\n      var it = this.iterator();\n      var eiPrev = it.next();\n\n      while (it.hasNext()) {\n        var ei = it.next();\n        var newEdge = this.createSplitEdge(eiPrev, ei);\n        edgeList.add(newEdge);\n        eiPrev = ei;\n      }\n    }\n\n    findCollapseIndex(ei0, ei1, collapsedVertexIndex) {\n      if (!ei0.coord.equals2D(ei1.coord)) return false;\n      var numVerticesBetween = ei1.segmentIndex - ei0.segmentIndex;\n\n      if (!ei1.isInterior()) {\n        numVerticesBetween--;\n      }\n\n      if (numVerticesBetween === 1) {\n        collapsedVertexIndex[0] = ei0.segmentIndex + 1;\n        return true;\n      }\n\n      return false;\n    }\n\n    findCollapsesFromInsertedNodes(collapsedVertexIndexes) {\n      var collapsedVertexIndex = new Array(1).fill(null);\n      var it = this.iterator();\n      var eiPrev = it.next();\n\n      while (it.hasNext()) {\n        var ei = it.next();\n        var isCollapsed = this.findCollapseIndex(eiPrev, ei, collapsedVertexIndex);\n        if (isCollapsed) collapsedVertexIndexes.add(new Integer(collapsedVertexIndex[0]));\n        eiPrev = ei;\n      }\n    }\n\n    getEdge() {\n      return this._edge;\n    }\n\n    addEndpoints() {\n      var maxSegIndex = this._edge.size() - 1;\n      this.add(this._edge.getCoordinate(0), 0);\n      this.add(this._edge.getCoordinate(maxSegIndex), maxSegIndex);\n    }\n\n    createSplitEdge(ei0, ei1) {\n      var npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n\n      var lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n\n      var useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n\n      if (!useIntPt1) {\n        npts--;\n      }\n\n      var pts = new Array(npts).fill(null);\n      var ipt = 0;\n      pts[ipt++] = new Coordinate(ei0.coord);\n\n      for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n        pts[ipt++] = this._edge.getCoordinate(i);\n      }\n\n      if (useIntPt1) pts[ipt] = new Coordinate(ei1.coord);\n      return new NodedSegmentString(pts, this._edge.getData());\n    }\n\n    add(intPt, segmentIndex) {\n      var eiNew = new SegmentNode(this._edge, intPt, segmentIndex, this._edge.getSegmentOctant(segmentIndex));\n\n      var ei = this._nodeMap.get(eiNew);\n\n      if (ei !== null) {\n        Assert.isTrue(ei.coord.equals2D(intPt), \"Found equal nodes with different coordinates\");\n        return ei;\n      }\n\n      this._nodeMap.put(eiNew, eiNew);\n\n      return eiNew;\n    }\n\n    checkSplitEdgesCorrectness(splitEdges) {\n      var edgePts = this._edge.getCoordinates();\n\n      var split0 = splitEdges.get(0);\n      var pt0 = split0.getCoordinate(0);\n      if (!pt0.equals2D(edgePts[0])) throw new RuntimeException(\"bad split edge start point at \" + pt0);\n      var splitn = splitEdges.get(splitEdges.size() - 1);\n      var splitnPts = splitn.getCoordinates();\n      var ptn = splitnPts[splitnPts.length - 1];\n      if (!ptn.equals2D(edgePts[edgePts.length - 1])) throw new RuntimeException(\"bad split edge end point at \" + ptn);\n    }\n\n    getClass() {\n      return SegmentNodeList;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  SegmentNodeList.constructor_ = function () {\n    this._nodeMap = new TreeMap();\n    this._edge = null;\n    let edge = arguments[0];\n    this._edge = edge;\n  };\n\n  class Octant {\n    constructor() {\n      Octant.constructor_.apply(this, arguments);\n    }\n\n    static octant() {\n      if (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\n        let dx = arguments[0],\n            dy = arguments[1];\n        if (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException(\"Cannot compute the octant for point ( \" + dx + \", \" + dy + \" )\");\n        var adx = Math.abs(dx);\n        var ady = Math.abs(dy);\n\n        if (dx >= 0) {\n          if (dy >= 0) {\n            if (adx >= ady) return 0;else return 1;\n          } else {\n            if (adx >= ady) return 7;else return 6;\n          }\n        } else {\n          if (dy >= 0) {\n            if (adx >= ady) return 3;else return 2;\n          } else {\n            if (adx >= ady) return 4;else return 5;\n          }\n        }\n      } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n        let p0 = arguments[0],\n            p1 = arguments[1];\n        var dx = p1.x - p0.x;\n        var dy = p1.y - p0.y;\n        if (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException(\"Cannot compute the octant for two identical points \" + p0);\n        return Octant.octant(dx, dy);\n      }\n    }\n\n    getClass() {\n      return Octant;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  Octant.constructor_ = function () {};\n\n  class SegmentString {\n    constructor() {\n      SegmentString.constructor_.apply(this, arguments);\n    }\n\n    getCoordinates() {}\n\n    size() {}\n\n    getCoordinate(i) {}\n\n    isClosed() {}\n\n    setData(data) {}\n\n    getData() {}\n\n    getClass() {\n      return SegmentString;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  SegmentString.constructor_ = function () {};\n\n  class NodableSegmentString {\n    constructor() {\n      NodableSegmentString.constructor_.apply(this, arguments);\n    }\n\n    addIntersection(intPt, segmentIndex) {}\n\n    getClass() {\n      return NodableSegmentString;\n    }\n\n    get interfaces_() {\n      return [SegmentString];\n    }\n\n  }\n\n  NodableSegmentString.constructor_ = function () {};\n\n  class NodedSegmentString {\n    constructor() {\n      NodedSegmentString.constructor_.apply(this, arguments);\n    }\n\n    static getNodedSubstrings() {\n      if (arguments.length === 1) {\n        let segStrings = arguments[0];\n        var resultEdgelist = new ArrayList();\n        NodedSegmentString.getNodedSubstrings(segStrings, resultEdgelist);\n        return resultEdgelist;\n      } else if (arguments.length === 2) {\n        let segStrings = arguments[0],\n            resultEdgelist = arguments[1];\n\n        for (var i = segStrings.iterator(); i.hasNext();) {\n          var ss = i.next();\n          ss.getNodeList().addSplitEdges(resultEdgelist);\n        }\n      }\n    }\n\n    getCoordinates() {\n      return this._pts;\n    }\n\n    size() {\n      return this._pts.length;\n    }\n\n    getCoordinate(i) {\n      return this._pts[i];\n    }\n\n    isClosed() {\n      return this._pts[0].equals(this._pts[this._pts.length - 1]);\n    }\n\n    getSegmentOctant(index) {\n      if (index === this._pts.length - 1) return -1;\n      return this.safeOctant(this.getCoordinate(index), this.getCoordinate(index + 1));\n    }\n\n    setData(data) {\n      this._data = data;\n    }\n\n    safeOctant(p0, p1) {\n      if (p0.equals2D(p1)) return 0;\n      return Octant.octant(p0, p1);\n    }\n\n    getData() {\n      return this._data;\n    }\n\n    addIntersection() {\n      if (arguments.length === 2) {\n        let intPt = arguments[0],\n            segmentIndex = arguments[1];\n        this.addIntersectionNode(intPt, segmentIndex);\n      } else if (arguments.length === 4) {\n        let li = arguments[0],\n            segmentIndex = arguments[1],\n            intIndex = arguments[3];\n        var intPt = new Coordinate(li.getIntersection(intIndex));\n        this.addIntersection(intPt, segmentIndex);\n      }\n    }\n\n    toString() {\n      return WKTWriter.toLineString(new CoordinateArraySequence(this._pts));\n    }\n\n    getNodeList() {\n      return this._nodeList;\n    }\n\n    addIntersectionNode(intPt, segmentIndex) {\n      var normalizedSegmentIndex = segmentIndex;\n      var nextSegIndex = normalizedSegmentIndex + 1;\n\n      if (nextSegIndex < this._pts.length) {\n        var nextPt = this._pts[nextSegIndex];\n\n        if (intPt.equals2D(nextPt)) {\n          normalizedSegmentIndex = nextSegIndex;\n        }\n      }\n\n      var ei = this._nodeList.add(intPt, normalizedSegmentIndex);\n\n      return ei;\n    }\n\n    addIntersections(li, segmentIndex, geomIndex) {\n      for (var i = 0; i < li.getIntersectionNum(); i++) {\n        this.addIntersection(li, segmentIndex, geomIndex, i);\n      }\n    }\n\n    getClass() {\n      return NodedSegmentString;\n    }\n\n    get interfaces_() {\n      return [NodableSegmentString];\n    }\n\n  }\n\n  NodedSegmentString.constructor_ = function () {\n    this._nodeList = new SegmentNodeList(this);\n    this._pts = null;\n    this._data = null;\n    let pts = arguments[0],\n        data = arguments[1];\n    this._pts = pts;\n    this._data = data;\n  };\n\n  class MonotoneChainOverlapAction {\n    constructor() {\n      MonotoneChainOverlapAction.constructor_.apply(this, arguments);\n    }\n\n    overlap() {\n      if (arguments.length === 2) ; else if (arguments.length === 4) {\n        let mc1 = arguments[0],\n            start1 = arguments[1],\n            mc2 = arguments[2],\n            start2 = arguments[3];\n        mc1.getLineSegment(start1, this._overlapSeg1);\n        mc2.getLineSegment(start2, this._overlapSeg2);\n        this.overlap(this._overlapSeg1, this._overlapSeg2);\n      }\n    }\n\n    getClass() {\n      return MonotoneChainOverlapAction;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  MonotoneChainOverlapAction.constructor_ = function () {\n    this._overlapSeg1 = new LineSegment();\n    this._overlapSeg2 = new LineSegment();\n  };\n\n  class MonotoneChain$1 {\n    constructor() {\n      MonotoneChain$1.constructor_.apply(this, arguments);\n    }\n\n    getLineSegment(index, ls) {\n      ls.p0 = this._pts[index];\n      ls.p1 = this._pts[index + 1];\n    }\n\n    computeSelect(searchEnv, start0, end0, mcs) {\n      var p0 = this._pts[start0];\n      var p1 = this._pts[end0];\n\n      if (end0 - start0 === 1) {\n        mcs.select(this, start0);\n        return null;\n      }\n\n      if (!searchEnv.intersects(p0, p1)) return null;\n      var mid = Math.trunc((start0 + end0) / 2);\n\n      if (start0 < mid) {\n        this.computeSelect(searchEnv, start0, mid, mcs);\n      }\n\n      if (mid < end0) {\n        this.computeSelect(searchEnv, mid, end0, mcs);\n      }\n    }\n\n    getCoordinates() {\n      var coord = new Array(this._end - this._start + 1).fill(null);\n      var index = 0;\n\n      for (var i = this._start; i <= this._end; i++) {\n        coord[index++] = this._pts[i];\n      }\n\n      return coord;\n    }\n\n    computeOverlaps() {\n      if (arguments.length === 2) {\n        let mc = arguments[0],\n            mco = arguments[1];\n        this.computeOverlaps(this._start, this._end, mc, mc._start, mc._end, mco);\n      } else if (arguments.length === 6) {\n        let start0 = arguments[0],\n            end0 = arguments[1],\n            mc = arguments[2],\n            start1 = arguments[3],\n            end1 = arguments[4],\n            mco = arguments[5];\n\n        if (end0 - start0 === 1 && end1 - start1 === 1) {\n          mco.overlap(this, start0, mc, start1);\n          return null;\n        }\n\n        if (!this.overlaps(start0, end0, mc, start1, end1)) return null;\n        var mid0 = Math.trunc((start0 + end0) / 2);\n        var mid1 = Math.trunc((start1 + end1) / 2);\n\n        if (start0 < mid0) {\n          if (start1 < mid1) this.computeOverlaps(start0, mid0, mc, start1, mid1, mco);\n          if (mid1 < end1) this.computeOverlaps(start0, mid0, mc, mid1, end1, mco);\n        }\n\n        if (mid0 < end0) {\n          if (start1 < mid1) this.computeOverlaps(mid0, end0, mc, start1, mid1, mco);\n          if (mid1 < end1) this.computeOverlaps(mid0, end0, mc, mid1, end1, mco);\n        }\n      }\n    }\n\n    setId(id) {\n      this._id = id;\n    }\n\n    select(searchEnv, mcs) {\n      this.computeSelect(searchEnv, this._start, this._end, mcs);\n    }\n\n    getEnvelope() {\n      if (this._env === null) {\n        var p0 = this._pts[this._start];\n        var p1 = this._pts[this._end];\n        this._env = new Envelope(p0, p1);\n      }\n\n      return this._env;\n    }\n\n    overlaps(start0, end0, mc, start1, end1) {\n      return Envelope.intersects(this._pts[start0], this._pts[end0], mc._pts[start1], mc._pts[end1]);\n    }\n\n    getEndIndex() {\n      return this._end;\n    }\n\n    getStartIndex() {\n      return this._start;\n    }\n\n    getContext() {\n      return this._context;\n    }\n\n    getId() {\n      return this._id;\n    }\n\n    getClass() {\n      return MonotoneChain$1;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  MonotoneChain$1.constructor_ = function () {\n    this._pts = null;\n    this._start = null;\n    this._end = null;\n    this._env = null;\n    this._context = null;\n    this._id = null;\n    let pts = arguments[0],\n        start = arguments[1],\n        end = arguments[2],\n        context = arguments[3];\n    this._pts = pts;\n    this._start = start;\n    this._end = end;\n    this._context = context;\n  };\n\n  class MonotoneChainBuilder {\n    constructor() {\n      MonotoneChainBuilder.constructor_.apply(this, arguments);\n    }\n\n    static getChainStartIndices(pts) {\n      var start = 0;\n      var startIndexList = new ArrayList();\n      startIndexList.add(new Integer(start));\n\n      do {\n        var last = MonotoneChainBuilder.findChainEnd(pts, start);\n        startIndexList.add(new Integer(last));\n        start = last;\n      } while (start < pts.length - 1);\n\n      var startIndex = MonotoneChainBuilder.toIntArray(startIndexList);\n      return startIndex;\n    }\n\n    static findChainEnd(pts, start) {\n      var safeStart = start;\n\n      while (safeStart < pts.length - 1 && pts[safeStart].equals2D(pts[safeStart + 1])) {\n        safeStart++;\n      }\n\n      if (safeStart >= pts.length - 1) {\n        return pts.length - 1;\n      }\n\n      var chainQuad = Quadrant.quadrant(pts[safeStart], pts[safeStart + 1]);\n      var last = start + 1;\n\n      while (last < pts.length) {\n        if (!pts[last - 1].equals2D(pts[last])) {\n          var quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n          if (quad !== chainQuad) break;\n        }\n\n        last++;\n      }\n\n      return last - 1;\n    }\n\n    static getChains() {\n      if (arguments.length === 1) {\n        let pts = arguments[0];\n        return MonotoneChainBuilder.getChains(pts, null);\n      } else if (arguments.length === 2) {\n        let pts = arguments[0],\n            context = arguments[1];\n        var mcList = new ArrayList();\n        var startIndex = MonotoneChainBuilder.getChainStartIndices(pts);\n\n        for (var i = 0; i < startIndex.length - 1; i++) {\n          var mc = new MonotoneChain$1(pts, startIndex[i], startIndex[i + 1], context);\n          mcList.add(mc);\n        }\n\n        return mcList;\n      }\n    }\n\n    static toIntArray(list) {\n      var array = new Array(list.size()).fill(null);\n\n      for (var i = 0; i < array.length; i++) {\n        array[i] = list.get(i).intValue();\n      }\n\n      return array;\n    }\n\n    getClass() {\n      return MonotoneChainBuilder;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  MonotoneChainBuilder.constructor_ = function () {};\n\n  class Noder {\n    constructor() {\n      Noder.constructor_.apply(this, arguments);\n    }\n\n    computeNodes(segStrings) {}\n\n    getNodedSubstrings() {}\n\n    getClass() {\n      return Noder;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  Noder.constructor_ = function () {};\n\n  class SinglePassNoder {\n    constructor() {\n      SinglePassNoder.constructor_.apply(this, arguments);\n    }\n\n    setSegmentIntersector(segInt) {\n      this._segInt = segInt;\n    }\n\n    getClass() {\n      return SinglePassNoder;\n    }\n\n    get interfaces_() {\n      return [Noder];\n    }\n\n  }\n\n  SinglePassNoder.constructor_ = function () {\n    this._segInt = null;\n\n    if (arguments.length === 0) ; else if (arguments.length === 1) {\n      let segInt = arguments[0];\n      this.setSegmentIntersector(segInt);\n    }\n  };\n\n  class MCIndexNoder extends SinglePassNoder {\n    constructor() {\n      super();\n      MCIndexNoder.constructor_.apply(this, arguments);\n    }\n\n    getMonotoneChains() {\n      return this._monoChains;\n    }\n\n    getNodedSubstrings() {\n      return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings);\n    }\n\n    getIndex() {\n      return this._index;\n    }\n\n    add(segStr) {\n      var segChains = MonotoneChainBuilder.getChains(segStr.getCoordinates(), segStr);\n\n      for (var i = segChains.iterator(); i.hasNext();) {\n        var mc = i.next();\n        mc.setId(this._idCounter++);\n\n        this._index.insert(mc.getEnvelope(), mc);\n\n        this._monoChains.add(mc);\n      }\n    }\n\n    computeNodes(inputSegStrings) {\n      this._nodedSegStrings = inputSegStrings;\n\n      for (var i = inputSegStrings.iterator(); i.hasNext();) {\n        this.add(i.next());\n      }\n\n      this.intersectChains();\n    }\n\n    intersectChains() {\n      var overlapAction = new SegmentOverlapAction(this._segInt);\n\n      for (var i = this._monoChains.iterator(); i.hasNext();) {\n        var queryChain = i.next();\n\n        var overlapChains = this._index.query(queryChain.getEnvelope());\n\n        for (var j = overlapChains.iterator(); j.hasNext();) {\n          var testChain = j.next();\n\n          if (testChain.getId() > queryChain.getId()) {\n            queryChain.computeOverlaps(testChain, overlapAction);\n            this._nOverlaps++;\n          }\n\n          if (this._segInt.isDone()) return null;\n        }\n      }\n    }\n\n    getClass() {\n      return MCIndexNoder;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  class SegmentOverlapAction extends MonotoneChainOverlapAction {\n    constructor() {\n      super();\n      SegmentOverlapAction.constructor_.apply(this, arguments);\n    }\n\n    overlap() {\n      if (arguments.length === 4) {\n        let mc1 = arguments[0],\n            start1 = arguments[1],\n            mc2 = arguments[2],\n            start2 = arguments[3];\n        var ss1 = mc1.getContext();\n        var ss2 = mc2.getContext();\n\n        this._si.processIntersections(ss1, start1, ss2, start2);\n      } else return super.overlap.apply(this, arguments);\n    }\n\n    getClass() {\n      return SegmentOverlapAction;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  SegmentOverlapAction.constructor_ = function () {\n    this._si = null;\n    let si = arguments[0];\n    this._si = si;\n  };\n\n  MCIndexNoder.SegmentOverlapAction = SegmentOverlapAction;\n\n  MCIndexNoder.constructor_ = function () {\n    this._monoChains = new ArrayList();\n    this._index = new STRtree();\n    this._idCounter = 0;\n    this._nodedSegStrings = null;\n    this._nOverlaps = 0;\n\n    if (arguments.length === 0) ; else if (arguments.length === 1) {\n      let si = arguments[0];\n      SinglePassNoder.constructor_.call(this, si);\n    }\n  };\n\n  class ScaledNoder {\n    constructor() {\n      ScaledNoder.constructor_.apply(this, arguments);\n    }\n\n    rescale() {\n      if (hasInterface(arguments[0], Collection)) {\n        let segStrings = arguments[0];\n\n        for (var i = segStrings.iterator(); i.hasNext();) {\n          var ss = i.next();\n          this.rescale(ss.getCoordinates());\n        }\n      } else if (arguments[0] instanceof Array) {\n        let pts = arguments[0];\n        var p0 = null;\n        var p1 = null;\n\n        if (pts.length === 2) {\n          p0 = new Coordinate(pts[0]);\n          p1 = new Coordinate(pts[1]);\n        }\n\n        for (var i = 0; i < pts.length; i++) {\n          pts[i].x = pts[i].x / this._scaleFactor + this._offsetX;\n          pts[i].y = pts[i].y / this._scaleFactor + this._offsetY;\n        }\n\n        if (pts.length === 2 && pts[0].equals2D(pts[1])) {\n          System.out.println(pts);\n        }\n      }\n    }\n\n    scale() {\n      if (hasInterface(arguments[0], Collection)) {\n        let segStrings = arguments[0];\n        var nodedSegmentStrings = new ArrayList(segStrings.size());\n\n        for (var i = segStrings.iterator(); i.hasNext();) {\n          var ss = i.next();\n          nodedSegmentStrings.add(new NodedSegmentString(this.scale(ss.getCoordinates()), ss.getData()));\n        }\n\n        return nodedSegmentStrings;\n      } else if (arguments[0] instanceof Array) {\n        let pts = arguments[0];\n        var roundPts = new Array(pts.length).fill(null);\n\n        for (var i = 0; i < pts.length; i++) {\n          roundPts[i] = new Coordinate(Math.round((pts[i].x - this._offsetX) * this._scaleFactor), Math.round((pts[i].y - this._offsetY) * this._scaleFactor), pts[i].z);\n        }\n\n        var roundPtsNoDup = CoordinateArrays.removeRepeatedPoints(roundPts);\n        return roundPtsNoDup;\n      }\n    }\n\n    isIntegerPrecision() {\n      return this._scaleFactor === 1.0;\n    }\n\n    getNodedSubstrings() {\n      var splitSS = this._noder.getNodedSubstrings();\n\n      if (this._isScaled) this.rescale(splitSS);\n      return splitSS;\n    }\n\n    computeNodes(inputSegStrings) {\n      var intSegStrings = inputSegStrings;\n      if (this._isScaled) intSegStrings = this.scale(inputSegStrings);\n\n      this._noder.computeNodes(intSegStrings);\n    }\n\n    getClass() {\n      return ScaledNoder;\n    }\n\n    get interfaces_() {\n      return [Noder];\n    }\n\n  }\n\n  ScaledNoder.constructor_ = function () {\n    this._noder = null;\n    this._scaleFactor = null;\n    this._offsetX = null;\n    this._offsetY = null;\n    this._isScaled = false;\n\n    if (arguments.length === 2) {\n      let noder = arguments[0],\n          scaleFactor = arguments[1];\n      ScaledNoder.constructor_.call(this, noder, scaleFactor, 0, 0);\n    } else if (arguments.length === 4) {\n      let noder = arguments[0],\n          scaleFactor = arguments[1];\n      this._noder = noder;\n      this._scaleFactor = scaleFactor;\n      this._isScaled = !this.isIntegerPrecision();\n    }\n  };\n\n\n\n  var noding = /*#__PURE__*/Object.freeze({\n    MCIndexNoder: MCIndexNoder,\n    ScaledNoder: ScaledNoder,\n    SegmentString: SegmentString\n  });\n\n  class IsSimpleOp {\n    constructor() {\n      IsSimpleOp.constructor_.apply(this, arguments);\n    }\n\n    static isSimple() {\n      if (arguments.length === 1) {\n        let geom = arguments[0];\n        var op = new IsSimpleOp(geom);\n        return op.isSimple();\n      } else if (arguments.length === 2) {\n        let geom = arguments[0],\n            boundaryNodeRule = arguments[1];\n        var op = new IsSimpleOp(geom, boundaryNodeRule);\n        return op.isSimple();\n      }\n    }\n\n    isSimpleMultiPoint(mp) {\n      if (mp.isEmpty()) return true;\n      var points = new TreeSet();\n\n      for (var i = 0; i < mp.getNumGeometries(); i++) {\n        var pt = mp.getGeometryN(i);\n        var p = pt.getCoordinate();\n\n        if (points.contains(p)) {\n          this._nonSimpleLocation = p;\n          return false;\n        }\n\n        points.add(p);\n      }\n\n      return true;\n    }\n\n    isSimplePolygonal(geom) {\n      var rings = LinearComponentExtracter.getLines(geom);\n\n      for (var i = rings.iterator(); i.hasNext();) {\n        var ring = i.next();\n        if (!this.isSimpleLinearGeometry(ring)) return false;\n      }\n\n      return true;\n    }\n\n    hasClosedEndpointIntersection(graph) {\n      var endPoints = new TreeMap();\n\n      for (var i = graph.getEdgeIterator(); i.hasNext();) {\n        var e = i.next();\n        var maxSegmentIndex = e.getMaximumSegmentIndex();\n        var isClosed = e.isClosed();\n        var p0 = e.getCoordinate(0);\n        this.addEndpoint(endPoints, p0, isClosed);\n        var p1 = e.getCoordinate(e.getNumPoints() - 1);\n        this.addEndpoint(endPoints, p1, isClosed);\n      }\n\n      for (var i = endPoints.values().iterator(); i.hasNext();) {\n        var eiInfo = i.next();\n\n        if (eiInfo.isClosed && eiInfo.degree !== 2) {\n          this._nonSimpleLocation = eiInfo.getCoordinate();\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    getNonSimpleLocation() {\n      return this._nonSimpleLocation;\n    }\n\n    isSimpleLinearGeometry(geom) {\n      if (geom.isEmpty()) return true;\n      var graph = new GeometryGraph(0, geom);\n      var li = new RobustLineIntersector();\n      var si = graph.computeSelfNodes(li, true);\n      if (!si.hasIntersection()) return true;\n\n      if (si.hasProperIntersection()) {\n        this._nonSimpleLocation = si.getProperIntersectionPoint();\n        return false;\n      }\n\n      if (this.hasNonEndpointIntersection(graph)) return false;\n\n      if (this._isClosedEndpointsInInterior) {\n        if (this.hasClosedEndpointIntersection(graph)) return false;\n      }\n\n      return true;\n    }\n\n    hasNonEndpointIntersection(graph) {\n      for (var i = graph.getEdgeIterator(); i.hasNext();) {\n        var e = i.next();\n        var maxSegmentIndex = e.getMaximumSegmentIndex();\n\n        for (var eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext();) {\n          var ei = eiIt.next();\n\n          if (!ei.isEndPoint(maxSegmentIndex)) {\n            this._nonSimpleLocation = ei.getCoordinate();\n            return true;\n          }\n        }\n      }\n\n      return false;\n    }\n\n    addEndpoint(endPoints, p, isClosed) {\n      var eiInfo = endPoints.get(p);\n\n      if (eiInfo === null) {\n        eiInfo = new EndpointInfo(p);\n        endPoints.put(p, eiInfo);\n      }\n\n      eiInfo.addEndpoint(isClosed);\n    }\n\n    computeSimple(geom) {\n      this._nonSimpleLocation = null;\n      if (geom.isEmpty()) return true;\n      if (geom instanceof LineString) return this.isSimpleLinearGeometry(geom);\n      if (geom instanceof MultiLineString) return this.isSimpleLinearGeometry(geom);\n      if (geom instanceof MultiPoint) return this.isSimpleMultiPoint(geom);\n      if (hasInterface(geom, Polygonal)) return this.isSimplePolygonal(geom);\n      if (geom instanceof GeometryCollection) return this.isSimpleGeometryCollection(geom);\n      return true;\n    }\n\n    isSimple() {\n      this._nonSimpleLocation = null;\n      return this.computeSimple(this._inputGeom);\n    }\n\n    isSimpleGeometryCollection(geom) {\n      for (var i = 0; i < geom.getNumGeometries(); i++) {\n        var comp = geom.getGeometryN(i);\n        if (!this.computeSimple(comp)) return false;\n      }\n\n      return true;\n    }\n\n    getClass() {\n      return IsSimpleOp;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  class EndpointInfo {\n    constructor() {\n      EndpointInfo.constructor_.apply(this, arguments);\n    }\n\n    addEndpoint(isClosed) {\n      this.degree++;\n      this.isClosed |= isClosed;\n    }\n\n    getCoordinate() {\n      return this.pt;\n    }\n\n    getClass() {\n      return EndpointInfo;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  EndpointInfo.constructor_ = function () {\n    this.pt = null;\n    this.isClosed = null;\n    this.degree = null;\n    let pt = arguments[0];\n    this.pt = pt;\n    this.isClosed = false;\n    this.degree = 0;\n  };\n\n  IsSimpleOp.EndpointInfo = EndpointInfo;\n\n  IsSimpleOp.constructor_ = function () {\n    this._inputGeom = null;\n    this._isClosedEndpointsInInterior = true;\n    this._nonSimpleLocation = null;\n\n    if (arguments.length === 1) {\n      let geom = arguments[0];\n      this._inputGeom = geom;\n    } else if (arguments.length === 2) {\n      let geom = arguments[0],\n          boundaryNodeRule = arguments[1];\n      this._inputGeom = geom;\n      this._isClosedEndpointsInInterior = !boundaryNodeRule.isInBoundary(2);\n    }\n  };\n\n  class BufferParameters {\n    constructor() {\n      BufferParameters.constructor_.apply(this, arguments);\n    }\n\n    static bufferDistanceError(quadSegs) {\n      var alpha = Math.PI / 2.0 / quadSegs;\n      return 1 - Math.cos(alpha / 2.0);\n    }\n\n    getEndCapStyle() {\n      return this._endCapStyle;\n    }\n\n    isSingleSided() {\n      return this._isSingleSided;\n    }\n\n    setQuadrantSegments(quadSegs) {\n      this._quadrantSegments = quadSegs;\n      if (this._quadrantSegments === 0) this._joinStyle = BufferParameters.JOIN_BEVEL;\n\n      if (this._quadrantSegments < 0) {\n        this._joinStyle = BufferParameters.JOIN_MITRE;\n        this._mitreLimit = Math.abs(this._quadrantSegments);\n      }\n\n      if (quadSegs <= 0) {\n        this._quadrantSegments = 1;\n      }\n\n      if (this._joinStyle !== BufferParameters.JOIN_ROUND) {\n        this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n      }\n    }\n\n    getJoinStyle() {\n      return this._joinStyle;\n    }\n\n    setJoinStyle(joinStyle) {\n      this._joinStyle = joinStyle;\n    }\n\n    setSimplifyFactor(simplifyFactor) {\n      this._simplifyFactor = simplifyFactor < 0 ? 0 : simplifyFactor;\n    }\n\n    getSimplifyFactor() {\n      return this._simplifyFactor;\n    }\n\n    getQuadrantSegments() {\n      return this._quadrantSegments;\n    }\n\n    setEndCapStyle(endCapStyle) {\n      this._endCapStyle = endCapStyle;\n    }\n\n    getMitreLimit() {\n      return this._mitreLimit;\n    }\n\n    setMitreLimit(mitreLimit) {\n      this._mitreLimit = mitreLimit;\n    }\n\n    setSingleSided(isSingleSided) {\n      this._isSingleSided = isSingleSided;\n    }\n\n    getClass() {\n      return BufferParameters;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  BufferParameters.constructor_ = function () {\n    this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n    this._endCapStyle = BufferParameters.CAP_ROUND;\n    this._joinStyle = BufferParameters.JOIN_ROUND;\n    this._mitreLimit = BufferParameters.DEFAULT_MITRE_LIMIT;\n    this._isSingleSided = false;\n    this._simplifyFactor = BufferParameters.DEFAULT_SIMPLIFY_FACTOR;\n\n    if (arguments.length === 0) ; else if (arguments.length === 1) {\n      let quadrantSegments = arguments[0];\n      this.setQuadrantSegments(quadrantSegments);\n    } else if (arguments.length === 2) {\n      let quadrantSegments = arguments[0],\n          endCapStyle = arguments[1];\n      this.setQuadrantSegments(quadrantSegments);\n      this.setEndCapStyle(endCapStyle);\n    } else if (arguments.length === 4) {\n      let quadrantSegments = arguments[0],\n          endCapStyle = arguments[1],\n          joinStyle = arguments[2],\n          mitreLimit = arguments[3];\n      this.setQuadrantSegments(quadrantSegments);\n      this.setEndCapStyle(endCapStyle);\n      this.setJoinStyle(joinStyle);\n      this.setMitreLimit(mitreLimit);\n    }\n  };\n\n  BufferParameters.CAP_ROUND = 1;\n  BufferParameters.CAP_FLAT = 2;\n  BufferParameters.CAP_SQUARE = 3;\n  BufferParameters.JOIN_ROUND = 1;\n  BufferParameters.JOIN_MITRE = 2;\n  BufferParameters.JOIN_BEVEL = 3;\n  BufferParameters.DEFAULT_QUADRANT_SEGMENTS = 8;\n  BufferParameters.DEFAULT_MITRE_LIMIT = 5.0;\n  BufferParameters.DEFAULT_SIMPLIFY_FACTOR = 0.01;\n\n  class RightmostEdgeFinder {\n    constructor() {\n      RightmostEdgeFinder.constructor_.apply(this, arguments);\n    }\n\n    getCoordinate() {\n      return this._minCoord;\n    }\n\n    getRightmostSide(de, index) {\n      var side = this.getRightmostSideOfSegment(de, index);\n      if (side < 0) side = this.getRightmostSideOfSegment(de, index - 1);\n\n      if (side < 0) {\n        this._minCoord = null;\n        this.checkForRightmostCoordinate(de);\n      }\n\n      return side;\n    }\n\n    findRightmostEdgeAtVertex() {\n      var pts = this._minDe.getEdge().getCoordinates();\n\n      Assert.isTrue(this._minIndex > 0 && this._minIndex < pts.length, \"rightmost point expected to be interior vertex of edge\");\n      var pPrev = pts[this._minIndex - 1];\n      var pNext = pts[this._minIndex + 1];\n      var orientation = Orientation.index(this._minCoord, pNext, pPrev);\n      var usePrev = false;\n\n      if (pPrev.y < this._minCoord.y && pNext.y < this._minCoord.y && orientation === Orientation.COUNTERCLOCKWISE) {\n        usePrev = true;\n      } else if (pPrev.y > this._minCoord.y && pNext.y > this._minCoord.y && orientation === Orientation.CLOCKWISE) {\n        usePrev = true;\n      }\n\n      if (usePrev) {\n        this._minIndex = this._minIndex - 1;\n      }\n    }\n\n    getRightmostSideOfSegment(de, i) {\n      var e = de.getEdge();\n      var coord = e.getCoordinates();\n      if (i < 0 || i + 1 >= coord.length) return -1;\n      if (coord[i].y === coord[i + 1].y) return -1;\n      var pos = Position.LEFT;\n      if (coord[i].y < coord[i + 1].y) pos = Position.RIGHT;\n      return pos;\n    }\n\n    getEdge() {\n      return this._orientedDe;\n    }\n\n    checkForRightmostCoordinate(de) {\n      var coord = de.getEdge().getCoordinates();\n\n      for (var i = 0; i < coord.length - 1; i++) {\n        if (this._minCoord === null || coord[i].x > this._minCoord.x) {\n          this._minDe = de;\n          this._minIndex = i;\n          this._minCoord = coord[i];\n        }\n      }\n    }\n\n    findRightmostEdgeAtNode() {\n      var node = this._minDe.getNode();\n\n      var star = node.getEdges();\n      this._minDe = star.getRightmostEdge();\n\n      if (!this._minDe.isForward()) {\n        this._minDe = this._minDe.getSym();\n        this._minIndex = this._minDe.getEdge().getCoordinates().length - 1;\n      }\n    }\n\n    findEdge(dirEdgeList) {\n      for (var i = dirEdgeList.iterator(); i.hasNext();) {\n        var de = i.next();\n        if (!de.isForward()) continue;\n        this.checkForRightmostCoordinate(de);\n      }\n\n      Assert.isTrue(this._minIndex !== 0 || this._minCoord.equals(this._minDe.getCoordinate()), \"inconsistency in rightmost processing\");\n\n      if (this._minIndex === 0) {\n        this.findRightmostEdgeAtNode();\n      } else {\n        this.findRightmostEdgeAtVertex();\n      }\n\n      this._orientedDe = this._minDe;\n      var rightmostSide = this.getRightmostSide(this._minDe, this._minIndex);\n\n      if (rightmostSide === Position.LEFT) {\n        this._orientedDe = this._minDe.getSym();\n      }\n    }\n\n    getClass() {\n      return RightmostEdgeFinder;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  RightmostEdgeFinder.constructor_ = function () {\n    this._minIndex = -1;\n    this._minCoord = null;\n    this._minDe = null;\n    this._orientedDe = null;\n  };\n\n  function LinkedList() {\n    this.array_ = [];\n  }\n\n  LinkedList.prototype.addLast = function (e) {\n    this.array_.push(e);\n  };\n\n  LinkedList.prototype.removeFirst = function () {\n    return this.array_.shift();\n  };\n\n  LinkedList.prototype.isEmpty = function () {\n    return this.array_.length === 0;\n  };\n\n  class BufferSubgraph {\n    constructor() {\n      BufferSubgraph.constructor_.apply(this, arguments);\n    }\n\n    clearVisitedEdges() {\n      for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n        var de = it.next();\n        de.setVisited(false);\n      }\n    }\n\n    getRightmostCoordinate() {\n      return this._rightMostCoord;\n    }\n\n    computeNodeDepth(n) {\n      var startEdge = null;\n\n      for (var i = n.getEdges().iterator(); i.hasNext();) {\n        var de = i.next();\n\n        if (de.isVisited() || de.getSym().isVisited()) {\n          startEdge = de;\n          break;\n        }\n      }\n\n      if (startEdge === null) throw new TopologyException(\"unable to find edge to compute depths at \" + n.getCoordinate());\n      n.getEdges().computeDepths(startEdge);\n\n      for (var i = n.getEdges().iterator(); i.hasNext();) {\n        var de = i.next();\n        de.setVisited(true);\n        this.copySymDepths(de);\n      }\n    }\n\n    computeDepth(outsideDepth) {\n      this.clearVisitedEdges();\n\n      var de = this._finder.getEdge();\n\n      var n = de.getNode();\n      var label = de.getLabel();\n      de.setEdgeDepths(Position.RIGHT, outsideDepth);\n      this.copySymDepths(de);\n      this.computeDepths(de);\n    }\n\n    create(node) {\n      this.addReachable(node);\n\n      this._finder.findEdge(this._dirEdgeList);\n\n      this._rightMostCoord = this._finder.getCoordinate();\n    }\n\n    findResultEdges() {\n      for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n        var de = it.next();\n\n        if (de.getDepth(Position.RIGHT) >= 1 && de.getDepth(Position.LEFT) <= 0 && !de.isInteriorAreaEdge()) {\n          de.setInResult(true);\n        }\n      }\n    }\n\n    computeDepths(startEdge) {\n      var nodesVisited = new HashSet();\n      var nodeQueue = new LinkedList();\n      var startNode = startEdge.getNode();\n      nodeQueue.addLast(startNode);\n      nodesVisited.add(startNode);\n      startEdge.setVisited(true);\n\n      while (!nodeQueue.isEmpty()) {\n        var n = nodeQueue.removeFirst();\n        nodesVisited.add(n);\n        this.computeNodeDepth(n);\n\n        for (var i = n.getEdges().iterator(); i.hasNext();) {\n          var de = i.next();\n          var sym = de.getSym();\n          if (sym.isVisited()) continue;\n          var adjNode = sym.getNode();\n\n          if (!nodesVisited.contains(adjNode)) {\n            nodeQueue.addLast(adjNode);\n            nodesVisited.add(adjNode);\n          }\n        }\n      }\n    }\n\n    compareTo(o) {\n      var graph = o;\n\n      if (this._rightMostCoord.x < graph._rightMostCoord.x) {\n        return -1;\n      }\n\n      if (this._rightMostCoord.x > graph._rightMostCoord.x) {\n        return 1;\n      }\n\n      return 0;\n    }\n\n    getEnvelope() {\n      if (this._env === null) {\n        var edgeEnv = new Envelope();\n\n        for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n          var dirEdge = it.next();\n          var pts = dirEdge.getEdge().getCoordinates();\n\n          for (var i = 0; i < pts.length - 1; i++) {\n            edgeEnv.expandToInclude(pts[i]);\n          }\n        }\n\n        this._env = edgeEnv;\n      }\n\n      return this._env;\n    }\n\n    addReachable(startNode) {\n      var nodeStack = new Stack();\n      nodeStack.add(startNode);\n\n      while (!nodeStack.empty()) {\n        var node = nodeStack.pop();\n        this.add(node, nodeStack);\n      }\n    }\n\n    copySymDepths(de) {\n      var sym = de.getSym();\n      sym.setDepth(Position.LEFT, de.getDepth(Position.RIGHT));\n      sym.setDepth(Position.RIGHT, de.getDepth(Position.LEFT));\n    }\n\n    add(node, nodeStack) {\n      node.setVisited(true);\n\n      this._nodes.add(node);\n\n      for (var i = node.getEdges().iterator(); i.hasNext();) {\n        var de = i.next();\n\n        this._dirEdgeList.add(de);\n\n        var sym = de.getSym();\n        var symNode = sym.getNode();\n        if (!symNode.isVisited()) nodeStack.push(symNode);\n      }\n    }\n\n    getNodes() {\n      return this._nodes;\n    }\n\n    getDirectedEdges() {\n      return this._dirEdgeList;\n    }\n\n    getClass() {\n      return BufferSubgraph;\n    }\n\n    get interfaces_() {\n      return [Comparable];\n    }\n\n  }\n\n  BufferSubgraph.constructor_ = function () {\n    this._finder = null;\n    this._dirEdgeList = new ArrayList();\n    this._nodes = new ArrayList();\n    this._rightMostCoord = null;\n    this._env = null;\n    this._finder = new RightmostEdgeFinder();\n  };\n\n  class EdgeRing {\n    constructor() {\n      EdgeRing.constructor_.apply(this, arguments);\n    }\n\n    computeRing() {\n      if (this._ring !== null) return null;\n      var coord = new Array(this._pts.size()).fill(null);\n\n      for (var i = 0; i < this._pts.size(); i++) {\n        coord[i] = this._pts.get(i);\n      }\n\n      this._ring = this._geometryFactory.createLinearRing(coord);\n      this._isHole = Orientation.isCCW(this._ring.getCoordinates());\n    }\n\n    isIsolated() {\n      return this._label.getGeometryCount() === 1;\n    }\n\n    computePoints(start) {\n      this._startDe = start;\n      var de = start;\n      var isFirstEdge = true;\n\n      do {\n        if (de === null) throw new TopologyException(\"Found null DirectedEdge\");\n        if (de.getEdgeRing() === this) throw new TopologyException(\"Directed Edge visited twice during ring-building at \" + de.getCoordinate());\n\n        this._edges.add(de);\n\n        var label = de.getLabel();\n        Assert.isTrue(label.isArea());\n        this.mergeLabel(label);\n        this.addPoints(de.getEdge(), de.isForward(), isFirstEdge);\n        isFirstEdge = false;\n        this.setEdgeRing(de, this);\n        de = this.getNext(de);\n      } while (de !== this._startDe);\n    }\n\n    getLinearRing() {\n      return this._ring;\n    }\n\n    getCoordinate(i) {\n      return this._pts.get(i);\n    }\n\n    computeMaxNodeDegree() {\n      this._maxNodeDegree = 0;\n      var de = this._startDe;\n\n      do {\n        var node = de.getNode();\n        var degree = node.getEdges().getOutgoingDegree(this);\n        if (degree > this._maxNodeDegree) this._maxNodeDegree = degree;\n        de = this.getNext(de);\n      } while (de !== this._startDe);\n\n      this._maxNodeDegree *= 2;\n    }\n\n    addPoints(edge, isForward, isFirstEdge) {\n      var edgePts = edge.getCoordinates();\n\n      if (isForward) {\n        var startIndex = 1;\n        if (isFirstEdge) startIndex = 0;\n\n        for (var i = startIndex; i < edgePts.length; i++) {\n          this._pts.add(edgePts[i]);\n        }\n      } else {\n        var startIndex = edgePts.length - 2;\n        if (isFirstEdge) startIndex = edgePts.length - 1;\n\n        for (var i = startIndex; i >= 0; i--) {\n          this._pts.add(edgePts[i]);\n        }\n      }\n    }\n\n    isHole() {\n      return this._isHole;\n    }\n\n    setInResult() {\n      var de = this._startDe;\n\n      do {\n        de.getEdge().setInResult(true);\n        de = de.getNext();\n      } while (de !== this._startDe);\n    }\n\n    containsPoint(p) {\n      var shell = this.getLinearRing();\n      var env = shell.getEnvelopeInternal();\n      if (!env.contains(p)) return false;\n      if (!PointLocation.isInRing(p, shell.getCoordinates())) return false;\n\n      for (var i = this._holes.iterator(); i.hasNext();) {\n        var hole = i.next();\n        if (hole.containsPoint(p)) return false;\n      }\n\n      return true;\n    }\n\n    addHole(ring) {\n      this._holes.add(ring);\n    }\n\n    isShell() {\n      return this._shell === null;\n    }\n\n    getLabel() {\n      return this._label;\n    }\n\n    getEdges() {\n      return this._edges;\n    }\n\n    getMaxNodeDegree() {\n      if (this._maxNodeDegree < 0) this.computeMaxNodeDegree();\n      return this._maxNodeDegree;\n    }\n\n    getShell() {\n      return this._shell;\n    }\n\n    mergeLabel() {\n      if (arguments.length === 1) {\n        let deLabel = arguments[0];\n        this.mergeLabel(deLabel, 0);\n        this.mergeLabel(deLabel, 1);\n      } else if (arguments.length === 2) {\n        let deLabel = arguments[0],\n            geomIndex = arguments[1];\n        var loc = deLabel.getLocation(geomIndex, Position.RIGHT);\n        if (loc === Location.NONE) return null;\n\n        if (this._label.getLocation(geomIndex) === Location.NONE) {\n          this._label.setLocation(geomIndex, loc);\n\n          return null;\n        }\n      }\n    }\n\n    setShell(shell) {\n      this._shell = shell;\n      if (shell !== null) shell.addHole(this);\n    }\n\n    toPolygon(geometryFactory) {\n      var holeLR = new Array(this._holes.size()).fill(null);\n\n      for (var i = 0; i < this._holes.size(); i++) {\n        holeLR[i] = this._holes.get(i).getLinearRing();\n      }\n\n      var poly = geometryFactory.createPolygon(this.getLinearRing(), holeLR);\n      return poly;\n    }\n\n    getClass() {\n      return EdgeRing;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  EdgeRing.constructor_ = function () {\n    this._startDe = null;\n    this._maxNodeDegree = -1;\n    this._edges = new ArrayList();\n    this._pts = new ArrayList();\n    this._label = new Label(Location.NONE);\n    this._ring = null;\n    this._isHole = null;\n    this._shell = null;\n    this._holes = new ArrayList();\n    this._geometryFactory = null;\n\n    if (arguments.length === 0) ; else if (arguments.length === 2) {\n      let start = arguments[0],\n          geometryFactory = arguments[1];\n      this._geometryFactory = geometryFactory;\n      this.computePoints(start);\n      this.computeRing();\n    }\n  };\n\n  class MinimalEdgeRing extends EdgeRing {\n    constructor() {\n      super();\n      MinimalEdgeRing.constructor_.apply(this, arguments);\n    }\n\n    setEdgeRing(de, er) {\n      de.setMinEdgeRing(er);\n    }\n\n    getNext(de) {\n      return de.getNextMin();\n    }\n\n    getClass() {\n      return MinimalEdgeRing;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  MinimalEdgeRing.constructor_ = function () {\n    let start = arguments[0],\n        geometryFactory = arguments[1];\n    EdgeRing.constructor_.call(this, start, geometryFactory);\n  };\n\n  class MaximalEdgeRing extends EdgeRing {\n    constructor() {\n      super();\n      MaximalEdgeRing.constructor_.apply(this, arguments);\n    }\n\n    buildMinimalRings() {\n      var minEdgeRings = new ArrayList();\n      var de = this._startDe;\n\n      do {\n        if (de.getMinEdgeRing() === null) {\n          var minEr = new MinimalEdgeRing(de, this._geometryFactory);\n          minEdgeRings.add(minEr);\n        }\n\n        de = de.getNext();\n      } while (de !== this._startDe);\n\n      return minEdgeRings;\n    }\n\n    setEdgeRing(de, er) {\n      de.setEdgeRing(er);\n    }\n\n    linkDirectedEdgesForMinimalEdgeRings() {\n      var de = this._startDe;\n\n      do {\n        var node = de.getNode();\n        node.getEdges().linkMinimalDirectedEdges(this);\n        de = de.getNext();\n      } while (de !== this._startDe);\n    }\n\n    getNext(de) {\n      return de.getNext();\n    }\n\n    getClass() {\n      return MaximalEdgeRing;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  MaximalEdgeRing.constructor_ = function () {\n    let start = arguments[0],\n        geometryFactory = arguments[1];\n    EdgeRing.constructor_.call(this, start, geometryFactory);\n  };\n\n  class PolygonBuilder {\n    constructor() {\n      PolygonBuilder.constructor_.apply(this, arguments);\n    }\n\n    sortShellsAndHoles(edgeRings, shellList, freeHoleList) {\n      for (var it = edgeRings.iterator(); it.hasNext();) {\n        var er = it.next();\n\n        if (er.isHole()) {\n          freeHoleList.add(er);\n        } else {\n          shellList.add(er);\n        }\n      }\n    }\n\n    computePolygons(shellList) {\n      var resultPolyList = new ArrayList();\n\n      for (var it = shellList.iterator(); it.hasNext();) {\n        var er = it.next();\n        var poly = er.toPolygon(this._geometryFactory);\n        resultPolyList.add(poly);\n      }\n\n      return resultPolyList;\n    }\n\n    placeFreeHoles(shellList, freeHoleList) {\n      for (var it = freeHoleList.iterator(); it.hasNext();) {\n        var hole = it.next();\n\n        if (hole.getShell() === null) {\n          var shell = this.findEdgeRingContaining(hole, shellList);\n          if (shell === null) throw new TopologyException(\"unable to assign hole to a shell\", hole.getCoordinate(0));\n          hole.setShell(shell);\n        }\n      }\n    }\n\n    buildMinimalEdgeRings(maxEdgeRings, shellList, freeHoleList) {\n      var edgeRings = new ArrayList();\n\n      for (var it = maxEdgeRings.iterator(); it.hasNext();) {\n        var er = it.next();\n\n        if (er.getMaxNodeDegree() > 2) {\n          er.linkDirectedEdgesForMinimalEdgeRings();\n          var minEdgeRings = er.buildMinimalRings();\n          var shell = this.findShell(minEdgeRings);\n\n          if (shell !== null) {\n            this.placePolygonHoles(shell, minEdgeRings);\n            shellList.add(shell);\n          } else {\n            freeHoleList.addAll(minEdgeRings);\n          }\n        } else {\n          edgeRings.add(er);\n        }\n      }\n\n      return edgeRings;\n    }\n\n    containsPoint(p) {\n      for (var it = this._shellList.iterator(); it.hasNext();) {\n        var er = it.next();\n        if (er.containsPoint(p)) return true;\n      }\n\n      return false;\n    }\n\n    buildMaximalEdgeRings(dirEdges) {\n      var maxEdgeRings = new ArrayList();\n\n      for (var it = dirEdges.iterator(); it.hasNext();) {\n        var de = it.next();\n\n        if (de.isInResult() && de.getLabel().isArea()) {\n          if (de.getEdgeRing() === null) {\n            var er = new MaximalEdgeRing(de, this._geometryFactory);\n            maxEdgeRings.add(er);\n            er.setInResult();\n          }\n        }\n      }\n\n      return maxEdgeRings;\n    }\n\n    placePolygonHoles(shell, minEdgeRings) {\n      for (var it = minEdgeRings.iterator(); it.hasNext();) {\n        var er = it.next();\n\n        if (er.isHole()) {\n          er.setShell(shell);\n        }\n      }\n    }\n\n    getPolygons() {\n      var resultPolyList = this.computePolygons(this._shellList);\n      return resultPolyList;\n    }\n\n    findEdgeRingContaining(testEr, shellList) {\n      var testRing = testEr.getLinearRing();\n      var testEnv = testRing.getEnvelopeInternal();\n      var testPt = testRing.getCoordinateN(0);\n      var minShell = null;\n      var minEnv = null;\n\n      for (var it = shellList.iterator(); it.hasNext();) {\n        var tryShell = it.next();\n        var tryRing = tryShell.getLinearRing();\n        var tryEnv = tryRing.getEnvelopeInternal();\n        if (minShell !== null) minEnv = minShell.getLinearRing().getEnvelopeInternal();\n        var isContained = false;\n        if (tryEnv.contains(testEnv) && PointLocation.isInRing(testPt, tryRing.getCoordinates())) isContained = true;\n\n        if (isContained) {\n          if (minShell === null || minEnv.contains(tryEnv)) {\n            minShell = tryShell;\n          }\n        }\n      }\n\n      return minShell;\n    }\n\n    findShell(minEdgeRings) {\n      var shellCount = 0;\n      var shell = null;\n\n      for (var it = minEdgeRings.iterator(); it.hasNext();) {\n        var er = it.next();\n\n        if (!er.isHole()) {\n          shell = er;\n          shellCount++;\n        }\n      }\n\n      Assert.isTrue(shellCount <= 1, \"found two shells in MinimalEdgeRing list\");\n      return shell;\n    }\n\n    add() {\n      if (arguments.length === 1) {\n        let graph = arguments[0];\n        this.add(graph.getEdgeEnds(), graph.getNodes());\n      } else if (arguments.length === 2) {\n        let dirEdges = arguments[0],\n            nodes = arguments[1];\n        PlanarGraph.linkResultDirectedEdges(nodes);\n        var maxEdgeRings = this.buildMaximalEdgeRings(dirEdges);\n        var freeHoleList = new ArrayList();\n        var edgeRings = this.buildMinimalEdgeRings(maxEdgeRings, this._shellList, freeHoleList);\n        this.sortShellsAndHoles(edgeRings, this._shellList, freeHoleList);\n        this.placeFreeHoles(this._shellList, freeHoleList);\n      }\n    }\n\n    getClass() {\n      return PolygonBuilder;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  PolygonBuilder.constructor_ = function () {\n    this._geometryFactory = null;\n    this._shellList = new ArrayList();\n    let geometryFactory = arguments[0];\n    this._geometryFactory = geometryFactory;\n  };\n\n  class BufferInputLineSimplifier {\n    constructor() {\n      BufferInputLineSimplifier.constructor_.apply(this, arguments);\n    }\n\n    static simplify(inputLine, distanceTol) {\n      var simp = new BufferInputLineSimplifier(inputLine);\n      return simp.simplify(distanceTol);\n    }\n\n    isDeletable(i0, i1, i2, distanceTol) {\n      var p0 = this._inputLine[i0];\n      var p1 = this._inputLine[i1];\n      var p2 = this._inputLine[i2];\n      if (!this.isConcave(p0, p1, p2)) return false;\n      if (!this.isShallow(p0, p1, p2, distanceTol)) return false;\n      return this.isShallowSampled(p0, p1, i0, i2, distanceTol);\n    }\n\n    deleteShallowConcavities() {\n      var index = 1;\n      var maxIndex = this._inputLine.length - 1;\n      var midIndex = this.findNextNonDeletedIndex(index);\n      var lastIndex = this.findNextNonDeletedIndex(midIndex);\n      var isChanged = false;\n\n      while (lastIndex < this._inputLine.length) {\n        var isMiddleVertexDeleted = false;\n\n        if (this.isDeletable(index, midIndex, lastIndex, this._distanceTol)) {\n          this._isDeleted[midIndex] = BufferInputLineSimplifier.DELETE;\n          isMiddleVertexDeleted = true;\n          isChanged = true;\n        }\n\n        if (isMiddleVertexDeleted) index = lastIndex;else index = midIndex;\n        midIndex = this.findNextNonDeletedIndex(index);\n        lastIndex = this.findNextNonDeletedIndex(midIndex);\n      }\n\n      return isChanged;\n    }\n\n    isShallowConcavity(p0, p1, p2, distanceTol) {\n      var orientation = Orientation.index(p0, p1, p2);\n      var isAngleToSimplify = orientation === this._angleOrientation;\n      if (!isAngleToSimplify) return false;\n      var dist = Distance.pointToSegment(p1, p0, p2);\n      return dist < distanceTol;\n    }\n\n    isShallowSampled(p0, p2, i0, i2, distanceTol) {\n      var inc = Math.trunc((i2 - i0) / BufferInputLineSimplifier.NUM_PTS_TO_CHECK);\n      if (inc <= 0) inc = 1;\n\n      for (var i = i0; i < i2; i += inc) {\n        if (!this.isShallow(p0, p2, this._inputLine[i], distanceTol)) return false;\n      }\n\n      return true;\n    }\n\n    isConcave(p0, p1, p2) {\n      var orientation = Orientation.index(p0, p1, p2);\n      var isConcave = orientation === this._angleOrientation;\n      return isConcave;\n    }\n\n    simplify(distanceTol) {\n      this._distanceTol = Math.abs(distanceTol);\n      if (distanceTol < 0) this._angleOrientation = Orientation.CLOCKWISE;\n      this._isDeleted = new Array(this._inputLine.length).fill(null);\n      var isChanged = false;\n\n      do {\n        isChanged = this.deleteShallowConcavities();\n      } while (isChanged);\n\n      return this.collapseLine();\n    }\n\n    findNextNonDeletedIndex(index) {\n      var next = index + 1;\n\n      while (next < this._inputLine.length && this._isDeleted[next] === BufferInputLineSimplifier.DELETE) next++;\n\n      return next;\n    }\n\n    isShallow(p0, p1, p2, distanceTol) {\n      var dist = Distance.pointToSegment(p1, p0, p2);\n      return dist < distanceTol;\n    }\n\n    collapseLine() {\n      var coordList = new CoordinateList();\n\n      for (var i = 0; i < this._inputLine.length; i++) {\n        if (this._isDeleted[i] !== BufferInputLineSimplifier.DELETE) coordList.add(this._inputLine[i]);\n      }\n\n      return coordList.toCoordinateArray();\n    }\n\n    getClass() {\n      return BufferInputLineSimplifier;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  BufferInputLineSimplifier.constructor_ = function () {\n    this._inputLine = null;\n    this._distanceTol = null;\n    this._isDeleted = null;\n    this._angleOrientation = Orientation.COUNTERCLOCKWISE;\n    let inputLine = arguments[0];\n    this._inputLine = inputLine;\n  };\n\n  BufferInputLineSimplifier.INIT = 0;\n  BufferInputLineSimplifier.DELETE = 1;\n  BufferInputLineSimplifier.KEEP = 1;\n  BufferInputLineSimplifier.NUM_PTS_TO_CHECK = 10;\n\n  class OffsetSegmentString {\n    constructor() {\n      OffsetSegmentString.constructor_.apply(this, arguments);\n    }\n\n    getCoordinates() {\n      var coord = this._ptList.toArray(OffsetSegmentString.COORDINATE_ARRAY_TYPE);\n\n      return coord;\n    }\n\n    setPrecisionModel(precisionModel) {\n      this._precisionModel = precisionModel;\n    }\n\n    addPt(pt) {\n      var bufPt = new Coordinate(pt);\n\n      this._precisionModel.makePrecise(bufPt);\n\n      if (this.isRedundant(bufPt)) return null;\n\n      this._ptList.add(bufPt);\n    }\n\n    reverse() {}\n\n    addPts(pt, isForward) {\n      if (isForward) {\n        for (var i = 0; i < pt.length; i++) {\n          this.addPt(pt[i]);\n        }\n      } else {\n        for (var i = pt.length - 1; i >= 0; i--) {\n          this.addPt(pt[i]);\n        }\n      }\n    }\n\n    isRedundant(pt) {\n      if (this._ptList.size() < 1) return false;\n\n      var lastPt = this._ptList.get(this._ptList.size() - 1);\n\n      var ptDist = pt.distance(lastPt);\n      if (ptDist < this._minimimVertexDistance) return true;\n      return false;\n    }\n\n    toString() {\n      var fact = new GeometryFactory();\n      var line = fact.createLineString(this.getCoordinates());\n      return line.toString();\n    }\n\n    closeRing() {\n      if (this._ptList.size() < 1) return null;\n      var startPt = new Coordinate(this._ptList.get(0));\n\n      var lastPt = this._ptList.get(this._ptList.size() - 1);\n\n      var last2Pt = null;\n      if (this._ptList.size() >= 2) last2Pt = this._ptList.get(this._ptList.size() - 2);\n      if (startPt.equals(lastPt)) return null;\n\n      this._ptList.add(startPt);\n    }\n\n    setMinimumVertexDistance(minimimVertexDistance) {\n      this._minimimVertexDistance = minimimVertexDistance;\n    }\n\n    getClass() {\n      return OffsetSegmentString;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  OffsetSegmentString.constructor_ = function () {\n    this._ptList = null;\n    this._precisionModel = null;\n    this._minimimVertexDistance = 0.0;\n    this._ptList = new ArrayList();\n  };\n\n  OffsetSegmentString.COORDINATE_ARRAY_TYPE = new Array(0).fill(null);\n\n  class OffsetSegmentGenerator {\n    constructor() {\n      OffsetSegmentGenerator.constructor_.apply(this, arguments);\n    }\n\n    addNextSegment(p, addStartPoint) {\n      this._s0 = this._s1;\n      this._s1 = this._s2;\n      this._s2 = p;\n\n      this._seg0.setCoordinates(this._s0, this._s1);\n\n      this.computeOffsetSegment(this._seg0, this._side, this._distance, this._offset0);\n\n      this._seg1.setCoordinates(this._s1, this._s2);\n\n      this.computeOffsetSegment(this._seg1, this._side, this._distance, this._offset1);\n      if (this._s1.equals(this._s2)) return null;\n      var orientation = Orientation.index(this._s0, this._s1, this._s2);\n      var outsideTurn = orientation === Orientation.CLOCKWISE && this._side === Position.LEFT || orientation === Orientation.COUNTERCLOCKWISE && this._side === Position.RIGHT;\n\n      if (orientation === 0) {\n        this.addCollinear(addStartPoint);\n      } else if (outsideTurn) {\n        this.addOutsideTurn(orientation, addStartPoint);\n      } else {\n        this.addInsideTurn(orientation, addStartPoint);\n      }\n    }\n\n    addLineEndCap(p0, p1) {\n      var seg = new LineSegment(p0, p1);\n      var offsetL = new LineSegment();\n      this.computeOffsetSegment(seg, Position.LEFT, this._distance, offsetL);\n      var offsetR = new LineSegment();\n      this.computeOffsetSegment(seg, Position.RIGHT, this._distance, offsetR);\n      var dx = p1.x - p0.x;\n      var dy = p1.y - p0.y;\n      var angle = Math.atan2(dy, dx);\n\n      switch (this._bufParams.getEndCapStyle()) {\n        case BufferParameters.CAP_ROUND:\n          this._segList.addPt(offsetL.p1);\n\n          this.addDirectedFillet(p1, angle + Math.PI / 2, angle - Math.PI / 2, Orientation.CLOCKWISE, this._distance);\n\n          this._segList.addPt(offsetR.p1);\n\n          break;\n\n        case BufferParameters.CAP_FLAT:\n          this._segList.addPt(offsetL.p1);\n\n          this._segList.addPt(offsetR.p1);\n\n          break;\n\n        case BufferParameters.CAP_SQUARE:\n          var squareCapSideOffset = new Coordinate();\n          squareCapSideOffset.x = Math.abs(this._distance) * Math.cos(angle);\n          squareCapSideOffset.y = Math.abs(this._distance) * Math.sin(angle);\n          var squareCapLOffset = new Coordinate(offsetL.p1.x + squareCapSideOffset.x, offsetL.p1.y + squareCapSideOffset.y);\n          var squareCapROffset = new Coordinate(offsetR.p1.x + squareCapSideOffset.x, offsetR.p1.y + squareCapSideOffset.y);\n\n          this._segList.addPt(squareCapLOffset);\n\n          this._segList.addPt(squareCapROffset);\n\n          break;\n      }\n    }\n\n    getCoordinates() {\n      var pts = this._segList.getCoordinates();\n\n      return pts;\n    }\n\n    addMitreJoin(p, offset0, offset1, distance) {\n      var isMitreWithinLimit = true;\n      var intPt = null;\n\n      try {\n        intPt = HCoordinate.intersection(offset0.p0, offset0.p1, offset1.p0, offset1.p1);\n        var mitreRatio = distance <= 0.0 ? 1.0 : intPt.distance(p) / Math.abs(distance);\n        if (mitreRatio > this._bufParams.getMitreLimit()) isMitreWithinLimit = false;\n      } catch (ex) {\n        if (ex instanceof NotRepresentableException) {\n          intPt = new Coordinate(0, 0);\n          isMitreWithinLimit = false;\n        } else throw ex;\n      } finally {}\n\n      if (isMitreWithinLimit) {\n        this._segList.addPt(intPt);\n      } else {\n        this.addLimitedMitreJoin(offset0, offset1, distance, this._bufParams.getMitreLimit());\n      }\n    }\n\n    addOutsideTurn(orientation, addStartPoint) {\n      if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR) {\n        this._segList.addPt(this._offset0.p1);\n\n        return null;\n      }\n\n      if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n        this.addMitreJoin(this._s1, this._offset0, this._offset1, this._distance);\n      } else if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL) {\n        this.addBevelJoin(this._offset0, this._offset1);\n      } else {\n        if (addStartPoint) this._segList.addPt(this._offset0.p1);\n        this.addCornerFillet(this._s1, this._offset0.p1, this._offset1.p0, orientation, this._distance);\n\n        this._segList.addPt(this._offset1.p0);\n      }\n    }\n\n    createSquare(p) {\n      this._segList.addPt(new Coordinate(p.x + this._distance, p.y + this._distance));\n\n      this._segList.addPt(new Coordinate(p.x + this._distance, p.y - this._distance));\n\n      this._segList.addPt(new Coordinate(p.x - this._distance, p.y - this._distance));\n\n      this._segList.addPt(new Coordinate(p.x - this._distance, p.y + this._distance));\n\n      this._segList.closeRing();\n    }\n\n    addSegments(pt, isForward) {\n      this._segList.addPts(pt, isForward);\n    }\n\n    addFirstSegment() {\n      this._segList.addPt(this._offset1.p0);\n    }\n\n    addCornerFillet(p, p0, p1, direction, radius) {\n      var dx0 = p0.x - p.x;\n      var dy0 = p0.y - p.y;\n      var startAngle = Math.atan2(dy0, dx0);\n      var dx1 = p1.x - p.x;\n      var dy1 = p1.y - p.y;\n      var endAngle = Math.atan2(dy1, dx1);\n\n      if (direction === Orientation.CLOCKWISE) {\n        if (startAngle <= endAngle) startAngle += 2.0 * Math.PI;\n      } else {\n        if (startAngle >= endAngle) startAngle -= 2.0 * Math.PI;\n      }\n\n      this._segList.addPt(p0);\n\n      this.addDirectedFillet(p, startAngle, endAngle, direction, radius);\n\n      this._segList.addPt(p1);\n    }\n\n    addLastSegment() {\n      this._segList.addPt(this._offset1.p1);\n    }\n\n    initSideSegments(s1, s2, side) {\n      this._s1 = s1;\n      this._s2 = s2;\n      this._side = side;\n\n      this._seg1.setCoordinates(s1, s2);\n\n      this.computeOffsetSegment(this._seg1, side, this._distance, this._offset1);\n    }\n\n    addLimitedMitreJoin(offset0, offset1, distance, mitreLimit) {\n      var basePt = this._seg0.p1;\n      var ang0 = Angle.angle(basePt, this._seg0.p0);\n      var ang1 = Angle.angle(basePt, this._seg1.p1);\n      var angDiff = Angle.angleBetweenOriented(this._seg0.p0, basePt, this._seg1.p1);\n      var angDiffHalf = angDiff / 2;\n      var midAng = Angle.normalize(ang0 + angDiffHalf);\n      var mitreMidAng = Angle.normalize(midAng + Math.PI);\n      var mitreDist = mitreLimit * distance;\n      var bevelDelta = mitreDist * Math.abs(Math.sin(angDiffHalf));\n      var bevelHalfLen = distance - bevelDelta;\n      var bevelMidX = basePt.x + mitreDist * Math.cos(mitreMidAng);\n      var bevelMidY = basePt.y + mitreDist * Math.sin(mitreMidAng);\n      var bevelMidPt = new Coordinate(bevelMidX, bevelMidY);\n      var mitreMidLine = new LineSegment(basePt, bevelMidPt);\n      var bevelEndLeft = mitreMidLine.pointAlongOffset(1.0, bevelHalfLen);\n      var bevelEndRight = mitreMidLine.pointAlongOffset(1.0, -bevelHalfLen);\n\n      if (this._side === Position.LEFT) {\n        this._segList.addPt(bevelEndLeft);\n\n        this._segList.addPt(bevelEndRight);\n      } else {\n        this._segList.addPt(bevelEndRight);\n\n        this._segList.addPt(bevelEndLeft);\n      }\n    }\n\n    addDirectedFillet(p, startAngle, endAngle, direction, radius) {\n      var directionFactor = direction === Orientation.CLOCKWISE ? -1 : 1;\n      var totalAngle = Math.abs(startAngle - endAngle);\n      var nSegs = Math.trunc(totalAngle / this._filletAngleQuantum + 0.5);\n      if (nSegs < 1) return null;\n      var initAngle = null,\n          currAngleInc = null;\n      initAngle = 0.0;\n      currAngleInc = totalAngle / nSegs;\n      var currAngle = initAngle;\n      var pt = new Coordinate();\n\n      while (currAngle < totalAngle) {\n        var angle = startAngle + directionFactor * currAngle;\n        pt.x = p.x + radius * Math.cos(angle);\n        pt.y = p.y + radius * Math.sin(angle);\n\n        this._segList.addPt(pt);\n\n        currAngle += currAngleInc;\n      }\n    }\n\n    computeOffsetSegment(seg, side, distance, offset) {\n      var sideSign = side === Position.LEFT ? 1 : -1;\n      var dx = seg.p1.x - seg.p0.x;\n      var dy = seg.p1.y - seg.p0.y;\n      var len = Math.sqrt(dx * dx + dy * dy);\n      var ux = sideSign * distance * dx / len;\n      var uy = sideSign * distance * dy / len;\n      offset.p0.x = seg.p0.x - uy;\n      offset.p0.y = seg.p0.y + ux;\n      offset.p1.x = seg.p1.x - uy;\n      offset.p1.y = seg.p1.y + ux;\n    }\n\n    addInsideTurn(orientation, addStartPoint) {\n      this._li.computeIntersection(this._offset0.p0, this._offset0.p1, this._offset1.p0, this._offset1.p1);\n\n      if (this._li.hasIntersection()) {\n        this._segList.addPt(this._li.getIntersection(0));\n      } else {\n        this._hasNarrowConcaveAngle = true;\n\n        if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR) {\n          this._segList.addPt(this._offset0.p1);\n        } else {\n          this._segList.addPt(this._offset0.p1);\n\n          if (this._closingSegLengthFactor > 0) {\n            var mid0 = new Coordinate((this._closingSegLengthFactor * this._offset0.p1.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset0.p1.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n\n            this._segList.addPt(mid0);\n\n            var mid1 = new Coordinate((this._closingSegLengthFactor * this._offset1.p0.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset1.p0.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n\n            this._segList.addPt(mid1);\n          } else {\n            this._segList.addPt(this._s1);\n          }\n\n          this._segList.addPt(this._offset1.p0);\n        }\n      }\n    }\n\n    createCircle(p) {\n      var pt = new Coordinate(p.x + this._distance, p.y);\n\n      this._segList.addPt(pt);\n\n      this.addDirectedFillet(p, 0.0, 2.0 * Math.PI, -1, this._distance);\n\n      this._segList.closeRing();\n    }\n\n    addBevelJoin(offset0, offset1) {\n      this._segList.addPt(offset0.p1);\n\n      this._segList.addPt(offset1.p0);\n    }\n\n    init(distance) {\n      this._distance = distance;\n      this._maxCurveSegmentError = distance * (1 - Math.cos(this._filletAngleQuantum / 2.0));\n      this._segList = new OffsetSegmentString();\n\n      this._segList.setPrecisionModel(this._precisionModel);\n\n      this._segList.setMinimumVertexDistance(distance * OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR);\n    }\n\n    addCollinear(addStartPoint) {\n      this._li.computeIntersection(this._s0, this._s1, this._s1, this._s2);\n\n      var numInt = this._li.getIntersectionNum();\n\n      if (numInt >= 2) {\n        if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL || this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n          if (addStartPoint) this._segList.addPt(this._offset0.p1);\n\n          this._segList.addPt(this._offset1.p0);\n        } else {\n          this.addCornerFillet(this._s1, this._offset0.p1, this._offset1.p0, Orientation.CLOCKWISE, this._distance);\n        }\n      }\n    }\n\n    closeRing() {\n      this._segList.closeRing();\n    }\n\n    hasNarrowConcaveAngle() {\n      return this._hasNarrowConcaveAngle;\n    }\n\n    getClass() {\n      return OffsetSegmentGenerator;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  OffsetSegmentGenerator.constructor_ = function () {\n    this._maxCurveSegmentError = 0.0;\n    this._filletAngleQuantum = null;\n    this._closingSegLengthFactor = 1;\n    this._segList = null;\n    this._distance = 0.0;\n    this._precisionModel = null;\n    this._bufParams = null;\n    this._li = null;\n    this._s0 = null;\n    this._s1 = null;\n    this._s2 = null;\n    this._seg0 = new LineSegment();\n    this._seg1 = new LineSegment();\n    this._offset0 = new LineSegment();\n    this._offset1 = new LineSegment();\n    this._side = 0;\n    this._hasNarrowConcaveAngle = false;\n    let precisionModel = arguments[0],\n        bufParams = arguments[1],\n        distance = arguments[2];\n    this._precisionModel = precisionModel;\n    this._bufParams = bufParams;\n    this._li = new RobustLineIntersector();\n    this._filletAngleQuantum = Math.PI / 2.0 / bufParams.getQuadrantSegments();\n    if (bufParams.getQuadrantSegments() >= 8 && bufParams.getJoinStyle() === BufferParameters.JOIN_ROUND) this._closingSegLengthFactor = OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR;\n    this.init(distance);\n  };\n\n  OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR = 1.0E-3;\n  OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR = 1.0E-3;\n  OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR = 1.0E-6;\n  OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR = 80;\n\n  class OffsetCurveBuilder {\n    constructor() {\n      OffsetCurveBuilder.constructor_.apply(this, arguments);\n    }\n\n    static copyCoordinates(pts) {\n      var copy = new Array(pts.length).fill(null);\n\n      for (var i = 0; i < copy.length; i++) {\n        copy[i] = new Coordinate(pts[i]);\n      }\n\n      return copy;\n    }\n\n    getOffsetCurve(inputPts, distance) {\n      this._distance = distance;\n      if (distance === 0.0) return null;\n      var isRightSide = distance < 0.0;\n      var posDistance = Math.abs(distance);\n      var segGen = this.getSegGen(posDistance);\n\n      if (inputPts.length <= 1) {\n        this.computePointCurve(inputPts[0], segGen);\n      } else {\n        this.computeOffsetCurve(inputPts, isRightSide, segGen);\n      }\n\n      var curvePts = segGen.getCoordinates();\n      if (isRightSide) CoordinateArrays.reverse(curvePts);\n      return curvePts;\n    }\n\n    computeSingleSidedBufferCurve(inputPts, isRightSide, segGen) {\n      var distTol = this.simplifyTolerance(this._distance);\n\n      if (isRightSide) {\n        segGen.addSegments(inputPts, true);\n        var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n        var n2 = simp2.length - 1;\n        segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n        segGen.addFirstSegment();\n\n        for (var i = n2 - 2; i >= 0; i--) {\n          segGen.addNextSegment(simp2[i], true);\n        }\n      } else {\n        segGen.addSegments(inputPts, false);\n        var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n        var n1 = simp1.length - 1;\n        segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n        segGen.addFirstSegment();\n\n        for (var i = 2; i <= n1; i++) {\n          segGen.addNextSegment(simp1[i], true);\n        }\n      }\n\n      segGen.addLastSegment();\n      segGen.closeRing();\n    }\n\n    computeRingBufferCurve(inputPts, side, segGen) {\n      var distTol = this.simplifyTolerance(this._distance);\n      if (side === Position.RIGHT) distTol = -distTol;\n      var simp = BufferInputLineSimplifier.simplify(inputPts, distTol);\n      var n = simp.length - 1;\n      segGen.initSideSegments(simp[n - 1], simp[0], side);\n\n      for (var i = 1; i <= n; i++) {\n        var addStartPoint = i !== 1;\n        segGen.addNextSegment(simp[i], addStartPoint);\n      }\n\n      segGen.closeRing();\n    }\n\n    computeLineBufferCurve(inputPts, segGen) {\n      var distTol = this.simplifyTolerance(this._distance);\n      var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n      var n1 = simp1.length - 1;\n      segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n\n      for (var i = 2; i <= n1; i++) {\n        segGen.addNextSegment(simp1[i], true);\n      }\n\n      segGen.addLastSegment();\n      segGen.addLineEndCap(simp1[n1 - 1], simp1[n1]);\n      var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n      var n2 = simp2.length - 1;\n      segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n\n      for (var i = n2 - 2; i >= 0; i--) {\n        segGen.addNextSegment(simp2[i], true);\n      }\n\n      segGen.addLastSegment();\n      segGen.addLineEndCap(simp2[1], simp2[0]);\n      segGen.closeRing();\n    }\n\n    computePointCurve(pt, segGen) {\n      switch (this._bufParams.getEndCapStyle()) {\n        case BufferParameters.CAP_ROUND:\n          segGen.createCircle(pt);\n          break;\n\n        case BufferParameters.CAP_SQUARE:\n          segGen.createSquare(pt);\n          break;\n      }\n    }\n\n    getLineCurve(inputPts, distance) {\n      this._distance = distance;\n      if (distance < 0.0 && !this._bufParams.isSingleSided()) return null;\n      if (distance === 0.0) return null;\n      var posDistance = Math.abs(distance);\n      var segGen = this.getSegGen(posDistance);\n\n      if (inputPts.length <= 1) {\n        this.computePointCurve(inputPts[0], segGen);\n      } else {\n        if (this._bufParams.isSingleSided()) {\n          var isRightSide = distance < 0.0;\n          this.computeSingleSidedBufferCurve(inputPts, isRightSide, segGen);\n        } else this.computeLineBufferCurve(inputPts, segGen);\n      }\n\n      var lineCoord = segGen.getCoordinates();\n      return lineCoord;\n    }\n\n    getBufferParameters() {\n      return this._bufParams;\n    }\n\n    simplifyTolerance(bufDistance) {\n      return bufDistance * this._bufParams.getSimplifyFactor();\n    }\n\n    getRingCurve(inputPts, side, distance) {\n      this._distance = distance;\n      if (inputPts.length <= 2) return this.getLineCurve(inputPts, distance);\n\n      if (distance === 0.0) {\n        return OffsetCurveBuilder.copyCoordinates(inputPts);\n      }\n\n      var segGen = this.getSegGen(distance);\n      this.computeRingBufferCurve(inputPts, side, segGen);\n      return segGen.getCoordinates();\n    }\n\n    computeOffsetCurve(inputPts, isRightSide, segGen) {\n      var distTol = this.simplifyTolerance(this._distance);\n\n      if (isRightSide) {\n        var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n        var n2 = simp2.length - 1;\n        segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n        segGen.addFirstSegment();\n\n        for (var i = n2 - 2; i >= 0; i--) {\n          segGen.addNextSegment(simp2[i], true);\n        }\n      } else {\n        var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n        var n1 = simp1.length - 1;\n        segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n        segGen.addFirstSegment();\n\n        for (var i = 2; i <= n1; i++) {\n          segGen.addNextSegment(simp1[i], true);\n        }\n      }\n\n      segGen.addLastSegment();\n    }\n\n    getSegGen(distance) {\n      return new OffsetSegmentGenerator(this._precisionModel, this._bufParams, distance);\n    }\n\n    getClass() {\n      return OffsetCurveBuilder;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  OffsetCurveBuilder.constructor_ = function () {\n    this._distance = 0.0;\n    this._precisionModel = null;\n    this._bufParams = null;\n    let precisionModel = arguments[0],\n        bufParams = arguments[1];\n    this._precisionModel = precisionModel;\n    this._bufParams = bufParams;\n  };\n\n  class SubgraphDepthLocater {\n    constructor() {\n      SubgraphDepthLocater.constructor_.apply(this, arguments);\n    }\n\n    findStabbedSegments() {\n      if (arguments.length === 1) {\n        let stabbingRayLeftPt = arguments[0];\n        var stabbedSegments = new ArrayList();\n\n        for (var i = this._subgraphs.iterator(); i.hasNext();) {\n          var bsg = i.next();\n          var env = bsg.getEnvelope();\n          if (stabbingRayLeftPt.y < env.getMinY() || stabbingRayLeftPt.y > env.getMaxY()) continue;\n          this.findStabbedSegments(stabbingRayLeftPt, bsg.getDirectedEdges(), stabbedSegments);\n        }\n\n        return stabbedSegments;\n      } else if (arguments.length === 3) {\n        if (hasInterface(arguments[2], List) && arguments[0] instanceof Coordinate && arguments[1] instanceof DirectedEdge) {\n          let stabbingRayLeftPt = arguments[0],\n              dirEdge = arguments[1],\n              stabbedSegments = arguments[2];\n          var pts = dirEdge.getEdge().getCoordinates();\n\n          for (var i = 0; i < pts.length - 1; i++) {\n            this._seg.p0 = pts[i];\n            this._seg.p1 = pts[i + 1];\n            if (this._seg.p0.y > this._seg.p1.y) this._seg.reverse();\n            var maxx = Math.max(this._seg.p0.x, this._seg.p1.x);\n            if (maxx < stabbingRayLeftPt.x) continue;\n            if (this._seg.isHorizontal()) continue;\n            if (stabbingRayLeftPt.y < this._seg.p0.y || stabbingRayLeftPt.y > this._seg.p1.y) continue;\n            if (Orientation.index(this._seg.p0, this._seg.p1, stabbingRayLeftPt) === Orientation.RIGHT) continue;\n            var depth = dirEdge.getDepth(Position.LEFT);\n            if (!this._seg.p0.equals(pts[i])) depth = dirEdge.getDepth(Position.RIGHT);\n            var ds = new DepthSegment(this._seg, depth);\n            stabbedSegments.add(ds);\n          }\n        } else if (hasInterface(arguments[2], List) && arguments[0] instanceof Coordinate && hasInterface(arguments[1], List)) {\n          let stabbingRayLeftPt = arguments[0],\n              dirEdges = arguments[1],\n              stabbedSegments = arguments[2];\n\n          for (var i = dirEdges.iterator(); i.hasNext();) {\n            var de = i.next();\n            if (!de.isForward()) continue;\n            this.findStabbedSegments(stabbingRayLeftPt, de, stabbedSegments);\n          }\n        }\n      }\n    }\n\n    getDepth(p) {\n      var stabbedSegments = this.findStabbedSegments(p);\n      if (stabbedSegments.size() === 0) return 0;\n      var ds = Collections.min(stabbedSegments);\n      return ds._leftDepth;\n    }\n\n    getClass() {\n      return SubgraphDepthLocater;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  class DepthSegment {\n    constructor() {\n      DepthSegment.constructor_.apply(this, arguments);\n    }\n\n    compareTo(obj) {\n      var other = obj;\n      if (this._upwardSeg.minX() >= other._upwardSeg.maxX()) return 1;\n      if (this._upwardSeg.maxX() <= other._upwardSeg.minX()) return -1;\n\n      var orientIndex = this._upwardSeg.orientationIndex(other._upwardSeg);\n\n      if (orientIndex !== 0) return orientIndex;\n      orientIndex = -1 * other._upwardSeg.orientationIndex(this._upwardSeg);\n      if (orientIndex !== 0) return orientIndex;\n      return this._upwardSeg.compareTo(other._upwardSeg);\n    }\n\n    compareX(seg0, seg1) {\n      var compare0 = seg0.p0.compareTo(seg1.p0);\n      if (compare0 !== 0) return compare0;\n      return seg0.p1.compareTo(seg1.p1);\n    }\n\n    toString() {\n      return this._upwardSeg.toString();\n    }\n\n    getClass() {\n      return DepthSegment;\n    }\n\n    get interfaces_() {\n      return [Comparable];\n    }\n\n  }\n\n  DepthSegment.constructor_ = function () {\n    this._upwardSeg = null;\n    this._leftDepth = null;\n    let seg = arguments[0],\n        depth = arguments[1];\n    this._upwardSeg = new LineSegment(seg);\n    this._leftDepth = depth;\n  };\n\n  SubgraphDepthLocater.DepthSegment = DepthSegment;\n\n  SubgraphDepthLocater.constructor_ = function () {\n    this._subgraphs = null;\n    this._seg = new LineSegment();\n    let subgraphs = arguments[0];\n    this._subgraphs = subgraphs;\n  };\n\n  class OffsetCurveSetBuilder {\n    constructor() {\n      OffsetCurveSetBuilder.constructor_.apply(this, arguments);\n    }\n\n    addPoint(p) {\n      if (this._distance <= 0.0) return null;\n      var coord = p.getCoordinates();\n\n      var curve = this._curveBuilder.getLineCurve(coord, this._distance);\n\n      this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n    }\n\n    addPolygon(p) {\n      var offsetDistance = this._distance;\n      var offsetSide = Position.LEFT;\n\n      if (this._distance < 0.0) {\n        offsetDistance = -this._distance;\n        offsetSide = Position.RIGHT;\n      }\n\n      var shell = p.getExteriorRing();\n      var shellCoord = CoordinateArrays.removeRepeatedPoints(shell.getCoordinates());\n      if (this._distance < 0.0 && this.isErodedCompletely(shell, this._distance)) return null;\n      if (this._distance <= 0.0 && shellCoord.length < 3) return null;\n      this.addPolygonRing(shellCoord, offsetDistance, offsetSide, Location.EXTERIOR, Location.INTERIOR);\n\n      for (var i = 0; i < p.getNumInteriorRing(); i++) {\n        var hole = p.getInteriorRingN(i);\n        var holeCoord = CoordinateArrays.removeRepeatedPoints(hole.getCoordinates());\n        if (this._distance > 0.0 && this.isErodedCompletely(hole, -this._distance)) continue;\n        this.addPolygonRing(holeCoord, offsetDistance, Position.opposite(offsetSide), Location.INTERIOR, Location.EXTERIOR);\n      }\n    }\n\n    isTriangleErodedCompletely(triangleCoord, bufferDistance) {\n      var tri = new Triangle(triangleCoord[0], triangleCoord[1], triangleCoord[2]);\n      var inCentre = tri.inCentre();\n      var distToCentre = Distance.pointToSegment(inCentre, tri.p0, tri.p1);\n      return distToCentre < Math.abs(bufferDistance);\n    }\n\n    addLineString(line) {\n      if (this._distance <= 0.0 && !this._curveBuilder.getBufferParameters().isSingleSided()) return null;\n      var coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n\n      var curve = this._curveBuilder.getLineCurve(coord, this._distance);\n\n      this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n    }\n\n    addCurve(coord, leftLoc, rightLoc) {\n      if (coord === null || coord.length < 2) return null;\n      var e = new NodedSegmentString(coord, new Label(0, Location.BOUNDARY, leftLoc, rightLoc));\n\n      this._curveList.add(e);\n    }\n\n    getCurves() {\n      this.add(this._inputGeom);\n      return this._curveList;\n    }\n\n    addPolygonRing(coord, offsetDistance, side, cwLeftLoc, cwRightLoc) {\n      if (offsetDistance === 0.0 && coord.length < LinearRing.MINIMUM_VALID_SIZE) return null;\n      var leftLoc = cwLeftLoc;\n      var rightLoc = cwRightLoc;\n\n      if (coord.length >= LinearRing.MINIMUM_VALID_SIZE && Orientation.isCCW(coord)) {\n        leftLoc = cwRightLoc;\n        rightLoc = cwLeftLoc;\n        side = Position.opposite(side);\n      }\n\n      var curve = this._curveBuilder.getRingCurve(coord, side, offsetDistance);\n\n      this.addCurve(curve, leftLoc, rightLoc);\n    }\n\n    add(g) {\n      if (g.isEmpty()) return null;\n      if (g instanceof Polygon) this.addPolygon(g);else if (g instanceof LineString) this.addLineString(g);else if (g instanceof Point) this.addPoint(g);else if (g instanceof MultiPoint) this.addCollection(g);else if (g instanceof MultiLineString) this.addCollection(g);else if (g instanceof MultiPolygon) this.addCollection(g);else if (g instanceof GeometryCollection) this.addCollection(g);else throw new UnsupportedOperationException(g.getClass().getName());\n    }\n\n    isErodedCompletely(ring, bufferDistance) {\n      var ringCoord = ring.getCoordinates();\n      if (ringCoord.length < 4) return bufferDistance < 0;\n      if (ringCoord.length === 4) return this.isTriangleErodedCompletely(ringCoord, bufferDistance);\n      var env = ring.getEnvelopeInternal();\n      var envMinDimension = Math.min(env.getHeight(), env.getWidth());\n      if (bufferDistance < 0.0 && 2 * Math.abs(bufferDistance) > envMinDimension) return true;\n      return false;\n    }\n\n    addCollection(gc) {\n      for (var i = 0; i < gc.getNumGeometries(); i++) {\n        var g = gc.getGeometryN(i);\n        this.add(g);\n      }\n    }\n\n    getClass() {\n      return OffsetCurveSetBuilder;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  OffsetCurveSetBuilder.constructor_ = function () {\n    this._inputGeom = null;\n    this._distance = null;\n    this._curveBuilder = null;\n    this._curveList = new ArrayList();\n    let inputGeom = arguments[0],\n        distance = arguments[1],\n        curveBuilder = arguments[2];\n    this._inputGeom = inputGeom;\n    this._distance = distance;\n    this._curveBuilder = curveBuilder;\n  };\n\n  class EdgeEndStar {\n    constructor() {\n      EdgeEndStar.constructor_.apply(this, arguments);\n    }\n\n    getNextCW(ee) {\n      this.getEdges();\n\n      var i = this._edgeList.indexOf(ee);\n\n      var iNextCW = i - 1;\n      if (i === 0) iNextCW = this._edgeList.size() - 1;\n      return this._edgeList.get(iNextCW);\n    }\n\n    propagateSideLabels(geomIndex) {\n      var startLoc = Location.NONE;\n\n      for (var it = this.iterator(); it.hasNext();) {\n        var e = it.next();\n        var label = e.getLabel();\n        if (label.isArea(geomIndex) && label.getLocation(geomIndex, Position.LEFT) !== Location.NONE) startLoc = label.getLocation(geomIndex, Position.LEFT);\n      }\n\n      if (startLoc === Location.NONE) return null;\n      var currLoc = startLoc;\n\n      for (var it = this.iterator(); it.hasNext();) {\n        var e = it.next();\n        var label = e.getLabel();\n        if (label.getLocation(geomIndex, Position.ON) === Location.NONE) label.setLocation(geomIndex, Position.ON, currLoc);\n\n        if (label.isArea(geomIndex)) {\n          var leftLoc = label.getLocation(geomIndex, Position.LEFT);\n          var rightLoc = label.getLocation(geomIndex, Position.RIGHT);\n\n          if (rightLoc !== Location.NONE) {\n            if (rightLoc !== currLoc) throw new TopologyException(\"side location conflict\", e.getCoordinate());\n\n            if (leftLoc === Location.NONE) {\n              Assert.shouldNeverReachHere(\"found single null side (at \" + e.getCoordinate() + \")\");\n            }\n\n            currLoc = leftLoc;\n          } else {\n            Assert.isTrue(label.getLocation(geomIndex, Position.LEFT) === Location.NONE, \"found single null side\");\n            label.setLocation(geomIndex, Position.RIGHT, currLoc);\n            label.setLocation(geomIndex, Position.LEFT, currLoc);\n          }\n        }\n      }\n    }\n\n    getCoordinate() {\n      var it = this.iterator();\n      if (!it.hasNext()) return null;\n      var e = it.next();\n      return e.getCoordinate();\n    }\n\n    print(out) {\n      System.out.println(\"EdgeEndStar:   \" + this.getCoordinate());\n\n      for (var it = this.iterator(); it.hasNext();) {\n        var e = it.next();\n        e.print(out);\n      }\n    }\n\n    isAreaLabelsConsistent(geomGraph) {\n      this.computeEdgeEndLabels(geomGraph.getBoundaryNodeRule());\n      return this.checkAreaLabelsConsistent(0);\n    }\n\n    checkAreaLabelsConsistent(geomIndex) {\n      var edges = this.getEdges();\n      if (edges.size() <= 0) return true;\n      var lastEdgeIndex = edges.size() - 1;\n      var startLabel = edges.get(lastEdgeIndex).getLabel();\n      var startLoc = startLabel.getLocation(geomIndex, Position.LEFT);\n      Assert.isTrue(startLoc !== Location.NONE, \"Found unlabelled area edge\");\n      var currLoc = startLoc;\n\n      for (var it = this.iterator(); it.hasNext();) {\n        var e = it.next();\n        var label = e.getLabel();\n        Assert.isTrue(label.isArea(geomIndex), \"Found non-area edge\");\n        var leftLoc = label.getLocation(geomIndex, Position.LEFT);\n        var rightLoc = label.getLocation(geomIndex, Position.RIGHT);\n\n        if (leftLoc === rightLoc) {\n          return false;\n        }\n\n        if (rightLoc !== currLoc) {\n          return false;\n        }\n\n        currLoc = leftLoc;\n      }\n\n      return true;\n    }\n\n    findIndex(eSearch) {\n      this.iterator();\n\n      for (var i = 0; i < this._edgeList.size(); i++) {\n        var e = this._edgeList.get(i);\n\n        if (e === eSearch) return i;\n      }\n\n      return -1;\n    }\n\n    iterator() {\n      return this.getEdges().iterator();\n    }\n\n    getEdges() {\n      if (this._edgeList === null) {\n        this._edgeList = new ArrayList(this._edgeMap.values());\n      }\n\n      return this._edgeList;\n    }\n\n    getLocation(geomIndex, p, geom) {\n      if (this._ptInAreaLocation[geomIndex] === Location.NONE) {\n        this._ptInAreaLocation[geomIndex] = SimplePointInAreaLocator.locate(p, geom[geomIndex].getGeometry());\n      }\n\n      return this._ptInAreaLocation[geomIndex];\n    }\n\n    toString() {\n      var buf = new StringBuffer();\n      buf.append(\"EdgeEndStar:   \" + this.getCoordinate());\n      buf.append(\"\\n\");\n\n      for (var it = this.iterator(); it.hasNext();) {\n        var e = it.next();\n        buf.append(e);\n        buf.append(\"\\n\");\n      }\n\n      return buf.toString();\n    }\n\n    computeEdgeEndLabels(boundaryNodeRule) {\n      for (var it = this.iterator(); it.hasNext();) {\n        var ee = it.next();\n        ee.computeLabel(boundaryNodeRule);\n      }\n    }\n\n    computeLabelling(geomGraph) {\n      this.computeEdgeEndLabels(geomGraph[0].getBoundaryNodeRule());\n      this.propagateSideLabels(0);\n      this.propagateSideLabels(1);\n      var hasDimensionalCollapseEdge = [false, false];\n\n      for (var it = this.iterator(); it.hasNext();) {\n        var e = it.next();\n        var label = e.getLabel();\n\n        for (var geomi = 0; geomi < 2; geomi++) {\n          if (label.isLine(geomi) && label.getLocation(geomi) === Location.BOUNDARY) hasDimensionalCollapseEdge[geomi] = true;\n        }\n      }\n\n      for (var it = this.iterator(); it.hasNext();) {\n        var e = it.next();\n        var label = e.getLabel();\n\n        for (var geomi = 0; geomi < 2; geomi++) {\n          if (label.isAnyNull(geomi)) {\n            var loc = Location.NONE;\n\n            if (hasDimensionalCollapseEdge[geomi]) {\n              loc = Location.EXTERIOR;\n            } else {\n              var p = e.getCoordinate();\n              loc = this.getLocation(geomi, p, geomGraph);\n            }\n\n            label.setAllLocationsIfNull(geomi, loc);\n          }\n        }\n      }\n    }\n\n    getDegree() {\n      return this._edgeMap.size();\n    }\n\n    insertEdgeEnd(e, obj) {\n      this._edgeMap.put(e, obj);\n\n      this._edgeList = null;\n    }\n\n    getClass() {\n      return EdgeEndStar;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  EdgeEndStar.constructor_ = function () {\n    this._edgeMap = new TreeMap();\n    this._edgeList = null;\n    this._ptInAreaLocation = [Location.NONE, Location.NONE];\n  };\n\n  class DirectedEdgeStar extends EdgeEndStar {\n    constructor() {\n      super();\n      DirectedEdgeStar.constructor_.apply(this, arguments);\n    }\n\n    linkResultDirectedEdges() {\n      this.getResultAreaEdges();\n      var firstOut = null;\n      var incoming = null;\n      var state = this._SCANNING_FOR_INCOMING;\n\n      for (var i = 0; i < this._resultAreaEdgeList.size(); i++) {\n        var nextOut = this._resultAreaEdgeList.get(i);\n\n        var nextIn = nextOut.getSym();\n        if (!nextOut.getLabel().isArea()) continue;\n        if (firstOut === null && nextOut.isInResult()) firstOut = nextOut;\n\n        switch (state) {\n          case this._SCANNING_FOR_INCOMING:\n            if (!nextIn.isInResult()) continue;\n            incoming = nextIn;\n            state = this._LINKING_TO_OUTGOING;\n            break;\n\n          case this._LINKING_TO_OUTGOING:\n            if (!nextOut.isInResult()) continue;\n            incoming.setNext(nextOut);\n            state = this._SCANNING_FOR_INCOMING;\n            break;\n        }\n      }\n\n      if (state === this._LINKING_TO_OUTGOING) {\n        if (firstOut === null) throw new TopologyException(\"no outgoing dirEdge found\", this.getCoordinate());\n        Assert.isTrue(firstOut.isInResult(), \"unable to link last incoming dirEdge\");\n        incoming.setNext(firstOut);\n      }\n    }\n\n    insert(ee) {\n      var de = ee;\n      this.insertEdgeEnd(de, de);\n    }\n\n    getRightmostEdge() {\n      var edges = this.getEdges();\n      var size = edges.size();\n      if (size < 1) return null;\n      var de0 = edges.get(0);\n      if (size === 1) return de0;\n      var deLast = edges.get(size - 1);\n      var quad0 = de0.getQuadrant();\n      var quad1 = deLast.getQuadrant();\n      if (Quadrant.isNorthern(quad0) && Quadrant.isNorthern(quad1)) return de0;else if (!Quadrant.isNorthern(quad0) && !Quadrant.isNorthern(quad1)) return deLast;else {\n        if (de0.getDy() !== 0) return de0;else if (deLast.getDy() !== 0) return deLast;\n      }\n      Assert.shouldNeverReachHere(\"found two horizontal edges incident on node\");\n      return null;\n    }\n\n    print(out) {\n      System.out.println(\"DirectedEdgeStar: \" + this.getCoordinate());\n\n      for (var it = this.iterator(); it.hasNext();) {\n        var de = it.next();\n        out.print(\"out \");\n        de.print(out);\n        out.println();\n        out.print(\"in \");\n        de.getSym().print(out);\n        out.println();\n      }\n    }\n\n    getResultAreaEdges() {\n      if (this._resultAreaEdgeList !== null) return this._resultAreaEdgeList;\n      this._resultAreaEdgeList = new ArrayList();\n\n      for (var it = this.iterator(); it.hasNext();) {\n        var de = it.next();\n        if (de.isInResult() || de.getSym().isInResult()) this._resultAreaEdgeList.add(de);\n      }\n\n      return this._resultAreaEdgeList;\n    }\n\n    updateLabelling(nodeLabel) {\n      for (var it = this.iterator(); it.hasNext();) {\n        var de = it.next();\n        var label = de.getLabel();\n        label.setAllLocationsIfNull(0, nodeLabel.getLocation(0));\n        label.setAllLocationsIfNull(1, nodeLabel.getLocation(1));\n      }\n    }\n\n    linkAllDirectedEdges() {\n      this.getEdges();\n      var prevOut = null;\n      var firstIn = null;\n\n      for (var i = this._edgeList.size() - 1; i >= 0; i--) {\n        var nextOut = this._edgeList.get(i);\n\n        var nextIn = nextOut.getSym();\n        if (firstIn === null) firstIn = nextIn;\n        if (prevOut !== null) nextIn.setNext(prevOut);\n        prevOut = nextOut;\n      }\n\n      firstIn.setNext(prevOut);\n    }\n\n    computeDepths() {\n      if (arguments.length === 1) {\n        let de = arguments[0];\n        var edgeIndex = this.findIndex(de);\n        var label = de.getLabel();\n        var startDepth = de.getDepth(Position.LEFT);\n        var targetLastDepth = de.getDepth(Position.RIGHT);\n        var nextDepth = this.computeDepths(edgeIndex + 1, this._edgeList.size(), startDepth);\n        var lastDepth = this.computeDepths(0, edgeIndex, nextDepth);\n        if (lastDepth !== targetLastDepth) throw new TopologyException(\"depth mismatch at \" + de.getCoordinate());\n      } else if (arguments.length === 3) {\n        let startIndex = arguments[0],\n            endIndex = arguments[1],\n            startDepth = arguments[2];\n        var currDepth = startDepth;\n\n        for (var i = startIndex; i < endIndex; i++) {\n          var nextDe = this._edgeList.get(i);\n\n          var label = nextDe.getLabel();\n          nextDe.setEdgeDepths(Position.RIGHT, currDepth);\n          currDepth = nextDe.getDepth(Position.LEFT);\n        }\n\n        return currDepth;\n      }\n    }\n\n    mergeSymLabels() {\n      for (var it = this.iterator(); it.hasNext();) {\n        var de = it.next();\n        var label = de.getLabel();\n        label.merge(de.getSym().getLabel());\n      }\n    }\n\n    linkMinimalDirectedEdges(er) {\n      var firstOut = null;\n      var incoming = null;\n      var state = this._SCANNING_FOR_INCOMING;\n\n      for (var i = this._resultAreaEdgeList.size() - 1; i >= 0; i--) {\n        var nextOut = this._resultAreaEdgeList.get(i);\n\n        var nextIn = nextOut.getSym();\n        if (firstOut === null && nextOut.getEdgeRing() === er) firstOut = nextOut;\n\n        switch (state) {\n          case this._SCANNING_FOR_INCOMING:\n            if (nextIn.getEdgeRing() !== er) continue;\n            incoming = nextIn;\n            state = this._LINKING_TO_OUTGOING;\n            break;\n\n          case this._LINKING_TO_OUTGOING:\n            if (nextOut.getEdgeRing() !== er) continue;\n            incoming.setNextMin(nextOut);\n            state = this._SCANNING_FOR_INCOMING;\n            break;\n        }\n      }\n\n      if (state === this._LINKING_TO_OUTGOING) {\n        Assert.isTrue(firstOut !== null, \"found null for first outgoing dirEdge\");\n        Assert.isTrue(firstOut.getEdgeRing() === er, \"unable to link last incoming dirEdge\");\n        incoming.setNextMin(firstOut);\n      }\n    }\n\n    getOutgoingDegree() {\n      if (arguments.length === 0) {\n        var degree = 0;\n\n        for (var it = this.iterator(); it.hasNext();) {\n          var de = it.next();\n          if (de.isInResult()) degree++;\n        }\n\n        return degree;\n      } else if (arguments.length === 1) {\n        let er = arguments[0];\n        var degree = 0;\n\n        for (var it = this.iterator(); it.hasNext();) {\n          var de = it.next();\n          if (de.getEdgeRing() === er) degree++;\n        }\n\n        return degree;\n      }\n    }\n\n    getLabel() {\n      return this._label;\n    }\n\n    findCoveredLineEdges() {\n      var startLoc = Location.NONE;\n\n      for (var it = this.iterator(); it.hasNext();) {\n        var nextOut = it.next();\n        var nextIn = nextOut.getSym();\n\n        if (!nextOut.isLineEdge()) {\n          if (nextOut.isInResult()) {\n            startLoc = Location.INTERIOR;\n            break;\n          }\n\n          if (nextIn.isInResult()) {\n            startLoc = Location.EXTERIOR;\n            break;\n          }\n        }\n      }\n\n      if (startLoc === Location.NONE) return null;\n      var currLoc = startLoc;\n\n      for (var it = this.iterator(); it.hasNext();) {\n        var nextOut = it.next();\n        var nextIn = nextOut.getSym();\n\n        if (nextOut.isLineEdge()) {\n          nextOut.getEdge().setCovered(currLoc === Location.INTERIOR);\n        } else {\n          if (nextOut.isInResult()) currLoc = Location.EXTERIOR;\n          if (nextIn.isInResult()) currLoc = Location.INTERIOR;\n        }\n      }\n    }\n\n    computeLabelling(geom) {\n      super.computeLabelling.call(this, geom);\n      this._label = new Label(Location.NONE);\n\n      for (var it = this.iterator(); it.hasNext();) {\n        var ee = it.next();\n        var e = ee.getEdge();\n        var eLabel = e.getLabel();\n\n        for (var i = 0; i < 2; i++) {\n          var eLoc = eLabel.getLocation(i);\n          if (eLoc === Location.INTERIOR || eLoc === Location.BOUNDARY) this._label.setLocation(i, Location.INTERIOR);\n        }\n      }\n    }\n\n    getClass() {\n      return DirectedEdgeStar;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  DirectedEdgeStar.constructor_ = function () {\n    this._resultAreaEdgeList = null;\n    this._label = null;\n    this._SCANNING_FOR_INCOMING = 1;\n    this._LINKING_TO_OUTGOING = 2;\n  };\n\n  class OverlayNodeFactory extends NodeFactory {\n    constructor() {\n      super();\n      OverlayNodeFactory.constructor_.apply(this, arguments);\n    }\n\n    createNode(coord) {\n      return new Node(coord, new DirectedEdgeStar());\n    }\n\n    getClass() {\n      return OverlayNodeFactory;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  OverlayNodeFactory.constructor_ = function () {};\n\n  class OrientedCoordinateArray {\n    constructor() {\n      OrientedCoordinateArray.constructor_.apply(this, arguments);\n    }\n\n    static orientation(pts) {\n      return CoordinateArrays.increasingDirection(pts) === 1;\n    }\n\n    static compareOriented(pts1, orientation1, pts2, orientation2) {\n      var dir1 = orientation1 ? 1 : -1;\n      var dir2 = orientation2 ? 1 : -1;\n      var limit1 = orientation1 ? pts1.length : -1;\n      var limit2 = orientation2 ? pts2.length : -1;\n      var i1 = orientation1 ? 0 : pts1.length - 1;\n      var i2 = orientation2 ? 0 : pts2.length - 1;\n\n      while (true) {\n        var compPt = pts1[i1].compareTo(pts2[i2]);\n        if (compPt !== 0) return compPt;\n        i1 += dir1;\n        i2 += dir2;\n        var done1 = i1 === limit1;\n        var done2 = i2 === limit2;\n        if (done1 && !done2) return -1;\n        if (!done1 && done2) return 1;\n        if (done1 && done2) return 0;\n      }\n    }\n\n    compareTo(o1) {\n      var oca = o1;\n      var comp = OrientedCoordinateArray.compareOriented(this._pts, this._orientation, oca._pts, oca._orientation);\n      return comp;\n    }\n\n    getClass() {\n      return OrientedCoordinateArray;\n    }\n\n    get interfaces_() {\n      return [Comparable];\n    }\n\n  }\n\n  OrientedCoordinateArray.constructor_ = function () {\n    this._pts = null;\n    this._orientation = null;\n    let pts = arguments[0];\n    this._pts = pts;\n    this._orientation = OrientedCoordinateArray.orientation(pts);\n  };\n\n  class EdgeList {\n    constructor() {\n      EdgeList.constructor_.apply(this, arguments);\n    }\n\n    print(out) {\n      out.print(\"MULTILINESTRING ( \");\n\n      for (var j = 0; j < this._edges.size(); j++) {\n        var e = this._edges.get(j);\n\n        if (j > 0) out.print(\",\");\n        out.print(\"(\");\n        var pts = e.getCoordinates();\n\n        for (var i = 0; i < pts.length; i++) {\n          if (i > 0) out.print(\",\");\n          out.print(pts[i].x + \" \" + pts[i].y);\n        }\n\n        out.println(\")\");\n      }\n\n      out.print(\")  \");\n    }\n\n    addAll(edgeColl) {\n      for (var i = edgeColl.iterator(); i.hasNext();) {\n        this.add(i.next());\n      }\n    }\n\n    findEdgeIndex(e) {\n      for (var i = 0; i < this._edges.size(); i++) {\n        if (this._edges.get(i).equals(e)) return i;\n      }\n\n      return -1;\n    }\n\n    iterator() {\n      return this._edges.iterator();\n    }\n\n    getEdges() {\n      return this._edges;\n    }\n\n    get(i) {\n      return this._edges.get(i);\n    }\n\n    findEqualEdge(e) {\n      var oca = new OrientedCoordinateArray(e.getCoordinates());\n\n      var matchEdge = this._ocaMap.get(oca);\n\n      return matchEdge;\n    }\n\n    add(e) {\n      this._edges.add(e);\n\n      var oca = new OrientedCoordinateArray(e.getCoordinates());\n\n      this._ocaMap.put(oca, e);\n    }\n\n    getClass() {\n      return EdgeList;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  EdgeList.constructor_ = function () {\n    this._edges = new ArrayList();\n    this._ocaMap = new TreeMap();\n  };\n\n  class SegmentIntersector$1 {\n    constructor() {\n      SegmentIntersector$1.constructor_.apply(this, arguments);\n    }\n\n    processIntersections(e0, segIndex0, e1, segIndex1) {}\n\n    isDone() {}\n\n    getClass() {\n      return SegmentIntersector$1;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  SegmentIntersector$1.constructor_ = function () {};\n\n  class IntersectionAdder {\n    constructor() {\n      IntersectionAdder.constructor_.apply(this, arguments);\n    }\n\n    static isAdjacentSegments(i1, i2) {\n      return Math.abs(i1 - i2) === 1;\n    }\n\n    isTrivialIntersection(e0, segIndex0, e1, segIndex1) {\n      if (e0 === e1) {\n        if (this._li.getIntersectionNum() === 1) {\n          if (IntersectionAdder.isAdjacentSegments(segIndex0, segIndex1)) return true;\n\n          if (e0.isClosed()) {\n            var maxSegIndex = e0.size() - 1;\n\n            if (segIndex0 === 0 && segIndex1 === maxSegIndex || segIndex1 === 0 && segIndex0 === maxSegIndex) {\n              return true;\n            }\n          }\n        }\n      }\n\n      return false;\n    }\n\n    getProperIntersectionPoint() {\n      return this._properIntersectionPoint;\n    }\n\n    hasProperInteriorIntersection() {\n      return this._hasProperInterior;\n    }\n\n    getLineIntersector() {\n      return this._li;\n    }\n\n    hasProperIntersection() {\n      return this._hasProper;\n    }\n\n    processIntersections(e0, segIndex0, e1, segIndex1) {\n      if (e0 === e1 && segIndex0 === segIndex1) return null;\n      this.numTests++;\n      var p00 = e0.getCoordinates()[segIndex0];\n      var p01 = e0.getCoordinates()[segIndex0 + 1];\n      var p10 = e1.getCoordinates()[segIndex1];\n      var p11 = e1.getCoordinates()[segIndex1 + 1];\n\n      this._li.computeIntersection(p00, p01, p10, p11);\n\n      if (this._li.hasIntersection()) {\n        this.numIntersections++;\n\n        if (this._li.isInteriorIntersection()) {\n          this.numInteriorIntersections++;\n          this._hasInterior = true;\n        }\n\n        if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n          this._hasIntersection = true;\n          e0.addIntersections(this._li, segIndex0, 0);\n          e1.addIntersections(this._li, segIndex1, 1);\n\n          if (this._li.isProper()) {\n            this.numProperIntersections++;\n            this._hasProper = true;\n            this._hasProperInterior = true;\n          }\n        }\n      }\n    }\n\n    hasIntersection() {\n      return this._hasIntersection;\n    }\n\n    isDone() {\n      return false;\n    }\n\n    hasInteriorIntersection() {\n      return this._hasInterior;\n    }\n\n    getClass() {\n      return IntersectionAdder;\n    }\n\n    get interfaces_() {\n      return [SegmentIntersector$1];\n    }\n\n  }\n\n  IntersectionAdder.constructor_ = function () {\n    this._hasIntersection = false;\n    this._hasProper = false;\n    this._hasProperInterior = false;\n    this._hasInterior = false;\n    this._properIntersectionPoint = null;\n    this._li = null;\n    this._isSelfIntersection = null;\n    this.numIntersections = 0;\n    this.numInteriorIntersections = 0;\n    this.numProperIntersections = 0;\n    this.numTests = 0;\n    let li = arguments[0];\n    this._li = li;\n  };\n\n  class BufferBuilder {\n    constructor() {\n      BufferBuilder.constructor_.apply(this, arguments);\n    }\n\n    static depthDelta(label) {\n      var lLoc = label.getLocation(0, Position.LEFT);\n      var rLoc = label.getLocation(0, Position.RIGHT);\n      if (lLoc === Location.INTERIOR && rLoc === Location.EXTERIOR) return 1;else if (lLoc === Location.EXTERIOR && rLoc === Location.INTERIOR) return -1;\n      return 0;\n    }\n\n    static convertSegStrings(it) {\n      var fact = new GeometryFactory();\n      var lines = new ArrayList();\n\n      while (it.hasNext()) {\n        var ss = it.next();\n        var line = fact.createLineString(ss.getCoordinates());\n        lines.add(line);\n      }\n\n      return fact.buildGeometry(lines);\n    }\n\n    setWorkingPrecisionModel(pm) {\n      this._workingPrecisionModel = pm;\n    }\n\n    insertUniqueEdge(e) {\n      var existingEdge = this._edgeList.findEqualEdge(e);\n\n      if (existingEdge !== null) {\n        var existingLabel = existingEdge.getLabel();\n        var labelToMerge = e.getLabel();\n\n        if (!existingEdge.isPointwiseEqual(e)) {\n          labelToMerge = new Label(e.getLabel());\n          labelToMerge.flip();\n        }\n\n        existingLabel.merge(labelToMerge);\n        var mergeDelta = BufferBuilder.depthDelta(labelToMerge);\n        var existingDelta = existingEdge.getDepthDelta();\n        var newDelta = existingDelta + mergeDelta;\n        existingEdge.setDepthDelta(newDelta);\n      } else {\n        this._edgeList.add(e);\n\n        e.setDepthDelta(BufferBuilder.depthDelta(e.getLabel()));\n      }\n    }\n\n    buildSubgraphs(subgraphList, polyBuilder) {\n      var processedGraphs = new ArrayList();\n\n      for (var i = subgraphList.iterator(); i.hasNext();) {\n        var subgraph = i.next();\n        var p = subgraph.getRightmostCoordinate();\n        var locater = new SubgraphDepthLocater(processedGraphs);\n        var outsideDepth = locater.getDepth(p);\n        subgraph.computeDepth(outsideDepth);\n        subgraph.findResultEdges();\n        processedGraphs.add(subgraph);\n        polyBuilder.add(subgraph.getDirectedEdges(), subgraph.getNodes());\n      }\n    }\n\n    createSubgraphs(graph) {\n      var subgraphList = new ArrayList();\n\n      for (var i = graph.getNodes().iterator(); i.hasNext();) {\n        var node = i.next();\n\n        if (!node.isVisited()) {\n          var subgraph = new BufferSubgraph();\n          subgraph.create(node);\n          subgraphList.add(subgraph);\n        }\n      }\n\n      Collections.sort(subgraphList, Collections.reverseOrder());\n      return subgraphList;\n    }\n\n    createEmptyResultGeometry() {\n      var emptyGeom = this._geomFact.createPolygon();\n\n      return emptyGeom;\n    }\n\n    getNoder(precisionModel) {\n      if (this._workingNoder !== null) return this._workingNoder;\n      var noder = new MCIndexNoder();\n      var li = new RobustLineIntersector();\n      li.setPrecisionModel(precisionModel);\n      noder.setSegmentIntersector(new IntersectionAdder(li));\n      return noder;\n    }\n\n    buffer(g, distance) {\n      var precisionModel = this._workingPrecisionModel;\n      if (precisionModel === null) precisionModel = g.getPrecisionModel();\n      this._geomFact = g.getFactory();\n      var curveBuilder = new OffsetCurveBuilder(precisionModel, this._bufParams);\n      var curveSetBuilder = new OffsetCurveSetBuilder(g, distance, curveBuilder);\n      var bufferSegStrList = curveSetBuilder.getCurves();\n\n      if (bufferSegStrList.size() <= 0) {\n        return this.createEmptyResultGeometry();\n      }\n\n      this.computeNodedEdges(bufferSegStrList, precisionModel);\n      this._graph = new PlanarGraph(new OverlayNodeFactory());\n\n      this._graph.addEdges(this._edgeList.getEdges());\n\n      var subgraphList = this.createSubgraphs(this._graph);\n      var polyBuilder = new PolygonBuilder(this._geomFact);\n      this.buildSubgraphs(subgraphList, polyBuilder);\n      var resultPolyList = polyBuilder.getPolygons();\n\n      if (resultPolyList.size() <= 0) {\n        return this.createEmptyResultGeometry();\n      }\n\n      var resultGeom = this._geomFact.buildGeometry(resultPolyList);\n\n      return resultGeom;\n    }\n\n    computeNodedEdges(bufferSegStrList, precisionModel) {\n      var noder = this.getNoder(precisionModel);\n      noder.computeNodes(bufferSegStrList);\n      var nodedSegStrings = noder.getNodedSubstrings();\n\n      for (var i = nodedSegStrings.iterator(); i.hasNext();) {\n        var segStr = i.next();\n        var pts = segStr.getCoordinates();\n        if (pts.length === 2 && pts[0].equals2D(pts[1])) continue;\n        var oldLabel = segStr.getData();\n        var edge = new Edge(segStr.getCoordinates(), new Label(oldLabel));\n        this.insertUniqueEdge(edge);\n      }\n    }\n\n    setNoder(noder) {\n      this._workingNoder = noder;\n    }\n\n    getClass() {\n      return BufferBuilder;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  BufferBuilder.constructor_ = function () {\n    this._bufParams = null;\n    this._workingPrecisionModel = null;\n    this._workingNoder = null;\n    this._geomFact = null;\n    this._graph = null;\n    this._edgeList = new EdgeList();\n    let bufParams = arguments[0];\n    this._bufParams = bufParams;\n  };\n\n  class NodingValidator {\n    constructor() {\n      NodingValidator.constructor_.apply(this, arguments);\n    }\n\n    checkEndPtVertexIntersections() {\n      if (arguments.length === 0) {\n        for (var i = this._segStrings.iterator(); i.hasNext();) {\n          var ss = i.next();\n          var pts = ss.getCoordinates();\n          this.checkEndPtVertexIntersections(pts[0], this._segStrings);\n          this.checkEndPtVertexIntersections(pts[pts.length - 1], this._segStrings);\n        }\n      } else if (arguments.length === 2) {\n        let testPt = arguments[0],\n            segStrings = arguments[1];\n\n        for (var i = segStrings.iterator(); i.hasNext();) {\n          var ss = i.next();\n          var pts = ss.getCoordinates();\n\n          for (var j = 1; j < pts.length - 1; j++) {\n            if (pts[j].equals(testPt)) throw new RuntimeException(\"found endpt/interior pt intersection at index \" + j + \" :pt \" + testPt);\n          }\n        }\n      }\n    }\n\n    checkInteriorIntersections() {\n      if (arguments.length === 0) {\n        for (var i = this._segStrings.iterator(); i.hasNext();) {\n          var ss0 = i.next();\n\n          for (var j = this._segStrings.iterator(); j.hasNext();) {\n            var ss1 = j.next();\n            this.checkInteriorIntersections(ss0, ss1);\n          }\n        }\n      } else if (arguments.length === 2) {\n        let ss0 = arguments[0],\n            ss1 = arguments[1];\n        var pts0 = ss0.getCoordinates();\n        var pts1 = ss1.getCoordinates();\n\n        for (var i0 = 0; i0 < pts0.length - 1; i0++) {\n          for (var i1 = 0; i1 < pts1.length - 1; i1++) {\n            this.checkInteriorIntersections(ss0, i0, ss1, i1);\n          }\n        }\n      } else if (arguments.length === 4) {\n        let e0 = arguments[0],\n            segIndex0 = arguments[1],\n            e1 = arguments[2],\n            segIndex1 = arguments[3];\n        if (e0 === e1 && segIndex0 === segIndex1) return null;\n        var p00 = e0.getCoordinates()[segIndex0];\n        var p01 = e0.getCoordinates()[segIndex0 + 1];\n        var p10 = e1.getCoordinates()[segIndex1];\n        var p11 = e1.getCoordinates()[segIndex1 + 1];\n\n        this._li.computeIntersection(p00, p01, p10, p11);\n\n        if (this._li.hasIntersection()) {\n          if (this._li.isProper() || this.hasInteriorIntersection(this._li, p00, p01) || this.hasInteriorIntersection(this._li, p10, p11)) {\n            throw new RuntimeException(\"found non-noded intersection at \" + p00 + \"-\" + p01 + \" and \" + p10 + \"-\" + p11);\n          }\n        }\n      }\n    }\n\n    checkValid() {\n      this.checkEndPtVertexIntersections();\n      this.checkInteriorIntersections();\n      this.checkCollapses();\n    }\n\n    checkCollapses() {\n      if (arguments.length === 0) {\n        for (var i = this._segStrings.iterator(); i.hasNext();) {\n          var ss = i.next();\n          this.checkCollapses(ss);\n        }\n      } else if (arguments.length === 1) {\n        let ss = arguments[0];\n        var pts = ss.getCoordinates();\n\n        for (var i = 0; i < pts.length - 2; i++) {\n          this.checkCollapse(pts[i], pts[i + 1], pts[i + 2]);\n        }\n      }\n    }\n\n    hasInteriorIntersection(li, p0, p1) {\n      for (var i = 0; i < li.getIntersectionNum(); i++) {\n        var intPt = li.getIntersection(i);\n        if (!(intPt.equals(p0) || intPt.equals(p1))) return true;\n      }\n\n      return false;\n    }\n\n    checkCollapse(p0, p1, p2) {\n      if (p0.equals(p2)) throw new RuntimeException(\"found non-noded collapse at \" + NodingValidator.fact.createLineString([p0, p1, p2]));\n    }\n\n    getClass() {\n      return NodingValidator;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  NodingValidator.constructor_ = function () {\n    this._li = new RobustLineIntersector();\n    this._segStrings = null;\n    let segStrings = arguments[0];\n    this._segStrings = segStrings;\n  };\n\n  NodingValidator.fact = new GeometryFactory();\n\n  class HotPixel {\n    constructor() {\n      HotPixel.constructor_.apply(this, arguments);\n    }\n\n    intersectsScaled(p0, p1) {\n      var segMinx = Math.min(p0.x, p1.x);\n      var segMaxx = Math.max(p0.x, p1.x);\n      var segMiny = Math.min(p0.y, p1.y);\n      var segMaxy = Math.max(p0.y, p1.y);\n      var isOutsidePixelEnv = this._maxx < segMinx || this._minx > segMaxx || this._maxy < segMiny || this._miny > segMaxy;\n      if (isOutsidePixelEnv) return false;\n      var intersects = this.intersectsToleranceSquare(p0, p1);\n      Assert.isTrue(!(isOutsidePixelEnv && intersects), \"Found bad envelope test\");\n      return intersects;\n    }\n\n    initCorners(pt) {\n      var tolerance = 0.5;\n      this._minx = pt.x - tolerance;\n      this._maxx = pt.x + tolerance;\n      this._miny = pt.y - tolerance;\n      this._maxy = pt.y + tolerance;\n      this._corner[0] = new Coordinate(this._maxx, this._maxy);\n      this._corner[1] = new Coordinate(this._minx, this._maxy);\n      this._corner[2] = new Coordinate(this._minx, this._miny);\n      this._corner[3] = new Coordinate(this._maxx, this._miny);\n    }\n\n    intersects(p0, p1) {\n      if (this._scaleFactor === 1.0) return this.intersectsScaled(p0, p1);\n      this.copyScaled(p0, this._p0Scaled);\n      this.copyScaled(p1, this._p1Scaled);\n      return this.intersectsScaled(this._p0Scaled, this._p1Scaled);\n    }\n\n    scale(val) {\n      return Math.round(val * this._scaleFactor);\n    }\n\n    getCoordinate() {\n      return this._originalPt;\n    }\n\n    copyScaled(p, pScaled) {\n      pScaled.x = this.scale(p.x);\n      pScaled.y = this.scale(p.y);\n    }\n\n    getSafeEnvelope() {\n      if (this._safeEnv === null) {\n        var safeTolerance = HotPixel.SAFE_ENV_EXPANSION_FACTOR / this._scaleFactor;\n        this._safeEnv = new Envelope(this._originalPt.x - safeTolerance, this._originalPt.x + safeTolerance, this._originalPt.y - safeTolerance, this._originalPt.y + safeTolerance);\n      }\n\n      return this._safeEnv;\n    }\n\n    intersectsPixelClosure(p0, p1) {\n      this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n\n      if (this._li.hasIntersection()) return true;\n\n      this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n\n      if (this._li.hasIntersection()) return true;\n\n      this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n\n      if (this._li.hasIntersection()) return true;\n\n      this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n\n      if (this._li.hasIntersection()) return true;\n      return false;\n    }\n\n    intersectsToleranceSquare(p0, p1) {\n      var intersectsLeft = false;\n      var intersectsBottom = false;\n\n      this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n\n      if (this._li.isProper()) return true;\n\n      this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n\n      if (this._li.isProper()) return true;\n      if (this._li.hasIntersection()) intersectsLeft = true;\n\n      this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n\n      if (this._li.isProper()) return true;\n      if (this._li.hasIntersection()) intersectsBottom = true;\n\n      this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n\n      if (this._li.isProper()) return true;\n      if (intersectsLeft && intersectsBottom) return true;\n      if (p0.equals(this._pt)) return true;\n      if (p1.equals(this._pt)) return true;\n      return false;\n    }\n\n    addSnappedNode(segStr, segIndex) {\n      var p0 = segStr.getCoordinate(segIndex);\n      var p1 = segStr.getCoordinate(segIndex + 1);\n\n      if (this.intersects(p0, p1)) {\n        segStr.addIntersection(this.getCoordinate(), segIndex);\n        return true;\n      }\n\n      return false;\n    }\n\n    getClass() {\n      return HotPixel;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  HotPixel.constructor_ = function () {\n    this._li = null;\n    this._pt = null;\n    this._originalPt = null;\n    this._ptScaled = null;\n    this._p0Scaled = null;\n    this._p1Scaled = null;\n    this._scaleFactor = null;\n    this._minx = null;\n    this._maxx = null;\n    this._miny = null;\n    this._maxy = null;\n    this._corner = new Array(4).fill(null);\n    this._safeEnv = null;\n    let pt = arguments[0],\n        scaleFactor = arguments[1],\n        li = arguments[2];\n    this._originalPt = pt;\n    this._pt = pt;\n    this._scaleFactor = scaleFactor;\n    this._li = li;\n    if (scaleFactor <= 0) throw new IllegalArgumentException(\"Scale factor must be non-zero\");\n\n    if (scaleFactor !== 1.0) {\n      this._pt = new Coordinate(this.scale(pt.x), this.scale(pt.y));\n      this._p0Scaled = new Coordinate();\n      this._p1Scaled = new Coordinate();\n    }\n\n    this.initCorners(this._pt);\n  };\n\n  HotPixel.SAFE_ENV_EXPANSION_FACTOR = 0.75;\n\n  class MonotoneChainSelectAction {\n    constructor() {\n      MonotoneChainSelectAction.constructor_.apply(this, arguments);\n    }\n\n    select() {\n      if (arguments.length === 1) ; else if (arguments.length === 2) {\n        let mc = arguments[0],\n            startIndex = arguments[1];\n        mc.getLineSegment(startIndex, this.selectedSegment);\n        this.select(this.selectedSegment);\n      }\n    }\n\n    getClass() {\n      return MonotoneChainSelectAction;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  MonotoneChainSelectAction.constructor_ = function () {\n    this.selectedSegment = new LineSegment();\n  };\n\n  class MCIndexPointSnapper {\n    constructor() {\n      MCIndexPointSnapper.constructor_.apply(this, arguments);\n    }\n\n    snap() {\n      if (arguments.length === 1) {\n        let hotPixel = arguments[0];\n        return this.snap(hotPixel, null, -1);\n      } else if (arguments.length === 3) {\n        let hotPixel = arguments[0],\n            parentEdge = arguments[1],\n            hotPixelVertexIndex = arguments[2];\n        var pixelEnv = hotPixel.getSafeEnvelope();\n        var hotPixelSnapAction = new HotPixelSnapAction(hotPixel, parentEdge, hotPixelVertexIndex);\n\n        this._index.query(pixelEnv, new class {\n          get interfaces_() {\n            return [ItemVisitor];\n          }\n\n          visitItem(item) {\n            var testChain = item;\n            testChain.select(pixelEnv, hotPixelSnapAction);\n          }\n\n        }());\n\n        return hotPixelSnapAction.isNodeAdded();\n      }\n    }\n\n    getClass() {\n      return MCIndexPointSnapper;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  class HotPixelSnapAction extends MonotoneChainSelectAction {\n    constructor() {\n      super();\n      HotPixelSnapAction.constructor_.apply(this, arguments);\n    }\n\n    isNodeAdded() {\n      return this._isNodeAdded;\n    }\n\n    select() {\n      if (arguments.length === 2 && Number.isInteger(arguments[1]) && arguments[0] instanceof MonotoneChain$1) {\n        let mc = arguments[0],\n            startIndex = arguments[1];\n        var ss = mc.getContext();\n\n        if (this._parentEdge !== null) {\n          if (ss === this._parentEdge && startIndex === this._hotPixelVertexIndex) return null;\n        }\n\n        this._isNodeAdded = this._hotPixel.addSnappedNode(ss, startIndex);\n      } else return super.select.apply(this, arguments);\n    }\n\n    getClass() {\n      return HotPixelSnapAction;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  HotPixelSnapAction.constructor_ = function () {\n    this._hotPixel = null;\n    this._parentEdge = null;\n    this._hotPixelVertexIndex = null;\n    this._isNodeAdded = false;\n    let hotPixel = arguments[0],\n        parentEdge = arguments[1],\n        hotPixelVertexIndex = arguments[2];\n    this._hotPixel = hotPixel;\n    this._parentEdge = parentEdge;\n    this._hotPixelVertexIndex = hotPixelVertexIndex;\n  };\n\n  MCIndexPointSnapper.HotPixelSnapAction = HotPixelSnapAction;\n\n  MCIndexPointSnapper.constructor_ = function () {\n    this._index = null;\n    let index = arguments[0];\n    this._index = index;\n  };\n\n  class InteriorIntersectionFinderAdder {\n    constructor() {\n      InteriorIntersectionFinderAdder.constructor_.apply(this, arguments);\n    }\n\n    processIntersections(e0, segIndex0, e1, segIndex1) {\n      if (e0 === e1 && segIndex0 === segIndex1) return null;\n      var p00 = e0.getCoordinates()[segIndex0];\n      var p01 = e0.getCoordinates()[segIndex0 + 1];\n      var p10 = e1.getCoordinates()[segIndex1];\n      var p11 = e1.getCoordinates()[segIndex1 + 1];\n\n      this._li.computeIntersection(p00, p01, p10, p11);\n\n      if (this._li.hasIntersection()) {\n        if (this._li.isInteriorIntersection()) {\n          for (var intIndex = 0; intIndex < this._li.getIntersectionNum(); intIndex++) {\n            this._interiorIntersections.add(this._li.getIntersection(intIndex));\n          }\n\n          e0.addIntersections(this._li, segIndex0, 0);\n          e1.addIntersections(this._li, segIndex1, 1);\n        }\n      }\n    }\n\n    isDone() {\n      return false;\n    }\n\n    getInteriorIntersections() {\n      return this._interiorIntersections;\n    }\n\n    getClass() {\n      return InteriorIntersectionFinderAdder;\n    }\n\n    get interfaces_() {\n      return [SegmentIntersector$1];\n    }\n\n  }\n\n  InteriorIntersectionFinderAdder.constructor_ = function () {\n    this._li = null;\n    this._interiorIntersections = null;\n    let li = arguments[0];\n    this._li = li;\n    this._interiorIntersections = new ArrayList();\n  };\n\n  class MCIndexSnapRounder {\n    constructor() {\n      MCIndexSnapRounder.constructor_.apply(this, arguments);\n    }\n\n    checkCorrectness(inputSegmentStrings) {\n      var resultSegStrings = NodedSegmentString.getNodedSubstrings(inputSegmentStrings);\n      var nv = new NodingValidator(resultSegStrings);\n\n      try {\n        nv.checkValid();\n      } catch (ex) {\n        if (ex instanceof Exception) {\n          ex.printStackTrace();\n        } else throw ex;\n      } finally {}\n    }\n\n    getNodedSubstrings() {\n      return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings);\n    }\n\n    snapRound(segStrings, li) {\n      var intersections = this.findInteriorIntersections(segStrings, li);\n      this.computeIntersectionSnaps(intersections);\n      this.computeVertexSnaps(segStrings);\n    }\n\n    findInteriorIntersections(segStrings, li) {\n      var intFinderAdder = new InteriorIntersectionFinderAdder(li);\n\n      this._noder.setSegmentIntersector(intFinderAdder);\n\n      this._noder.computeNodes(segStrings);\n\n      return intFinderAdder.getInteriorIntersections();\n    }\n\n    computeVertexSnaps() {\n      if (hasInterface(arguments[0], Collection)) {\n        let edges = arguments[0];\n\n        for (var i0 = edges.iterator(); i0.hasNext();) {\n          var edge0 = i0.next();\n          this.computeVertexSnaps(edge0);\n        }\n      } else if (arguments[0] instanceof NodedSegmentString) {\n        let e = arguments[0];\n        var pts0 = e.getCoordinates();\n\n        for (var i = 0; i < pts0.length; i++) {\n          var hotPixel = new HotPixel(pts0[i], this._scaleFactor, this._li);\n\n          var isNodeAdded = this._pointSnapper.snap(hotPixel, e, i);\n\n          if (isNodeAdded) {\n            e.addIntersection(pts0[i], i);\n          }\n        }\n      }\n    }\n\n    computeNodes(inputSegmentStrings) {\n      this._nodedSegStrings = inputSegmentStrings;\n      this._noder = new MCIndexNoder();\n      this._pointSnapper = new MCIndexPointSnapper(this._noder.getIndex());\n      this.snapRound(inputSegmentStrings, this._li);\n    }\n\n    computeIntersectionSnaps(snapPts) {\n      for (var it = snapPts.iterator(); it.hasNext();) {\n        var snapPt = it.next();\n        var hotPixel = new HotPixel(snapPt, this._scaleFactor, this._li);\n\n        this._pointSnapper.snap(hotPixel);\n      }\n    }\n\n    getClass() {\n      return MCIndexSnapRounder;\n    }\n\n    get interfaces_() {\n      return [Noder];\n    }\n\n  }\n\n  MCIndexSnapRounder.constructor_ = function () {\n    this._pm = null;\n    this._li = null;\n    this._scaleFactor = null;\n    this._noder = null;\n    this._pointSnapper = null;\n    this._nodedSegStrings = null;\n    let pm = arguments[0];\n    this._pm = pm;\n    this._li = new RobustLineIntersector();\n\n    this._li.setPrecisionModel(pm);\n\n    this._scaleFactor = pm.getScale();\n  };\n\n  class BufferOp {\n    constructor() {\n      BufferOp.constructor_.apply(this, arguments);\n    }\n\n    static bufferOp() {\n      if (arguments.length === 2) {\n        let g = arguments[0],\n            distance = arguments[1];\n        var gBuf = new BufferOp(g);\n        var geomBuf = gBuf.getResultGeometry(distance);\n        return geomBuf;\n      } else if (arguments.length === 3) {\n        if (Number.isInteger(arguments[2]) && arguments[0] instanceof Geometry && typeof arguments[1] === \"number\") {\n          let g = arguments[0],\n              distance = arguments[1],\n              quadrantSegments = arguments[2];\n          var bufOp = new BufferOp(g);\n          bufOp.setQuadrantSegments(quadrantSegments);\n          var geomBuf = bufOp.getResultGeometry(distance);\n          return geomBuf;\n        } else if (arguments[2] instanceof BufferParameters && arguments[0] instanceof Geometry && typeof arguments[1] === \"number\") {\n          let g = arguments[0],\n              distance = arguments[1],\n              params = arguments[2];\n          var bufOp = new BufferOp(g, params);\n          var geomBuf = bufOp.getResultGeometry(distance);\n          return geomBuf;\n        }\n      } else if (arguments.length === 4) {\n        let g = arguments[0],\n            distance = arguments[1],\n            quadrantSegments = arguments[2],\n            endCapStyle = arguments[3];\n        var bufOp = new BufferOp(g);\n        bufOp.setQuadrantSegments(quadrantSegments);\n        bufOp.setEndCapStyle(endCapStyle);\n        var geomBuf = bufOp.getResultGeometry(distance);\n        return geomBuf;\n      }\n    }\n\n    static precisionScaleFactor(g, distance, maxPrecisionDigits) {\n      var env = g.getEnvelopeInternal();\n      var envMax = MathUtil.max(Math.abs(env.getMaxX()), Math.abs(env.getMaxY()), Math.abs(env.getMinX()), Math.abs(env.getMinY()));\n      var expandByDistance = distance > 0.0 ? distance : 0.0;\n      var bufEnvMax = envMax + 2 * expandByDistance;\n      var bufEnvPrecisionDigits = Math.trunc(Math.log(bufEnvMax) / Math.log(10) + 1.0);\n      var minUnitLog10 = maxPrecisionDigits - bufEnvPrecisionDigits;\n      var scaleFactor = Math.pow(10.0, minUnitLog10);\n      return scaleFactor;\n    }\n\n    bufferFixedPrecision(fixedPM) {\n      var noder = new ScaledNoder(new MCIndexSnapRounder(new PrecisionModel(1.0)), fixedPM.getScale());\n      var bufBuilder = new BufferBuilder(this._bufParams);\n      bufBuilder.setWorkingPrecisionModel(fixedPM);\n      bufBuilder.setNoder(noder);\n      this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n    }\n\n    bufferReducedPrecision() {\n      if (arguments.length === 0) {\n        for (var precDigits = BufferOp.MAX_PRECISION_DIGITS; precDigits >= 0; precDigits--) {\n          try {\n            this.bufferReducedPrecision(precDigits);\n          } catch (ex) {\n            if (ex instanceof TopologyException) {\n              this._saveException = ex;\n            } else throw ex;\n          } finally {}\n\n          if (this._resultGeometry !== null) return null;\n        }\n\n        throw this._saveException;\n      } else if (arguments.length === 1) {\n        let precisionDigits = arguments[0];\n        var sizeBasedScaleFactor = BufferOp.precisionScaleFactor(this._argGeom, this._distance, precisionDigits);\n        var fixedPM = new PrecisionModel(sizeBasedScaleFactor);\n        this.bufferFixedPrecision(fixedPM);\n      }\n    }\n\n    computeGeometry() {\n      this.bufferOriginalPrecision();\n      if (this._resultGeometry !== null) return null;\n\n      var argPM = this._argGeom.getFactory().getPrecisionModel();\n\n      if (argPM.getType() === PrecisionModel.FIXED) this.bufferFixedPrecision(argPM);else this.bufferReducedPrecision();\n    }\n\n    setQuadrantSegments(quadrantSegments) {\n      this._bufParams.setQuadrantSegments(quadrantSegments);\n    }\n\n    bufferOriginalPrecision() {\n      try {\n        var bufBuilder = new BufferBuilder(this._bufParams);\n        this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n      } catch (ex) {\n        if (ex instanceof RuntimeException) {\n          this._saveException = ex;\n        } else throw ex;\n      } finally {}\n    }\n\n    getResultGeometry(distance) {\n      this._distance = distance;\n      this.computeGeometry();\n      return this._resultGeometry;\n    }\n\n    setEndCapStyle(endCapStyle) {\n      this._bufParams.setEndCapStyle(endCapStyle);\n    }\n\n    getClass() {\n      return BufferOp;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  BufferOp.constructor_ = function () {\n    this._argGeom = null;\n    this._distance = null;\n    this._bufParams = new BufferParameters();\n    this._resultGeometry = null;\n    this._saveException = null;\n\n    if (arguments.length === 1) {\n      let g = arguments[0];\n      this._argGeom = g;\n    } else if (arguments.length === 2) {\n      let g = arguments[0],\n          bufParams = arguments[1];\n      this._argGeom = g;\n      this._bufParams = bufParams;\n    }\n  };\n\n  BufferOp.CAP_ROUND = BufferParameters.CAP_ROUND;\n  BufferOp.CAP_BUTT = BufferParameters.CAP_FLAT;\n  BufferOp.CAP_FLAT = BufferParameters.CAP_FLAT;\n  BufferOp.CAP_SQUARE = BufferParameters.CAP_SQUARE;\n  BufferOp.MAX_PRECISION_DIGITS = 12;\n\n\n\n  var buffer = /*#__PURE__*/Object.freeze({\n    BufferOp: BufferOp,\n    BufferParameters: BufferParameters\n  });\n\n  class PolygonExtracter {\n    constructor() {\n      PolygonExtracter.constructor_.apply(this, arguments);\n    }\n\n    static getPolygons() {\n      if (arguments.length === 1) {\n        let geom = arguments[0];\n        return PolygonExtracter.getPolygons(geom, new ArrayList());\n      } else if (arguments.length === 2) {\n        let geom = arguments[0],\n            list = arguments[1];\n\n        if (geom instanceof Polygon) {\n          list.add(geom);\n        } else if (geom instanceof GeometryCollection) {\n          geom.apply(new PolygonExtracter(list));\n        }\n\n        return list;\n      }\n    }\n\n    filter(geom) {\n      if (geom instanceof Polygon) this._comps.add(geom);\n    }\n\n    getClass() {\n      return PolygonExtracter;\n    }\n\n    get interfaces_() {\n      return [GeometryFilter];\n    }\n\n  }\n\n  PolygonExtracter.constructor_ = function () {\n    this._comps = null;\n    let comps = arguments[0];\n    this._comps = comps;\n  };\n\n  class GeometryLocation {\n    constructor() {\n      GeometryLocation.constructor_.apply(this, arguments);\n    }\n\n    isInsideArea() {\n      return this._segIndex === GeometryLocation.INSIDE_AREA;\n    }\n\n    getCoordinate() {\n      return this._pt;\n    }\n\n    getGeometryComponent() {\n      return this._component;\n    }\n\n    getSegmentIndex() {\n      return this._segIndex;\n    }\n\n    getClass() {\n      return GeometryLocation;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  GeometryLocation.constructor_ = function () {\n    this._component = null;\n    this._segIndex = null;\n    this._pt = null;\n\n    if (arguments.length === 2) {\n      let component = arguments[0],\n          pt = arguments[1];\n      GeometryLocation.constructor_.call(this, component, GeometryLocation.INSIDE_AREA, pt);\n    } else if (arguments.length === 3) {\n      let component = arguments[0],\n          segIndex = arguments[1],\n          pt = arguments[2];\n      this._component = component;\n      this._segIndex = segIndex;\n      this._pt = pt;\n    }\n  };\n\n  GeometryLocation.INSIDE_AREA = -1;\n\n  class PointExtracter {\n    constructor() {\n      PointExtracter.constructor_.apply(this, arguments);\n    }\n\n    static getPoints() {\n      if (arguments.length === 1) {\n        let geom = arguments[0];\n\n        if (geom instanceof Point) {\n          return Collections.singletonList(geom);\n        }\n\n        return PointExtracter.getPoints(geom, new ArrayList());\n      } else if (arguments.length === 2) {\n        let geom = arguments[0],\n            list = arguments[1];\n\n        if (geom instanceof Point) {\n          list.add(geom);\n        } else if (geom instanceof GeometryCollection) {\n          geom.apply(new PointExtracter(list));\n        }\n\n        return list;\n      }\n    }\n\n    filter(geom) {\n      if (geom instanceof Point) this._pts.add(geom);\n    }\n\n    getClass() {\n      return PointExtracter;\n    }\n\n    get interfaces_() {\n      return [GeometryFilter];\n    }\n\n  }\n\n  PointExtracter.constructor_ = function () {\n    this._pts = null;\n    let pts = arguments[0];\n    this._pts = pts;\n  };\n\n  class ConnectedElementLocationFilter {\n    constructor() {\n      ConnectedElementLocationFilter.constructor_.apply(this, arguments);\n    }\n\n    static getLocations(geom) {\n      var locations = new ArrayList();\n      geom.apply(new ConnectedElementLocationFilter(locations));\n      return locations;\n    }\n\n    filter(geom) {\n      if (geom instanceof Point || geom instanceof LineString || geom instanceof Polygon) this._locations.add(new GeometryLocation(geom, 0, geom.getCoordinate()));\n    }\n\n    getClass() {\n      return ConnectedElementLocationFilter;\n    }\n\n    get interfaces_() {\n      return [GeometryFilter];\n    }\n\n  }\n\n  ConnectedElementLocationFilter.constructor_ = function () {\n    this._locations = null;\n    let locations = arguments[0];\n    this._locations = locations;\n  };\n\n  class DistanceOp {\n    constructor() {\n      DistanceOp.constructor_.apply(this, arguments);\n    }\n\n    static distance(g0, g1) {\n      var distOp = new DistanceOp(g0, g1);\n      return distOp.distance();\n    }\n\n    static isWithinDistance(g0, g1, distance) {\n      var envDist = g0.getEnvelopeInternal().distance(g1.getEnvelopeInternal());\n      if (envDist > distance) return false;\n      var distOp = new DistanceOp(g0, g1, distance);\n      return distOp.distance() <= distance;\n    }\n\n    static nearestPoints(g0, g1) {\n      var distOp = new DistanceOp(g0, g1);\n      return distOp.nearestPoints();\n    }\n\n    computeContainmentDistance() {\n      if (arguments.length === 0) {\n        var locPtPoly = new Array(2).fill(null);\n        this.computeContainmentDistance(0, locPtPoly);\n        if (this._minDistance <= this._terminateDistance) return null;\n        this.computeContainmentDistance(1, locPtPoly);\n      } else if (arguments.length === 2) {\n        let polyGeomIndex = arguments[0],\n            locPtPoly = arguments[1];\n        var polyGeom = this._geom[polyGeomIndex];\n        if (polyGeom.getDimension() < 2) return null;\n        var locationsIndex = 1 - polyGeomIndex;\n        var polys = PolygonExtracter.getPolygons(polyGeom);\n\n        if (polys.size() > 0) {\n          var insideLocs = ConnectedElementLocationFilter.getLocations(this._geom[locationsIndex]);\n          this.computeContainmentDistance(insideLocs, polys, locPtPoly);\n\n          if (this._minDistance <= this._terminateDistance) {\n            this._minDistanceLocation[locationsIndex] = locPtPoly[0];\n            this._minDistanceLocation[polyGeomIndex] = locPtPoly[1];\n            return null;\n          }\n        }\n      } else if (arguments.length === 3) {\n        if (arguments[2] instanceof Array && hasInterface(arguments[0], List) && hasInterface(arguments[1], List)) {\n          let locs = arguments[0],\n              polys = arguments[1],\n              locPtPoly = arguments[2];\n\n          for (var i = 0; i < locs.size(); i++) {\n            var loc = locs.get(i);\n\n            for (var j = 0; j < polys.size(); j++) {\n              this.computeContainmentDistance(loc, polys.get(j), locPtPoly);\n              if (this._minDistance <= this._terminateDistance) return null;\n            }\n          }\n        } else if (arguments[2] instanceof Array && arguments[0] instanceof GeometryLocation && arguments[1] instanceof Polygon) {\n          let ptLoc = arguments[0],\n              poly = arguments[1],\n              locPtPoly = arguments[2];\n          var pt = ptLoc.getCoordinate();\n\n          if (Location.EXTERIOR !== this._ptLocator.locate(pt, poly)) {\n            this._minDistance = 0.0;\n            locPtPoly[0] = ptLoc;\n            locPtPoly[1] = new GeometryLocation(poly, pt);\n            return null;\n          }\n        }\n      }\n    }\n\n    computeMinDistanceLinesPoints(lines, points, locGeom) {\n      for (var i = 0; i < lines.size(); i++) {\n        var line = lines.get(i);\n\n        for (var j = 0; j < points.size(); j++) {\n          var pt = points.get(j);\n          this.computeMinDistance(line, pt, locGeom);\n          if (this._minDistance <= this._terminateDistance) return null;\n        }\n      }\n    }\n\n    computeFacetDistance() {\n      var locGeom = new Array(2).fill(null);\n      var lines0 = LinearComponentExtracter.getLines(this._geom[0]);\n      var lines1 = LinearComponentExtracter.getLines(this._geom[1]);\n      var pts0 = PointExtracter.getPoints(this._geom[0]);\n      var pts1 = PointExtracter.getPoints(this._geom[1]);\n      this.computeMinDistanceLines(lines0, lines1, locGeom);\n      this.updateMinDistance(locGeom, false);\n      if (this._minDistance <= this._terminateDistance) return null;\n      locGeom[0] = null;\n      locGeom[1] = null;\n      this.computeMinDistanceLinesPoints(lines0, pts1, locGeom);\n      this.updateMinDistance(locGeom, false);\n      if (this._minDistance <= this._terminateDistance) return null;\n      locGeom[0] = null;\n      locGeom[1] = null;\n      this.computeMinDistanceLinesPoints(lines1, pts0, locGeom);\n      this.updateMinDistance(locGeom, true);\n      if (this._minDistance <= this._terminateDistance) return null;\n      locGeom[0] = null;\n      locGeom[1] = null;\n      this.computeMinDistancePoints(pts0, pts1, locGeom);\n      this.updateMinDistance(locGeom, false);\n    }\n\n    nearestLocations() {\n      this.computeMinDistance();\n      return this._minDistanceLocation;\n    }\n\n    updateMinDistance(locGeom, flip) {\n      if (locGeom[0] === null) return null;\n\n      if (flip) {\n        this._minDistanceLocation[0] = locGeom[1];\n        this._minDistanceLocation[1] = locGeom[0];\n      } else {\n        this._minDistanceLocation[0] = locGeom[0];\n        this._minDistanceLocation[1] = locGeom[1];\n      }\n    }\n\n    nearestPoints() {\n      this.computeMinDistance();\n      var nearestPts = [this._minDistanceLocation[0].getCoordinate(), this._minDistanceLocation[1].getCoordinate()];\n      return nearestPts;\n    }\n\n    computeMinDistance() {\n      if (arguments.length === 0) {\n        if (this._minDistanceLocation !== null) return null;\n        this._minDistanceLocation = new Array(2).fill(null);\n        this.computeContainmentDistance();\n        if (this._minDistance <= this._terminateDistance) return null;\n        this.computeFacetDistance();\n      } else if (arguments.length === 3) {\n        if (arguments[2] instanceof Array && arguments[0] instanceof LineString && arguments[1] instanceof Point) {\n          let line = arguments[0],\n              pt = arguments[1],\n              locGeom = arguments[2];\n          if (line.getEnvelopeInternal().distance(pt.getEnvelopeInternal()) > this._minDistance) return null;\n          var coord0 = line.getCoordinates();\n          var coord = pt.getCoordinate();\n\n          for (var i = 0; i < coord0.length - 1; i++) {\n            var dist = Distance.pointToSegment(coord, coord0[i], coord0[i + 1]);\n\n            if (dist < this._minDistance) {\n              this._minDistance = dist;\n              var seg = new LineSegment(coord0[i], coord0[i + 1]);\n              var segClosestPoint = seg.closestPoint(coord);\n              locGeom[0] = new GeometryLocation(line, i, segClosestPoint);\n              locGeom[1] = new GeometryLocation(pt, 0, coord);\n            }\n\n            if (this._minDistance <= this._terminateDistance) return null;\n          }\n        } else if (arguments[2] instanceof Array && arguments[0] instanceof LineString && arguments[1] instanceof LineString) {\n          let line0 = arguments[0],\n              line1 = arguments[1],\n              locGeom = arguments[2];\n          if (line0.getEnvelopeInternal().distance(line1.getEnvelopeInternal()) > this._minDistance) return null;\n          var coord0 = line0.getCoordinates();\n          var coord1 = line1.getCoordinates();\n\n          for (var i = 0; i < coord0.length - 1; i++) {\n            for (var j = 0; j < coord1.length - 1; j++) {\n              var dist = Distance.segmentToSegment(coord0[i], coord0[i + 1], coord1[j], coord1[j + 1]);\n\n              if (dist < this._minDistance) {\n                this._minDistance = dist;\n                var seg0 = new LineSegment(coord0[i], coord0[i + 1]);\n                var seg1 = new LineSegment(coord1[j], coord1[j + 1]);\n                var closestPt = seg0.closestPoints(seg1);\n                locGeom[0] = new GeometryLocation(line0, i, closestPt[0]);\n                locGeom[1] = new GeometryLocation(line1, j, closestPt[1]);\n              }\n\n              if (this._minDistance <= this._terminateDistance) return null;\n            }\n          }\n        }\n      }\n    }\n\n    computeMinDistancePoints(points0, points1, locGeom) {\n      for (var i = 0; i < points0.size(); i++) {\n        var pt0 = points0.get(i);\n\n        for (var j = 0; j < points1.size(); j++) {\n          var pt1 = points1.get(j);\n          var dist = pt0.getCoordinate().distance(pt1.getCoordinate());\n\n          if (dist < this._minDistance) {\n            this._minDistance = dist;\n            locGeom[0] = new GeometryLocation(pt0, 0, pt0.getCoordinate());\n            locGeom[1] = new GeometryLocation(pt1, 0, pt1.getCoordinate());\n          }\n\n          if (this._minDistance <= this._terminateDistance) return null;\n        }\n      }\n    }\n\n    distance() {\n      if (this._geom[0] === null || this._geom[1] === null) throw new IllegalArgumentException(\"null geometries are not supported\");\n      if (this._geom[0].isEmpty() || this._geom[1].isEmpty()) return 0.0;\n      this.computeMinDistance();\n      return this._minDistance;\n    }\n\n    computeMinDistanceLines(lines0, lines1, locGeom) {\n      for (var i = 0; i < lines0.size(); i++) {\n        var line0 = lines0.get(i);\n\n        for (var j = 0; j < lines1.size(); j++) {\n          var line1 = lines1.get(j);\n          this.computeMinDistance(line0, line1, locGeom);\n          if (this._minDistance <= this._terminateDistance) return null;\n        }\n      }\n    }\n\n    getClass() {\n      return DistanceOp;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  DistanceOp.constructor_ = function () {\n    this._geom = null;\n    this._terminateDistance = 0.0;\n    this._ptLocator = new PointLocator();\n    this._minDistanceLocation = null;\n    this._minDistance = Double.MAX_VALUE;\n\n    if (arguments.length === 2) {\n      let g0 = arguments[0],\n          g1 = arguments[1];\n      DistanceOp.constructor_.call(this, g0, g1, 0.0);\n    } else if (arguments.length === 3) {\n      let g0 = arguments[0],\n          g1 = arguments[1],\n          terminateDistance = arguments[2];\n      this._geom = new Array(2).fill(null);\n      this._geom[0] = g0;\n      this._geom[1] = g1;\n      this._terminateDistance = terminateDistance;\n    }\n  };\n\n\n\n  var distance = /*#__PURE__*/Object.freeze({\n    DistanceOp: DistanceOp\n  });\n\n  class EdgeString {\n    constructor() {\n      EdgeString.constructor_.apply(this, arguments);\n    }\n\n    getCoordinates() {\n      if (this._coordinates === null) {\n        var forwardDirectedEdges = 0;\n        var reverseDirectedEdges = 0;\n        var coordinateList = new CoordinateList();\n\n        for (var i = this._directedEdges.iterator(); i.hasNext();) {\n          var directedEdge = i.next();\n\n          if (directedEdge.getEdgeDirection()) {\n            forwardDirectedEdges++;\n          } else {\n            reverseDirectedEdges++;\n          }\n\n          coordinateList.add(directedEdge.getEdge().getLine().getCoordinates(), false, directedEdge.getEdgeDirection());\n        }\n\n        this._coordinates = coordinateList.toCoordinateArray();\n\n        if (reverseDirectedEdges > forwardDirectedEdges) {\n          CoordinateArrays.reverse(this._coordinates);\n        }\n      }\n\n      return this._coordinates;\n    }\n\n    toLineString() {\n      return this._factory.createLineString(this.getCoordinates());\n    }\n\n    add(directedEdge) {\n      this._directedEdges.add(directedEdge);\n    }\n\n    getClass() {\n      return EdgeString;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  EdgeString.constructor_ = function () {\n    this._factory = null;\n    this._directedEdges = new ArrayList();\n    this._coordinates = null;\n    let factory = arguments[0];\n    this._factory = factory;\n  };\n\n  class GraphComponent$1 {\n    constructor() {\n      GraphComponent$1.constructor_.apply(this, arguments);\n    }\n\n    static getComponentWithVisitedState(i, visitedState) {\n      while (i.hasNext()) {\n        var comp = i.next();\n        if (comp.isVisited() === visitedState) return comp;\n      }\n\n      return null;\n    }\n\n    static setVisited(i, visited) {\n      while (i.hasNext()) {\n        var comp = i.next();\n        comp.setVisited(visited);\n      }\n    }\n\n    static setMarked(i, marked) {\n      while (i.hasNext()) {\n        var comp = i.next();\n        comp.setMarked(marked);\n      }\n    }\n\n    setVisited(isVisited) {\n      this._isVisited = isVisited;\n    }\n\n    isMarked() {\n      return this._isMarked;\n    }\n\n    setData(data) {\n      this._data = data;\n    }\n\n    getData() {\n      return this._data;\n    }\n\n    setMarked(isMarked) {\n      this._isMarked = isMarked;\n    }\n\n    getContext() {\n      return this._data;\n    }\n\n    isVisited() {\n      return this._isVisited;\n    }\n\n    setContext(data) {\n      this._data = data;\n    }\n\n    getClass() {\n      return GraphComponent$1;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  GraphComponent$1.constructor_ = function () {\n    this._isMarked = false;\n    this._isVisited = false;\n    this._data = null;\n  };\n\n  class DirectedEdge$1 extends GraphComponent$1 {\n    constructor() {\n      super();\n      DirectedEdge$1.constructor_.apply(this, arguments);\n    }\n\n    static toEdges(dirEdges) {\n      var edges = new ArrayList();\n\n      for (var i = dirEdges.iterator(); i.hasNext();) {\n        edges.add(i.next()._parentEdge);\n      }\n\n      return edges;\n    }\n\n    isRemoved() {\n      return this._parentEdge === null;\n    }\n\n    compareDirection(e) {\n      if (this._quadrant > e._quadrant) return 1;\n      if (this._quadrant < e._quadrant) return -1;\n      return Orientation.index(e._p0, e._p1, this._p1);\n    }\n\n    getCoordinate() {\n      return this._from.getCoordinate();\n    }\n\n    print(out) {\n      var className = this.getClass().getName();\n      var lastDotPos = className.lastIndexOf('.');\n      var name = className.substring(lastDotPos + 1);\n      out.print(\"  \" + name + \": \" + this._p0 + \" - \" + this._p1 + \" \" + this._quadrant + \":\" + this._angle);\n    }\n\n    getDirectionPt() {\n      return this._p1;\n    }\n\n    getAngle() {\n      return this._angle;\n    }\n\n    compareTo(obj) {\n      var de = obj;\n      return this.compareDirection(de);\n    }\n\n    getFromNode() {\n      return this._from;\n    }\n\n    getSym() {\n      return this._sym;\n    }\n\n    setEdge(parentEdge) {\n      this._parentEdge = parentEdge;\n    }\n\n    remove() {\n      this._sym = null;\n      this._parentEdge = null;\n    }\n\n    getEdge() {\n      return this._parentEdge;\n    }\n\n    getQuadrant() {\n      return this._quadrant;\n    }\n\n    setSym(sym) {\n      this._sym = sym;\n    }\n\n    getToNode() {\n      return this._to;\n    }\n\n    getEdgeDirection() {\n      return this._edgeDirection;\n    }\n\n    getClass() {\n      return DirectedEdge$1;\n    }\n\n    get interfaces_() {\n      return [Comparable];\n    }\n\n  }\n\n  DirectedEdge$1.constructor_ = function () {\n    this._parentEdge = null;\n    this._from = null;\n    this._to = null;\n    this._p0 = null;\n    this._p1 = null;\n    this._sym = null;\n    this._edgeDirection = null;\n    this._quadrant = null;\n    this._angle = null;\n\n    if (arguments.length === 0) ; else if (arguments.length === 4) {\n      let from = arguments[0],\n          to = arguments[1],\n          directionPt = arguments[2],\n          edgeDirection = arguments[3];\n      this._from = from;\n      this._to = to;\n      this._edgeDirection = edgeDirection;\n      this._p0 = from.getCoordinate();\n      this._p1 = directionPt;\n      var dx = this._p1.x - this._p0.x;\n      var dy = this._p1.y - this._p0.y;\n      this._quadrant = Quadrant.quadrant(dx, dy);\n      this._angle = Math.atan2(dy, dx);\n    }\n  };\n\n  class LineMergeDirectedEdge extends DirectedEdge$1 {\n    constructor() {\n      super();\n      LineMergeDirectedEdge.constructor_.apply(this, arguments);\n    }\n\n    getNext() {\n      if (this.getToNode().getDegree() !== 2) {\n        return null;\n      }\n\n      if (this.getToNode().getOutEdges().getEdges().get(0) === this.getSym()) {\n        return this.getToNode().getOutEdges().getEdges().get(1);\n      }\n\n      Assert.isTrue(this.getToNode().getOutEdges().getEdges().get(1) === this.getSym());\n      return this.getToNode().getOutEdges().getEdges().get(0);\n    }\n\n    getClass() {\n      return LineMergeDirectedEdge;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  LineMergeDirectedEdge.constructor_ = function () {\n    let from = arguments[0],\n        to = arguments[1],\n        directionPt = arguments[2],\n        edgeDirection = arguments[3];\n    DirectedEdge$1.constructor_.call(this, from, to, directionPt, edgeDirection);\n  };\n\n  class Edge$1 extends GraphComponent$1 {\n    constructor() {\n      super();\n      Edge$1.constructor_.apply(this, arguments);\n    }\n\n    isRemoved() {\n      return this._dirEdge === null;\n    }\n\n    setDirectedEdges(de0, de1) {\n      this._dirEdge = [de0, de1];\n      de0.setEdge(this);\n      de1.setEdge(this);\n      de0.setSym(de1);\n      de1.setSym(de0);\n      de0.getFromNode().addOutEdge(de0);\n      de1.getFromNode().addOutEdge(de1);\n    }\n\n    getDirEdge() {\n      if (Number.isInteger(arguments[0])) {\n        let i = arguments[0];\n        return this._dirEdge[i];\n      } else if (arguments[0] instanceof Node$2) {\n        let fromNode = arguments[0];\n        if (this._dirEdge[0].getFromNode() === fromNode) return this._dirEdge[0];\n        if (this._dirEdge[1].getFromNode() === fromNode) return this._dirEdge[1];\n        return null;\n      }\n    }\n\n    remove() {\n      this._dirEdge = null;\n    }\n\n    getOppositeNode(node) {\n      if (this._dirEdge[0].getFromNode() === node) return this._dirEdge[0].getToNode();\n      if (this._dirEdge[1].getFromNode() === node) return this._dirEdge[1].getToNode();\n      return null;\n    }\n\n    getClass() {\n      return Edge$1;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  Edge$1.constructor_ = function () {\n    this._dirEdge = null;\n\n    if (arguments.length === 0) ; else if (arguments.length === 2) {\n      let de0 = arguments[0],\n          de1 = arguments[1];\n      this.setDirectedEdges(de0, de1);\n    }\n  };\n\n  class DirectedEdgeStar$1 {\n    constructor() {\n      DirectedEdgeStar$1.constructor_.apply(this, arguments);\n    }\n\n    getNextEdge(dirEdge) {\n      var i = this.getIndex(dirEdge);\n      return this._outEdges.get(this.getIndex(i + 1));\n    }\n\n    getCoordinate() {\n      var it = this.iterator();\n      if (!it.hasNext()) return null;\n      var e = it.next();\n      return e.getCoordinate();\n    }\n\n    iterator() {\n      this.sortEdges();\n      return this._outEdges.iterator();\n    }\n\n    sortEdges() {\n      if (!this._sorted) {\n        Collections.sort(this._outEdges);\n        this._sorted = true;\n      }\n    }\n\n    remove(de) {\n      this._outEdges.remove(de);\n    }\n\n    getEdges() {\n      this.sortEdges();\n      return this._outEdges;\n    }\n\n    getNextCWEdge(dirEdge) {\n      var i = this.getIndex(dirEdge);\n      return this._outEdges.get(this.getIndex(i - 1));\n    }\n\n    getIndex() {\n      if (arguments[0] instanceof Edge$1) {\n        let edge = arguments[0];\n        this.sortEdges();\n\n        for (var i = 0; i < this._outEdges.size(); i++) {\n          var de = this._outEdges.get(i);\n\n          if (de.getEdge() === edge) return i;\n        }\n\n        return -1;\n      } else if (arguments[0] instanceof DirectedEdge$1) {\n        let dirEdge = arguments[0];\n        this.sortEdges();\n\n        for (var i = 0; i < this._outEdges.size(); i++) {\n          var de = this._outEdges.get(i);\n\n          if (de === dirEdge) return i;\n        }\n\n        return -1;\n      } else if (Number.isInteger(arguments[0])) {\n        let i = arguments[0];\n\n        var modi = i % this._outEdges.size();\n\n        if (modi < 0) modi += this._outEdges.size();\n        return modi;\n      }\n    }\n\n    add(de) {\n      this._outEdges.add(de);\n\n      this._sorted = false;\n    }\n\n    getDegree() {\n      return this._outEdges.size();\n    }\n\n    getClass() {\n      return DirectedEdgeStar$1;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  DirectedEdgeStar$1.constructor_ = function () {\n    this._outEdges = new ArrayList();\n    this._sorted = false;\n  };\n\n  class Node$2 extends GraphComponent$1 {\n    constructor() {\n      super();\n      Node$2.constructor_.apply(this, arguments);\n    }\n\n    static getEdgesBetween(node0, node1) {\n      var edges0 = DirectedEdge$1.toEdges(node0.getOutEdges().getEdges());\n      var commonEdges = new HashSet(edges0);\n      var edges1 = DirectedEdge$1.toEdges(node1.getOutEdges().getEdges());\n      commonEdges.retainAll(edges1);\n      return commonEdges;\n    }\n\n    isRemoved() {\n      return this._pt === null;\n    }\n\n    addOutEdge(de) {\n      this._deStar.add(de);\n    }\n\n    getCoordinate() {\n      return this._pt;\n    }\n\n    getOutEdges() {\n      return this._deStar;\n    }\n\n    remove() {\n      if (arguments.length === 0) {\n        this._pt = null;\n      } else if (arguments.length === 1) {\n        let de = arguments[0];\n\n        this._deStar.remove(de);\n      }\n    }\n\n    getIndex(edge) {\n      return this._deStar.getIndex(edge);\n    }\n\n    getDegree() {\n      return this._deStar.getDegree();\n    }\n\n    getClass() {\n      return Node$2;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  Node$2.constructor_ = function () {\n    this._pt = null;\n    this._deStar = null;\n\n    if (arguments.length === 1) {\n      let pt = arguments[0];\n      Node$2.constructor_.call(this, pt, new DirectedEdgeStar$1());\n    } else if (arguments.length === 2) {\n      let pt = arguments[0],\n          deStar = arguments[1];\n      this._pt = pt;\n      this._deStar = deStar;\n    }\n  };\n\n  class LineMergeEdge extends Edge$1 {\n    constructor() {\n      super();\n      LineMergeEdge.constructor_.apply(this, arguments);\n    }\n\n    getLine() {\n      return this._line;\n    }\n\n    getClass() {\n      return LineMergeEdge;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  LineMergeEdge.constructor_ = function () {\n    this._line = null;\n    let line = arguments[0];\n    this._line = line;\n  };\n\n  class NodeMap$1 {\n    constructor() {\n      NodeMap$1.constructor_.apply(this, arguments);\n    }\n\n    find(coord) {\n      return this._nodeMap.get(coord);\n    }\n\n    iterator() {\n      return this._nodeMap.values().iterator();\n    }\n\n    remove(pt) {\n      return this._nodeMap.remove(pt);\n    }\n\n    values() {\n      return this._nodeMap.values();\n    }\n\n    add(n) {\n      this._nodeMap.put(n.getCoordinate(), n);\n\n      return n;\n    }\n\n    getClass() {\n      return NodeMap$1;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  NodeMap$1.constructor_ = function () {\n    this._nodeMap = new TreeMap();\n  };\n\n  class PlanarGraph$1 {\n    constructor() {\n      PlanarGraph$1.constructor_.apply(this, arguments);\n    }\n\n    findNodesOfDegree(degree) {\n      var nodesFound = new ArrayList();\n\n      for (var i = this.nodeIterator(); i.hasNext();) {\n        var node = i.next();\n        if (node.getDegree() === degree) nodesFound.add(node);\n      }\n\n      return nodesFound;\n    }\n\n    dirEdgeIterator() {\n      return this._dirEdges.iterator();\n    }\n\n    edgeIterator() {\n      return this._edges.iterator();\n    }\n\n    remove() {\n      if (arguments[0] instanceof Edge$1) {\n        let edge = arguments[0];\n        this.remove(edge.getDirEdge(0));\n        this.remove(edge.getDirEdge(1));\n\n        this._edges.remove(edge);\n\n        edge.remove();\n      } else if (arguments[0] instanceof DirectedEdge$1) {\n        let de = arguments[0];\n        var sym = de.getSym();\n        if (sym !== null) sym.setSym(null);\n        de.getFromNode().remove(de);\n        de.remove();\n\n        this._dirEdges.remove(de);\n      } else if (arguments[0] instanceof Node$2) {\n        let node = arguments[0];\n        var outEdges = node.getOutEdges().getEdges();\n\n        for (var i = outEdges.iterator(); i.hasNext();) {\n          var de = i.next();\n          var sym = de.getSym();\n          if (sym !== null) this.remove(sym);\n\n          this._dirEdges.remove(de);\n\n          var edge = de.getEdge();\n\n          if (edge !== null) {\n            this._edges.remove(edge);\n          }\n        }\n\n        this._nodeMap.remove(node.getCoordinate());\n\n        node.remove();\n      }\n    }\n\n    findNode(pt) {\n      return this._nodeMap.find(pt);\n    }\n\n    getEdges() {\n      return this._edges;\n    }\n\n    nodeIterator() {\n      return this._nodeMap.iterator();\n    }\n\n    contains() {\n      if (arguments[0] instanceof Edge$1) {\n        let e = arguments[0];\n        return this._edges.contains(e);\n      } else if (arguments[0] instanceof DirectedEdge$1) {\n        let de = arguments[0];\n        return this._dirEdges.contains(de);\n      }\n    }\n\n    add() {\n      if (arguments[0] instanceof Node$2) {\n        let node = arguments[0];\n\n        this._nodeMap.add(node);\n      } else if (arguments[0] instanceof Edge$1) {\n        let edge = arguments[0];\n\n        this._edges.add(edge);\n\n        this.add(edge.getDirEdge(0));\n        this.add(edge.getDirEdge(1));\n      } else if (arguments[0] instanceof DirectedEdge$1) {\n        let dirEdge = arguments[0];\n\n        this._dirEdges.add(dirEdge);\n      }\n    }\n\n    getNodes() {\n      return this._nodeMap.values();\n    }\n\n    getClass() {\n      return PlanarGraph$1;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  PlanarGraph$1.constructor_ = function () {\n    this._edges = new HashSet();\n    this._dirEdges = new HashSet();\n    this._nodeMap = new NodeMap$1();\n  };\n\n  class LineMergeGraph extends PlanarGraph$1 {\n    constructor() {\n      super();\n      LineMergeGraph.constructor_.apply(this, arguments);\n    }\n\n    addEdge(lineString) {\n      if (lineString.isEmpty()) {\n        return null;\n      }\n\n      var coordinates = CoordinateArrays.removeRepeatedPoints(lineString.getCoordinates());\n      if (coordinates.length <= 1) return null;\n      var startCoordinate = coordinates[0];\n      var endCoordinate = coordinates[coordinates.length - 1];\n      var startNode = this.getNode(startCoordinate);\n      var endNode = this.getNode(endCoordinate);\n      var directedEdge0 = new LineMergeDirectedEdge(startNode, endNode, coordinates[1], true);\n      var directedEdge1 = new LineMergeDirectedEdge(endNode, startNode, coordinates[coordinates.length - 2], false);\n      var edge = new LineMergeEdge(lineString);\n      edge.setDirectedEdges(directedEdge0, directedEdge1);\n      this.add(edge);\n    }\n\n    getNode(coordinate) {\n      var node = this.findNode(coordinate);\n\n      if (node === null) {\n        node = new Node$2(coordinate);\n        this.add(node);\n      }\n\n      return node;\n    }\n\n    getClass() {\n      return LineMergeGraph;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  LineMergeGraph.constructor_ = function () {};\n\n  class LineMerger {\n    constructor() {\n      LineMerger.constructor_.apply(this, arguments);\n    }\n\n    buildEdgeStringsForUnprocessedNodes() {\n      for (var i = this._graph.getNodes().iterator(); i.hasNext();) {\n        var node = i.next();\n\n        if (!node.isMarked()) {\n          Assert.isTrue(node.getDegree() === 2);\n          this.buildEdgeStringsStartingAt(node);\n          node.setMarked(true);\n        }\n      }\n    }\n\n    buildEdgeStringsForNonDegree2Nodes() {\n      for (var i = this._graph.getNodes().iterator(); i.hasNext();) {\n        var node = i.next();\n\n        if (node.getDegree() !== 2) {\n          this.buildEdgeStringsStartingAt(node);\n          node.setMarked(true);\n        }\n      }\n    }\n\n    buildEdgeStringsForObviousStartNodes() {\n      this.buildEdgeStringsForNonDegree2Nodes();\n    }\n\n    getMergedLineStrings() {\n      this.merge();\n      return this._mergedLineStrings;\n    }\n\n    buildEdgeStringsStartingAt(node) {\n      for (var i = node.getOutEdges().iterator(); i.hasNext();) {\n        var directedEdge = i.next();\n\n        if (directedEdge.getEdge().isMarked()) {\n          continue;\n        }\n\n        this._edgeStrings.add(this.buildEdgeStringStartingWith(directedEdge));\n      }\n    }\n\n    merge() {\n      if (this._mergedLineStrings !== null) {\n        return null;\n      }\n\n      GraphComponent$1.setMarked(this._graph.nodeIterator(), false);\n      GraphComponent$1.setMarked(this._graph.edgeIterator(), false);\n      this._edgeStrings = new ArrayList();\n      this.buildEdgeStringsForObviousStartNodes();\n      this.buildEdgeStringsForIsolatedLoops();\n      this._mergedLineStrings = new ArrayList();\n\n      for (var i = this._edgeStrings.iterator(); i.hasNext();) {\n        var edgeString = i.next();\n\n        this._mergedLineStrings.add(edgeString.toLineString());\n      }\n    }\n\n    addLineString(lineString) {\n      if (this._factory === null) {\n        this._factory = lineString.getFactory();\n      }\n\n      this._graph.addEdge(lineString);\n    }\n\n    buildEdgeStringStartingWith(start) {\n      var edgeString = new EdgeString(this._factory);\n      var current = start;\n\n      do {\n        edgeString.add(current);\n        current.getEdge().setMarked(true);\n        current = current.getNext();\n      } while (current !== null && current !== start);\n\n      return edgeString;\n    }\n\n    add() {\n      if (arguments[0] instanceof Geometry) {\n        let geometry = arguments[0];\n\n        for (var i = 0; i < geometry.getNumGeometries(); i++) {\n          var component = geometry.getGeometryN(i);\n\n          if (component instanceof LineString) {\n            this.addLineString(component);\n          }\n        }\n      } else if (hasInterface(arguments[0], Collection)) {\n        let geometries = arguments[0];\n        this._mergedLineStrings = null;\n\n        for (var i = geometries.iterator(); i.hasNext();) {\n          var geometry = i.next();\n          this.add(geometry);\n        }\n      }\n    }\n\n    buildEdgeStringsForIsolatedLoops() {\n      this.buildEdgeStringsForUnprocessedNodes();\n    }\n\n    getClass() {\n      return LineMerger;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  LineMerger.constructor_ = function () {\n    this._graph = new LineMergeGraph();\n    this._mergedLineStrings = null;\n    this._factory = null;\n    this._edgeStrings = null;\n  };\n\n\n\n  var linemerge = /*#__PURE__*/Object.freeze({\n    LineMerger: LineMerger\n  });\n\n  class LineStringSnapper {\n    constructor() {\n      LineStringSnapper.constructor_.apply(this, arguments);\n    }\n\n    static isClosed(pts) {\n      if (pts.length <= 1) return false;\n      return pts[0].equals2D(pts[pts.length - 1]);\n    }\n\n    snapVertices(srcCoords, snapPts) {\n      var end = this._isClosed ? srcCoords.size() - 1 : srcCoords.size();\n\n      for (var i = 0; i < end; i++) {\n        var srcPt = srcCoords.get(i);\n        var snapVert = this.findSnapForVertex(srcPt, snapPts);\n\n        if (snapVert !== null) {\n          srcCoords.set(i, new Coordinate(snapVert));\n          if (i === 0 && this._isClosed) srcCoords.set(srcCoords.size() - 1, new Coordinate(snapVert));\n        }\n      }\n    }\n\n    findSnapForVertex(pt, snapPts) {\n      for (var i = 0; i < snapPts.length; i++) {\n        if (pt.equals2D(snapPts[i])) return null;\n        if (pt.distance(snapPts[i]) < this._snapTolerance) return snapPts[i];\n      }\n\n      return null;\n    }\n\n    snapTo(snapPts) {\n      var coordList = new CoordinateList(this._srcPts);\n      this.snapVertices(coordList, snapPts);\n      this.snapSegments(coordList, snapPts);\n      var newPts = coordList.toCoordinateArray();\n      return newPts;\n    }\n\n    snapSegments(srcCoords, snapPts) {\n      if (snapPts.length === 0) return null;\n      var distinctPtCount = snapPts.length;\n      if (snapPts[0].equals2D(snapPts[snapPts.length - 1])) distinctPtCount = snapPts.length - 1;\n\n      for (var i = 0; i < distinctPtCount; i++) {\n        var snapPt = snapPts[i];\n        var index = this.findSegmentIndexToSnap(snapPt, srcCoords);\n\n        if (index >= 0) {\n          srcCoords.add(index + 1, new Coordinate(snapPt), false);\n        }\n      }\n    }\n\n    findSegmentIndexToSnap(snapPt, srcCoords) {\n      var minDist = Double.MAX_VALUE;\n      var snapIndex = -1;\n\n      for (var i = 0; i < srcCoords.size() - 1; i++) {\n        this._seg.p0 = srcCoords.get(i);\n        this._seg.p1 = srcCoords.get(i + 1);\n\n        if (this._seg.p0.equals2D(snapPt) || this._seg.p1.equals2D(snapPt)) {\n          if (this._allowSnappingToSourceVertices) continue;else return -1;\n        }\n\n        var dist = this._seg.distance(snapPt);\n\n        if (dist < this._snapTolerance && dist < minDist) {\n          minDist = dist;\n          snapIndex = i;\n        }\n      }\n\n      return snapIndex;\n    }\n\n    setAllowSnappingToSourceVertices(allowSnappingToSourceVertices) {\n      this._allowSnappingToSourceVertices = allowSnappingToSourceVertices;\n    }\n\n    getClass() {\n      return LineStringSnapper;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  LineStringSnapper.constructor_ = function () {\n    this._snapTolerance = 0.0;\n    this._srcPts = null;\n    this._seg = new LineSegment();\n    this._allowSnappingToSourceVertices = false;\n    this._isClosed = false;\n\n    if (arguments[0] instanceof LineString && typeof arguments[1] === \"number\") {\n      let srcLine = arguments[0],\n          snapTolerance = arguments[1];\n      LineStringSnapper.constructor_.call(this, srcLine.getCoordinates(), snapTolerance);\n    } else if (arguments[0] instanceof Array && typeof arguments[1] === \"number\") {\n      let srcPts = arguments[0],\n          snapTolerance = arguments[1];\n      this._srcPts = srcPts;\n      this._isClosed = LineStringSnapper.isClosed(srcPts);\n      this._snapTolerance = snapTolerance;\n    }\n  };\n\n  class GeometrySnapper {\n    constructor() {\n      GeometrySnapper.constructor_.apply(this, arguments);\n    }\n\n    static snap(g0, g1, snapTolerance) {\n      var snapGeom = new Array(2).fill(null);\n      var snapper0 = new GeometrySnapper(g0);\n      snapGeom[0] = snapper0.snapTo(g1, snapTolerance);\n      var snapper1 = new GeometrySnapper(g1);\n      snapGeom[1] = snapper1.snapTo(snapGeom[0], snapTolerance);\n      return snapGeom;\n    }\n\n    static computeOverlaySnapTolerance() {\n      if (arguments.length === 1) {\n        let g = arguments[0];\n        var snapTolerance = GeometrySnapper.computeSizeBasedSnapTolerance(g);\n        var pm = g.getPrecisionModel();\n\n        if (pm.getType() === PrecisionModel.FIXED) {\n          var fixedSnapTol = 1 / pm.getScale() * 2 / 1.415;\n          if (fixedSnapTol > snapTolerance) snapTolerance = fixedSnapTol;\n        }\n\n        return snapTolerance;\n      } else if (arguments.length === 2) {\n        let g0 = arguments[0],\n            g1 = arguments[1];\n        return Math.min(GeometrySnapper.computeOverlaySnapTolerance(g0), GeometrySnapper.computeOverlaySnapTolerance(g1));\n      }\n    }\n\n    static computeSizeBasedSnapTolerance(g) {\n      var env = g.getEnvelopeInternal();\n      var minDimension = Math.min(env.getHeight(), env.getWidth());\n      var snapTol = minDimension * GeometrySnapper.SNAP_PRECISION_FACTOR;\n      return snapTol;\n    }\n\n    static snapToSelf(geom, snapTolerance, cleanResult) {\n      var snapper0 = new GeometrySnapper(geom);\n      return snapper0.snapToSelf(snapTolerance, cleanResult);\n    }\n\n    snapTo(snapGeom, snapTolerance) {\n      var snapPts = this.extractTargetCoordinates(snapGeom);\n      var snapTrans = new SnapTransformer(snapTolerance, snapPts);\n      return snapTrans.transform(this._srcGeom);\n    }\n\n    snapToSelf(snapTolerance, cleanResult) {\n      var snapPts = this.extractTargetCoordinates(this._srcGeom);\n      var snapTrans = new SnapTransformer(snapTolerance, snapPts, true);\n      var snappedGeom = snapTrans.transform(this._srcGeom);\n      var result = snappedGeom;\n\n      if (cleanResult && hasInterface(result, Polygonal)) {\n        result = snappedGeom.buffer(0);\n      }\n\n      return result;\n    }\n\n    computeSnapTolerance(ringPts) {\n      var minSegLen = this.computeMinimumSegmentLength(ringPts);\n      var snapTol = minSegLen / 10;\n      return snapTol;\n    }\n\n    extractTargetCoordinates(g) {\n      var ptSet = new TreeSet();\n      var pts = g.getCoordinates();\n\n      for (var i = 0; i < pts.length; i++) {\n        ptSet.add(pts[i]);\n      }\n\n      return ptSet.toArray(new Array(0).fill(null));\n    }\n\n    computeMinimumSegmentLength(pts) {\n      var minSegLen = Double.MAX_VALUE;\n\n      for (var i = 0; i < pts.length - 1; i++) {\n        var segLen = pts[i].distance(pts[i + 1]);\n        if (segLen < minSegLen) minSegLen = segLen;\n      }\n\n      return minSegLen;\n    }\n\n    getClass() {\n      return GeometrySnapper;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  GeometrySnapper.constructor_ = function () {\n    this._srcGeom = null;\n    let srcGeom = arguments[0];\n    this._srcGeom = srcGeom;\n  };\n\n  GeometrySnapper.SNAP_PRECISION_FACTOR = 1e-9;\n\n  class SnapTransformer extends GeometryTransformer {\n    constructor() {\n      super();\n      SnapTransformer.constructor_.apply(this, arguments);\n    }\n\n    snapLine(srcPts, snapPts) {\n      var snapper = new LineStringSnapper(srcPts, this._snapTolerance);\n      snapper.setAllowSnappingToSourceVertices(this._isSelfSnap);\n      return snapper.snapTo(snapPts);\n    }\n\n    transformCoordinates(coords, parent) {\n      var srcPts = coords.toCoordinateArray();\n      var newPts = this.snapLine(srcPts, this._snapPts);\n      return this._factory.getCoordinateSequenceFactory().create(newPts);\n    }\n\n    getClass() {\n      return SnapTransformer;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  SnapTransformer.constructor_ = function () {\n    this._snapTolerance = null;\n    this._snapPts = null;\n    this._isSelfSnap = false;\n\n    if (arguments.length === 2) {\n      let snapTolerance = arguments[0],\n          snapPts = arguments[1];\n      this._snapTolerance = snapTolerance;\n      this._snapPts = snapPts;\n    } else if (arguments.length === 3) {\n      let snapTolerance = arguments[0],\n          snapPts = arguments[1],\n          isSelfSnap = arguments[2];\n      this._snapTolerance = snapTolerance;\n      this._snapPts = snapPts;\n      this._isSelfSnap = isSelfSnap;\n    }\n  };\n\n\n\n  var snap = /*#__PURE__*/Object.freeze({\n    GeometrySnapper: GeometrySnapper,\n    LineStringSnapper: LineStringSnapper\n  });\n\n  class BasicSegmentString {\n    constructor() {\n      BasicSegmentString.constructor_.apply(this, arguments);\n    }\n\n    getCoordinates() {\n      return this._pts;\n    }\n\n    size() {\n      return this._pts.length;\n    }\n\n    getCoordinate(i) {\n      return this._pts[i];\n    }\n\n    isClosed() {\n      return this._pts[0].equals(this._pts[this._pts.length - 1]);\n    }\n\n    getSegmentOctant(index) {\n      if (index === this._pts.length - 1) return -1;\n      return Octant.octant(this.getCoordinate(index), this.getCoordinate(index + 1));\n    }\n\n    setData(data) {\n      this._data = data;\n    }\n\n    getData() {\n      return this._data;\n    }\n\n    toString() {\n      return WKTWriter.toLineString(new CoordinateArraySequence(this._pts));\n    }\n\n    getClass() {\n      return BasicSegmentString;\n    }\n\n    get interfaces_() {\n      return [SegmentString];\n    }\n\n  }\n\n  BasicSegmentString.constructor_ = function () {\n    this._pts = null;\n    this._data = null;\n    let pts = arguments[0],\n        data = arguments[1];\n    this._pts = pts;\n    this._data = data;\n  };\n\n  class InteriorIntersectionFinder {\n    constructor() {\n      InteriorIntersectionFinder.constructor_.apply(this, arguments);\n    }\n\n    static createAllIntersectionsFinder(li) {\n      var finder = new InteriorIntersectionFinder(li);\n      finder.setFindAllIntersections(true);\n      return finder;\n    }\n\n    static createAnyIntersectionFinder(li) {\n      return new InteriorIntersectionFinder(li);\n    }\n\n    static createIntersectionCounter(li) {\n      var finder = new InteriorIntersectionFinder(li);\n      finder.setFindAllIntersections(true);\n      finder.setKeepIntersections(false);\n      return finder;\n    }\n\n    getInteriorIntersection() {\n      return this._interiorIntersection;\n    }\n\n    setCheckEndSegmentsOnly(isCheckEndSegmentsOnly) {\n      this._isCheckEndSegmentsOnly = isCheckEndSegmentsOnly;\n    }\n\n    getIntersectionSegments() {\n      return this._intSegments;\n    }\n\n    count() {\n      return this._intersectionCount;\n    }\n\n    getIntersections() {\n      return this._intersections;\n    }\n\n    setFindAllIntersections(findAllIntersections) {\n      this._findAllIntersections = findAllIntersections;\n    }\n\n    setKeepIntersections(keepIntersections) {\n      this._keepIntersections = keepIntersections;\n    }\n\n    processIntersections(e0, segIndex0, e1, segIndex1) {\n      if (!this._findAllIntersections && this.hasIntersection()) return null;\n      if (e0 === e1 && segIndex0 === segIndex1) return null;\n\n      if (this._isCheckEndSegmentsOnly) {\n        var isEndSegPresent = this.isEndSegment(e0, segIndex0) || this.isEndSegment(e1, segIndex1);\n        if (!isEndSegPresent) return null;\n      }\n\n      var p00 = e0.getCoordinates()[segIndex0];\n      var p01 = e0.getCoordinates()[segIndex0 + 1];\n      var p10 = e1.getCoordinates()[segIndex1];\n      var p11 = e1.getCoordinates()[segIndex1 + 1];\n\n      this._li.computeIntersection(p00, p01, p10, p11);\n\n      if (this._li.hasIntersection()) {\n        if (this._li.isInteriorIntersection()) {\n          this._intSegments = new Array(4).fill(null);\n          this._intSegments[0] = p00;\n          this._intSegments[1] = p01;\n          this._intSegments[2] = p10;\n          this._intSegments[3] = p11;\n          this._interiorIntersection = this._li.getIntersection(0);\n          if (this._keepIntersections) this._intersections.add(this._interiorIntersection);\n          this._intersectionCount++;\n        }\n      }\n    }\n\n    isEndSegment(segStr, index) {\n      if (index === 0) return true;\n      if (index >= segStr.size() - 2) return true;\n      return false;\n    }\n\n    hasIntersection() {\n      return this._interiorIntersection !== null;\n    }\n\n    isDone() {\n      if (this._findAllIntersections) return false;\n      return this._interiorIntersection !== null;\n    }\n\n    getClass() {\n      return InteriorIntersectionFinder;\n    }\n\n    get interfaces_() {\n      return [SegmentIntersector$1];\n    }\n\n  }\n\n  InteriorIntersectionFinder.constructor_ = function () {\n    this._findAllIntersections = false;\n    this._isCheckEndSegmentsOnly = false;\n    this._li = null;\n    this._interiorIntersection = null;\n    this._intSegments = null;\n    this._intersections = new ArrayList();\n    this._intersectionCount = 0;\n    this._keepIntersections = true;\n    let li = arguments[0];\n    this._li = li;\n    this._interiorIntersection = null;\n  };\n\n  class FastNodingValidator {\n    constructor() {\n      FastNodingValidator.constructor_.apply(this, arguments);\n    }\n\n    static computeIntersections(segStrings) {\n      var nv = new FastNodingValidator(segStrings);\n      nv.setFindAllIntersections(true);\n      nv.isValid();\n      return nv.getIntersections();\n    }\n\n    execute() {\n      if (this._segInt !== null) return null;\n      this.checkInteriorIntersections();\n    }\n\n    getIntersections() {\n      return this._segInt.getIntersections();\n    }\n\n    isValid() {\n      this.execute();\n      return this._isValid;\n    }\n\n    setFindAllIntersections(findAllIntersections) {\n      this._findAllIntersections = findAllIntersections;\n    }\n\n    checkInteriorIntersections() {\n      this._isValid = true;\n      this._segInt = new InteriorIntersectionFinder(this._li);\n\n      this._segInt.setFindAllIntersections(this._findAllIntersections);\n\n      var noder = new MCIndexNoder();\n      noder.setSegmentIntersector(this._segInt);\n      noder.computeNodes(this._segStrings);\n\n      if (this._segInt.hasIntersection()) {\n        this._isValid = false;\n        return null;\n      }\n    }\n\n    checkValid() {\n      this.execute();\n      if (!this._isValid) throw new TopologyException(this.getErrorMessage(), this._segInt.getInteriorIntersection());\n    }\n\n    getErrorMessage() {\n      if (this._isValid) return \"no intersections found\";\n\n      var intSegs = this._segInt.getIntersectionSegments();\n\n      return \"found non-noded intersection between \" + WKTWriter.toLineString(intSegs[0], intSegs[1]) + \" and \" + WKTWriter.toLineString(intSegs[2], intSegs[3]);\n    }\n\n    getClass() {\n      return FastNodingValidator;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  FastNodingValidator.constructor_ = function () {\n    this._li = new RobustLineIntersector();\n    this._segStrings = null;\n    this._findAllIntersections = false;\n    this._segInt = null;\n    this._isValid = true;\n    let segStrings = arguments[0];\n    this._segStrings = segStrings;\n  };\n\n  class EdgeNodingValidator {\n    constructor() {\n      EdgeNodingValidator.constructor_.apply(this, arguments);\n    }\n\n    static toSegmentStrings(edges) {\n      var segStrings = new ArrayList();\n\n      for (var i = edges.iterator(); i.hasNext();) {\n        var e = i.next();\n        segStrings.add(new BasicSegmentString(e.getCoordinates(), e));\n      }\n\n      return segStrings;\n    }\n\n    static checkValid(edges) {\n      var validator = new EdgeNodingValidator(edges);\n      validator.checkValid();\n    }\n\n    checkValid() {\n      this._nv.checkValid();\n    }\n\n    getClass() {\n      return EdgeNodingValidator;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  EdgeNodingValidator.constructor_ = function () {\n    this._nv = null;\n    let edges = arguments[0];\n    this._nv = new FastNodingValidator(EdgeNodingValidator.toSegmentStrings(edges));\n  };\n\n  class GeometryCollectionMapper {\n    constructor() {\n      GeometryCollectionMapper.constructor_.apply(this, arguments);\n    }\n\n    static map(gc, op) {\n      var mapper = new GeometryCollectionMapper(op);\n      return mapper.map(gc);\n    }\n\n    map(gc) {\n      var mapped = new ArrayList();\n\n      for (var i = 0; i < gc.getNumGeometries(); i++) {\n        var g = this._mapOp.map(gc.getGeometryN(i));\n\n        if (!g.isEmpty()) mapped.add(g);\n      }\n\n      return gc.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(mapped));\n    }\n\n    getClass() {\n      return GeometryCollectionMapper;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  GeometryCollectionMapper.constructor_ = function () {\n    this._mapOp = null;\n    let mapOp = arguments[0];\n    this._mapOp = mapOp;\n  };\n\n  class MapOp {\n    constructor() {\n      MapOp.constructor_.apply(this, arguments);\n    }\n\n    map(g) {}\n\n    getClass() {\n      return MapOp;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  MapOp.constructor_ = function () {};\n\n  class LineBuilder {\n    constructor() {\n      LineBuilder.constructor_.apply(this, arguments);\n    }\n\n    collectLines(opCode) {\n      for (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n        var de = it.next();\n        this.collectLineEdge(de, opCode, this._lineEdgesList);\n        this.collectBoundaryTouchEdge(de, opCode, this._lineEdgesList);\n      }\n    }\n\n    labelIsolatedLine(e, targetIndex) {\n      var loc = this._ptLocator.locate(e.getCoordinate(), this._op.getArgGeometry(targetIndex));\n\n      e.getLabel().setLocation(targetIndex, loc);\n    }\n\n    build(opCode) {\n      this.findCoveredLineEdges();\n      this.collectLines(opCode);\n      this.buildLines(opCode);\n      return this._resultLineList;\n    }\n\n    collectLineEdge(de, opCode, edges) {\n      var label = de.getLabel();\n      var e = de.getEdge();\n\n      if (de.isLineEdge()) {\n        if (!de.isVisited() && OverlayOp.isResultOfOp(label, opCode) && !e.isCovered()) {\n          edges.add(e);\n          de.setVisitedEdge(true);\n        }\n      }\n    }\n\n    findCoveredLineEdges() {\n      for (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n        var node = nodeit.next();\n        node.getEdges().findCoveredLineEdges();\n      }\n\n      for (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n        var de = it.next();\n        var e = de.getEdge();\n\n        if (de.isLineEdge() && !e.isCoveredSet()) {\n          var isCovered = this._op.isCoveredByA(de.getCoordinate());\n\n          e.setCovered(isCovered);\n        }\n      }\n    }\n\n    labelIsolatedLines(edgesList) {\n      for (var it = edgesList.iterator(); it.hasNext();) {\n        var e = it.next();\n        var label = e.getLabel();\n\n        if (e.isIsolated()) {\n          if (label.isNull(0)) this.labelIsolatedLine(e, 0);else this.labelIsolatedLine(e, 1);\n        }\n      }\n    }\n\n    buildLines(opCode) {\n      for (var it = this._lineEdgesList.iterator(); it.hasNext();) {\n        var e = it.next();\n        var label = e.getLabel();\n\n        var line = this._geometryFactory.createLineString(e.getCoordinates());\n\n        this._resultLineList.add(line);\n\n        e.setInResult(true);\n      }\n    }\n\n    collectBoundaryTouchEdge(de, opCode, edges) {\n      var label = de.getLabel();\n      if (de.isLineEdge()) return null;\n      if (de.isVisited()) return null;\n      if (de.isInteriorAreaEdge()) return null;\n      if (de.getEdge().isInResult()) return null;\n      Assert.isTrue(!(de.isInResult() || de.getSym().isInResult()) || !de.getEdge().isInResult());\n\n      if (OverlayOp.isResultOfOp(label, opCode) && opCode === OverlayOp.INTERSECTION) {\n        edges.add(de.getEdge());\n        de.setVisitedEdge(true);\n      }\n    }\n\n    getClass() {\n      return LineBuilder;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  LineBuilder.constructor_ = function () {\n    this._op = null;\n    this._geometryFactory = null;\n    this._ptLocator = null;\n    this._lineEdgesList = new ArrayList();\n    this._resultLineList = new ArrayList();\n    let op = arguments[0],\n        geometryFactory = arguments[1],\n        ptLocator = arguments[2];\n    this._op = op;\n    this._geometryFactory = geometryFactory;\n    this._ptLocator = ptLocator;\n  };\n\n  class PointBuilder {\n    constructor() {\n      PointBuilder.constructor_.apply(this, arguments);\n    }\n\n    filterCoveredNodeToPoint(n) {\n      var coord = n.getCoordinate();\n\n      if (!this._op.isCoveredByLA(coord)) {\n        var pt = this._geometryFactory.createPoint(coord);\n\n        this._resultPointList.add(pt);\n      }\n    }\n\n    extractNonCoveredResultNodes(opCode) {\n      for (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n        var n = nodeit.next();\n        if (n.isInResult()) continue;\n        if (n.isIncidentEdgeInResult()) continue;\n\n        if (n.getEdges().getDegree() === 0 || opCode === OverlayOp.INTERSECTION) {\n          var label = n.getLabel();\n\n          if (OverlayOp.isResultOfOp(label, opCode)) {\n            this.filterCoveredNodeToPoint(n);\n          }\n        }\n      }\n    }\n\n    build(opCode) {\n      this.extractNonCoveredResultNodes(opCode);\n      return this._resultPointList;\n    }\n\n    getClass() {\n      return PointBuilder;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  PointBuilder.constructor_ = function () {\n    this._op = null;\n    this._geometryFactory = null;\n    this._resultPointList = new ArrayList();\n    let op = arguments[0],\n        geometryFactory = arguments[1];\n    this._op = op;\n    this._geometryFactory = geometryFactory;\n  };\n\n  class CommonBits {\n    constructor() {\n      this._isFirst = true;\n      this._commonMantissaBitsCount = 53;\n      this._commonBits = new Long();\n      this._commonSignExp = null;\n    }\n\n    getCommon() {\n      return Double.longBitsToDouble(this._commonBits);\n    }\n\n    add(num) {\n      var numBits = Double.doubleToLongBits(num);\n\n      if (this._isFirst) {\n        this._commonBits = numBits;\n        this._commonSignExp = CommonBits.signExpBits(this._commonBits);\n        this._isFirst = false;\n        return null;\n      }\n\n      var numSignExp = CommonBits.signExpBits(numBits);\n\n      if (numSignExp !== this._commonSignExp) {\n        this._commonBits.high = 0 | 0;\n        this._commonBits.low = 0 | 0;\n        return null;\n      }\n\n      this._commonMantissaBitsCount = CommonBits.numCommonMostSigMantissaBits(this._commonBits, numBits);\n      this._commonBits = CommonBits.zeroLowerBits(this._commonBits, 64 - (12 + this._commonMantissaBitsCount));\n    }\n\n    toString() {\n      if (arguments.length === 1) {\n        let bits = arguments[0];\n        var x = Double.longBitsToDouble(bits);\n        var numStr = Long.toBinaryString(bits);\n        var padStr = \"0000000000000000000000000000000000000000000000000000000000000000\" + numStr;\n        var bitStr = padStr.substring(padStr.length - 64);\n        var str = bitStr.substring(0, 1) + \"  \" + bitStr.substring(1, 12) + \"(exp) \" + bitStr.substring(12) + \" [ \" + x + \" ]\";\n        return str;\n      }\n    }\n\n    getClass() {\n      return CommonBits;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n    static getBit(bits, i) {\n      var mask = 1 << i % 32;\n\n      if (i < 32) {\n        return (bits.low & mask) != 0 ? 1 : 0;\n      }\n\n      return (bits.high & mask) != 0 ? 1 : 0;\n    }\n\n    static signExpBits(num) {\n      return num.high >>> 20;\n    }\n\n    static zeroLowerBits(bits, nBits) {\n      var prop = 'low';\n\n      if (nBits > 32) {\n        bits.low = 0 | 0;\n        nBits %= 32;\n        prop = 'high';\n      }\n\n      if (nBits > 0) {\n        var mask = nBits < 32 ? ~((1 << nBits) - 1) : 0;\n        bits[prop] &= mask;\n      }\n\n      return bits;\n    }\n\n    static numCommonMostSigMantissaBits(num1, num2) {\n      var count = 0;\n\n      for (var i = 52; i >= 0; i--) {\n        if (CommonBits.getBit(num1, i) !== CommonBits.getBit(num2, i)) return count;\n        count++;\n      }\n\n      return 52;\n    }\n\n  }\n\n  class CommonBitsRemover {\n    constructor() {\n      CommonBitsRemover.constructor_.apply(this, arguments);\n    }\n\n    addCommonBits(geom) {\n      var trans = new Translater(this._commonCoord);\n      geom.apply(trans);\n      geom.geometryChanged();\n    }\n\n    removeCommonBits(geom) {\n      if (this._commonCoord.x === 0.0 && this._commonCoord.y === 0.0) return geom;\n      var invCoord = new Coordinate(this._commonCoord);\n      invCoord.x = -invCoord.x;\n      invCoord.y = -invCoord.y;\n      var trans = new Translater(invCoord);\n      geom.apply(trans);\n      geom.geometryChanged();\n      return geom;\n    }\n\n    getCommonCoordinate() {\n      return this._commonCoord;\n    }\n\n    add(geom) {\n      geom.apply(this._ccFilter);\n      this._commonCoord = this._ccFilter.getCommonCoordinate();\n    }\n\n    getClass() {\n      return CommonBitsRemover;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  class CommonCoordinateFilter {\n    constructor() {\n      CommonCoordinateFilter.constructor_.apply(this, arguments);\n    }\n\n    filter(coord) {\n      this._commonBitsX.add(coord.x);\n\n      this._commonBitsY.add(coord.y);\n    }\n\n    getCommonCoordinate() {\n      return new Coordinate(this._commonBitsX.getCommon(), this._commonBitsY.getCommon());\n    }\n\n    getClass() {\n      return CommonCoordinateFilter;\n    }\n\n    get interfaces_() {\n      return [CoordinateFilter];\n    }\n\n  }\n\n  CommonCoordinateFilter.constructor_ = function () {\n    this._commonBitsX = new CommonBits();\n    this._commonBitsY = new CommonBits();\n  };\n\n  class Translater {\n    constructor() {\n      Translater.constructor_.apply(this, arguments);\n    }\n\n    filter(seq, i) {\n      var xp = seq.getOrdinate(i, 0) + this.trans.x;\n      var yp = seq.getOrdinate(i, 1) + this.trans.y;\n      seq.setOrdinate(i, 0, xp);\n      seq.setOrdinate(i, 1, yp);\n    }\n\n    isDone() {\n      return false;\n    }\n\n    isGeometryChanged() {\n      return true;\n    }\n\n    getClass() {\n      return Translater;\n    }\n\n    get interfaces_() {\n      return [CoordinateSequenceFilter];\n    }\n\n  }\n\n  Translater.constructor_ = function () {\n    this.trans = null;\n    let trans = arguments[0];\n    this.trans = trans;\n  };\n\n  CommonBitsRemover.CommonCoordinateFilter = CommonCoordinateFilter;\n  CommonBitsRemover.Translater = Translater;\n\n  CommonBitsRemover.constructor_ = function () {\n    this._commonCoord = null;\n    this._ccFilter = new CommonCoordinateFilter();\n  };\n\n  class SnapOverlayOp {\n    constructor() {\n      SnapOverlayOp.constructor_.apply(this, arguments);\n    }\n\n    static overlayOp(g0, g1, opCode) {\n      var op = new SnapOverlayOp(g0, g1);\n      return op.getResultGeometry(opCode);\n    }\n\n    static union(g0, g1) {\n      return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.UNION);\n    }\n\n    static intersection(g0, g1) {\n      return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION);\n    }\n\n    static symDifference(g0, g1) {\n      return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE);\n    }\n\n    static difference(g0, g1) {\n      return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE);\n    }\n\n    selfSnap(geom) {\n      var snapper0 = new GeometrySnapper(geom);\n      var snapGeom = snapper0.snapTo(geom, this._snapTolerance);\n      return snapGeom;\n    }\n\n    removeCommonBits(geom) {\n      this._cbr = new CommonBitsRemover();\n\n      this._cbr.add(geom[0]);\n\n      this._cbr.add(geom[1]);\n\n      var remGeom = new Array(2).fill(null);\n      remGeom[0] = this._cbr.removeCommonBits(geom[0].copy());\n      remGeom[1] = this._cbr.removeCommonBits(geom[1].copy());\n      return remGeom;\n    }\n\n    prepareResult(geom) {\n      this._cbr.addCommonBits(geom);\n\n      return geom;\n    }\n\n    getResultGeometry(opCode) {\n      var prepGeom = this.snap(this._geom);\n      var result = OverlayOp.overlayOp(prepGeom[0], prepGeom[1], opCode);\n      return this.prepareResult(result);\n    }\n\n    checkValid(g) {\n      if (!g.isValid()) {\n        System.out.println(\"Snapped geometry is invalid\");\n      }\n    }\n\n    computeSnapTolerance() {\n      this._snapTolerance = GeometrySnapper.computeOverlaySnapTolerance(this._geom[0], this._geom[1]);\n    }\n\n    snap(geom) {\n      var remGeom = this.removeCommonBits(geom);\n      var snapGeom = GeometrySnapper.snap(remGeom[0], remGeom[1], this._snapTolerance);\n      return snapGeom;\n    }\n\n    getClass() {\n      return SnapOverlayOp;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  SnapOverlayOp.constructor_ = function () {\n    this._geom = new Array(2).fill(null);\n    this._snapTolerance = null;\n    this._cbr = null;\n    let g1 = arguments[0],\n        g2 = arguments[1];\n    this._geom[0] = g1;\n    this._geom[1] = g2;\n    this.computeSnapTolerance();\n  };\n\n  class SnapIfNeededOverlayOp {\n    constructor() {\n      SnapIfNeededOverlayOp.constructor_.apply(this, arguments);\n    }\n\n    static overlayOp(g0, g1, opCode) {\n      var op = new SnapIfNeededOverlayOp(g0, g1);\n      return op.getResultGeometry(opCode);\n    }\n\n    static union(g0, g1) {\n      return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.UNION);\n    }\n\n    static intersection(g0, g1) {\n      return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION);\n    }\n\n    static symDifference(g0, g1) {\n      return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE);\n    }\n\n    static difference(g0, g1) {\n      return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE);\n    }\n\n    getResultGeometry(opCode) {\n      var result = null;\n      var isSuccess = false;\n      var savedException = null;\n\n      try {\n        result = OverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n        var isValid = true;\n        if (isValid) isSuccess = true;\n      } catch (ex) {\n        if (ex instanceof RuntimeException) {\n          savedException = ex;\n        } else throw ex;\n      } finally {}\n\n      if (!isSuccess) {\n        try {\n          result = SnapOverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n        } catch (ex) {\n          if (ex instanceof RuntimeException) {\n            throw savedException;\n          } else throw ex;\n        } finally {}\n      }\n\n      return result;\n    }\n\n    getClass() {\n      return SnapIfNeededOverlayOp;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  SnapIfNeededOverlayOp.constructor_ = function () {\n    this._geom = new Array(2).fill(null);\n    let g1 = arguments[0],\n        g2 = arguments[1];\n    this._geom[0] = g1;\n    this._geom[1] = g2;\n  };\n\n  class GeometryGraphOperation {\n    constructor() {\n      GeometryGraphOperation.constructor_.apply(this, arguments);\n    }\n\n    getArgGeometry(i) {\n      return this._arg[i].getGeometry();\n    }\n\n    setComputationPrecision(pm) {\n      this._resultPrecisionModel = pm;\n\n      this._li.setPrecisionModel(this._resultPrecisionModel);\n    }\n\n    getClass() {\n      return GeometryGraphOperation;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  GeometryGraphOperation.constructor_ = function () {\n    this._li = new RobustLineIntersector();\n    this._resultPrecisionModel = null;\n    this._arg = null;\n\n    if (arguments.length === 1) {\n      let g0 = arguments[0];\n      this.setComputationPrecision(g0.getPrecisionModel());\n      this._arg = new Array(1).fill(null);\n      this._arg[0] = new GeometryGraph(0, g0);\n    } else if (arguments.length === 2) {\n      let g0 = arguments[0],\n          g1 = arguments[1];\n      GeometryGraphOperation.constructor_.call(this, g0, g1, BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE);\n    } else if (arguments.length === 3) {\n      let g0 = arguments[0],\n          g1 = arguments[1],\n          boundaryNodeRule = arguments[2];\n      if (g0.getPrecisionModel().compareTo(g1.getPrecisionModel()) >= 0) this.setComputationPrecision(g0.getPrecisionModel());else this.setComputationPrecision(g1.getPrecisionModel());\n      this._arg = new Array(2).fill(null);\n      this._arg[0] = new GeometryGraph(0, g0, boundaryNodeRule);\n      this._arg[1] = new GeometryGraph(1, g1, boundaryNodeRule);\n    }\n  };\n\n  class OverlayOp extends GeometryGraphOperation {\n    constructor() {\n      super();\n      OverlayOp.constructor_.apply(this, arguments);\n    }\n\n    static overlayOp(geom0, geom1, opCode) {\n      var gov = new OverlayOp(geom0, geom1);\n      var geomOv = gov.getResultGeometry(opCode);\n      return geomOv;\n    }\n\n    static union(geom, other) {\n      if (geom.isEmpty() || other.isEmpty()) {\n        if (geom.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.UNION, geom, other, geom.getFactory());\n        if (geom.isEmpty()) return other.copy();\n        if (other.isEmpty()) return geom.copy();\n      }\n\n      if (geom.isGeometryCollection() || other.isGeometryCollection()) throw new IllegalArgumentException(\"This method does not support GeometryCollection arguments\");\n      return SnapIfNeededOverlayOp.overlayOp(geom, other, OverlayOp.UNION);\n    }\n\n    static intersection(geom, other) {\n      if (geom.isEmpty() || other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION, geom, other, geom.getFactory());\n\n      if (geom.isGeometryCollection()) {\n        var g2 = other;\n        return GeometryCollectionMapper.map(geom, new class {\n          get interfaces_() {\n            return [MapOp];\n          }\n\n          map(g) {\n            return OverlayOp.intersection(g, g2);\n          }\n\n        }());\n      }\n\n      return SnapIfNeededOverlayOp.overlayOp(geom, other, OverlayOp.INTERSECTION);\n    }\n\n    static symDifference(geom, other) {\n      if (geom.isEmpty() || other.isEmpty()) {\n        if (geom.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE, geom, other, geom.getFactory());\n        if (geom.isEmpty()) return other.copy();\n        if (other.isEmpty()) return geom.copy();\n      }\n\n      if (geom.isGeometryCollection() || other.isGeometryCollection()) throw new IllegalArgumentException(\"This method does not support GeometryCollection arguments\");\n      return SnapIfNeededOverlayOp.overlayOp(geom, other, OverlayOp.SYMDIFFERENCE);\n    }\n\n    static resultDimension(opCode, g0, g1) {\n      var dim0 = g0.getDimension();\n      var dim1 = g1.getDimension();\n      var resultDimension = -1;\n\n      switch (opCode) {\n        case OverlayOp.INTERSECTION:\n          resultDimension = Math.min(dim0, dim1);\n          break;\n\n        case OverlayOp.UNION:\n          resultDimension = Math.max(dim0, dim1);\n          break;\n\n        case OverlayOp.DIFFERENCE:\n          resultDimension = dim0;\n          break;\n\n        case OverlayOp.SYMDIFFERENCE:\n          resultDimension = Math.max(dim0, dim1);\n          break;\n      }\n\n      return resultDimension;\n    }\n\n    static createEmptyResult(overlayOpCode, a, b, geomFact) {\n      var result = null;\n\n      switch (OverlayOp.resultDimension(overlayOpCode, a, b)) {\n        case -1:\n          result = geomFact.createGeometryCollection();\n          break;\n\n        case 0:\n          result = geomFact.createPoint();\n          break;\n\n        case 1:\n          result = geomFact.createLineString();\n          break;\n\n        case 2:\n          result = geomFact.createPolygon();\n          break;\n      }\n\n      return result;\n    }\n\n    static difference(geom, other) {\n      if (geom.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE, geom, other, geom.getFactory());\n      if (other.isEmpty()) return geom.copy();\n      if (geom.isGeometryCollection() || other.isGeometryCollection()) throw new IllegalArgumentException(\"This method does not support GeometryCollection arguments\");\n      return SnapIfNeededOverlayOp.overlayOp(geom, other, OverlayOp.DIFFERENCE);\n    }\n\n    static isResultOfOp() {\n      if (arguments.length === 2) {\n        let label = arguments[0],\n            opCode = arguments[1];\n        var loc0 = label.getLocation(0);\n        var loc1 = label.getLocation(1);\n        return OverlayOp.isResultOfOp(loc0, loc1, opCode);\n      } else if (arguments.length === 3) {\n        let loc0 = arguments[0],\n            loc1 = arguments[1],\n            overlayOpCode = arguments[2];\n        if (loc0 === Location.BOUNDARY) loc0 = Location.INTERIOR;\n        if (loc1 === Location.BOUNDARY) loc1 = Location.INTERIOR;\n\n        switch (overlayOpCode) {\n          case OverlayOp.INTERSECTION:\n            return loc0 === Location.INTERIOR && loc1 === Location.INTERIOR;\n\n          case OverlayOp.UNION:\n            return loc0 === Location.INTERIOR || loc1 === Location.INTERIOR;\n\n          case OverlayOp.DIFFERENCE:\n            return loc0 === Location.INTERIOR && loc1 !== Location.INTERIOR;\n\n          case OverlayOp.SYMDIFFERENCE:\n            return loc0 === Location.INTERIOR && loc1 !== Location.INTERIOR || loc0 !== Location.INTERIOR && loc1 === Location.INTERIOR;\n        }\n\n        return false;\n      }\n    }\n\n    insertUniqueEdge(e) {\n      var existingEdge = this._edgeList.findEqualEdge(e);\n\n      if (existingEdge !== null) {\n        var existingLabel = existingEdge.getLabel();\n        var labelToMerge = e.getLabel();\n\n        if (!existingEdge.isPointwiseEqual(e)) {\n          labelToMerge = new Label(e.getLabel());\n          labelToMerge.flip();\n        }\n\n        var depth = existingEdge.getDepth();\n\n        if (depth.isNull()) {\n          depth.add(existingLabel);\n        }\n\n        depth.add(labelToMerge);\n        existingLabel.merge(labelToMerge);\n      } else {\n        this._edgeList.add(e);\n      }\n    }\n\n    getGraph() {\n      return this._graph;\n    }\n\n    cancelDuplicateResultEdges() {\n      for (var it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n        var de = it.next();\n        var sym = de.getSym();\n\n        if (de.isInResult() && sym.isInResult()) {\n          de.setInResult(false);\n          sym.setInResult(false);\n        }\n      }\n    }\n\n    isCoveredByLA(coord) {\n      if (this.isCovered(coord, this._resultLineList)) return true;\n      if (this.isCovered(coord, this._resultPolyList)) return true;\n      return false;\n    }\n\n    computeGeometry(resultPointList, resultLineList, resultPolyList, opcode) {\n      var geomList = new ArrayList();\n      geomList.addAll(resultPointList);\n      geomList.addAll(resultLineList);\n      geomList.addAll(resultPolyList);\n      if (geomList.isEmpty()) return OverlayOp.createEmptyResult(opcode, this._arg[0].getGeometry(), this._arg[1].getGeometry(), this._geomFact);\n      return this._geomFact.buildGeometry(geomList);\n    }\n\n    mergeSymLabels() {\n      for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n        var node = nodeit.next();\n        node.getEdges().mergeSymLabels();\n      }\n    }\n\n    isCovered(coord, geomList) {\n      for (var it = geomList.iterator(); it.hasNext();) {\n        var geom = it.next();\n\n        var loc = this._ptLocator.locate(coord, geom);\n\n        if (loc !== Location.EXTERIOR) return true;\n      }\n\n      return false;\n    }\n\n    replaceCollapsedEdges() {\n      var newEdges = new ArrayList();\n\n      for (var it = this._edgeList.iterator(); it.hasNext();) {\n        var e = it.next();\n\n        if (e.isCollapsed()) {\n          it.remove();\n          newEdges.add(e.getCollapsedEdge());\n        }\n      }\n\n      this._edgeList.addAll(newEdges);\n    }\n\n    updateNodeLabelling() {\n      for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n        var node = nodeit.next();\n        var lbl = node.getEdges().getLabel();\n        node.getLabel().merge(lbl);\n      }\n    }\n\n    getResultGeometry(overlayOpCode) {\n      this.computeOverlay(overlayOpCode);\n      return this._resultGeom;\n    }\n\n    insertUniqueEdges(edges) {\n      for (var i = edges.iterator(); i.hasNext();) {\n        var e = i.next();\n        this.insertUniqueEdge(e);\n      }\n    }\n\n    computeOverlay(opCode) {\n      this.copyPoints(0);\n      this.copyPoints(1);\n\n      this._arg[0].computeSelfNodes(this._li, false);\n\n      this._arg[1].computeSelfNodes(this._li, false);\n\n      this._arg[0].computeEdgeIntersections(this._arg[1], this._li, true);\n\n      var baseSplitEdges = new ArrayList();\n\n      this._arg[0].computeSplitEdges(baseSplitEdges);\n\n      this._arg[1].computeSplitEdges(baseSplitEdges);\n      this.insertUniqueEdges(baseSplitEdges);\n      this.computeLabelsFromDepths();\n      this.replaceCollapsedEdges();\n      EdgeNodingValidator.checkValid(this._edgeList.getEdges());\n\n      this._graph.addEdges(this._edgeList.getEdges());\n\n      this.computeLabelling();\n      this.labelIncompleteNodes();\n      this.findResultAreaEdges(opCode);\n      this.cancelDuplicateResultEdges();\n      var polyBuilder = new PolygonBuilder(this._geomFact);\n      polyBuilder.add(this._graph);\n      this._resultPolyList = polyBuilder.getPolygons();\n      var lineBuilder = new LineBuilder(this, this._geomFact, this._ptLocator);\n      this._resultLineList = lineBuilder.build(opCode);\n      var pointBuilder = new PointBuilder(this, this._geomFact, this._ptLocator);\n      this._resultPointList = pointBuilder.build(opCode);\n      this._resultGeom = this.computeGeometry(this._resultPointList, this._resultLineList, this._resultPolyList, opCode);\n    }\n\n    labelIncompleteNode(n, targetIndex) {\n      var loc = this._ptLocator.locate(n.getCoordinate(), this._arg[targetIndex].getGeometry());\n\n      n.getLabel().setLocation(targetIndex, loc);\n    }\n\n    copyPoints(argIndex) {\n      for (var i = this._arg[argIndex].getNodeIterator(); i.hasNext();) {\n        var graphNode = i.next();\n\n        var newNode = this._graph.addNode(graphNode.getCoordinate());\n\n        newNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n      }\n    }\n\n    findResultAreaEdges(opCode) {\n      for (var it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n        var de = it.next();\n        var label = de.getLabel();\n\n        if (label.isArea() && !de.isInteriorAreaEdge() && OverlayOp.isResultOfOp(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), opCode)) {\n          de.setInResult(true);\n        }\n      }\n    }\n\n    computeLabelsFromDepths() {\n      for (var it = this._edgeList.iterator(); it.hasNext();) {\n        var e = it.next();\n        var lbl = e.getLabel();\n        var depth = e.getDepth();\n\n        if (!depth.isNull()) {\n          depth.normalize();\n\n          for (var i = 0; i < 2; i++) {\n            if (!lbl.isNull(i) && lbl.isArea() && !depth.isNull(i)) {\n              if (depth.getDelta(i) === 0) {\n                lbl.toLine(i);\n              } else {\n                Assert.isTrue(!depth.isNull(i, Position.LEFT), \"depth of LEFT side has not been initialized\");\n                lbl.setLocation(i, Position.LEFT, depth.getLocation(i, Position.LEFT));\n                Assert.isTrue(!depth.isNull(i, Position.RIGHT), \"depth of RIGHT side has not been initialized\");\n                lbl.setLocation(i, Position.RIGHT, depth.getLocation(i, Position.RIGHT));\n              }\n            }\n          }\n        }\n      }\n    }\n\n    computeLabelling() {\n      for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n        var node = nodeit.next();\n        node.getEdges().computeLabelling(this._arg);\n      }\n\n      this.mergeSymLabels();\n      this.updateNodeLabelling();\n    }\n\n    labelIncompleteNodes() {\n\n      for (var ni = this._graph.getNodes().iterator(); ni.hasNext();) {\n        var n = ni.next();\n        var label = n.getLabel();\n\n        if (n.isIsolated()) {\n          if (label.isNull(0)) this.labelIncompleteNode(n, 0);else this.labelIncompleteNode(n, 1);\n        }\n\n        n.getEdges().updateLabelling(label);\n      }\n    }\n\n    isCoveredByA(coord) {\n      if (this.isCovered(coord, this._resultPolyList)) return true;\n      return false;\n    }\n\n    getClass() {\n      return OverlayOp;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  OverlayOp.constructor_ = function () {\n    this._ptLocator = new PointLocator();\n    this._geomFact = null;\n    this._resultGeom = null;\n    this._graph = null;\n    this._edgeList = new EdgeList();\n    this._resultPolyList = new ArrayList();\n    this._resultLineList = new ArrayList();\n    this._resultPointList = new ArrayList();\n    let g0 = arguments[0],\n        g1 = arguments[1];\n    GeometryGraphOperation.constructor_.call(this, g0, g1);\n    this._graph = new PlanarGraph(new OverlayNodeFactory());\n    this._geomFact = g0.getFactory();\n  };\n\n  OverlayOp.INTERSECTION = 1;\n  OverlayOp.UNION = 2;\n  OverlayOp.DIFFERENCE = 3;\n  OverlayOp.SYMDIFFERENCE = 4;\n\n\n\n  var overlay = /*#__PURE__*/Object.freeze({\n    snap: snap,\n    OverlayOp: OverlayOp\n  });\n\n  class PolygonizeDirectedEdge extends DirectedEdge$1 {\n    constructor() {\n      super();\n      PolygonizeDirectedEdge.constructor_.apply(this, arguments);\n    }\n\n    getNext() {\n      return this._next;\n    }\n\n    isInRing() {\n      return this._edgeRing !== null;\n    }\n\n    setRing(edgeRing) {\n      this._edgeRing = edgeRing;\n    }\n\n    setLabel(label) {\n      this._label = label;\n    }\n\n    getLabel() {\n      return this._label;\n    }\n\n    setNext(next) {\n      this._next = next;\n    }\n\n    getRing() {\n      return this._edgeRing;\n    }\n\n    getClass() {\n      return PolygonizeDirectedEdge;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  PolygonizeDirectedEdge.constructor_ = function () {\n    this._edgeRing = null;\n    this._next = null;\n    this._label = -1;\n    let from = arguments[0],\n        to = arguments[1],\n        directionPt = arguments[2],\n        edgeDirection = arguments[3];\n    DirectedEdge$1.constructor_.call(this, from, to, directionPt, edgeDirection);\n  };\n\n  class PolygonizeEdge extends Edge$1 {\n    constructor() {\n      super();\n      PolygonizeEdge.constructor_.apply(this, arguments);\n    }\n\n    getLine() {\n      return this._line;\n    }\n\n    getClass() {\n      return PolygonizeEdge;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  PolygonizeEdge.constructor_ = function () {\n    this._line = null;\n    let line = arguments[0];\n    this._line = line;\n  };\n\n  class EdgeRing$1 {\n    constructor() {\n      EdgeRing$1.constructor_.apply(this, arguments);\n    }\n\n    static findDirEdgesInRing(startDE) {\n      var de = startDE;\n      var edges = new ArrayList();\n\n      do {\n        edges.add(de);\n        de = de.getNext();\n        Assert.isTrue(de !== null, \"found null DE in ring\");\n        Assert.isTrue(de === startDE || !de.isInRing(), \"found DE already in ring\");\n      } while (de !== startDE);\n\n      return edges;\n    }\n\n    static addEdge(coords, isForward, coordList) {\n      if (isForward) {\n        for (var i = 0; i < coords.length; i++) {\n          coordList.add(coords[i], false);\n        }\n      } else {\n        for (var i = coords.length - 1; i >= 0; i--) {\n          coordList.add(coords[i], false);\n        }\n      }\n    }\n\n    static findEdgeRingContaining(testEr, shellList) {\n      var testRing = testEr.getRing();\n      var testEnv = testRing.getEnvelopeInternal();\n      var testPt = testRing.getCoordinateN(0);\n      var minShell = null;\n      var minShellEnv = null;\n\n      for (var it = shellList.iterator(); it.hasNext();) {\n        var tryShell = it.next();\n        var tryShellRing = tryShell.getRing();\n        var tryShellEnv = tryShellRing.getEnvelopeInternal();\n        if (tryShellEnv.equals(testEnv)) continue;\n        if (!tryShellEnv.contains(testEnv)) continue;\n        testPt = CoordinateArrays.ptNotInList(testRing.getCoordinates(), tryShellRing.getCoordinates());\n        var isContained = false;\n        if (PointLocation.isInRing(testPt, tryShellRing.getCoordinates())) isContained = true;\n\n        if (isContained) {\n          if (minShell === null || minShellEnv.contains(tryShellEnv)) {\n            minShell = tryShell;\n            minShellEnv = minShell.getRing().getEnvelopeInternal();\n          }\n        }\n      }\n\n      return minShell;\n    }\n\n    isIncluded() {\n      return this._isIncluded;\n    }\n\n    getCoordinates() {\n      if (this._ringPts === null) {\n        var coordList = new CoordinateList();\n\n        for (var i = this._deList.iterator(); i.hasNext();) {\n          var de = i.next();\n          var edge = de.getEdge();\n          EdgeRing$1.addEdge(edge.getLine().getCoordinates(), de.getEdgeDirection(), coordList);\n        }\n\n        this._ringPts = coordList.toCoordinateArray();\n      }\n\n      return this._ringPts;\n    }\n\n    isIncludedSet() {\n      return this._isIncludedSet;\n    }\n\n    isValid() {\n      this.getCoordinates();\n      if (this._ringPts.length <= 3) return false;\n      this.getRing();\n      return this._ring.isValid();\n    }\n\n    build(startDE) {\n      var de = startDE;\n\n      do {\n        this.add(de);\n        de.setRing(this);\n        de = de.getNext();\n        Assert.isTrue(de !== null, \"found null DE in ring\");\n        Assert.isTrue(de === startDE || !de.isInRing(), \"found DE already in ring\");\n      } while (de !== startDE);\n    }\n\n    isOuterHole() {\n      if (!this._isHole) return false;\n      return !this.hasShell();\n    }\n\n    getPolygon() {\n      var holeLR = null;\n\n      if (this._holes !== null) {\n        holeLR = new Array(this._holes.size()).fill(null);\n\n        for (var i = 0; i < this._holes.size(); i++) {\n          holeLR[i] = this._holes.get(i);\n        }\n      }\n\n      var poly = this._factory.createPolygon(this._ring, holeLR);\n\n      return poly;\n    }\n\n    isHole() {\n      return this._isHole;\n    }\n\n    isProcessed() {\n      return this._isProcessed;\n    }\n\n    addHole() {\n      if (arguments[0] instanceof LinearRing) {\n        let hole = arguments[0];\n        if (this._holes === null) this._holes = new ArrayList();\n\n        this._holes.add(hole);\n      } else if (arguments[0] instanceof EdgeRing$1) {\n        let holeER = arguments[0];\n        holeER.setShell(this);\n        var hole = holeER.getRing();\n        if (this._holes === null) this._holes = new ArrayList();\n\n        this._holes.add(hole);\n      }\n    }\n\n    setIncluded(isIncluded) {\n      this._isIncluded = isIncluded;\n      this._isIncludedSet = true;\n    }\n\n    getOuterHole() {\n      if (this.isHole()) return null;\n\n      for (var i = 0; i < this._deList.size(); i++) {\n        var de = this._deList.get(i);\n\n        var adjRing = de.getSym().getRing();\n        if (adjRing.isOuterHole()) return adjRing;\n      }\n\n      return null;\n    }\n\n    computeHole() {\n      var ring = this.getRing();\n      this._isHole = Orientation.isCCW(ring.getCoordinates());\n    }\n\n    hasShell() {\n      return this._shell !== null;\n    }\n\n    isOuterShell() {\n      return this.getOuterHole() !== null;\n    }\n\n    getLineString() {\n      this.getCoordinates();\n      return this._factory.createLineString(this._ringPts);\n    }\n\n    toString() {\n      return WKTWriter.toLineString(new CoordinateArraySequence(this.getCoordinates()));\n    }\n\n    getShell() {\n      if (this.isHole()) return this._shell;\n      return this;\n    }\n\n    add(de) {\n      this._deList.add(de);\n    }\n\n    getRing() {\n      if (this._ring !== null) return this._ring;\n      this.getCoordinates();\n      if (this._ringPts.length < 3) System.out.println(this._ringPts);\n\n      try {\n        this._ring = this._factory.createLinearRing(this._ringPts);\n      } catch (ex) {\n        if (ex instanceof Exception) {\n          System.out.println(this._ringPts);\n        } else throw ex;\n      } finally {}\n\n      return this._ring;\n    }\n\n    updateIncluded() {\n      if (this.isHole()) return null;\n\n      for (var i = 0; i < this._deList.size(); i++) {\n        var de = this._deList.get(i);\n\n        var adjShell = de.getSym().getRing().getShell();\n\n        if (adjShell !== null && adjShell.isIncludedSet()) {\n          this.setIncluded(!adjShell.isIncluded());\n          return null;\n        }\n      }\n    }\n\n    setShell(shell) {\n      this._shell = shell;\n    }\n\n    setProcessed(isProcessed) {\n      this._isProcessed = isProcessed;\n    }\n\n    getClass() {\n      return EdgeRing$1;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  class EnvelopeComparator {\n    constructor() {\n      EnvelopeComparator.constructor_.apply(this, arguments);\n    }\n\n    compare(obj0, obj1) {\n      var r0 = obj0;\n      var r1 = obj1;\n      return r0.getRing().getEnvelope().compareTo(r1.getRing().getEnvelope());\n    }\n\n    getClass() {\n      return EnvelopeComparator;\n    }\n\n    get interfaces_() {\n      return [Comparator];\n    }\n\n  }\n\n  EnvelopeComparator.constructor_ = function () {};\n\n  EdgeRing$1.EnvelopeComparator = EnvelopeComparator;\n\n  EdgeRing$1.constructor_ = function () {\n    this._factory = null;\n    this._deList = new ArrayList();\n    this._lowestEdge = null;\n    this._ring = null;\n    this._ringPts = null;\n    this._holes = null;\n    this._shell = null;\n    this._isHole = null;\n    this._isProcessed = false;\n    this._isIncludedSet = false;\n    this._isIncluded = false;\n    let factory = arguments[0];\n    this._factory = factory;\n  };\n\n  class PolygonizeGraph extends PlanarGraph$1 {\n    constructor() {\n      super();\n      PolygonizeGraph.constructor_.apply(this, arguments);\n    }\n\n    static findLabeledEdgeRings(dirEdges) {\n      var edgeRingStarts = new ArrayList();\n      var currLabel = 1;\n\n      for (var i = dirEdges.iterator(); i.hasNext();) {\n        var de = i.next();\n        if (de.isMarked()) continue;\n        if (de.getLabel() >= 0) continue;\n        edgeRingStarts.add(de);\n        var edges = EdgeRing$1.findDirEdgesInRing(de);\n        PolygonizeGraph.label(edges, currLabel);\n        currLabel++;\n      }\n\n      return edgeRingStarts;\n    }\n\n    static getDegreeNonDeleted(node) {\n      var edges = node.getOutEdges().getEdges();\n      var degree = 0;\n\n      for (var i = edges.iterator(); i.hasNext();) {\n        var de = i.next();\n        if (!de.isMarked()) degree++;\n      }\n\n      return degree;\n    }\n\n    static deleteAllEdges(node) {\n      var edges = node.getOutEdges().getEdges();\n\n      for (var i = edges.iterator(); i.hasNext();) {\n        var de = i.next();\n        de.setMarked(true);\n        var sym = de.getSym();\n        if (sym !== null) sym.setMarked(true);\n      }\n    }\n\n    static label(dirEdges, label) {\n      for (var i = dirEdges.iterator(); i.hasNext();) {\n        var de = i.next();\n        de.setLabel(label);\n      }\n    }\n\n    static computeNextCWEdges(node) {\n      var deStar = node.getOutEdges();\n      var startDE = null;\n      var prevDE = null;\n\n      for (var i = deStar.getEdges().iterator(); i.hasNext();) {\n        var outDE = i.next();\n        if (outDE.isMarked()) continue;\n        if (startDE === null) startDE = outDE;\n\n        if (prevDE !== null) {\n          var sym = prevDE.getSym();\n          sym.setNext(outDE);\n        }\n\n        prevDE = outDE;\n      }\n\n      if (prevDE !== null) {\n        var sym = prevDE.getSym();\n        sym.setNext(startDE);\n      }\n    }\n\n    static computeNextCCWEdges(node, label) {\n      var deStar = node.getOutEdges();\n      var firstOutDE = null;\n      var prevInDE = null;\n      var edges = deStar.getEdges();\n\n      for (var i = edges.size() - 1; i >= 0; i--) {\n        var de = edges.get(i);\n        var sym = de.getSym();\n        var outDE = null;\n        if (de.getLabel() === label) outDE = de;\n        var inDE = null;\n        if (sym.getLabel() === label) inDE = sym;\n        if (outDE === null && inDE === null) continue;\n\n        if (inDE !== null) {\n          prevInDE = inDE;\n        }\n\n        if (outDE !== null) {\n          if (prevInDE !== null) {\n            prevInDE.setNext(outDE);\n            prevInDE = null;\n          }\n\n          if (firstOutDE === null) firstOutDE = outDE;\n        }\n      }\n\n      if (prevInDE !== null) {\n        Assert.isTrue(firstOutDE !== null);\n        prevInDE.setNext(firstOutDE);\n      }\n    }\n\n    static getDegree(node, label) {\n      var edges = node.getOutEdges().getEdges();\n      var degree = 0;\n\n      for (var i = edges.iterator(); i.hasNext();) {\n        var de = i.next();\n        if (de.getLabel() === label) degree++;\n      }\n\n      return degree;\n    }\n\n    static findIntersectionNodes(startDE, label) {\n      var de = startDE;\n      var intNodes = null;\n\n      do {\n        var node = de.getFromNode();\n\n        if (PolygonizeGraph.getDegree(node, label) > 1) {\n          if (intNodes === null) intNodes = new ArrayList();\n          intNodes.add(node);\n        }\n\n        de = de.getNext();\n        Assert.isTrue(de !== null, \"found null DE in ring\");\n        Assert.isTrue(de === startDE || !de.isInRing(), \"found DE already in ring\");\n      } while (de !== startDE);\n\n      return intNodes;\n    }\n\n    findEdgeRing(startDE) {\n      var er = new EdgeRing$1(this._factory);\n      er.build(startDE);\n      return er;\n    }\n\n    computeDepthParity() {\n      if (arguments.length === 0) {\n        while (true) {\n          var de = null;\n          if (de === null) return null;\n          this.computeDepthParity(de);\n        }\n      }\n    }\n\n    computeNextCWEdges() {\n      for (var iNode = this.nodeIterator(); iNode.hasNext();) {\n        var node = iNode.next();\n        PolygonizeGraph.computeNextCWEdges(node);\n      }\n    }\n\n    addEdge(line) {\n      if (line.isEmpty()) {\n        return null;\n      }\n\n      var linePts = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n\n      if (linePts.length < 2) {\n        return null;\n      }\n\n      var startPt = linePts[0];\n      var endPt = linePts[linePts.length - 1];\n      var nStart = this.getNode(startPt);\n      var nEnd = this.getNode(endPt);\n      var de0 = new PolygonizeDirectedEdge(nStart, nEnd, linePts[1], true);\n      var de1 = new PolygonizeDirectedEdge(nEnd, nStart, linePts[linePts.length - 2], false);\n      var edge = new PolygonizeEdge(line);\n      edge.setDirectedEdges(de0, de1);\n      this.add(edge);\n    }\n\n    deleteCutEdges() {\n      this.computeNextCWEdges();\n      PolygonizeGraph.findLabeledEdgeRings(this._dirEdges);\n      var cutLines = new ArrayList();\n\n      for (var i = this._dirEdges.iterator(); i.hasNext();) {\n        var de = i.next();\n        if (de.isMarked()) continue;\n        var sym = de.getSym();\n\n        if (de.getLabel() === sym.getLabel()) {\n          de.setMarked(true);\n          sym.setMarked(true);\n          var e = de.getEdge();\n          cutLines.add(e.getLine());\n        }\n      }\n\n      return cutLines;\n    }\n\n    getEdgeRings() {\n      this.computeNextCWEdges();\n      PolygonizeGraph.label(this._dirEdges, -1);\n      var maximalRings = PolygonizeGraph.findLabeledEdgeRings(this._dirEdges);\n      this.convertMaximalToMinimalEdgeRings(maximalRings);\n      var edgeRingList = new ArrayList();\n\n      for (var i = this._dirEdges.iterator(); i.hasNext();) {\n        var de = i.next();\n        if (de.isMarked()) continue;\n        if (de.isInRing()) continue;\n        var er = this.findEdgeRing(de);\n        edgeRingList.add(er);\n      }\n\n      return edgeRingList;\n    }\n\n    getNode(pt) {\n      var node = this.findNode(pt);\n\n      if (node === null) {\n        node = new Node$2(pt);\n        this.add(node);\n      }\n\n      return node;\n    }\n\n    convertMaximalToMinimalEdgeRings(ringEdges) {\n      for (var i = ringEdges.iterator(); i.hasNext();) {\n        var de = i.next();\n        var label = de.getLabel();\n        var intNodes = PolygonizeGraph.findIntersectionNodes(de, label);\n        if (intNodes === null) continue;\n\n        for (var iNode = intNodes.iterator(); iNode.hasNext();) {\n          var node = iNode.next();\n          PolygonizeGraph.computeNextCCWEdges(node, label);\n        }\n      }\n    }\n\n    deleteDangles() {\n      var nodesToRemove = this.findNodesOfDegree(1);\n      var dangleLines = new HashSet();\n      var nodeStack = new Stack();\n\n      for (var i = nodesToRemove.iterator(); i.hasNext();) {\n        nodeStack.push(i.next());\n      }\n\n      while (!nodeStack.isEmpty()) {\n        var node = nodeStack.pop();\n        PolygonizeGraph.deleteAllEdges(node);\n        var nodeOutEdges = node.getOutEdges().getEdges();\n\n        for (var i = nodeOutEdges.iterator(); i.hasNext();) {\n          var de = i.next();\n          de.setMarked(true);\n          var sym = de.getSym();\n          if (sym !== null) sym.setMarked(true);\n          var e = de.getEdge();\n          dangleLines.add(e.getLine());\n          var toNode = de.getToNode();\n          if (PolygonizeGraph.getDegreeNonDeleted(toNode) === 1) nodeStack.push(toNode);\n        }\n      }\n\n      return dangleLines;\n    }\n\n    getClass() {\n      return PolygonizeGraph;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  PolygonizeGraph.constructor_ = function () {\n    this._factory = null;\n    let factory = arguments[0];\n    this._factory = factory;\n  };\n\n  class Polygonizer {\n    constructor() {\n      Polygonizer.constructor_.apply(this, arguments);\n    }\n\n    static findOuterShells(shellList) {\n      for (var i = shellList.iterator(); i.hasNext();) {\n        var er = i.next();\n        var outerHoleER = er.getOuterHole();\n\n        if (outerHoleER !== null && !outerHoleER.isProcessed()) {\n          er.setIncluded(true);\n          outerHoleER.setProcessed(true);\n        }\n      }\n    }\n\n    static extractPolygons(shellList, includeAll) {\n      var polyList = new ArrayList();\n\n      for (var i = shellList.iterator(); i.hasNext();) {\n        var er = i.next();\n\n        if (includeAll || er.isIncluded()) {\n          polyList.add(er.getPolygon());\n        }\n      }\n\n      return polyList;\n    }\n\n    static assignHolesToShells(holeList, shellList) {\n      for (var i = holeList.iterator(); i.hasNext();) {\n        var holeER = i.next();\n        Polygonizer.assignHoleToShell(holeER, shellList);\n      }\n    }\n\n    static assignHoleToShell(holeER, shellList) {\n      var shell = EdgeRing$1.findEdgeRingContaining(holeER, shellList);\n\n      if (shell !== null) {\n        shell.addHole(holeER);\n      }\n    }\n\n    static findDisjointShells(shellList) {\n      Polygonizer.findOuterShells(shellList);\n      var isMoreToScan = null;\n\n      do {\n        isMoreToScan = false;\n\n        for (var i = shellList.iterator(); i.hasNext();) {\n          var er = i.next();\n          if (er.isIncludedSet()) continue;\n          er.updateIncluded();\n\n          if (!er.isIncludedSet()) {\n            isMoreToScan = true;\n          }\n        }\n      } while (isMoreToScan);\n    }\n\n    getGeometry() {\n      if (this._geomFactory === null) this._geomFactory = new GeometryFactory();\n      this.polygonize();\n\n      if (this._extractOnlyPolygonal) {\n        return this._geomFactory.buildGeometry(this._polyList);\n      }\n\n      return this._geomFactory.createGeometryCollection(GeometryFactory.toGeometryArray(this._polyList));\n    }\n\n    getInvalidRingLines() {\n      this.polygonize();\n      return this._invalidRingLines;\n    }\n\n    findValidRings(edgeRingList, validEdgeRingList, invalidRingList) {\n      for (var i = edgeRingList.iterator(); i.hasNext();) {\n        var er = i.next();\n        if (er.isValid()) validEdgeRingList.add(er);else invalidRingList.add(er.getLineString());\n      }\n    }\n\n    polygonize() {\n      if (this._polyList !== null) return null;\n      this._polyList = new ArrayList();\n      if (this._graph === null) return null;\n      this._dangles = this._graph.deleteDangles();\n      this._cutEdges = this._graph.deleteCutEdges();\n\n      var edgeRingList = this._graph.getEdgeRings();\n\n      var validEdgeRingList = new ArrayList();\n      this._invalidRingLines = new ArrayList();\n\n      if (this._isCheckingRingsValid) {\n        this.findValidRings(edgeRingList, validEdgeRingList, this._invalidRingLines);\n      } else {\n        validEdgeRingList = edgeRingList;\n      }\n\n      this.findShellsAndHoles(validEdgeRingList);\n      Polygonizer.assignHolesToShells(this._holeList, this._shellList);\n      Collections.sort(this._shellList, new EdgeRing$1.EnvelopeComparator());\n      var includeAll = true;\n\n      if (this._extractOnlyPolygonal) {\n        Polygonizer.findDisjointShells(this._shellList);\n        includeAll = false;\n      }\n\n      this._polyList = Polygonizer.extractPolygons(this._shellList, includeAll);\n    }\n\n    getDangles() {\n      this.polygonize();\n      return this._dangles;\n    }\n\n    getCutEdges() {\n      this.polygonize();\n      return this._cutEdges;\n    }\n\n    getPolygons() {\n      this.polygonize();\n      return this._polyList;\n    }\n\n    add() {\n      if (hasInterface(arguments[0], Collection)) {\n        let geomList = arguments[0];\n\n        for (var i = geomList.iterator(); i.hasNext();) {\n          var geometry = i.next();\n          this.add(geometry);\n        }\n      } else if (arguments[0] instanceof LineString) {\n        let line = arguments[0];\n        this._geomFactory = line.getFactory();\n        if (this._graph === null) this._graph = new PolygonizeGraph(this._geomFactory);\n\n        this._graph.addEdge(line);\n      } else if (arguments[0] instanceof Geometry) {\n        let g = arguments[0];\n        g.apply(this._lineStringAdder);\n      }\n    }\n\n    setCheckRingsValid(isCheckingRingsValid) {\n      this._isCheckingRingsValid = isCheckingRingsValid;\n    }\n\n    findShellsAndHoles(edgeRingList) {\n      this._holeList = new ArrayList();\n      this._shellList = new ArrayList();\n\n      for (var i = edgeRingList.iterator(); i.hasNext();) {\n        var er = i.next();\n        er.computeHole();\n        if (er.isHole()) this._holeList.add(er);else this._shellList.add(er);\n      }\n    }\n\n    getClass() {\n      return Polygonizer;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  class LineStringAdder {\n    constructor() {\n      LineStringAdder.constructor_.apply(this, arguments);\n    }\n\n    filter(g) {\n      if (g instanceof LineString) this.p.add(g);\n    }\n\n    getClass() {\n      return LineStringAdder;\n    }\n\n    get interfaces_() {\n      return [GeometryComponentFilter];\n    }\n\n  }\n\n  LineStringAdder.constructor_ = function () {\n    this.p = null;\n    let p = arguments[0];\n    this.p = p;\n  };\n\n  Polygonizer.LineStringAdder = LineStringAdder;\n\n  Polygonizer.constructor_ = function () {\n    this._lineStringAdder = new LineStringAdder(this);\n    this._graph = null;\n    this._dangles = new ArrayList();\n    this._cutEdges = new ArrayList();\n    this._invalidRingLines = new ArrayList();\n    this._holeList = null;\n    this._shellList = null;\n    this._polyList = null;\n    this._isCheckingRingsValid = true;\n    this._extractOnlyPolygonal = null;\n    this._geomFactory = null;\n\n    if (arguments.length === 0) {\n      Polygonizer.constructor_.call(this, false);\n    } else if (arguments.length === 1) {\n      let extractOnlyPolygonal = arguments[0];\n      this._extractOnlyPolygonal = extractOnlyPolygonal;\n    }\n  };\n\n\n\n  var polygonize = /*#__PURE__*/Object.freeze({\n    Polygonizer: Polygonizer\n  });\n\n  class EdgeEndBuilder {\n    constructor() {\n      EdgeEndBuilder.constructor_.apply(this, arguments);\n    }\n\n    createEdgeEndForNext(edge, l, eiCurr, eiNext) {\n      var iNext = eiCurr.segmentIndex + 1;\n      if (iNext >= edge.getNumPoints() && eiNext === null) return null;\n      var pNext = edge.getCoordinate(iNext);\n      if (eiNext !== null && eiNext.segmentIndex === eiCurr.segmentIndex) pNext = eiNext.coord;\n      var e = new EdgeEnd(edge, eiCurr.coord, pNext, new Label(edge.getLabel()));\n      l.add(e);\n    }\n\n    createEdgeEndForPrev(edge, l, eiCurr, eiPrev) {\n      var iPrev = eiCurr.segmentIndex;\n\n      if (eiCurr.dist === 0.0) {\n        if (iPrev === 0) return null;\n        iPrev--;\n      }\n\n      var pPrev = edge.getCoordinate(iPrev);\n      if (eiPrev !== null && eiPrev.segmentIndex >= iPrev) pPrev = eiPrev.coord;\n      var label = new Label(edge.getLabel());\n      label.flip();\n      var e = new EdgeEnd(edge, eiCurr.coord, pPrev, label);\n      l.add(e);\n    }\n\n    computeEdgeEnds() {\n      if (arguments.length === 1) {\n        let edges = arguments[0];\n        var l = new ArrayList();\n\n        for (var i = edges; i.hasNext();) {\n          var e = i.next();\n          this.computeEdgeEnds(e, l);\n        }\n\n        return l;\n      } else if (arguments.length === 2) {\n        let edge = arguments[0],\n            l = arguments[1];\n        var eiList = edge.getEdgeIntersectionList();\n        eiList.addEndpoints();\n        var it = eiList.iterator();\n        var eiPrev = null;\n        var eiCurr = null;\n        if (!it.hasNext()) return null;\n        var eiNext = it.next();\n\n        do {\n          eiPrev = eiCurr;\n          eiCurr = eiNext;\n          eiNext = null;\n          if (it.hasNext()) eiNext = it.next();\n\n          if (eiCurr !== null) {\n            this.createEdgeEndForPrev(edge, l, eiCurr, eiPrev);\n            this.createEdgeEndForNext(edge, l, eiCurr, eiNext);\n          }\n        } while (eiCurr !== null);\n      }\n    }\n\n    getClass() {\n      return EdgeEndBuilder;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  EdgeEndBuilder.constructor_ = function () {};\n\n  class EdgeEndBundle extends EdgeEnd {\n    constructor() {\n      super();\n      EdgeEndBundle.constructor_.apply(this, arguments);\n    }\n\n    insert(e) {\n      this._edgeEnds.add(e);\n    }\n\n    print(out) {\n      out.println(\"EdgeEndBundle--> Label: \" + this._label);\n\n      for (var it = this.iterator(); it.hasNext();) {\n        var ee = it.next();\n        ee.print(out);\n        out.println();\n      }\n    }\n\n    iterator() {\n      return this._edgeEnds.iterator();\n    }\n\n    getEdgeEnds() {\n      return this._edgeEnds;\n    }\n\n    computeLabelOn(geomIndex, boundaryNodeRule) {\n      var boundaryCount = 0;\n      var foundInterior = false;\n\n      for (var it = this.iterator(); it.hasNext();) {\n        var e = it.next();\n        var loc = e.getLabel().getLocation(geomIndex);\n        if (loc === Location.BOUNDARY) boundaryCount++;\n        if (loc === Location.INTERIOR) foundInterior = true;\n      }\n\n      var loc = Location.NONE;\n      if (foundInterior) loc = Location.INTERIOR;\n\n      if (boundaryCount > 0) {\n        loc = GeometryGraph.determineBoundary(boundaryNodeRule, boundaryCount);\n      }\n\n      this._label.setLocation(geomIndex, loc);\n    }\n\n    computeLabelSide(geomIndex, side) {\n      for (var it = this.iterator(); it.hasNext();) {\n        var e = it.next();\n\n        if (e.getLabel().isArea()) {\n          var loc = e.getLabel().getLocation(geomIndex, side);\n\n          if (loc === Location.INTERIOR) {\n            this._label.setLocation(geomIndex, side, Location.INTERIOR);\n\n            return null;\n          } else if (loc === Location.EXTERIOR) this._label.setLocation(geomIndex, side, Location.EXTERIOR);\n        }\n      }\n    }\n\n    getLabel() {\n      return this._label;\n    }\n\n    computeLabelSides(geomIndex) {\n      this.computeLabelSide(geomIndex, Position.LEFT);\n      this.computeLabelSide(geomIndex, Position.RIGHT);\n    }\n\n    updateIM(im) {\n      Edge.updateIM(this._label, im);\n    }\n\n    computeLabel(boundaryNodeRule) {\n      var isArea = false;\n\n      for (var it = this.iterator(); it.hasNext();) {\n        var e = it.next();\n        if (e.getLabel().isArea()) isArea = true;\n      }\n\n      if (isArea) this._label = new Label(Location.NONE, Location.NONE, Location.NONE);else this._label = new Label(Location.NONE);\n\n      for (var i = 0; i < 2; i++) {\n        this.computeLabelOn(i, boundaryNodeRule);\n        if (isArea) this.computeLabelSides(i);\n      }\n    }\n\n    getClass() {\n      return EdgeEndBundle;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  EdgeEndBundle.constructor_ = function () {\n    this._edgeEnds = new ArrayList();\n\n    if (arguments.length === 1) {\n      let e = arguments[0];\n      EdgeEndBundle.constructor_.call(this, null, e);\n    } else if (arguments.length === 2) {\n      let e = arguments[1];\n      EdgeEnd.constructor_.call(this, e.getEdge(), e.getCoordinate(), e.getDirectedCoordinate(), new Label(e.getLabel()));\n      this.insert(e);\n    }\n  };\n\n  class EdgeEndBundleStar extends EdgeEndStar {\n    constructor() {\n      super();\n      EdgeEndBundleStar.constructor_.apply(this, arguments);\n    }\n\n    updateIM(im) {\n      for (var it = this.iterator(); it.hasNext();) {\n        var esb = it.next();\n        esb.updateIM(im);\n      }\n    }\n\n    insert(e) {\n      var eb = this._edgeMap.get(e);\n\n      if (eb === null) {\n        eb = new EdgeEndBundle(e);\n        this.insertEdgeEnd(e, eb);\n      } else {\n        eb.insert(e);\n      }\n    }\n\n    getClass() {\n      return EdgeEndBundleStar;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  EdgeEndBundleStar.constructor_ = function () {};\n\n  class RelateNode extends Node {\n    constructor() {\n      super();\n      RelateNode.constructor_.apply(this, arguments);\n    }\n\n    updateIMFromEdges(im) {\n      this._edges.updateIM(im);\n    }\n\n    computeIM(im) {\n      im.setAtLeastIfValid(this._label.getLocation(0), this._label.getLocation(1), 0);\n    }\n\n    getClass() {\n      return RelateNode;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  RelateNode.constructor_ = function () {\n    let coord = arguments[0],\n        edges = arguments[1];\n    Node.constructor_.call(this, coord, edges);\n  };\n\n  class RelateNodeFactory extends NodeFactory {\n    constructor() {\n      super();\n      RelateNodeFactory.constructor_.apply(this, arguments);\n    }\n\n    createNode(coord) {\n      return new RelateNode(coord, new EdgeEndBundleStar());\n    }\n\n    getClass() {\n      return RelateNodeFactory;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  RelateNodeFactory.constructor_ = function () {};\n\n  class RelateComputer {\n    constructor() {\n      RelateComputer.constructor_.apply(this, arguments);\n    }\n\n    insertEdgeEnds(ee) {\n      for (var i = ee.iterator(); i.hasNext();) {\n        var e = i.next();\n\n        this._nodes.add(e);\n      }\n    }\n\n    computeProperIntersectionIM(intersector, im) {\n      var dimA = this._arg[0].getGeometry().getDimension();\n\n      var dimB = this._arg[1].getGeometry().getDimension();\n\n      var hasProper = intersector.hasProperIntersection();\n      var hasProperInterior = intersector.hasProperInteriorIntersection();\n\n      if (dimA === 2 && dimB === 2) {\n        if (hasProper) im.setAtLeast(\"212101212\");\n      } else if (dimA === 2 && dimB === 1) {\n        if (hasProper) im.setAtLeast(\"FFF0FFFF2\");\n        if (hasProperInterior) im.setAtLeast(\"1FFFFF1FF\");\n      } else if (dimA === 1 && dimB === 2) {\n        if (hasProper) im.setAtLeast(\"F0FFFFFF2\");\n        if (hasProperInterior) im.setAtLeast(\"1F1FFFFFF\");\n      } else if (dimA === 1 && dimB === 1) {\n        if (hasProperInterior) im.setAtLeast(\"0FFFFFFFF\");\n      }\n    }\n\n    labelIsolatedEdges(thisIndex, targetIndex) {\n      for (var ei = this._arg[thisIndex].getEdgeIterator(); ei.hasNext();) {\n        var e = ei.next();\n\n        if (e.isIsolated()) {\n          this.labelIsolatedEdge(e, targetIndex, this._arg[targetIndex].getGeometry());\n\n          this._isolatedEdges.add(e);\n        }\n      }\n    }\n\n    labelIsolatedEdge(e, targetIndex, target) {\n      if (target.getDimension() > 0) {\n        var loc = this._ptLocator.locate(e.getCoordinate(), target);\n\n        e.getLabel().setAllLocations(targetIndex, loc);\n      } else {\n        e.getLabel().setAllLocations(targetIndex, Location.EXTERIOR);\n      }\n    }\n\n    computeIM() {\n      var im = new IntersectionMatrix();\n      im.set(Location.EXTERIOR, Location.EXTERIOR, 2);\n\n      if (!this._arg[0].getGeometry().getEnvelopeInternal().intersects(this._arg[1].getGeometry().getEnvelopeInternal())) {\n        this.computeDisjointIM(im);\n        return im;\n      }\n\n      this._arg[0].computeSelfNodes(this._li, false);\n\n      this._arg[1].computeSelfNodes(this._li, false);\n\n      var intersector = this._arg[0].computeEdgeIntersections(this._arg[1], this._li, false);\n\n      this.computeIntersectionNodes(0);\n      this.computeIntersectionNodes(1);\n      this.copyNodesAndLabels(0);\n      this.copyNodesAndLabels(1);\n      this.labelIsolatedNodes();\n      this.computeProperIntersectionIM(intersector, im);\n      var eeBuilder = new EdgeEndBuilder();\n      var ee0 = eeBuilder.computeEdgeEnds(this._arg[0].getEdgeIterator());\n      this.insertEdgeEnds(ee0);\n      var ee1 = eeBuilder.computeEdgeEnds(this._arg[1].getEdgeIterator());\n      this.insertEdgeEnds(ee1);\n      this.labelNodeEdges();\n      this.labelIsolatedEdges(0, 1);\n      this.labelIsolatedEdges(1, 0);\n      this.updateIM(im);\n      return im;\n    }\n\n    labelNodeEdges() {\n      for (var ni = this._nodes.iterator(); ni.hasNext();) {\n        var node = ni.next();\n        node.getEdges().computeLabelling(this._arg);\n      }\n    }\n\n    copyNodesAndLabels(argIndex) {\n      for (var i = this._arg[argIndex].getNodeIterator(); i.hasNext();) {\n        var graphNode = i.next();\n\n        var newNode = this._nodes.addNode(graphNode.getCoordinate());\n\n        newNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n      }\n    }\n\n    labelIntersectionNodes(argIndex) {\n      for (var i = this._arg[argIndex].getEdgeIterator(); i.hasNext();) {\n        var e = i.next();\n        var eLoc = e.getLabel().getLocation(argIndex);\n\n        for (var eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext();) {\n          var ei = eiIt.next();\n\n          var n = this._nodes.find(ei.coord);\n\n          if (n.getLabel().isNull(argIndex)) {\n            if (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex);else n.setLabel(argIndex, Location.INTERIOR);\n          }\n        }\n      }\n    }\n\n    labelIsolatedNode(n, targetIndex) {\n      var loc = this._ptLocator.locate(n.getCoordinate(), this._arg[targetIndex].getGeometry());\n\n      n.getLabel().setAllLocations(targetIndex, loc);\n    }\n\n    computeIntersectionNodes(argIndex) {\n      for (var i = this._arg[argIndex].getEdgeIterator(); i.hasNext();) {\n        var e = i.next();\n        var eLoc = e.getLabel().getLocation(argIndex);\n\n        for (var eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext();) {\n          var ei = eiIt.next();\n\n          var n = this._nodes.addNode(ei.coord);\n\n          if (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex);else {\n            if (n.getLabel().isNull(argIndex)) n.setLabel(argIndex, Location.INTERIOR);\n          }\n        }\n      }\n    }\n\n    labelIsolatedNodes() {\n      for (var ni = this._nodes.iterator(); ni.hasNext();) {\n        var n = ni.next();\n        var label = n.getLabel();\n        Assert.isTrue(label.getGeometryCount() > 0, \"node with empty label found\");\n\n        if (n.isIsolated()) {\n          if (label.isNull(0)) this.labelIsolatedNode(n, 0);else this.labelIsolatedNode(n, 1);\n        }\n      }\n    }\n\n    updateIM(im) {\n      for (var ei = this._isolatedEdges.iterator(); ei.hasNext();) {\n        var e = ei.next();\n        e.updateIM(im);\n      }\n\n      for (var ni = this._nodes.iterator(); ni.hasNext();) {\n        var node = ni.next();\n        node.updateIM(im);\n        node.updateIMFromEdges(im);\n      }\n    }\n\n    computeDisjointIM(im) {\n      var ga = this._arg[0].getGeometry();\n\n      if (!ga.isEmpty()) {\n        im.set(Location.INTERIOR, Location.EXTERIOR, ga.getDimension());\n        im.set(Location.BOUNDARY, Location.EXTERIOR, ga.getBoundaryDimension());\n      }\n\n      var gb = this._arg[1].getGeometry();\n\n      if (!gb.isEmpty()) {\n        im.set(Location.EXTERIOR, Location.INTERIOR, gb.getDimension());\n        im.set(Location.EXTERIOR, Location.BOUNDARY, gb.getBoundaryDimension());\n      }\n    }\n\n    getClass() {\n      return RelateComputer;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  RelateComputer.constructor_ = function () {\n    this._li = new RobustLineIntersector();\n    this._ptLocator = new PointLocator();\n    this._arg = null;\n    this._nodes = new NodeMap(new RelateNodeFactory());\n    this._im = null;\n    this._isolatedEdges = new ArrayList();\n    this._invalidPoint = null;\n    let arg = arguments[0];\n    this._arg = arg;\n  };\n\n  class RectangleContains {\n    constructor() {\n      RectangleContains.constructor_.apply(this, arguments);\n    }\n\n    static contains(rectangle, b) {\n      var rc = new RectangleContains(rectangle);\n      return rc.contains(b);\n    }\n\n    isContainedInBoundary(geom) {\n      if (geom instanceof Polygon) return false;\n      if (geom instanceof Point) return this.isPointContainedInBoundary(geom);\n      if (geom instanceof LineString) return this.isLineStringContainedInBoundary(geom);\n\n      for (var i = 0; i < geom.getNumGeometries(); i++) {\n        var comp = geom.getGeometryN(i);\n        if (!this.isContainedInBoundary(comp)) return false;\n      }\n\n      return true;\n    }\n\n    isLineSegmentContainedInBoundary(p0, p1) {\n      if (p0.equals(p1)) return this.isPointContainedInBoundary(p0);\n\n      if (p0.x === p1.x) {\n        if (p0.x === this._rectEnv.getMinX() || p0.x === this._rectEnv.getMaxX()) return true;\n      } else if (p0.y === p1.y) {\n        if (p0.y === this._rectEnv.getMinY() || p0.y === this._rectEnv.getMaxY()) return true;\n      }\n\n      return false;\n    }\n\n    isLineStringContainedInBoundary(line) {\n      var seq = line.getCoordinateSequence();\n      var p0 = new Coordinate();\n      var p1 = new Coordinate();\n\n      for (var i = 0; i < seq.size() - 1; i++) {\n        seq.getCoordinate(i, p0);\n        seq.getCoordinate(i + 1, p1);\n        if (!this.isLineSegmentContainedInBoundary(p0, p1)) return false;\n      }\n\n      return true;\n    }\n\n    isPointContainedInBoundary() {\n      if (arguments[0] instanceof Point) {\n        let point = arguments[0];\n        return this.isPointContainedInBoundary(point.getCoordinate());\n      } else if (arguments[0] instanceof Coordinate) {\n        let pt = arguments[0];\n        return pt.x === this._rectEnv.getMinX() || pt.x === this._rectEnv.getMaxX() || pt.y === this._rectEnv.getMinY() || pt.y === this._rectEnv.getMaxY();\n      }\n    }\n\n    contains(geom) {\n      if (!this._rectEnv.contains(geom.getEnvelopeInternal())) return false;\n      if (this.isContainedInBoundary(geom)) return false;\n      return true;\n    }\n\n    getClass() {\n      return RectangleContains;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  RectangleContains.constructor_ = function () {\n    this._rectEnv = null;\n    let rectangle = arguments[0];\n    this._rectEnv = rectangle.getEnvelopeInternal();\n  };\n\n  class RectangleLineIntersector {\n    constructor() {\n      RectangleLineIntersector.constructor_.apply(this, arguments);\n    }\n\n    intersects(p0, p1) {\n      var segEnv = new Envelope(p0, p1);\n      if (!this._rectEnv.intersects(segEnv)) return false;\n      if (this._rectEnv.intersects(p0)) return true;\n      if (this._rectEnv.intersects(p1)) return true;\n\n      if (p0.compareTo(p1) > 0) {\n        var tmp = p0;\n        p0 = p1;\n        p1 = tmp;\n      }\n\n      var isSegUpwards = false;\n      if (p1.y > p0.y) isSegUpwards = true;\n\n      if (isSegUpwards) {\n        this._li.computeIntersection(p0, p1, this._diagDown0, this._diagDown1);\n      } else {\n        this._li.computeIntersection(p0, p1, this._diagUp0, this._diagUp1);\n      }\n\n      if (this._li.hasIntersection()) return true;\n      return false;\n    }\n\n    getClass() {\n      return RectangleLineIntersector;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  RectangleLineIntersector.constructor_ = function () {\n    this._li = new RobustLineIntersector();\n    this._rectEnv = null;\n    this._diagUp0 = null;\n    this._diagUp1 = null;\n    this._diagDown0 = null;\n    this._diagDown1 = null;\n    let rectEnv = arguments[0];\n    this._rectEnv = rectEnv;\n    this._diagUp0 = new Coordinate(rectEnv.getMinX(), rectEnv.getMinY());\n    this._diagUp1 = new Coordinate(rectEnv.getMaxX(), rectEnv.getMaxY());\n    this._diagDown0 = new Coordinate(rectEnv.getMinX(), rectEnv.getMaxY());\n    this._diagDown1 = new Coordinate(rectEnv.getMaxX(), rectEnv.getMinY());\n  };\n\n  class ShortCircuitedGeometryVisitor {\n    constructor() {\n      ShortCircuitedGeometryVisitor.constructor_.apply(this, arguments);\n    }\n\n    applyTo(geom) {\n      for (var i = 0; i < geom.getNumGeometries() && !this._isDone; i++) {\n        var element = geom.getGeometryN(i);\n\n        if (!(element instanceof GeometryCollection)) {\n          this.visit(element);\n\n          if (this.isDone()) {\n            this._isDone = true;\n            return null;\n          }\n        } else this.applyTo(element);\n      }\n    }\n\n    getClass() {\n      return ShortCircuitedGeometryVisitor;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  ShortCircuitedGeometryVisitor.constructor_ = function () {\n    this._isDone = false;\n  };\n\n  class RectangleIntersects {\n    constructor() {\n      RectangleIntersects.constructor_.apply(this, arguments);\n    }\n\n    static intersects(rectangle, b) {\n      var rp = new RectangleIntersects(rectangle);\n      return rp.intersects(b);\n    }\n\n    intersects(geom) {\n      if (!this._rectEnv.intersects(geom.getEnvelopeInternal())) return false;\n      var visitor = new EnvelopeIntersectsVisitor(this._rectEnv);\n      visitor.applyTo(geom);\n      if (visitor.intersects()) return true;\n      var ecpVisitor = new GeometryContainsPointVisitor(this._rectangle);\n      ecpVisitor.applyTo(geom);\n      if (ecpVisitor.containsPoint()) return true;\n      var riVisitor = new RectangleIntersectsSegmentVisitor(this._rectangle);\n      riVisitor.applyTo(geom);\n      if (riVisitor.intersects()) return true;\n      return false;\n    }\n\n    getClass() {\n      return RectangleIntersects;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  RectangleIntersects.constructor_ = function () {\n    this._rectangle = null;\n    this._rectEnv = null;\n    let rectangle = arguments[0];\n    this._rectangle = rectangle;\n    this._rectEnv = rectangle.getEnvelopeInternal();\n  };\n\n  class EnvelopeIntersectsVisitor extends ShortCircuitedGeometryVisitor {\n    constructor() {\n      super();\n      EnvelopeIntersectsVisitor.constructor_.apply(this, arguments);\n    }\n\n    isDone() {\n      return this._intersects === true;\n    }\n\n    visit(element) {\n      var elementEnv = element.getEnvelopeInternal();\n\n      if (!this._rectEnv.intersects(elementEnv)) {\n        return null;\n      }\n\n      if (this._rectEnv.contains(elementEnv)) {\n        this._intersects = true;\n        return null;\n      }\n\n      if (elementEnv.getMinX() >= this._rectEnv.getMinX() && elementEnv.getMaxX() <= this._rectEnv.getMaxX()) {\n        this._intersects = true;\n        return null;\n      }\n\n      if (elementEnv.getMinY() >= this._rectEnv.getMinY() && elementEnv.getMaxY() <= this._rectEnv.getMaxY()) {\n        this._intersects = true;\n        return null;\n      }\n    }\n\n    intersects() {\n      return this._intersects;\n    }\n\n    getClass() {\n      return EnvelopeIntersectsVisitor;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  EnvelopeIntersectsVisitor.constructor_ = function () {\n    this._rectEnv = null;\n    this._intersects = false;\n    let rectEnv = arguments[0];\n    this._rectEnv = rectEnv;\n  };\n\n  class GeometryContainsPointVisitor extends ShortCircuitedGeometryVisitor {\n    constructor() {\n      super();\n      GeometryContainsPointVisitor.constructor_.apply(this, arguments);\n    }\n\n    isDone() {\n      return this._containsPoint === true;\n    }\n\n    visit(geom) {\n      if (!(geom instanceof Polygon)) return null;\n      var elementEnv = geom.getEnvelopeInternal();\n      if (!this._rectEnv.intersects(elementEnv)) return null;\n      var rectPt = new Coordinate();\n\n      for (var i = 0; i < 4; i++) {\n        this._rectSeq.getCoordinate(i, rectPt);\n\n        if (!elementEnv.contains(rectPt)) continue;\n\n        if (SimplePointInAreaLocator.containsPointInPolygon(rectPt, geom)) {\n          this._containsPoint = true;\n          return null;\n        }\n      }\n    }\n\n    containsPoint() {\n      return this._containsPoint;\n    }\n\n    getClass() {\n      return GeometryContainsPointVisitor;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  GeometryContainsPointVisitor.constructor_ = function () {\n    this._rectSeq = null;\n    this._rectEnv = null;\n    this._containsPoint = false;\n    let rectangle = arguments[0];\n    this._rectSeq = rectangle.getExteriorRing().getCoordinateSequence();\n    this._rectEnv = rectangle.getEnvelopeInternal();\n  };\n\n  class RectangleIntersectsSegmentVisitor extends ShortCircuitedGeometryVisitor {\n    constructor() {\n      super();\n      RectangleIntersectsSegmentVisitor.constructor_.apply(this, arguments);\n    }\n\n    intersects() {\n      return this._hasIntersection;\n    }\n\n    isDone() {\n      return this._hasIntersection === true;\n    }\n\n    visit(geom) {\n      var elementEnv = geom.getEnvelopeInternal();\n      if (!this._rectEnv.intersects(elementEnv)) return null;\n      var lines = LinearComponentExtracter.getLines(geom);\n      this.checkIntersectionWithLineStrings(lines);\n    }\n\n    checkIntersectionWithLineStrings(lines) {\n      for (var i = lines.iterator(); i.hasNext();) {\n        var testLine = i.next();\n        this.checkIntersectionWithSegments(testLine);\n        if (this._hasIntersection) return null;\n      }\n    }\n\n    checkIntersectionWithSegments(testLine) {\n      var seq1 = testLine.getCoordinateSequence();\n\n      for (var j = 1; j < seq1.size(); j++) {\n        seq1.getCoordinate(j - 1, this._p0);\n        seq1.getCoordinate(j, this._p1);\n\n        if (this._rectIntersector.intersects(this._p0, this._p1)) {\n          this._hasIntersection = true;\n          return null;\n        }\n      }\n    }\n\n    getClass() {\n      return RectangleIntersectsSegmentVisitor;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  RectangleIntersectsSegmentVisitor.constructor_ = function () {\n    this._rectEnv = null;\n    this._rectIntersector = null;\n    this._hasIntersection = false;\n    this._p0 = new Coordinate();\n    this._p1 = new Coordinate();\n    let rectangle = arguments[0];\n    this._rectEnv = rectangle.getEnvelopeInternal();\n    this._rectIntersector = new RectangleLineIntersector(this._rectEnv);\n  };\n\n  class RelateOp extends GeometryGraphOperation {\n    constructor() {\n      super();\n      RelateOp.constructor_.apply(this, arguments);\n    }\n\n    static covers(g1, g2) {\n      if (g2.getDimension() === 2 && g1.getDimension() < 2) {\n        return false;\n      }\n\n      if (g2.getDimension() === 1 && g1.getDimension() < 1 && g2.getLength() > 0.0) {\n        return false;\n      }\n\n      if (!g1.getEnvelopeInternal().covers(g2.getEnvelopeInternal())) return false;\n\n      if (g1.isRectangle()) {\n        return true;\n      }\n\n      return new RelateOp(g1, g2).getIntersectionMatrix().isCovers();\n    }\n\n    static intersects(g1, g2) {\n      if (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false;\n\n      if (g1.isRectangle()) {\n        return RectangleIntersects.intersects(g1, g2);\n      }\n\n      if (g2.isRectangle()) {\n        return RectangleIntersects.intersects(g2, g1);\n      }\n\n      if (g1.isGeometryCollection() || g2.isGeometryCollection()) {\n\n        for (var i = 0; i < g1.getNumGeometries(); i++) {\n          for (var j = 0; j < g2.getNumGeometries(); j++) {\n            if (g1.getGeometryN(i).intersects(g2.getGeometryN(j))) {\n              return true;\n            }\n          }\n        }\n\n        return false;\n      }\n\n      return new RelateOp(g1, g2).getIntersectionMatrix().isIntersects();\n    }\n\n    static touches(g1, g2) {\n      if (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false;\n      return new RelateOp(g1, g2).getIntersectionMatrix().isTouches(g1.getDimension(), g2.getDimension());\n    }\n\n    static relate() {\n      if (arguments.length === 2) {\n        let a = arguments[0],\n            b = arguments[1];\n        var relOp = new RelateOp(a, b);\n        var im = relOp.getIntersectionMatrix();\n        return im;\n      } else if (arguments.length === 3) {\n        let a = arguments[0],\n            b = arguments[1],\n            boundaryNodeRule = arguments[2];\n        var relOp = new RelateOp(a, b, boundaryNodeRule);\n        var im = relOp.getIntersectionMatrix();\n        return im;\n      }\n    }\n\n    static overlaps(g1, g2) {\n      if (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false;\n      return new RelateOp(g1, g2).getIntersectionMatrix().isOverlaps(g1.getDimension(), g2.getDimension());\n    }\n\n    static crosses(g1, g2) {\n      if (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false;\n      return new RelateOp(g1, g2).getIntersectionMatrix().isCrosses(g1.getDimension(), g2.getDimension());\n    }\n\n    static contains(g1, g2) {\n      if (g2.getDimension() === 2 && g1.getDimension() < 2) {\n        return false;\n      }\n\n      if (g2.getDimension() === 1 && g1.getDimension() < 1 && g2.getLength() > 0.0) {\n        return false;\n      }\n\n      if (!g1.getEnvelopeInternal().contains(g2.getEnvelopeInternal())) return false;\n\n      if (g1.isRectangle()) {\n        return RectangleContains.contains(g1, g2);\n      }\n\n      return new RelateOp(g1, g2).getIntersectionMatrix().isContains();\n    }\n\n    getIntersectionMatrix() {\n      return this._relate.computeIM();\n    }\n\n    getClass() {\n      return RelateOp;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  RelateOp.constructor_ = function () {\n    this._relate = null;\n\n    if (arguments.length === 2) {\n      let g0 = arguments[0],\n          g1 = arguments[1];\n      GeometryGraphOperation.constructor_.call(this, g0, g1);\n      this._relate = new RelateComputer(this._arg);\n    } else if (arguments.length === 3) {\n      let g0 = arguments[0],\n          g1 = arguments[1],\n          boundaryNodeRule = arguments[2];\n      GeometryGraphOperation.constructor_.call(this, g0, g1, boundaryNodeRule);\n      this._relate = new RelateComputer(this._arg);\n    }\n  };\n\n\n\n  var relate = /*#__PURE__*/Object.freeze({\n    RelateOp: RelateOp\n  });\n\n  class GeometryCombiner {\n    constructor() {\n      GeometryCombiner.constructor_.apply(this, arguments);\n    }\n\n    static combine() {\n      if (arguments.length === 1) {\n        let geoms = arguments[0];\n        var combiner = new GeometryCombiner(geoms);\n        return combiner.combine();\n      } else if (arguments.length === 2) {\n        let g0 = arguments[0],\n            g1 = arguments[1];\n        var combiner = new GeometryCombiner(GeometryCombiner.createList(g0, g1));\n        return combiner.combine();\n      } else if (arguments.length === 3) {\n        let g0 = arguments[0],\n            g1 = arguments[1],\n            g2 = arguments[2];\n        var combiner = new GeometryCombiner(GeometryCombiner.createList(g0, g1, g2));\n        return combiner.combine();\n      }\n    }\n\n    static extractFactory(geoms) {\n      if (geoms.isEmpty()) return null;\n      return geoms.iterator().next().getFactory();\n    }\n\n    static createList() {\n      if (arguments.length === 2) {\n        let obj0 = arguments[0],\n            obj1 = arguments[1];\n        var list = new ArrayList();\n        list.add(obj0);\n        list.add(obj1);\n        return list;\n      } else if (arguments.length === 3) {\n        let obj0 = arguments[0],\n            obj1 = arguments[1],\n            obj2 = arguments[2];\n        var list = new ArrayList();\n        list.add(obj0);\n        list.add(obj1);\n        list.add(obj2);\n        return list;\n      }\n    }\n\n    extractElements(geom, elems) {\n      if (geom === null) return null;\n\n      for (var i = 0; i < geom.getNumGeometries(); i++) {\n        var elemGeom = geom.getGeometryN(i);\n        if (this._skipEmpty && elemGeom.isEmpty()) continue;\n        elems.add(elemGeom);\n      }\n    }\n\n    combine() {\n      var elems = new ArrayList();\n\n      for (var i = this._inputGeoms.iterator(); i.hasNext();) {\n        var g = i.next();\n        this.extractElements(g, elems);\n      }\n\n      if (elems.size() === 0) {\n        if (this._geomFactory !== null) {\n          return this._geomFactory.createGeometryCollection();\n        }\n\n        return null;\n      }\n\n      return this._geomFactory.buildGeometry(elems);\n    }\n\n    getClass() {\n      return GeometryCombiner;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  GeometryCombiner.constructor_ = function () {\n    this._geomFactory = null;\n    this._skipEmpty = false;\n    this._inputGeoms = null;\n    let geoms = arguments[0];\n    this._geomFactory = GeometryCombiner.extractFactory(geoms);\n    this._inputGeoms = geoms;\n  };\n\n  class PointGeometryUnion {\n    constructor() {\n      PointGeometryUnion.constructor_.apply(this, arguments);\n    }\n\n    static union(pointGeom, otherGeom) {\n      var unioner = new PointGeometryUnion(pointGeom, otherGeom);\n      return unioner.union();\n    }\n\n    union() {\n      var locater = new PointLocator();\n      var exteriorCoords = new TreeSet();\n\n      for (var i = 0; i < this._pointGeom.getNumGeometries(); i++) {\n        var point = this._pointGeom.getGeometryN(i);\n\n        var coord = point.getCoordinate();\n        var loc = locater.locate(coord, this._otherGeom);\n        if (loc === Location.EXTERIOR) exteriorCoords.add(coord);\n      }\n\n      if (exteriorCoords.size() === 0) return this._otherGeom;\n      var ptComp = null;\n      var coords = CoordinateArrays.toCoordinateArray(exteriorCoords);\n\n      if (coords.length === 1) {\n        ptComp = this._geomFact.createPoint(coords[0]);\n      } else {\n        ptComp = this._geomFact.createMultiPointFromCoords(coords);\n      }\n\n      return GeometryCombiner.combine(ptComp, this._otherGeom);\n    }\n\n    getClass() {\n      return PointGeometryUnion;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  PointGeometryUnion.constructor_ = function () {\n    this._pointGeom = null;\n    this._otherGeom = null;\n    this._geomFact = null;\n    let pointGeom = arguments[0],\n        otherGeom = arguments[1];\n    this._pointGeom = pointGeom;\n    this._otherGeom = otherGeom;\n    this._geomFact = otherGeom.getFactory();\n  };\n\n  class GeometryExtracter {\n    constructor() {\n      GeometryExtracter.constructor_.apply(this, arguments);\n    }\n\n    static isOfType(geom, geometryType) {\n      if (geom.getGeometryType() === geometryType) return true;\n      if (geometryType === Geometry.TYPENAME_LINESTRING && geom.getGeometryType() === Geometry.TYPENAME_LINEARRING) return true;\n      return false;\n    }\n\n    static extract() {\n      if (arguments.length === 2) {\n        let geom = arguments[0],\n            geometryType = arguments[1];\n        return GeometryExtracter.extract(geom, geometryType, new ArrayList());\n      } else if (arguments.length === 3) {\n        if (hasInterface(arguments[2], List) && arguments[0] instanceof Geometry && typeof arguments[1] === \"string\") {\n          let geom = arguments[0],\n              geometryType = arguments[1],\n              list = arguments[2];\n\n          if (geom.getGeometryType() === geometryType) {\n            list.add(geom);\n          } else if (geom instanceof GeometryCollection) {\n            geom.apply(new GeometryExtracter(geometryType, list));\n          }\n\n          return list;\n        } else if (hasInterface(arguments[2], List) && arguments[0] instanceof Geometry && arguments[1] instanceof Class) {\n          let geom = arguments[0],\n              clz = arguments[1],\n              list = arguments[2];\n          return GeometryExtracter.extract(geom, GeometryExtracter.toGeometryType(clz), list);\n        }\n      }\n    }\n\n    filter(geom) {\n      if (this._geometryType === null || GeometryExtracter.isOfType(geom, this._geometryType)) this._comps.add(geom);\n    }\n\n    getClass() {\n      return GeometryExtracter;\n    }\n\n    get interfaces_() {\n      return [GeometryFilter];\n    }\n\n  }\n\n  GeometryExtracter.constructor_ = function () {\n    this._geometryType = null;\n    this._comps = null;\n    let geometryType = arguments[0],\n        comps = arguments[1];\n    this._geometryType = geometryType;\n    this._comps = comps;\n  };\n\n  class CascadedPolygonUnion {\n    constructor() {\n      CascadedPolygonUnion.constructor_.apply(this, arguments);\n    }\n\n    static restrictToPolygons(g) {\n      if (hasInterface(g, Polygonal)) {\n        return g;\n      }\n\n      var polygons = PolygonExtracter.getPolygons(g);\n      if (polygons.size() === 1) return polygons.get(0);\n      return g.getFactory().createMultiPolygon(GeometryFactory.toPolygonArray(polygons));\n    }\n\n    static getGeometry(list, index) {\n      if (index >= list.size()) return null;\n      return list.get(index);\n    }\n\n    static union(polys) {\n      var op = new CascadedPolygonUnion(polys);\n      return op.union();\n    }\n\n    reduceToGeometries(geomTree) {\n      var geoms = new ArrayList();\n\n      for (var i = geomTree.iterator(); i.hasNext();) {\n        var o = i.next();\n        var geom = null;\n\n        if (hasInterface(o, List)) {\n          geom = this.unionTree(o);\n        } else if (o instanceof Geometry) {\n          geom = o;\n        }\n\n        geoms.add(geom);\n      }\n\n      return geoms;\n    }\n\n    extractByEnvelope(env, geom, disjointGeoms) {\n      var intersectingGeoms = new ArrayList();\n\n      for (var i = 0; i < geom.getNumGeometries(); i++) {\n        var elem = geom.getGeometryN(i);\n        if (elem.getEnvelopeInternal().intersects(env)) intersectingGeoms.add(elem);else disjointGeoms.add(elem);\n      }\n\n      return this._geomFactory.buildGeometry(intersectingGeoms);\n    }\n\n    unionOptimized(g0, g1) {\n      var g0Env = g0.getEnvelopeInternal();\n      var g1Env = g1.getEnvelopeInternal();\n\n      if (!g0Env.intersects(g1Env)) {\n        var combo = GeometryCombiner.combine(g0, g1);\n        return combo;\n      }\n\n      if (g0.getNumGeometries() <= 1 && g1.getNumGeometries() <= 1) return this.unionActual(g0, g1);\n      var commonEnv = g0Env.intersection(g1Env);\n      return this.unionUsingEnvelopeIntersection(g0, g1, commonEnv);\n    }\n\n    union() {\n      if (this._inputPolys === null) throw new IllegalStateException(\"union() method cannot be called twice\");\n      if (this._inputPolys.isEmpty()) return null;\n      this._geomFactory = this._inputPolys.iterator().next().getFactory();\n      var index = new STRtree(CascadedPolygonUnion.STRTREE_NODE_CAPACITY);\n\n      for (var i = this._inputPolys.iterator(); i.hasNext();) {\n        var item = i.next();\n        index.insert(item.getEnvelopeInternal(), item);\n      }\n\n      this._inputPolys = null;\n      var itemTree = index.itemsTree();\n      var unionAll = this.unionTree(itemTree);\n      return unionAll;\n    }\n\n    binaryUnion() {\n      if (arguments.length === 1) {\n        let geoms = arguments[0];\n        return this.binaryUnion(geoms, 0, geoms.size());\n      } else if (arguments.length === 3) {\n        let geoms = arguments[0],\n            start = arguments[1],\n            end = arguments[2];\n\n        if (end - start <= 1) {\n          var g0 = CascadedPolygonUnion.getGeometry(geoms, start);\n          return this.unionSafe(g0, null);\n        } else if (end - start === 2) {\n          return this.unionSafe(CascadedPolygonUnion.getGeometry(geoms, start), CascadedPolygonUnion.getGeometry(geoms, start + 1));\n        } else {\n          var mid = Math.trunc((end + start) / 2);\n          var g0 = this.binaryUnion(geoms, start, mid);\n          var g1 = this.binaryUnion(geoms, mid, end);\n          return this.unionSafe(g0, g1);\n        }\n      }\n    }\n\n    repeatedUnion(geoms) {\n      var union = null;\n\n      for (var i = geoms.iterator(); i.hasNext();) {\n        var g = i.next();\n        if (union === null) union = g.copy();else union = union.union(g);\n      }\n\n      return union;\n    }\n\n    unionSafe(g0, g1) {\n      if (g0 === null && g1 === null) return null;\n      if (g0 === null) return g1.copy();\n      if (g1 === null) return g0.copy();\n      return this.unionOptimized(g0, g1);\n    }\n\n    unionActual(g0, g1) {\n      return CascadedPolygonUnion.restrictToPolygons(g0.union(g1));\n    }\n\n    unionTree(geomTree) {\n      var geoms = this.reduceToGeometries(geomTree);\n      var union = this.binaryUnion(geoms);\n      return union;\n    }\n\n    unionUsingEnvelopeIntersection(g0, g1, common) {\n      var disjointPolys = new ArrayList();\n      var g0Int = this.extractByEnvelope(common, g0, disjointPolys);\n      var g1Int = this.extractByEnvelope(common, g1, disjointPolys);\n      var union = this.unionActual(g0Int, g1Int);\n      disjointPolys.add(union);\n      var overallUnion = GeometryCombiner.combine(disjointPolys);\n      return overallUnion;\n    }\n\n    bufferUnion() {\n      if (arguments.length === 1) {\n        let geoms = arguments[0];\n        var factory = geoms.get(0).getFactory();\n        var gColl = factory.buildGeometry(geoms);\n        var unionAll = gColl.buffer(0.0);\n        return unionAll;\n      } else if (arguments.length === 2) {\n        let g0 = arguments[0],\n            g1 = arguments[1];\n        var factory = g0.getFactory();\n        var gColl = factory.createGeometryCollection([g0, g1]);\n        var unionAll = gColl.buffer(0.0);\n        return unionAll;\n      }\n    }\n\n    getClass() {\n      return CascadedPolygonUnion;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  CascadedPolygonUnion.constructor_ = function () {\n    this._inputPolys = null;\n    this._geomFactory = null;\n    let polys = arguments[0];\n    this._inputPolys = polys;\n    if (this._inputPolys === null) this._inputPolys = new ArrayList();\n  };\n\n  CascadedPolygonUnion.STRTREE_NODE_CAPACITY = 4;\n\n  class UnaryUnionOp {\n    constructor() {\n      UnaryUnionOp.constructor_.apply(this, arguments);\n    }\n\n    static union() {\n      if (arguments.length === 1) {\n        if (hasInterface(arguments[0], Collection)) {\n          let geoms = arguments[0];\n          var op = new UnaryUnionOp(geoms);\n          return op.union();\n        } else if (arguments[0] instanceof Geometry) {\n          let geom = arguments[0];\n          var op = new UnaryUnionOp(geom);\n          return op.union();\n        }\n      } else if (arguments.length === 2) {\n        let geoms = arguments[0],\n            geomFact = arguments[1];\n        var op = new UnaryUnionOp(geoms, geomFact);\n        return op.union();\n      }\n    }\n\n    unionNoOpt(g0) {\n      var empty = this._geomFact.createPoint();\n\n      return SnapIfNeededOverlayOp.overlayOp(g0, empty, OverlayOp.UNION);\n    }\n\n    unionWithNull(g0, g1) {\n      if (g0 === null && g1 === null) return null;\n      if (g1 === null) return g0;\n      if (g0 === null) return g1;\n      return g0.union(g1);\n    }\n\n    extract() {\n      if (hasInterface(arguments[0], Collection)) {\n        let geoms = arguments[0];\n\n        for (var i = geoms.iterator(); i.hasNext();) {\n          var geom = i.next();\n          this.extract(geom);\n        }\n      } else if (arguments[0] instanceof Geometry) {\n        let geom = arguments[0];\n        if (this._geomFact === null) this._geomFact = geom.getFactory();\n        GeometryExtracter.extract(geom, Geometry.TYPENAME_POLYGON, this._polygons);\n        GeometryExtracter.extract(geom, Geometry.TYPENAME_LINESTRING, this._lines);\n        GeometryExtracter.extract(geom, Geometry.TYPENAME_POINT, this._points);\n      }\n    }\n\n    union() {\n      if (this._geomFact === null) {\n        return null;\n      }\n\n      var unionPoints = null;\n\n      if (this._points.size() > 0) {\n        var ptGeom = this._geomFact.buildGeometry(this._points);\n\n        unionPoints = this.unionNoOpt(ptGeom);\n      }\n\n      var unionLines = null;\n\n      if (this._lines.size() > 0) {\n        var lineGeom = this._geomFact.buildGeometry(this._lines);\n\n        unionLines = this.unionNoOpt(lineGeom);\n      }\n\n      var unionPolygons = null;\n\n      if (this._polygons.size() > 0) {\n        unionPolygons = CascadedPolygonUnion.union(this._polygons);\n      }\n\n      var unionLA = this.unionWithNull(unionLines, unionPolygons);\n      var union = null;\n      if (unionPoints === null) union = unionLA;else if (unionLA === null) union = unionPoints;else union = PointGeometryUnion.union(unionPoints, unionLA);\n      if (union === null) return this._geomFact.createGeometryCollection();\n      return union;\n    }\n\n    getClass() {\n      return UnaryUnionOp;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  UnaryUnionOp.constructor_ = function () {\n    this._polygons = new ArrayList();\n    this._lines = new ArrayList();\n    this._points = new ArrayList();\n    this._geomFact = null;\n\n    if (arguments.length === 1) {\n      if (hasInterface(arguments[0], Collection)) {\n        let geoms = arguments[0];\n        this.extract(geoms);\n      } else if (arguments[0] instanceof Geometry) {\n        let geom = arguments[0];\n        this.extract(geom);\n      }\n    } else if (arguments.length === 2) {\n      let geoms = arguments[0],\n          geomFact = arguments[1];\n      this._geomFact = geomFact;\n      this.extract(geoms);\n    }\n  };\n\n\n\n  var union = /*#__PURE__*/Object.freeze({\n    UnaryUnionOp: UnaryUnionOp\n  });\n\n  class ConnectedInteriorTester {\n    constructor() {\n      ConnectedInteriorTester.constructor_.apply(this, arguments);\n    }\n\n    static findDifferentPoint(coord, pt) {\n      for (var i = 0; i < coord.length; i++) {\n        if (!coord[i].equals(pt)) return coord[i];\n      }\n\n      return null;\n    }\n\n    visitInteriorRing(ring, graph) {\n      var pts = ring.getCoordinates();\n      var pt0 = pts[0];\n      var pt1 = ConnectedInteriorTester.findDifferentPoint(pts, pt0);\n      var e = graph.findEdgeInSameDirection(pt0, pt1);\n      var de = graph.findEdgeEnd(e);\n      var intDe = null;\n\n      if (de.getLabel().getLocation(0, Position.RIGHT) === Location.INTERIOR) {\n        intDe = de;\n      } else if (de.getSym().getLabel().getLocation(0, Position.RIGHT) === Location.INTERIOR) {\n        intDe = de.getSym();\n      }\n\n      Assert.isTrue(intDe !== null, \"unable to find dirEdge with Interior on RHS\");\n      this.visitLinkedDirectedEdges(intDe);\n    }\n\n    visitShellInteriors(g, graph) {\n      if (g instanceof Polygon) {\n        var p = g;\n        this.visitInteriorRing(p.getExteriorRing(), graph);\n      }\n\n      if (g instanceof MultiPolygon) {\n        var mp = g;\n\n        for (var i = 0; i < mp.getNumGeometries(); i++) {\n          var p = mp.getGeometryN(i);\n          this.visitInteriorRing(p.getExteriorRing(), graph);\n        }\n      }\n    }\n\n    getCoordinate() {\n      return this._disconnectedRingcoord;\n    }\n\n    setInteriorEdgesInResult(graph) {\n      for (var it = graph.getEdgeEnds().iterator(); it.hasNext();) {\n        var de = it.next();\n\n        if (de.getLabel().getLocation(0, Position.RIGHT) === Location.INTERIOR) {\n          de.setInResult(true);\n        }\n      }\n    }\n\n    visitLinkedDirectedEdges(start) {\n      var startDe = start;\n      var de = start;\n\n      do {\n        Assert.isTrue(de !== null, \"found null Directed Edge\");\n        de.setVisited(true);\n        de = de.getNext();\n      } while (de !== startDe);\n    }\n\n    buildEdgeRings(dirEdges) {\n      var edgeRings = new ArrayList();\n\n      for (var it = dirEdges.iterator(); it.hasNext();) {\n        var de = it.next();\n\n        if (de.isInResult() && de.getEdgeRing() === null) {\n          var er = new MaximalEdgeRing(de, this._geometryFactory);\n          er.linkDirectedEdgesForMinimalEdgeRings();\n          var minEdgeRings = er.buildMinimalRings();\n          edgeRings.addAll(minEdgeRings);\n        }\n      }\n\n      return edgeRings;\n    }\n\n    hasUnvisitedShellEdge(edgeRings) {\n      for (var i = 0; i < edgeRings.size(); i++) {\n        var er = edgeRings.get(i);\n        if (er.isHole()) continue;\n        var edges = er.getEdges();\n        var de = edges.get(0);\n        if (de.getLabel().getLocation(0, Position.RIGHT) !== Location.INTERIOR) continue;\n\n        for (var j = 0; j < edges.size(); j++) {\n          de = edges.get(j);\n\n          if (!de.isVisited()) {\n            this._disconnectedRingcoord = de.getCoordinate();\n            return true;\n          }\n        }\n      }\n\n      return false;\n    }\n\n    isInteriorsConnected() {\n      var splitEdges = new ArrayList();\n\n      this._geomGraph.computeSplitEdges(splitEdges);\n\n      var graph = new PlanarGraph(new OverlayNodeFactory());\n      graph.addEdges(splitEdges);\n      this.setInteriorEdgesInResult(graph);\n      graph.linkResultDirectedEdges();\n      var edgeRings = this.buildEdgeRings(graph.getEdgeEnds());\n      this.visitShellInteriors(this._geomGraph.getGeometry(), graph);\n      return !this.hasUnvisitedShellEdge(edgeRings);\n    }\n\n    getClass() {\n      return ConnectedInteriorTester;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  ConnectedInteriorTester.constructor_ = function () {\n    this._geometryFactory = new GeometryFactory();\n    this._geomGraph = null;\n    this._disconnectedRingcoord = null;\n    let geomGraph = arguments[0];\n    this._geomGraph = geomGraph;\n  };\n\n  class RelateNodeGraph {\n    constructor() {\n      RelateNodeGraph.constructor_.apply(this, arguments);\n    }\n\n    insertEdgeEnds(ee) {\n      for (var i = ee.iterator(); i.hasNext();) {\n        var e = i.next();\n\n        this._nodes.add(e);\n      }\n    }\n\n    getNodeIterator() {\n      return this._nodes.iterator();\n    }\n\n    copyNodesAndLabels(geomGraph, argIndex) {\n      for (var nodeIt = geomGraph.getNodeIterator(); nodeIt.hasNext();) {\n        var graphNode = nodeIt.next();\n\n        var newNode = this._nodes.addNode(graphNode.getCoordinate());\n\n        newNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n      }\n    }\n\n    build(geomGraph) {\n      this.computeIntersectionNodes(geomGraph, 0);\n      this.copyNodesAndLabels(geomGraph, 0);\n      var eeBuilder = new EdgeEndBuilder();\n      var eeList = eeBuilder.computeEdgeEnds(geomGraph.getEdgeIterator());\n      this.insertEdgeEnds(eeList);\n    }\n\n    computeIntersectionNodes(geomGraph, argIndex) {\n      for (var edgeIt = geomGraph.getEdgeIterator(); edgeIt.hasNext();) {\n        var e = edgeIt.next();\n        var eLoc = e.getLabel().getLocation(argIndex);\n\n        for (var eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext();) {\n          var ei = eiIt.next();\n\n          var n = this._nodes.addNode(ei.coord);\n\n          if (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex);else {\n            if (n.getLabel().isNull(argIndex)) n.setLabel(argIndex, Location.INTERIOR);\n          }\n        }\n      }\n    }\n\n    getClass() {\n      return RelateNodeGraph;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  RelateNodeGraph.constructor_ = function () {\n    this._nodes = new NodeMap(new RelateNodeFactory());\n  };\n\n  class ConsistentAreaTester {\n    constructor() {\n      ConsistentAreaTester.constructor_.apply(this, arguments);\n    }\n\n    isNodeEdgeAreaLabelsConsistent() {\n      for (var nodeIt = this._nodeGraph.getNodeIterator(); nodeIt.hasNext();) {\n        var node = nodeIt.next();\n\n        if (!node.getEdges().isAreaLabelsConsistent(this._geomGraph)) {\n          this._invalidPoint = node.getCoordinate().copy();\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    getInvalidPoint() {\n      return this._invalidPoint;\n    }\n\n    hasDuplicateRings() {\n      for (var nodeIt = this._nodeGraph.getNodeIterator(); nodeIt.hasNext();) {\n        var node = nodeIt.next();\n\n        for (var i = node.getEdges().iterator(); i.hasNext();) {\n          var eeb = i.next();\n\n          if (eeb.getEdgeEnds().size() > 1) {\n            this._invalidPoint = eeb.getEdge().getCoordinate(0);\n            return true;\n          }\n        }\n      }\n\n      return false;\n    }\n\n    isNodeConsistentArea() {\n      var intersector = this._geomGraph.computeSelfNodes(this._li, true, true);\n\n      if (intersector.hasProperIntersection()) {\n        this._invalidPoint = intersector.getProperIntersectionPoint();\n        return false;\n      }\n\n      this._nodeGraph.build(this._geomGraph);\n\n      return this.isNodeEdgeAreaLabelsConsistent();\n    }\n\n    getClass() {\n      return ConsistentAreaTester;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  ConsistentAreaTester.constructor_ = function () {\n    this._li = new RobustLineIntersector();\n    this._geomGraph = null;\n    this._nodeGraph = new RelateNodeGraph();\n    this._invalidPoint = null;\n    let geomGraph = arguments[0];\n    this._geomGraph = geomGraph;\n  };\n\n  class IndexedNestedRingTester {\n    constructor() {\n      IndexedNestedRingTester.constructor_.apply(this, arguments);\n    }\n\n    buildIndex() {\n      this._index = new STRtree();\n\n      for (var i = 0; i < this._rings.size(); i++) {\n        var ring = this._rings.get(i);\n\n        var env = ring.getEnvelopeInternal();\n\n        this._index.insert(env, ring);\n      }\n    }\n\n    getNestedPoint() {\n      return this._nestedPt;\n    }\n\n    isNonNested() {\n      this.buildIndex();\n\n      for (var i = 0; i < this._rings.size(); i++) {\n        var innerRing = this._rings.get(i);\n\n        var innerRingPts = innerRing.getCoordinates();\n\n        var results = this._index.query(innerRing.getEnvelopeInternal());\n\n        for (var j = 0; j < results.size(); j++) {\n          var searchRing = results.get(j);\n          var searchRingPts = searchRing.getCoordinates();\n          if (innerRing === searchRing) continue;\n          if (!innerRing.getEnvelopeInternal().intersects(searchRing.getEnvelopeInternal())) continue;\n          var innerRingPt = IsValidOp.findPtNotNode(innerRingPts, searchRing, this._graph);\n          if (innerRingPt === null) continue;\n          var isInside = PointLocation.isInRing(innerRingPt, searchRingPts);\n\n          if (isInside) {\n            this._nestedPt = innerRingPt;\n            return false;\n          }\n        }\n      }\n\n      return true;\n    }\n\n    add(ring) {\n      this._rings.add(ring);\n\n      this._totalEnv.expandToInclude(ring.getEnvelopeInternal());\n    }\n\n    getClass() {\n      return IndexedNestedRingTester;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  IndexedNestedRingTester.constructor_ = function () {\n    this._graph = null;\n    this._rings = new ArrayList();\n    this._totalEnv = new Envelope();\n    this._index = null;\n    this._nestedPt = null;\n    let graph = arguments[0];\n    this._graph = graph;\n  };\n\n  class TopologyValidationError {\n    constructor() {\n      TopologyValidationError.constructor_.apply(this, arguments);\n    }\n\n    getErrorType() {\n      return this._errorType;\n    }\n\n    getMessage() {\n      return TopologyValidationError.errMsg[this._errorType];\n    }\n\n    getCoordinate() {\n      return this._pt;\n    }\n\n    toString() {\n      var locStr = \"\";\n      if (this._pt !== null) locStr = \" at or near point \" + this._pt;\n      return this.getMessage() + locStr;\n    }\n\n    getClass() {\n      return TopologyValidationError;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  TopologyValidationError.constructor_ = function () {\n    this._errorType = null;\n    this._pt = null;\n\n    if (arguments.length === 1) {\n      let errorType = arguments[0];\n      TopologyValidationError.constructor_.call(this, errorType, null);\n    } else if (arguments.length === 2) {\n      let errorType = arguments[0],\n          pt = arguments[1];\n      this._errorType = errorType;\n      if (pt !== null) this._pt = pt.copy();\n    }\n  };\n\n  TopologyValidationError.ERROR = 0;\n  TopologyValidationError.REPEATED_POINT = 1;\n  TopologyValidationError.HOLE_OUTSIDE_SHELL = 2;\n  TopologyValidationError.NESTED_HOLES = 3;\n  TopologyValidationError.DISCONNECTED_INTERIOR = 4;\n  TopologyValidationError.SELF_INTERSECTION = 5;\n  TopologyValidationError.RING_SELF_INTERSECTION = 6;\n  TopologyValidationError.NESTED_SHELLS = 7;\n  TopologyValidationError.DUPLICATE_RINGS = 8;\n  TopologyValidationError.TOO_FEW_POINTS = 9;\n  TopologyValidationError.INVALID_COORDINATE = 10;\n  TopologyValidationError.RING_NOT_CLOSED = 11;\n  TopologyValidationError.errMsg = [\"Topology Validation Error\", \"Repeated Point\", \"Hole lies outside shell\", \"Holes are nested\", \"Interior is disconnected\", \"Self-intersection\", \"Ring Self-intersection\", \"Nested shells\", \"Duplicate Rings\", \"Too few distinct points in geometry component\", \"Invalid Coordinate\", \"Ring is not closed\"];\n\n  class IsValidOp {\n    constructor() {\n      IsValidOp.constructor_.apply(this, arguments);\n    }\n\n    static findPtNotNode(testCoords, searchRing, graph) {\n      var searchEdge = graph.findEdge(searchRing);\n      var eiList = searchEdge.getEdgeIntersectionList();\n\n      for (var i = 0; i < testCoords.length; i++) {\n        var pt = testCoords[i];\n        if (!eiList.isIntersection(pt)) return pt;\n      }\n\n      return null;\n    }\n\n    static isValid() {\n      if (arguments[0] instanceof Geometry) {\n        let geom = arguments[0];\n        var isValidOp = new IsValidOp(geom);\n        return isValidOp.isValid();\n      } else if (arguments[0] instanceof Coordinate) {\n        let coord = arguments[0];\n        if (Double.isNaN(coord.x)) return false;\n        if (Double.isInfinite(coord.x)) return false;\n        if (Double.isNaN(coord.y)) return false;\n        if (Double.isInfinite(coord.y)) return false;\n        return true;\n      }\n    }\n\n    checkInvalidCoordinates() {\n      if (arguments[0] instanceof Array) {\n        let coords = arguments[0];\n\n        for (var i = 0; i < coords.length; i++) {\n          if (!IsValidOp.isValid(coords[i])) {\n            this._validErr = new TopologyValidationError(TopologyValidationError.INVALID_COORDINATE, coords[i]);\n            return null;\n          }\n        }\n      } else if (arguments[0] instanceof Polygon) {\n        let poly = arguments[0];\n        this.checkInvalidCoordinates(poly.getExteriorRing().getCoordinates());\n        if (this._validErr !== null) return null;\n\n        for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n          this.checkInvalidCoordinates(poly.getInteriorRingN(i).getCoordinates());\n          if (this._validErr !== null) return null;\n        }\n      }\n    }\n\n    checkHolesNotNested(p, graph) {\n      var nestedTester = new IndexedNestedRingTester(graph);\n\n      for (var i = 0; i < p.getNumInteriorRing(); i++) {\n        var innerHole = p.getInteriorRingN(i);\n        nestedTester.add(innerHole);\n      }\n\n      var isNonNested = nestedTester.isNonNested();\n\n      if (!isNonNested) {\n        this._validErr = new TopologyValidationError(TopologyValidationError.NESTED_HOLES, nestedTester.getNestedPoint());\n      }\n    }\n\n    checkConsistentArea(graph) {\n      var cat = new ConsistentAreaTester(graph);\n      var isValidArea = cat.isNodeConsistentArea();\n\n      if (!isValidArea) {\n        this._validErr = new TopologyValidationError(TopologyValidationError.SELF_INTERSECTION, cat.getInvalidPoint());\n        return null;\n      }\n\n      if (cat.hasDuplicateRings()) {\n        this._validErr = new TopologyValidationError(TopologyValidationError.DUPLICATE_RINGS, cat.getInvalidPoint());\n      }\n    }\n\n    isValid() {\n      this.checkValid(this._parentGeometry);\n      return this._validErr === null;\n    }\n\n    checkShellInsideHole(shell, hole, graph) {\n      var shellPts = shell.getCoordinates();\n      var holePts = hole.getCoordinates();\n      var shellPt = IsValidOp.findPtNotNode(shellPts, hole, graph);\n\n      if (shellPt !== null) {\n        var insideHole = PointLocation.isInRing(shellPt, holePts);\n\n        if (!insideHole) {\n          return shellPt;\n        }\n      }\n\n      var holePt = IsValidOp.findPtNotNode(holePts, shell, graph);\n\n      if (holePt !== null) {\n        var insideShell = PointLocation.isInRing(holePt, shellPts);\n\n        if (insideShell) {\n          return holePt;\n        }\n\n        return null;\n      }\n\n      Assert.shouldNeverReachHere(\"points in shell and hole appear to be equal\");\n      return null;\n    }\n\n    checkNoSelfIntersectingRings(graph) {\n      for (var i = graph.getEdgeIterator(); i.hasNext();) {\n        var e = i.next();\n        this.checkNoSelfIntersectingRing(e.getEdgeIntersectionList());\n        if (this._validErr !== null) return null;\n      }\n    }\n\n    checkConnectedInteriors(graph) {\n      var cit = new ConnectedInteriorTester(graph);\n      if (!cit.isInteriorsConnected()) this._validErr = new TopologyValidationError(TopologyValidationError.DISCONNECTED_INTERIOR, cit.getCoordinate());\n    }\n\n    checkNoSelfIntersectingRing(eiList) {\n      var nodeSet = new TreeSet();\n      var isFirst = true;\n\n      for (var i = eiList.iterator(); i.hasNext();) {\n        var ei = i.next();\n\n        if (isFirst) {\n          isFirst = false;\n          continue;\n        }\n\n        if (nodeSet.contains(ei.coord)) {\n          this._validErr = new TopologyValidationError(TopologyValidationError.RING_SELF_INTERSECTION, ei.coord);\n          return null;\n        } else {\n          nodeSet.add(ei.coord);\n        }\n      }\n    }\n\n    checkHolesInShell(p, graph) {\n      var shell = p.getExteriorRing();\n      var pir = new IndexedPointInAreaLocator(shell);\n\n      for (var i = 0; i < p.getNumInteriorRing(); i++) {\n        var hole = p.getInteriorRingN(i);\n        var holePt = IsValidOp.findPtNotNode(hole.getCoordinates(), shell, graph);\n        if (holePt === null) return null;\n        var outside = Location.EXTERIOR === pir.locate(holePt);\n\n        if (outside) {\n          this._validErr = new TopologyValidationError(TopologyValidationError.HOLE_OUTSIDE_SHELL, holePt);\n          return null;\n        }\n      }\n    }\n\n    checkTooFewPoints(graph) {\n      if (graph.hasTooFewPoints()) {\n        this._validErr = new TopologyValidationError(TopologyValidationError.TOO_FEW_POINTS, graph.getInvalidPoint());\n        return null;\n      }\n    }\n\n    getValidationError() {\n      this.checkValid(this._parentGeometry);\n      return this._validErr;\n    }\n\n    checkValid() {\n      if (arguments[0] instanceof Point) {\n        let g = arguments[0];\n        this.checkInvalidCoordinates(g.getCoordinates());\n      } else if (arguments[0] instanceof MultiPoint) {\n        let g = arguments[0];\n        this.checkInvalidCoordinates(g.getCoordinates());\n      } else if (arguments[0] instanceof LinearRing) {\n        let g = arguments[0];\n        this.checkInvalidCoordinates(g.getCoordinates());\n        if (this._validErr !== null) return null;\n        this.checkClosedRing(g);\n        if (this._validErr !== null) return null;\n        var graph = new GeometryGraph(0, g);\n        this.checkTooFewPoints(graph);\n        if (this._validErr !== null) return null;\n        var li = new RobustLineIntersector();\n        graph.computeSelfNodes(li, true, true);\n        this.checkNoSelfIntersectingRings(graph);\n      } else if (arguments[0] instanceof LineString) {\n        let g = arguments[0];\n        this.checkInvalidCoordinates(g.getCoordinates());\n        if (this._validErr !== null) return null;\n        var graph = new GeometryGraph(0, g);\n        this.checkTooFewPoints(graph);\n      } else if (arguments[0] instanceof Polygon) {\n        let g = arguments[0];\n        this.checkInvalidCoordinates(g);\n        if (this._validErr !== null) return null;\n        this.checkClosedRings(g);\n        if (this._validErr !== null) return null;\n        var graph = new GeometryGraph(0, g);\n        this.checkTooFewPoints(graph);\n        if (this._validErr !== null) return null;\n        this.checkConsistentArea(graph);\n        if (this._validErr !== null) return null;\n\n        if (!this._isSelfTouchingRingFormingHoleValid) {\n          this.checkNoSelfIntersectingRings(graph);\n          if (this._validErr !== null) return null;\n        }\n\n        this.checkHolesInShell(g, graph);\n        if (this._validErr !== null) return null;\n        this.checkHolesNotNested(g, graph);\n        if (this._validErr !== null) return null;\n        this.checkConnectedInteriors(graph);\n      } else if (arguments[0] instanceof MultiPolygon) {\n        let g = arguments[0];\n\n        for (var i = 0; i < g.getNumGeometries(); i++) {\n          var p = g.getGeometryN(i);\n          this.checkInvalidCoordinates(p);\n          if (this._validErr !== null) return null;\n          this.checkClosedRings(p);\n          if (this._validErr !== null) return null;\n        }\n\n        var graph = new GeometryGraph(0, g);\n        this.checkTooFewPoints(graph);\n        if (this._validErr !== null) return null;\n        this.checkConsistentArea(graph);\n        if (this._validErr !== null) return null;\n\n        if (!this._isSelfTouchingRingFormingHoleValid) {\n          this.checkNoSelfIntersectingRings(graph);\n          if (this._validErr !== null) return null;\n        }\n\n        for (var i = 0; i < g.getNumGeometries(); i++) {\n          var p = g.getGeometryN(i);\n          this.checkHolesInShell(p, graph);\n          if (this._validErr !== null) return null;\n        }\n\n        for (var i = 0; i < g.getNumGeometries(); i++) {\n          var p = g.getGeometryN(i);\n          this.checkHolesNotNested(p, graph);\n          if (this._validErr !== null) return null;\n        }\n\n        this.checkShellsNotNested(g, graph);\n        if (this._validErr !== null) return null;\n        this.checkConnectedInteriors(graph);\n      } else if (arguments[0] instanceof GeometryCollection) {\n        let gc = arguments[0];\n\n        for (var i = 0; i < gc.getNumGeometries(); i++) {\n          var g = gc.getGeometryN(i);\n          this.checkValid(g);\n          if (this._validErr !== null) return null;\n        }\n      } else if (arguments[0] instanceof Geometry) {\n        let g = arguments[0];\n        this._validErr = null;\n        if (g.isEmpty()) return null;\n        if (g instanceof Point) this.checkValid(g);else if (g instanceof MultiPoint) this.checkValid(g);else if (g instanceof LinearRing) this.checkValid(g);else if (g instanceof LineString) this.checkValid(g);else if (g instanceof Polygon) this.checkValid(g);else if (g instanceof MultiPolygon) this.checkValid(g);else if (g instanceof GeometryCollection) this.checkValid(g);else throw new UnsupportedOperationException(g.getClass().getName());\n      }\n    }\n\n    setSelfTouchingRingFormingHoleValid(isValid) {\n      this._isSelfTouchingRingFormingHoleValid = isValid;\n    }\n\n    checkShellNotNested(shell, p, graph) {\n      var shellPts = shell.getCoordinates();\n      var polyShell = p.getExteriorRing();\n      var polyPts = polyShell.getCoordinates();\n      var shellPt = IsValidOp.findPtNotNode(shellPts, polyShell, graph);\n      if (shellPt === null) return null;\n      var insidePolyShell = PointLocation.isInRing(shellPt, polyPts);\n      if (!insidePolyShell) return null;\n\n      if (p.getNumInteriorRing() <= 0) {\n        this._validErr = new TopologyValidationError(TopologyValidationError.NESTED_SHELLS, shellPt);\n        return null;\n      }\n\n      var badNestedPt = null;\n\n      for (var i = 0; i < p.getNumInteriorRing(); i++) {\n        var hole = p.getInteriorRingN(i);\n        badNestedPt = this.checkShellInsideHole(shell, hole, graph);\n        if (badNestedPt === null) return null;\n      }\n\n      this._validErr = new TopologyValidationError(TopologyValidationError.NESTED_SHELLS, badNestedPt);\n    }\n\n    checkClosedRings(poly) {\n      this.checkClosedRing(poly.getExteriorRing());\n      if (this._validErr !== null) return null;\n\n      for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n        this.checkClosedRing(poly.getInteriorRingN(i));\n        if (this._validErr !== null) return null;\n      }\n    }\n\n    checkClosedRing(ring) {\n      if (!ring.isClosed()) {\n        var pt = null;\n        if (ring.getNumPoints() >= 1) pt = ring.getCoordinateN(0);\n        this._validErr = new TopologyValidationError(TopologyValidationError.RING_NOT_CLOSED, pt);\n      }\n    }\n\n    checkShellsNotNested(mp, graph) {\n      for (var i = 0; i < mp.getNumGeometries(); i++) {\n        var p = mp.getGeometryN(i);\n        var shell = p.getExteriorRing();\n\n        for (var j = 0; j < mp.getNumGeometries(); j++) {\n          if (i === j) continue;\n          var p2 = mp.getGeometryN(j);\n          this.checkShellNotNested(shell, p2, graph);\n          if (this._validErr !== null) return null;\n        }\n      }\n    }\n\n    getClass() {\n      return IsValidOp;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  IsValidOp.constructor_ = function () {\n    this._parentGeometry = null;\n    this._isSelfTouchingRingFormingHoleValid = false;\n    this._validErr = null;\n    let parentGeometry = arguments[0];\n    this._parentGeometry = parentGeometry;\n  };\n\n\n\n  var valid = /*#__PURE__*/Object.freeze({\n    IsValidOp: IsValidOp,\n    ConsistentAreaTester: ConsistentAreaTester\n  });\n\n\n\n  var operation = /*#__PURE__*/Object.freeze({\n    BoundaryOp: BoundaryOp,\n    IsSimpleOp: IsSimpleOp,\n    buffer: buffer,\n    distance: distance,\n    linemerge: linemerge,\n    overlay: overlay,\n    polygonize: polygonize,\n    relate: relate,\n    union: union,\n    valid: valid\n  });\n\n  class PrecisionReducerCoordinateOperation extends GeometryEditor.CoordinateOperation {\n    constructor() {\n      super();\n      PrecisionReducerCoordinateOperation.constructor_.apply(this, arguments);\n    }\n\n    edit() {\n      if (arguments.length === 2 && arguments[1] instanceof Geometry && arguments[0] instanceof Array) {\n        let coordinates = arguments[0],\n            geom = arguments[1];\n        if (coordinates.length === 0) return null;\n        var reducedCoords = new Array(coordinates.length).fill(null);\n\n        for (var i = 0; i < coordinates.length; i++) {\n          var coord = new Coordinate(coordinates[i]);\n\n          this._targetPM.makePrecise(coord);\n\n          reducedCoords[i] = coord;\n        }\n\n        var noRepeatedCoordList = new CoordinateList(reducedCoords, false);\n        var noRepeatedCoords = noRepeatedCoordList.toCoordinateArray();\n        var minLength = 0;\n        if (geom instanceof LineString) minLength = 2;\n        if (geom instanceof LinearRing) minLength = 4;\n        var collapsedCoords = reducedCoords;\n        if (this._removeCollapsed) collapsedCoords = null;\n\n        if (noRepeatedCoords.length < minLength) {\n          return collapsedCoords;\n        }\n\n        return noRepeatedCoords;\n      } else return super.edit.apply(this, arguments);\n    }\n\n    getClass() {\n      return PrecisionReducerCoordinateOperation;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  PrecisionReducerCoordinateOperation.constructor_ = function () {\n    this._targetPM = null;\n    this._removeCollapsed = true;\n    let targetPM = arguments[0],\n        removeCollapsed = arguments[1];\n    this._targetPM = targetPM;\n    this._removeCollapsed = removeCollapsed;\n  };\n\n  class GeometryPrecisionReducer {\n    constructor() {\n      GeometryPrecisionReducer.constructor_.apply(this, arguments);\n    }\n\n    static reduce(g, precModel) {\n      var reducer = new GeometryPrecisionReducer(precModel);\n      return reducer.reduce(g);\n    }\n\n    static reducePointwise(g, precModel) {\n      var reducer = new GeometryPrecisionReducer(precModel);\n      reducer.setPointwise(true);\n      return reducer.reduce(g);\n    }\n\n    fixPolygonalTopology(geom) {\n      var geomToBuffer = geom;\n\n      if (!this._changePrecisionModel) {\n        geomToBuffer = this.changePM(geom, this._targetPM);\n      }\n\n      var bufGeom = BufferOp.bufferOp(geomToBuffer, 0);\n      var finalGeom = bufGeom;\n\n      if (!this._changePrecisionModel) {\n        finalGeom = geom.getFactory().createGeometry(bufGeom);\n      }\n\n      return finalGeom;\n    }\n\n    reducePointwise(geom) {\n      var geomEdit = null;\n\n      if (this._changePrecisionModel) {\n        var newFactory = this.createFactory(geom.getFactory(), this._targetPM);\n        geomEdit = new GeometryEditor(newFactory);\n      } else geomEdit = new GeometryEditor();\n\n      var finalRemoveCollapsed = this._removeCollapsed;\n      if (geom.getDimension() >= 2) finalRemoveCollapsed = true;\n      var reduceGeom = geomEdit.edit(geom, new PrecisionReducerCoordinateOperation(this._targetPM, finalRemoveCollapsed));\n      return reduceGeom;\n    }\n\n    changePM(geom, newPM) {\n      var geomEditor = this.createEditor(geom.getFactory(), newPM);\n      return geomEditor.edit(geom, new GeometryEditor.NoOpGeometryOperation());\n    }\n\n    setRemoveCollapsedComponents(removeCollapsed) {\n      this._removeCollapsed = removeCollapsed;\n    }\n\n    createFactory(inputFactory, pm) {\n      var newFactory = new GeometryFactory(pm, inputFactory.getSRID(), inputFactory.getCoordinateSequenceFactory());\n      return newFactory;\n    }\n\n    setChangePrecisionModel(changePrecisionModel) {\n      this._changePrecisionModel = changePrecisionModel;\n    }\n\n    reduce(geom) {\n      var reducePW = this.reducePointwise(geom);\n      if (this._isPointwise) return reducePW;\n      if (!hasInterface(reducePW, Polygonal)) return reducePW;\n      if (IsValidOp.isValid(reducePW)) return reducePW;\n      return this.fixPolygonalTopology(reducePW);\n    }\n\n    setPointwise(isPointwise) {\n      this._isPointwise = isPointwise;\n    }\n\n    createEditor(geomFactory, newPM) {\n      if (geomFactory.getPrecisionModel() === newPM) return new GeometryEditor();\n      var newFactory = this.createFactory(geomFactory, newPM);\n      var geomEdit = new GeometryEditor(newFactory);\n      return geomEdit;\n    }\n\n    getClass() {\n      return GeometryPrecisionReducer;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  GeometryPrecisionReducer.constructor_ = function () {\n    this._targetPM = null;\n    this._removeCollapsed = true;\n    this._changePrecisionModel = false;\n    this._isPointwise = false;\n    let pm = arguments[0];\n    this._targetPM = pm;\n  };\n\n\n\n  var precision = /*#__PURE__*/Object.freeze({\n    GeometryPrecisionReducer: GeometryPrecisionReducer\n  });\n\n  class DouglasPeuckerLineSimplifier {\n    constructor() {\n      DouglasPeuckerLineSimplifier.constructor_.apply(this, arguments);\n    }\n\n    static simplify(pts, distanceTolerance) {\n      var simp = new DouglasPeuckerLineSimplifier(pts);\n      simp.setDistanceTolerance(distanceTolerance);\n      return simp.simplify();\n    }\n\n    simplifySection(i, j) {\n      if (i + 1 === j) {\n        return null;\n      }\n\n      this._seg.p0 = this._pts[i];\n      this._seg.p1 = this._pts[j];\n      var maxDistance = -1.0;\n      var maxIndex = i;\n\n      for (var k = i + 1; k < j; k++) {\n        var distance = this._seg.distance(this._pts[k]);\n\n        if (distance > maxDistance) {\n          maxDistance = distance;\n          maxIndex = k;\n        }\n      }\n\n      if (maxDistance <= this._distanceTolerance) {\n        for (var k = i + 1; k < j; k++) {\n          this._usePt[k] = false;\n        }\n      } else {\n        this.simplifySection(i, maxIndex);\n        this.simplifySection(maxIndex, j);\n      }\n    }\n\n    setDistanceTolerance(distanceTolerance) {\n      this._distanceTolerance = distanceTolerance;\n    }\n\n    simplify() {\n      this._usePt = new Array(this._pts.length).fill(null);\n\n      for (var i = 0; i < this._pts.length; i++) {\n        this._usePt[i] = true;\n      }\n\n      this.simplifySection(0, this._pts.length - 1);\n      var coordList = new CoordinateList();\n\n      for (var i = 0; i < this._pts.length; i++) {\n        if (this._usePt[i]) coordList.add(new Coordinate(this._pts[i]));\n      }\n\n      return coordList.toCoordinateArray();\n    }\n\n    getClass() {\n      return DouglasPeuckerLineSimplifier;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  DouglasPeuckerLineSimplifier.constructor_ = function () {\n    this._pts = null;\n    this._usePt = null;\n    this._distanceTolerance = null;\n    this._seg = new LineSegment();\n    let pts = arguments[0];\n    this._pts = pts;\n  };\n\n  class DouglasPeuckerSimplifier {\n    constructor() {\n      DouglasPeuckerSimplifier.constructor_.apply(this, arguments);\n    }\n\n    static simplify(geom, distanceTolerance) {\n      var tss = new DouglasPeuckerSimplifier(geom);\n      tss.setDistanceTolerance(distanceTolerance);\n      return tss.getResultGeometry();\n    }\n\n    setEnsureValid(isEnsureValidTopology) {\n      this._isEnsureValidTopology = isEnsureValidTopology;\n    }\n\n    getResultGeometry() {\n      if (this._inputGeom.isEmpty()) return this._inputGeom.copy();\n      return new DPTransformer(this._isEnsureValidTopology, this._distanceTolerance).transform(this._inputGeom);\n    }\n\n    setDistanceTolerance(distanceTolerance) {\n      if (distanceTolerance < 0.0) throw new IllegalArgumentException(\"Tolerance must be non-negative\");\n      this._distanceTolerance = distanceTolerance;\n    }\n\n    getClass() {\n      return DouglasPeuckerSimplifier;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  class DPTransformer extends GeometryTransformer {\n    constructor() {\n      super();\n      DPTransformer.constructor_.apply(this, arguments);\n    }\n\n    transformPolygon(geom, parent) {\n      if (geom.isEmpty()) return null;\n      var rawGeom = super.transformPolygon.call(this, geom, parent);\n\n      if (parent instanceof MultiPolygon) {\n        return rawGeom;\n      }\n\n      return this.createValidArea(rawGeom);\n    }\n\n    createValidArea(rawAreaGeom) {\n      if (this._isEnsureValidTopology) return rawAreaGeom.buffer(0.0);\n      return rawAreaGeom;\n    }\n\n    transformCoordinates(coords, parent) {\n      var inputPts = coords.toCoordinateArray();\n      var newPts = null;\n\n      if (inputPts.length === 0) {\n        newPts = new Array(0).fill(null);\n      } else {\n        newPts = DouglasPeuckerLineSimplifier.simplify(inputPts, this._distanceTolerance);\n      }\n\n      return this._factory.getCoordinateSequenceFactory().create(newPts);\n    }\n\n    transformMultiPolygon(geom, parent) {\n      var rawGeom = super.transformMultiPolygon.call(this, geom, parent);\n      return this.createValidArea(rawGeom);\n    }\n\n    transformLinearRing(geom, parent) {\n      var removeDegenerateRings = parent instanceof Polygon;\n      var simpResult = super.transformLinearRing.call(this, geom, parent);\n      if (removeDegenerateRings && !(simpResult instanceof LinearRing)) return null;\n      return simpResult;\n    }\n\n    getClass() {\n      return DPTransformer;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  DPTransformer.constructor_ = function () {\n    this._isEnsureValidTopology = true;\n    this._distanceTolerance = null;\n    let isEnsureValidTopology = arguments[0],\n        distanceTolerance = arguments[1];\n    this._isEnsureValidTopology = isEnsureValidTopology;\n    this._distanceTolerance = distanceTolerance;\n  };\n\n  DouglasPeuckerSimplifier.DPTransformer = DPTransformer;\n\n  DouglasPeuckerSimplifier.constructor_ = function () {\n    this._inputGeom = null;\n    this._distanceTolerance = null;\n    this._isEnsureValidTopology = true;\n    let inputGeom = arguments[0];\n    this._inputGeom = inputGeom;\n  };\n\n  class TaggedLineSegment extends LineSegment {\n    constructor() {\n      super();\n      TaggedLineSegment.constructor_.apply(this, arguments);\n    }\n\n    getIndex() {\n      return this._index;\n    }\n\n    getParent() {\n      return this._parent;\n    }\n\n    getClass() {\n      return TaggedLineSegment;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  TaggedLineSegment.constructor_ = function () {\n    this._parent = null;\n    this._index = null;\n\n    if (arguments.length === 2) {\n      let p0 = arguments[0],\n          p1 = arguments[1];\n      TaggedLineSegment.constructor_.call(this, p0, p1, null, -1);\n    } else if (arguments.length === 4) {\n      let p0 = arguments[0],\n          p1 = arguments[1],\n          parent = arguments[2],\n          index = arguments[3];\n      LineSegment.constructor_.call(this, p0, p1);\n      this._parent = parent;\n      this._index = index;\n    }\n  };\n\n  class TaggedLineString {\n    constructor() {\n      TaggedLineString.constructor_.apply(this, arguments);\n    }\n\n    static extractCoordinates(segs) {\n      var pts = new Array(segs.size() + 1).fill(null);\n      var seg = null;\n\n      for (var i = 0; i < segs.size(); i++) {\n        seg = segs.get(i);\n        pts[i] = seg.p0;\n      }\n\n      pts[pts.length - 1] = seg.p1;\n      return pts;\n    }\n\n    addToResult(seg) {\n      this._resultSegs.add(seg);\n    }\n\n    asLineString() {\n      return this._parentLine.getFactory().createLineString(TaggedLineString.extractCoordinates(this._resultSegs));\n    }\n\n    getResultSize() {\n      var resultSegsSize = this._resultSegs.size();\n\n      return resultSegsSize === 0 ? 0 : resultSegsSize + 1;\n    }\n\n    getParent() {\n      return this._parentLine;\n    }\n\n    getSegment(i) {\n      return this._segs[i];\n    }\n\n    getParentCoordinates() {\n      return this._parentLine.getCoordinates();\n    }\n\n    getMinimumSize() {\n      return this._minimumSize;\n    }\n\n    asLinearRing() {\n      return this._parentLine.getFactory().createLinearRing(TaggedLineString.extractCoordinates(this._resultSegs));\n    }\n\n    getSegments() {\n      return this._segs;\n    }\n\n    init() {\n      var pts = this._parentLine.getCoordinates();\n\n      this._segs = new Array(pts.length - 1).fill(null);\n\n      for (var i = 0; i < pts.length - 1; i++) {\n        var seg = new TaggedLineSegment(pts[i], pts[i + 1], this._parentLine, i);\n        this._segs[i] = seg;\n      }\n    }\n\n    getResultCoordinates() {\n      return TaggedLineString.extractCoordinates(this._resultSegs);\n    }\n\n    getClass() {\n      return TaggedLineString;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  TaggedLineString.constructor_ = function () {\n    this._parentLine = null;\n    this._segs = null;\n    this._resultSegs = new ArrayList();\n    this._minimumSize = null;\n\n    if (arguments.length === 1) {\n      let parentLine = arguments[0];\n      TaggedLineString.constructor_.call(this, parentLine, 2);\n    } else if (arguments.length === 2) {\n      let parentLine = arguments[0],\n          minimumSize = arguments[1];\n      this._parentLine = parentLine;\n      this._minimumSize = minimumSize;\n      this.init();\n    }\n  };\n\n  class LineSegmentIndex {\n    constructor() {\n      LineSegmentIndex.constructor_.apply(this, arguments);\n    }\n\n    remove(seg) {\n      this._index.remove(new Envelope(seg.p0, seg.p1), seg);\n    }\n\n    add() {\n      if (arguments[0] instanceof TaggedLineString) {\n        let line = arguments[0];\n        var segs = line.getSegments();\n\n        for (var i = 0; i < segs.length; i++) {\n          var seg = segs[i];\n          this.add(seg);\n        }\n      } else if (arguments[0] instanceof LineSegment) {\n        let seg = arguments[0];\n\n        this._index.insert(new Envelope(seg.p0, seg.p1), seg);\n      }\n    }\n\n    query(querySeg) {\n      var env = new Envelope(querySeg.p0, querySeg.p1);\n      var visitor = new LineSegmentVisitor(querySeg);\n\n      this._index.query(env, visitor);\n\n      var itemsFound = visitor.getItems();\n      return itemsFound;\n    }\n\n    getClass() {\n      return LineSegmentIndex;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  LineSegmentIndex.constructor_ = function () {\n    this._index = new Quadtree();\n  };\n\n  class LineSegmentVisitor {\n    constructor() {\n      LineSegmentVisitor.constructor_.apply(this, arguments);\n    }\n\n    visitItem(item) {\n      var seg = item;\n      if (Envelope.intersects(seg.p0, seg.p1, this._querySeg.p0, this._querySeg.p1)) this._items.add(item);\n    }\n\n    getItems() {\n      return this._items;\n    }\n\n    getClass() {\n      return LineSegmentVisitor;\n    }\n\n    get interfaces_() {\n      return [ItemVisitor];\n    }\n\n  }\n\n  LineSegmentVisitor.constructor_ = function () {\n    this._querySeg = null;\n    this._items = new ArrayList();\n    let querySeg = arguments[0];\n    this._querySeg = querySeg;\n  };\n\n  class TaggedLineStringSimplifier {\n    constructor() {\n      TaggedLineStringSimplifier.constructor_.apply(this, arguments);\n    }\n\n    static isInLineSection(line, sectionIndex, seg) {\n      if (seg.getParent() !== line.getParent()) return false;\n      var segIndex = seg.getIndex();\n      if (segIndex >= sectionIndex[0] && segIndex < sectionIndex[1]) return true;\n      return false;\n    }\n\n    flatten(start, end) {\n      var p0 = this._linePts[start];\n      var p1 = this._linePts[end];\n      var newSeg = new LineSegment(p0, p1);\n      this.remove(this._line, start, end);\n\n      this._outputIndex.add(newSeg);\n\n      return newSeg;\n    }\n\n    hasBadIntersection(parentLine, sectionIndex, candidateSeg) {\n      if (this.hasBadOutputIntersection(candidateSeg)) return true;\n      if (this.hasBadInputIntersection(parentLine, sectionIndex, candidateSeg)) return true;\n      return false;\n    }\n\n    setDistanceTolerance(distanceTolerance) {\n      this._distanceTolerance = distanceTolerance;\n    }\n\n    simplifySection(i, j, depth) {\n      depth += 1;\n      var sectionIndex = new Array(2).fill(null);\n\n      if (i + 1 === j) {\n        var newSeg = this._line.getSegment(i);\n\n        this._line.addToResult(newSeg);\n\n        return null;\n      }\n\n      var isValidToSimplify = true;\n\n      if (this._line.getResultSize() < this._line.getMinimumSize()) {\n        var worstCaseSize = depth + 1;\n        if (worstCaseSize < this._line.getMinimumSize()) isValidToSimplify = false;\n      }\n\n      var distance = new Array(1).fill(null);\n      var furthestPtIndex = this.findFurthestPoint(this._linePts, i, j, distance);\n      if (distance[0] > this._distanceTolerance) isValidToSimplify = false;\n      var candidateSeg = new LineSegment();\n      candidateSeg.p0 = this._linePts[i];\n      candidateSeg.p1 = this._linePts[j];\n      sectionIndex[0] = i;\n      sectionIndex[1] = j;\n      if (this.hasBadIntersection(this._line, sectionIndex, candidateSeg)) isValidToSimplify = false;\n\n      if (isValidToSimplify) {\n        var newSeg = this.flatten(i, j);\n\n        this._line.addToResult(newSeg);\n\n        return null;\n      }\n\n      this.simplifySection(i, furthestPtIndex, depth);\n      this.simplifySection(furthestPtIndex, j, depth);\n    }\n\n    hasBadOutputIntersection(candidateSeg) {\n      var querySegs = this._outputIndex.query(candidateSeg);\n\n      for (var i = querySegs.iterator(); i.hasNext();) {\n        var querySeg = i.next();\n\n        if (this.hasInteriorIntersection(querySeg, candidateSeg)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    findFurthestPoint(pts, i, j, maxDistance) {\n      var seg = new LineSegment();\n      seg.p0 = pts[i];\n      seg.p1 = pts[j];\n      var maxDist = -1.0;\n      var maxIndex = i;\n\n      for (var k = i + 1; k < j; k++) {\n        var midPt = pts[k];\n        var distance = seg.distance(midPt);\n\n        if (distance > maxDist) {\n          maxDist = distance;\n          maxIndex = k;\n        }\n      }\n\n      maxDistance[0] = maxDist;\n      return maxIndex;\n    }\n\n    simplify(line) {\n      this._line = line;\n      this._linePts = line.getParentCoordinates();\n      this.simplifySection(0, this._linePts.length - 1, 0);\n    }\n\n    remove(line, start, end) {\n      for (var i = start; i < end; i++) {\n        var seg = line.getSegment(i);\n\n        this._inputIndex.remove(seg);\n      }\n    }\n\n    hasInteriorIntersection(seg0, seg1) {\n      this._li.computeIntersection(seg0.p0, seg0.p1, seg1.p0, seg1.p1);\n\n      return this._li.isInteriorIntersection();\n    }\n\n    hasBadInputIntersection(parentLine, sectionIndex, candidateSeg) {\n      var querySegs = this._inputIndex.query(candidateSeg);\n\n      for (var i = querySegs.iterator(); i.hasNext();) {\n        var querySeg = i.next();\n\n        if (this.hasInteriorIntersection(querySeg, candidateSeg)) {\n          if (TaggedLineStringSimplifier.isInLineSection(parentLine, sectionIndex, querySeg)) continue;\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    getClass() {\n      return TaggedLineStringSimplifier;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  TaggedLineStringSimplifier.constructor_ = function () {\n    this._li = new RobustLineIntersector();\n    this._inputIndex = new LineSegmentIndex();\n    this._outputIndex = new LineSegmentIndex();\n    this._line = null;\n    this._linePts = null;\n    this._distanceTolerance = 0.0;\n    let inputIndex = arguments[0],\n        outputIndex = arguments[1];\n    this._inputIndex = inputIndex;\n    this._outputIndex = outputIndex;\n  };\n\n  class TaggedLinesSimplifier {\n    constructor() {\n      TaggedLinesSimplifier.constructor_.apply(this, arguments);\n    }\n\n    setDistanceTolerance(distanceTolerance) {\n      this._distanceTolerance = distanceTolerance;\n    }\n\n    simplify(taggedLines) {\n      for (var i = taggedLines.iterator(); i.hasNext();) {\n        this._inputIndex.add(i.next());\n      }\n\n      for (var i = taggedLines.iterator(); i.hasNext();) {\n        var tlss = new TaggedLineStringSimplifier(this._inputIndex, this._outputIndex);\n        tlss.setDistanceTolerance(this._distanceTolerance);\n        tlss.simplify(i.next());\n      }\n    }\n\n    getClass() {\n      return TaggedLinesSimplifier;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  TaggedLinesSimplifier.constructor_ = function () {\n    this._inputIndex = new LineSegmentIndex();\n    this._outputIndex = new LineSegmentIndex();\n    this._distanceTolerance = 0.0;\n  };\n\n  class TopologyPreservingSimplifier {\n    constructor() {\n      TopologyPreservingSimplifier.constructor_.apply(this, arguments);\n    }\n\n    static simplify(geom, distanceTolerance) {\n      var tss = new TopologyPreservingSimplifier(geom);\n      tss.setDistanceTolerance(distanceTolerance);\n      return tss.getResultGeometry();\n    }\n\n    getResultGeometry() {\n      if (this._inputGeom.isEmpty()) return this._inputGeom.copy();\n      this._linestringMap = new HashMap();\n\n      this._inputGeom.apply(new LineStringMapBuilderFilter(this));\n\n      this._lineSimplifier.simplify(this._linestringMap.values());\n\n      var result = new LineStringTransformer(this._linestringMap).transform(this._inputGeom);\n      return result;\n    }\n\n    setDistanceTolerance(distanceTolerance) {\n      if (distanceTolerance < 0.0) throw new IllegalArgumentException(\"Tolerance must be non-negative\");\n\n      this._lineSimplifier.setDistanceTolerance(distanceTolerance);\n    }\n\n    getClass() {\n      return TopologyPreservingSimplifier;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  class LineStringTransformer extends GeometryTransformer {\n    constructor() {\n      super();\n      LineStringTransformer.constructor_.apply(this, arguments);\n    }\n\n    transformCoordinates(coords, parent) {\n      if (coords.size() === 0) return null;\n\n      if (parent instanceof LineString) {\n        var taggedLine = this._linestringMap.get(parent);\n\n        return this.createCoordinateSequence(taggedLine.getResultCoordinates());\n      }\n\n      return super.transformCoordinates.call(this, coords, parent);\n    }\n\n    getClass() {\n      return LineStringTransformer;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  LineStringTransformer.constructor_ = function () {\n    this._linestringMap = null;\n    let linestringMap = arguments[0];\n    this._linestringMap = linestringMap;\n  };\n\n  class LineStringMapBuilderFilter {\n    constructor() {\n      LineStringMapBuilderFilter.constructor_.apply(this, arguments);\n    }\n\n    filter(geom) {\n      if (geom instanceof LineString) {\n        var line = geom;\n        if (line.isEmpty()) return null;\n        var minSize = line.isClosed() ? 4 : 2;\n        var taggedLine = new TaggedLineString(line, minSize);\n\n        this.tps._linestringMap.put(line, taggedLine);\n      }\n    }\n\n    getClass() {\n      return LineStringMapBuilderFilter;\n    }\n\n    get interfaces_() {\n      return [GeometryComponentFilter];\n    }\n\n  }\n\n  LineStringMapBuilderFilter.constructor_ = function () {\n    this.tps = null;\n    let tps = arguments[0];\n    this.tps = tps;\n  };\n\n  TopologyPreservingSimplifier.LineStringTransformer = LineStringTransformer;\n  TopologyPreservingSimplifier.LineStringMapBuilderFilter = LineStringMapBuilderFilter;\n\n  TopologyPreservingSimplifier.constructor_ = function () {\n    this._inputGeom = null;\n    this._lineSimplifier = new TaggedLinesSimplifier();\n    this._linestringMap = null;\n    let inputGeom = arguments[0];\n    this._inputGeom = inputGeom;\n  };\n\n  class VWLineSimplifier {\n    constructor() {\n      VWLineSimplifier.constructor_.apply(this, arguments);\n    }\n\n    static simplify(pts, distanceTolerance) {\n      var simp = new VWLineSimplifier(pts, distanceTolerance);\n      return simp.simplify();\n    }\n\n    simplifyVertex(vwLine) {\n      var curr = vwLine;\n      var minArea = curr.getArea();\n      var minVertex = null;\n\n      while (curr !== null) {\n        var area = curr.getArea();\n\n        if (area < minArea) {\n          minArea = area;\n          minVertex = curr;\n        }\n\n        curr = curr._next;\n      }\n\n      if (minVertex !== null && minArea < this._tolerance) {\n        minVertex.remove();\n      }\n\n      if (!vwLine.isLive()) return -1;\n      return minArea;\n    }\n\n    simplify() {\n      var vwLine = VWVertex.buildLine(this._pts);\n      var minArea = this._tolerance;\n\n      do {\n        minArea = this.simplifyVertex(vwLine);\n      } while (minArea < this._tolerance);\n\n      var simp = vwLine.getCoordinates();\n\n      if (simp.length < 2) {\n        return [simp[0], new Coordinate(simp[0])];\n      }\n\n      return simp;\n    }\n\n    getClass() {\n      return VWLineSimplifier;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  class VWVertex {\n    constructor() {\n      VWVertex.constructor_.apply(this, arguments);\n    }\n\n    static buildLine(pts) {\n      var first = null;\n      var prev = null;\n\n      for (var i = 0; i < pts.length; i++) {\n        var v = new VWVertex(pts[i]);\n        if (first === null) first = v;\n        v.setPrev(prev);\n\n        if (prev !== null) {\n          prev.setNext(v);\n          prev.updateArea();\n        }\n\n        prev = v;\n      }\n\n      return first;\n    }\n\n    getCoordinates() {\n      var coords = new CoordinateList();\n      var curr = this;\n\n      do {\n        coords.add(curr._pt, false);\n        curr = curr._next;\n      } while (curr !== null);\n\n      return coords.toCoordinateArray();\n    }\n\n    getArea() {\n      return this._area;\n    }\n\n    updateArea() {\n      if (this._prev === null || this._next === null) {\n        this._area = VWVertex.MAX_AREA;\n        return null;\n      }\n\n      this._area = Math.abs(Triangle.area(this._prev._pt, this._pt, this._next._pt));\n    }\n\n    remove() {\n      var tmpPrev = this._prev;\n      var tmpNext = this._next;\n      var result = null;\n\n      if (this._prev !== null) {\n        this._prev.setNext(tmpNext);\n\n        this._prev.updateArea();\n\n        result = this._prev;\n      }\n\n      if (this._next !== null) {\n        this._next.setPrev(tmpPrev);\n\n        this._next.updateArea();\n\n        if (result === null) result = this._next;\n      }\n\n      this._isLive = false;\n      return result;\n    }\n\n    isLive() {\n      return this._isLive;\n    }\n\n    setPrev(prev) {\n      this._prev = prev;\n    }\n\n    setNext(next) {\n      this._next = next;\n    }\n\n    getClass() {\n      return VWVertex;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  VWVertex.constructor_ = function () {\n    this._pt = null;\n    this._prev = null;\n    this._next = null;\n    this._area = VWVertex.MAX_AREA;\n    this._isLive = true;\n    let pt = arguments[0];\n    this._pt = pt;\n  };\n\n  VWVertex.MAX_AREA = Double.MAX_VALUE;\n  VWLineSimplifier.VWVertex = VWVertex;\n\n  VWLineSimplifier.constructor_ = function () {\n    this._pts = null;\n    this._tolerance = null;\n    let pts = arguments[0],\n        distanceTolerance = arguments[1];\n    this._pts = pts;\n    this._tolerance = distanceTolerance * distanceTolerance;\n  };\n\n  class VWSimplifier {\n    constructor() {\n      VWSimplifier.constructor_.apply(this, arguments);\n    }\n\n    static simplify(geom, distanceTolerance) {\n      var simp = new VWSimplifier(geom);\n      simp.setDistanceTolerance(distanceTolerance);\n      return simp.getResultGeometry();\n    }\n\n    setEnsureValid(isEnsureValidTopology) {\n      this._isEnsureValidTopology = isEnsureValidTopology;\n    }\n\n    getResultGeometry() {\n      if (this._inputGeom.isEmpty()) return this._inputGeom.copy();\n      return new VWTransformer(this._isEnsureValidTopology, this._distanceTolerance).transform(this._inputGeom);\n    }\n\n    setDistanceTolerance(distanceTolerance) {\n      if (distanceTolerance < 0.0) throw new IllegalArgumentException(\"Tolerance must be non-negative\");\n      this._distanceTolerance = distanceTolerance;\n    }\n\n    getClass() {\n      return VWSimplifier;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  class VWTransformer extends GeometryTransformer {\n    constructor() {\n      super();\n      VWTransformer.constructor_.apply(this, arguments);\n    }\n\n    transformPolygon(geom, parent) {\n      if (geom.isEmpty()) return null;\n      var rawGeom = super.transformPolygon.call(this, geom, parent);\n\n      if (parent instanceof MultiPolygon) {\n        return rawGeom;\n      }\n\n      return this.createValidArea(rawGeom);\n    }\n\n    createValidArea(rawAreaGeom) {\n      if (this._isEnsureValidTopology) return rawAreaGeom.buffer(0.0);\n      return rawAreaGeom;\n    }\n\n    transformCoordinates(coords, parent) {\n      var inputPts = coords.toCoordinateArray();\n      var newPts = null;\n\n      if (inputPts.length === 0) {\n        newPts = new Array(0).fill(null);\n      } else {\n        newPts = VWLineSimplifier.simplify(inputPts, this._distanceTolerance);\n      }\n\n      return this._factory.getCoordinateSequenceFactory().create(newPts);\n    }\n\n    transformMultiPolygon(geom, parent) {\n      var rawGeom = super.transformMultiPolygon.call(this, geom, parent);\n      return this.createValidArea(rawGeom);\n    }\n\n    transformLinearRing(geom, parent) {\n      var removeDegenerateRings = parent instanceof Polygon;\n      var simpResult = super.transformLinearRing.call(this, geom, parent);\n      if (removeDegenerateRings && !(simpResult instanceof LinearRing)) return null;\n      return simpResult;\n    }\n\n    getClass() {\n      return VWTransformer;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  VWTransformer.constructor_ = function () {\n    this._isEnsureValidTopology = true;\n    this._distanceTolerance = null;\n    let isEnsureValidTopology = arguments[0],\n        distanceTolerance = arguments[1];\n    this._isEnsureValidTopology = isEnsureValidTopology;\n    this._distanceTolerance = distanceTolerance;\n  };\n\n  VWSimplifier.VWTransformer = VWTransformer;\n\n  VWSimplifier.constructor_ = function () {\n    this._inputGeom = null;\n    this._distanceTolerance = null;\n    this._isEnsureValidTopology = true;\n    let inputGeom = arguments[0];\n    this._inputGeom = inputGeom;\n  };\n\n\n\n  var simplify = /*#__PURE__*/Object.freeze({\n    DouglasPeuckerSimplifier: DouglasPeuckerSimplifier,\n    TopologyPreservingSimplifier: TopologyPreservingSimplifier,\n    VWSimplifier: VWSimplifier\n  });\n\n  class SplitSegment {\n    constructor() {\n      SplitSegment.constructor_.apply(this, arguments);\n    }\n\n    static pointAlongReverse(seg, segmentLengthFraction) {\n      var coord = new Coordinate();\n      coord.x = seg.p1.x - segmentLengthFraction * (seg.p1.x - seg.p0.x);\n      coord.y = seg.p1.y - segmentLengthFraction * (seg.p1.y - seg.p0.y);\n      return coord;\n    }\n\n    splitAt() {\n      if (arguments.length === 1) {\n        let pt = arguments[0];\n        var minFrac = this._minimumLen / this._segLen;\n\n        if (pt.distance(this._seg.p0) < this._minimumLen) {\n          this._splitPt = this._seg.pointAlong(minFrac);\n          return null;\n        }\n\n        if (pt.distance(this._seg.p1) < this._minimumLen) {\n          this._splitPt = SplitSegment.pointAlongReverse(this._seg, minFrac);\n          return null;\n        }\n\n        this._splitPt = pt;\n      } else if (arguments.length === 2) {\n        let length = arguments[0],\n            endPt = arguments[1];\n        var actualLen = this.getConstrainedLength(length);\n        var frac = actualLen / this._segLen;\n        if (endPt.equals2D(this._seg.p0)) this._splitPt = this._seg.pointAlong(frac);else this._splitPt = SplitSegment.pointAlongReverse(this._seg, frac);\n      }\n    }\n\n    setMinimumLength(minLen) {\n      this._minimumLen = minLen;\n    }\n\n    getConstrainedLength(len) {\n      if (len < this._minimumLen) return this._minimumLen;\n      return len;\n    }\n\n    getSplitPoint() {\n      return this._splitPt;\n    }\n\n    getClass() {\n      return SplitSegment;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  SplitSegment.constructor_ = function () {\n    this._seg = null;\n    this._segLen = null;\n    this._splitPt = null;\n    this._minimumLen = 0.0;\n    let seg = arguments[0];\n    this._seg = seg;\n    this._segLen = seg.getLength();\n  };\n\n  class ConstraintSplitPointFinder {\n    constructor() {\n      ConstraintSplitPointFinder.constructor_.apply(this, arguments);\n    }\n\n    findSplitPoint(seg, encroachPt) {}\n\n    getClass() {\n      return ConstraintSplitPointFinder;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  ConstraintSplitPointFinder.constructor_ = function () {};\n\n  class NonEncroachingSplitPointFinder {\n    constructor() {\n      NonEncroachingSplitPointFinder.constructor_.apply(this, arguments);\n    }\n\n    static projectedSplitPoint(seg, encroachPt) {\n      var lineSeg = seg.getLineSegment();\n      var projPt = lineSeg.project(encroachPt);\n      return projPt;\n    }\n\n    findSplitPoint(seg, encroachPt) {\n      var lineSeg = seg.getLineSegment();\n      var segLen = lineSeg.getLength();\n      var midPtLen = segLen / 2;\n      var splitSeg = new SplitSegment(lineSeg);\n      var projPt = NonEncroachingSplitPointFinder.projectedSplitPoint(seg, encroachPt);\n      var nonEncroachDiam = projPt.distance(encroachPt) * 2 * 0.8;\n      var maxSplitLen = nonEncroachDiam;\n\n      if (maxSplitLen > midPtLen) {\n        maxSplitLen = midPtLen;\n      }\n\n      splitSeg.setMinimumLength(maxSplitLen);\n      splitSeg.splitAt(projPt);\n      return splitSeg.getSplitPoint();\n    }\n\n    getClass() {\n      return NonEncroachingSplitPointFinder;\n    }\n\n    get interfaces_() {\n      return [ConstraintSplitPointFinder];\n    }\n\n  }\n\n  NonEncroachingSplitPointFinder.constructor_ = function () {};\n\n  class TrianglePredicate {\n    constructor() {\n      TrianglePredicate.constructor_.apply(this, arguments);\n    }\n\n    static triArea(a, b, c) {\n      return (b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x);\n    }\n\n    static isInCircleDDNormalized(a, b, c, p) {\n      var adx = DD.valueOf(a.x).selfSubtract(p.x);\n      var ady = DD.valueOf(a.y).selfSubtract(p.y);\n      var bdx = DD.valueOf(b.x).selfSubtract(p.x);\n      var bdy = DD.valueOf(b.y).selfSubtract(p.y);\n      var cdx = DD.valueOf(c.x).selfSubtract(p.x);\n      var cdy = DD.valueOf(c.y).selfSubtract(p.y);\n      var abdet = adx.multiply(bdy).selfSubtract(bdx.multiply(ady));\n      var bcdet = bdx.multiply(cdy).selfSubtract(cdx.multiply(bdy));\n      var cadet = cdx.multiply(ady).selfSubtract(adx.multiply(cdy));\n      var alift = adx.multiply(adx).selfAdd(ady.multiply(ady));\n      var blift = bdx.multiply(bdx).selfAdd(bdy.multiply(bdy));\n      var clift = cdx.multiply(cdx).selfAdd(cdy.multiply(cdy));\n      var sum = alift.selfMultiply(bcdet).selfAdd(blift.selfMultiply(cadet)).selfAdd(clift.selfMultiply(abdet));\n      var isInCircle = sum.doubleValue() > 0;\n      return isInCircle;\n    }\n\n    static checkRobustInCircle(a, b, c, p) {\n      var nonRobustInCircle = TrianglePredicate.isInCircleNonRobust(a, b, c, p);\n      var isInCircleDD = TrianglePredicate.isInCircleDDSlow(a, b, c, p);\n      var isInCircleCC = TrianglePredicate.isInCircleCC(a, b, c, p);\n      var circumCentre = Triangle.circumcentre(a, b, c);\n      System.out.println(\"p radius diff a = \" + Math.abs(p.distance(circumCentre) - a.distance(circumCentre)) / a.distance(circumCentre));\n\n      if (nonRobustInCircle !== isInCircleDD || nonRobustInCircle !== isInCircleCC) {\n        System.out.println(\"inCircle robustness failure (double result = \" + nonRobustInCircle + \", DD result = \" + isInCircleDD + \", CC result = \" + isInCircleCC + \")\");\n        System.out.println(WKTWriter.toLineString(new CoordinateArraySequence([a, b, c, p])));\n        System.out.println(\"Circumcentre = \" + WKTWriter.toPoint(circumCentre) + \" radius = \" + a.distance(circumCentre));\n        System.out.println(\"p radius diff a = \" + Math.abs(p.distance(circumCentre) / a.distance(circumCentre) - 1));\n        System.out.println(\"p radius diff b = \" + Math.abs(p.distance(circumCentre) / b.distance(circumCentre) - 1));\n        System.out.println(\"p radius diff c = \" + Math.abs(p.distance(circumCentre) / c.distance(circumCentre) - 1));\n        System.out.println();\n      }\n    }\n\n    static isInCircleDDFast(a, b, c, p) {\n      var aTerm = DD.sqr(a.x).selfAdd(DD.sqr(a.y)).selfMultiply(TrianglePredicate.triAreaDDFast(b, c, p));\n      var bTerm = DD.sqr(b.x).selfAdd(DD.sqr(b.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a, c, p));\n      var cTerm = DD.sqr(c.x).selfAdd(DD.sqr(c.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a, b, p));\n      var pTerm = DD.sqr(p.x).selfAdd(DD.sqr(p.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a, b, c));\n      var sum = aTerm.selfSubtract(bTerm).selfAdd(cTerm).selfSubtract(pTerm);\n      var isInCircle = sum.doubleValue() > 0;\n      return isInCircle;\n    }\n\n    static isInCircleCC(a, b, c, p) {\n      var cc = Triangle.circumcentre(a, b, c);\n      var ccRadius = a.distance(cc);\n      var pRadiusDiff = p.distance(cc) - ccRadius;\n      return pRadiusDiff <= 0;\n    }\n\n    static isInCircleNormalized(a, b, c, p) {\n      var adx = a.x - p.x;\n      var ady = a.y - p.y;\n      var bdx = b.x - p.x;\n      var bdy = b.y - p.y;\n      var cdx = c.x - p.x;\n      var cdy = c.y - p.y;\n      var abdet = adx * bdy - bdx * ady;\n      var bcdet = bdx * cdy - cdx * bdy;\n      var cadet = cdx * ady - adx * cdy;\n      var alift = adx * adx + ady * ady;\n      var blift = bdx * bdx + bdy * bdy;\n      var clift = cdx * cdx + cdy * cdy;\n      var disc = alift * bcdet + blift * cadet + clift * abdet;\n      return disc > 0;\n    }\n\n    static isInCircleDDSlow(a, b, c, p) {\n      var px = DD.valueOf(p.x);\n      var py = DD.valueOf(p.y);\n      var ax = DD.valueOf(a.x);\n      var ay = DD.valueOf(a.y);\n      var bx = DD.valueOf(b.x);\n      var by = DD.valueOf(b.y);\n      var cx = DD.valueOf(c.x);\n      var cy = DD.valueOf(c.y);\n      var aTerm = ax.multiply(ax).add(ay.multiply(ay)).multiply(TrianglePredicate.triAreaDDSlow(bx, by, cx, cy, px, py));\n      var bTerm = bx.multiply(bx).add(by.multiply(by)).multiply(TrianglePredicate.triAreaDDSlow(ax, ay, cx, cy, px, py));\n      var cTerm = cx.multiply(cx).add(cy.multiply(cy)).multiply(TrianglePredicate.triAreaDDSlow(ax, ay, bx, by, px, py));\n      var pTerm = px.multiply(px).add(py.multiply(py)).multiply(TrianglePredicate.triAreaDDSlow(ax, ay, bx, by, cx, cy));\n      var sum = aTerm.subtract(bTerm).add(cTerm).subtract(pTerm);\n      var isInCircle = sum.doubleValue() > 0;\n      return isInCircle;\n    }\n\n    static isInCircleNonRobust(a, b, c, p) {\n      var isInCircle = (a.x * a.x + a.y * a.y) * TrianglePredicate.triArea(b, c, p) - (b.x * b.x + b.y * b.y) * TrianglePredicate.triArea(a, c, p) + (c.x * c.x + c.y * c.y) * TrianglePredicate.triArea(a, b, p) - (p.x * p.x + p.y * p.y) * TrianglePredicate.triArea(a, b, c) > 0;\n      return isInCircle;\n    }\n\n    static isInCircleRobust(a, b, c, p) {\n      return TrianglePredicate.isInCircleNormalized(a, b, c, p);\n    }\n\n    static triAreaDDSlow(ax, ay, bx, by, cx, cy) {\n      return bx.subtract(ax).multiply(cy.subtract(ay)).subtract(by.subtract(ay).multiply(cx.subtract(ax)));\n    }\n\n    static triAreaDDFast(a, b, c) {\n      var t1 = DD.valueOf(b.x).selfSubtract(a.x).selfMultiply(DD.valueOf(c.y).selfSubtract(a.y));\n      var t2 = DD.valueOf(b.y).selfSubtract(a.y).selfMultiply(DD.valueOf(c.x).selfSubtract(a.x));\n      return t1.selfSubtract(t2);\n    }\n\n    getClass() {\n      return TrianglePredicate;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  TrianglePredicate.constructor_ = function () {};\n\n  class Vertex {\n    constructor() {\n      Vertex.constructor_.apply(this, arguments);\n    }\n\n    static interpolateZ() {\n      if (arguments.length === 3) {\n        let p = arguments[0],\n            p0 = arguments[1],\n            p1 = arguments[2];\n        var segLen = p0.distance(p1);\n        var ptLen = p.distance(p0);\n        var dz = p1.z - p0.z;\n        var pz = p0.z + dz * (ptLen / segLen);\n        return pz;\n      } else if (arguments.length === 4) {\n        let p = arguments[0],\n            v0 = arguments[1],\n            v1 = arguments[2],\n            v2 = arguments[3];\n        var x0 = v0.x;\n        var y0 = v0.y;\n        var a = v1.x - x0;\n        var b = v2.x - x0;\n        var c = v1.y - y0;\n        var d = v2.y - y0;\n        var det = a * d - b * c;\n        var dx = p.x - x0;\n        var dy = p.y - y0;\n        var t = (d * dx - b * dy) / det;\n        var u = (-c * dx + a * dy) / det;\n        var z = v0.z + t * (v1.z - v0.z) + u * (v2.z - v0.z);\n        return z;\n      }\n    }\n\n    circleCenter(b, c) {\n      var a = new Vertex(this.getX(), this.getY());\n      var cab = this.bisector(a, b);\n      var cbc = this.bisector(b, c);\n      var hcc = new HCoordinate(cab, cbc);\n      var cc = null;\n\n      try {\n        cc = new Vertex(hcc.getX(), hcc.getY());\n      } catch (nre) {\n        if (nre instanceof NotRepresentableException) {\n          System.err.println(\"a: \" + a + \"  b: \" + b + \"  c: \" + c);\n          System.err.println(nre);\n        } else throw nre;\n      } finally {}\n\n      return cc;\n    }\n\n    dot(v) {\n      return this._p.x * v.getX() + this._p.y * v.getY();\n    }\n\n    magn() {\n      return Math.sqrt(this._p.x * this._p.x + this._p.y * this._p.y);\n    }\n\n    getZ() {\n      return this._p.z;\n    }\n\n    bisector(a, b) {\n      var dx = b.getX() - a.getX();\n      var dy = b.getY() - a.getY();\n      var l1 = new HCoordinate(a.getX() + dx / 2.0, a.getY() + dy / 2.0, 1.0);\n      var l2 = new HCoordinate(a.getX() - dy + dx / 2.0, a.getY() + dx + dy / 2.0, 1.0);\n      return new HCoordinate(l1, l2);\n    }\n\n    equals() {\n      if (arguments.length === 1) {\n        let _x = arguments[0];\n\n        if (this._p.x === _x.getX() && this._p.y === _x.getY()) {\n          return true;\n        } else {\n          return false;\n        }\n      } else if (arguments.length === 2) {\n        let _x = arguments[0],\n            tolerance = arguments[1];\n\n        if (this._p.distance(_x.getCoordinate()) < tolerance) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n    }\n\n    getCoordinate() {\n      return this._p;\n    }\n\n    isInCircle(a, b, c) {\n      return TrianglePredicate.isInCircleRobust(a._p, b._p, c._p, this._p);\n    }\n\n    interpolateZValue(v0, v1, v2) {\n      var x0 = v0.getX();\n      var y0 = v0.getY();\n      var a = v1.getX() - x0;\n      var b = v2.getX() - x0;\n      var c = v1.getY() - y0;\n      var d = v2.getY() - y0;\n      var det = a * d - b * c;\n      var dx = this.getX() - x0;\n      var dy = this.getY() - y0;\n      var t = (d * dx - b * dy) / det;\n      var u = (-c * dx + a * dy) / det;\n      var z = v0.getZ() + t * (v1.getZ() - v0.getZ()) + u * (v2.getZ() - v0.getZ());\n      return z;\n    }\n\n    midPoint(a) {\n      var xm = (this._p.x + a.getX()) / 2.0;\n      var ym = (this._p.y + a.getY()) / 2.0;\n      var zm = (this._p.z + a.getZ()) / 2.0;\n      return new Vertex(xm, ym, zm);\n    }\n\n    rightOf(e) {\n      return this.isCCW(e.dest(), e.orig());\n    }\n\n    isCCW(b, c) {\n      return (b._p.x - this._p.x) * (c._p.y - this._p.y) - (b._p.y - this._p.y) * (c._p.x - this._p.x) > 0;\n    }\n\n    getX() {\n      return this._p.x;\n    }\n\n    crossProduct(v) {\n      return this._p.x * v.getY() - this._p.y * v.getX();\n    }\n\n    setZ(_z) {\n      this._p.z = _z;\n    }\n\n    times(c) {\n      return new Vertex(c * this._p.x, c * this._p.y);\n    }\n\n    cross() {\n      return new Vertex(this._p.y, -this._p.x);\n    }\n\n    leftOf(e) {\n      return this.isCCW(e.orig(), e.dest());\n    }\n\n    toString() {\n      return \"POINT (\" + this._p.x + \" \" + this._p.y + \")\";\n    }\n\n    sub(v) {\n      return new Vertex(this._p.x - v.getX(), this._p.y - v.getY());\n    }\n\n    getY() {\n      return this._p.y;\n    }\n\n    classify(p0, p1) {\n      var p2 = this;\n      var a = p1.sub(p0);\n      var b = p2.sub(p0);\n      var sa = a.crossProduct(b);\n      if (sa > 0.0) return Vertex.LEFT;\n      if (sa < 0.0) return Vertex.RIGHT;\n      if (a.getX() * b.getX() < 0.0 || a.getY() * b.getY() < 0.0) return Vertex.BEHIND;\n      if (a.magn() < b.magn()) return Vertex.BEYOND;\n      if (p0.equals(p2)) return Vertex.ORIGIN;\n      if (p1.equals(p2)) return Vertex.DESTINATION;\n      return Vertex.BETWEEN;\n    }\n\n    sum(v) {\n      return new Vertex(this._p.x + v.getX(), this._p.y + v.getY());\n    }\n\n    distance(v1, v2) {\n      return Math.sqrt(Math.pow(v2.getX() - v1.getX(), 2.0) + Math.pow(v2.getY() - v1.getY(), 2.0));\n    }\n\n    circumRadiusRatio(b, c) {\n      var x = this.circleCenter(b, c);\n      var radius = this.distance(x, b);\n      var edgeLength = this.distance(this, b);\n      var el = this.distance(b, c);\n\n      if (el < edgeLength) {\n        edgeLength = el;\n      }\n\n      el = this.distance(c, this);\n\n      if (el < edgeLength) {\n        edgeLength = el;\n      }\n\n      return radius / edgeLength;\n    }\n\n    getClass() {\n      return Vertex;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  Vertex.constructor_ = function () {\n    this._p = null;\n\n    if (arguments.length === 1) {\n      let _p = arguments[0];\n      this._p = new Coordinate(_p);\n    } else if (arguments.length === 2) {\n      let _x = arguments[0],\n          _y = arguments[1];\n      this._p = new Coordinate(_x, _y);\n    } else if (arguments.length === 3) {\n      let _x = arguments[0],\n          _y = arguments[1],\n          _z = arguments[2];\n      this._p = new Coordinate(_x, _y, _z);\n    }\n  };\n\n  Vertex.LEFT = 0;\n  Vertex.RIGHT = 1;\n  Vertex.BEYOND = 2;\n  Vertex.BEHIND = 3;\n  Vertex.BETWEEN = 4;\n  Vertex.ORIGIN = 5;\n  Vertex.DESTINATION = 6;\n\n  class ConstraintVertex extends Vertex {\n    constructor() {\n      super();\n      ConstraintVertex.constructor_.apply(this, arguments);\n    }\n\n    getConstraint() {\n      return this._constraint;\n    }\n\n    setOnConstraint(isOnConstraint) {\n      this._isOnConstraint = isOnConstraint;\n    }\n\n    merge(other) {\n      if (other._isOnConstraint) {\n        this._isOnConstraint = true;\n        this._constraint = other._constraint;\n      }\n    }\n\n    isOnConstraint() {\n      return this._isOnConstraint;\n    }\n\n    setConstraint(constraint) {\n      this._isOnConstraint = true;\n      this._constraint = constraint;\n    }\n\n    getClass() {\n      return ConstraintVertex;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  ConstraintVertex.constructor_ = function () {\n    this._isOnConstraint = null;\n    this._constraint = null;\n    let p = arguments[0];\n    Vertex.constructor_.call(this, p);\n  };\n\n  class QuadEdge {\n    constructor() {\n      QuadEdge.constructor_.apply(this, arguments);\n    }\n\n    static makeEdge(o, d) {\n      var q0 = new QuadEdge();\n      var q1 = new QuadEdge();\n      var q2 = new QuadEdge();\n      var q3 = new QuadEdge();\n      q0._rot = q1;\n      q1._rot = q2;\n      q2._rot = q3;\n      q3._rot = q0;\n      q0.setNext(q0);\n      q1.setNext(q3);\n      q2.setNext(q2);\n      q3.setNext(q1);\n      var base = q0;\n      base.setOrig(o);\n      base.setDest(d);\n      return base;\n    }\n\n    static swap(e) {\n      var a = e.oPrev();\n      var b = e.sym().oPrev();\n      QuadEdge.splice(e, a);\n      QuadEdge.splice(e.sym(), b);\n      QuadEdge.splice(e, a.lNext());\n      QuadEdge.splice(e.sym(), b.lNext());\n      e.setOrig(a.dest());\n      e.setDest(b.dest());\n    }\n\n    static splice(a, b) {\n      var alpha = a.oNext().rot();\n      var beta = b.oNext().rot();\n      var t1 = b.oNext();\n      var t2 = a.oNext();\n      var t3 = beta.oNext();\n      var t4 = alpha.oNext();\n      a.setNext(t1);\n      b.setNext(t2);\n      alpha.setNext(t3);\n      beta.setNext(t4);\n    }\n\n    static connect(a, b) {\n      var e = QuadEdge.makeEdge(a.dest(), b.orig());\n      QuadEdge.splice(e, a.lNext());\n      QuadEdge.splice(e.sym(), b);\n      return e;\n    }\n\n    equalsNonOriented(qe) {\n      if (this.equalsOriented(qe)) return true;\n      if (this.equalsOriented(qe.sym())) return true;\n      return false;\n    }\n\n    toLineSegment() {\n      return new LineSegment(this._vertex.getCoordinate(), this.dest().getCoordinate());\n    }\n\n    dest() {\n      return this.sym().orig();\n    }\n\n    oNext() {\n      return this._next;\n    }\n\n    equalsOriented(qe) {\n      if (this.orig().getCoordinate().equals2D(qe.orig().getCoordinate()) && this.dest().getCoordinate().equals2D(qe.dest().getCoordinate())) return true;\n      return false;\n    }\n\n    dNext() {\n      return this.sym().oNext().sym();\n    }\n\n    lPrev() {\n      return this._next.sym();\n    }\n\n    rPrev() {\n      return this.sym().oNext();\n    }\n\n    rot() {\n      return this._rot;\n    }\n\n    oPrev() {\n      return this._rot._next._rot;\n    }\n\n    sym() {\n      return this._rot._rot;\n    }\n\n    setOrig(o) {\n      this._vertex = o;\n    }\n\n    lNext() {\n      return this.invRot().oNext().rot();\n    }\n\n    getLength() {\n      return this.orig().getCoordinate().distance(this.dest().getCoordinate());\n    }\n\n    invRot() {\n      return this._rot.sym();\n    }\n\n    setDest(d) {\n      this.sym().setOrig(d);\n    }\n\n    setData(data) {\n      this._data = data;\n    }\n\n    getData() {\n      return this._data;\n    }\n\n    delete() {\n      this._rot = null;\n    }\n\n    orig() {\n      return this._vertex;\n    }\n\n    rNext() {\n      return this._rot._next.invRot();\n    }\n\n    toString() {\n      var p0 = this._vertex.getCoordinate();\n\n      var p1 = this.dest().getCoordinate();\n      return WKTWriter.toLineString(p0, p1);\n    }\n\n    isLive() {\n      return this._rot !== null;\n    }\n\n    getPrimary() {\n      if (this.orig().getCoordinate().compareTo(this.dest().getCoordinate()) <= 0) return this;else return this.sym();\n    }\n\n    dPrev() {\n      return this.invRot().oNext().invRot();\n    }\n\n    setNext(next) {\n      this._next = next;\n    }\n\n    getClass() {\n      return QuadEdge;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  QuadEdge.constructor_ = function () {\n    this._rot = null;\n    this._vertex = null;\n    this._next = null;\n    this._data = null;\n  };\n\n  class IncrementalDelaunayTriangulator {\n    constructor() {\n      IncrementalDelaunayTriangulator.constructor_.apply(this, arguments);\n    }\n\n    insertSite(v) {\n      var e = this._subdiv.locate(v);\n\n      if (this._subdiv.isVertexOfEdge(e, v)) {\n        return e;\n      } else if (this._subdiv.isOnEdge(e, v.getCoordinate())) {\n        e = e.oPrev();\n\n        this._subdiv.delete(e.oNext());\n      }\n\n      var base = this._subdiv.makeEdge(e.orig(), v);\n\n      QuadEdge.splice(base, e);\n      var startEdge = base;\n\n      do {\n        base = this._subdiv.connect(e, base.sym());\n        e = base.oPrev();\n      } while (e.lNext() !== startEdge);\n\n      do {\n        var t = e.oPrev();\n\n        if (t.dest().rightOf(e) && v.isInCircle(e.orig(), t.dest(), e.dest())) {\n          QuadEdge.swap(e);\n          e = e.oPrev();\n        } else if (e.oNext() === startEdge) {\n          return base;\n        } else {\n          e = e.oNext().lPrev();\n        }\n      } while (true);\n    }\n\n    insertSites(vertices) {\n      for (var i = vertices.iterator(); i.hasNext();) {\n        var v = i.next();\n        this.insertSite(v);\n      }\n    }\n\n    getClass() {\n      return IncrementalDelaunayTriangulator;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  IncrementalDelaunayTriangulator.constructor_ = function () {\n    this._subdiv = null;\n    this._isUsingTolerance = false;\n    let subdiv = arguments[0];\n    this._subdiv = subdiv;\n    this._isUsingTolerance = subdiv.getTolerance() > 0.0;\n  };\n\n  class QuadEdgeLocator {\n    constructor() {\n      QuadEdgeLocator.constructor_.apply(this, arguments);\n    }\n\n    locate(v) {}\n\n    getClass() {\n      return QuadEdgeLocator;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  QuadEdgeLocator.constructor_ = function () {};\n\n  class LastFoundQuadEdgeLocator {\n    constructor() {\n      LastFoundQuadEdgeLocator.constructor_.apply(this, arguments);\n    }\n\n    init() {\n      this._lastEdge = this.findEdge();\n    }\n\n    locate(v) {\n      if (!this._lastEdge.isLive()) {\n        this.init();\n      }\n\n      var e = this._subdiv.locateFromEdge(v, this._lastEdge);\n\n      this._lastEdge = e;\n      return e;\n    }\n\n    findEdge() {\n      var edges = this._subdiv.getEdges();\n\n      return edges.iterator().next();\n    }\n\n    getClass() {\n      return LastFoundQuadEdgeLocator;\n    }\n\n    get interfaces_() {\n      return [QuadEdgeLocator];\n    }\n\n  }\n\n  LastFoundQuadEdgeLocator.constructor_ = function () {\n    this._subdiv = null;\n    this._lastEdge = null;\n    let subdiv = arguments[0];\n    this._subdiv = subdiv;\n    this.init();\n  };\n\n  class LocateFailureException extends RuntimeException {\n    constructor() {\n      super();\n      LocateFailureException.constructor_.apply(this, arguments);\n    }\n\n    static msgWithSpatial(msg, seg) {\n      if (seg !== null) return msg + \" [ \" + seg + \" ]\";\n      return msg;\n    }\n\n    getSegment() {\n      return this._seg;\n    }\n\n    getClass() {\n      return LocateFailureException;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  LocateFailureException.constructor_ = function () {\n    this._seg = null;\n\n    if (arguments.length === 1) {\n      if (typeof arguments[0] === \"string\") {\n        let msg = arguments[0];\n        RuntimeException.constructor_.call(this, msg);\n      } else if (arguments[0] instanceof LineSegment) {\n        let seg = arguments[0];\n        RuntimeException.constructor_.call(this, \"Locate failed to converge (at edge: \" + seg + \").  Possible causes include invalid Subdivision topology or very close sites\");\n        this._seg = new LineSegment(seg);\n      }\n    } else if (arguments.length === 2) {\n      let msg = arguments[0],\n          seg = arguments[1];\n      RuntimeException.constructor_.call(this, LocateFailureException.msgWithSpatial(msg, seg));\n      this._seg = new LineSegment(seg);\n    }\n  };\n\n  class TriangleVisitor {\n    constructor() {\n      TriangleVisitor.constructor_.apply(this, arguments);\n    }\n\n    visit(triEdges) {}\n\n    getClass() {\n      return TriangleVisitor;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  TriangleVisitor.constructor_ = function () {};\n\n  class QuadEdgeSubdivision {\n    constructor() {\n      QuadEdgeSubdivision.constructor_.apply(this, arguments);\n    }\n\n    static getTriangleEdges(startQE, triEdge) {\n      triEdge[0] = startQE;\n      triEdge[1] = triEdge[0].lNext();\n      triEdge[2] = triEdge[1].lNext();\n      if (triEdge[2].lNext() !== triEdge[0]) throw new IllegalArgumentException(\"Edges do not form a triangle\");\n    }\n\n    getTriangleVertices(includeFrame) {\n      var visitor = new TriangleVertexListVisitor();\n      this.visitTriangles(visitor, includeFrame);\n      return visitor.getTriangleVertices();\n    }\n\n    isFrameVertex(v) {\n      if (v.equals(this._frameVertex[0])) return true;\n      if (v.equals(this._frameVertex[1])) return true;\n      if (v.equals(this._frameVertex[2])) return true;\n      return false;\n    }\n\n    isVertexOfEdge(e, v) {\n      if (v.equals(e.orig(), this._tolerance) || v.equals(e.dest(), this._tolerance)) {\n        return true;\n      }\n\n      return false;\n    }\n\n    connect(a, b) {\n      var q = QuadEdge.connect(a, b);\n\n      this._quadEdges.add(q);\n\n      return q;\n    }\n\n    getVoronoiCellPolygon(qe, geomFact) {\n      var cellPts = new ArrayList();\n      var startQE = qe;\n\n      do {\n        var cc = qe.rot().orig().getCoordinate();\n        cellPts.add(cc);\n        qe = qe.oPrev();\n      } while (qe !== startQE);\n\n      var coordList = new CoordinateList();\n      coordList.addAll(cellPts, false);\n      coordList.closeRing();\n\n      if (coordList.size() < 4) {\n        System.out.println(coordList);\n        coordList.add(coordList.get(coordList.size() - 1), true);\n      }\n\n      var pts = coordList.toCoordinateArray();\n      var cellPoly = geomFact.createPolygon(geomFact.createLinearRing(pts));\n      var v = startQE.orig();\n      cellPoly.setUserData(v.getCoordinate());\n      return cellPoly;\n    }\n\n    setLocator(locator) {\n      this._locator = locator;\n    }\n\n    initSubdiv() {\n      var ea = this.makeEdge(this._frameVertex[0], this._frameVertex[1]);\n      var eb = this.makeEdge(this._frameVertex[1], this._frameVertex[2]);\n      QuadEdge.splice(ea.sym(), eb);\n      var ec = this.makeEdge(this._frameVertex[2], this._frameVertex[0]);\n      QuadEdge.splice(eb.sym(), ec);\n      QuadEdge.splice(ec.sym(), ea);\n      return ea;\n    }\n\n    isFrameBorderEdge(e) {\n      var leftTri = new Array(3).fill(null);\n      QuadEdgeSubdivision.getTriangleEdges(e, leftTri);\n      var rightTri = new Array(3).fill(null);\n      QuadEdgeSubdivision.getTriangleEdges(e.sym(), rightTri);\n      var vLeftTriOther = e.lNext().dest();\n      if (this.isFrameVertex(vLeftTriOther)) return true;\n      var vRightTriOther = e.sym().lNext().dest();\n      if (this.isFrameVertex(vRightTriOther)) return true;\n      return false;\n    }\n\n    makeEdge(o, d) {\n      var q = QuadEdge.makeEdge(o, d);\n\n      this._quadEdges.add(q);\n\n      return q;\n    }\n\n    visitTriangles(triVisitor, includeFrame) {\n      this._visitedKey++;\n      var edgeStack = new Stack();\n      edgeStack.push(this._startingEdge);\n      var visitedEdges = new HashSet();\n\n      while (!edgeStack.empty()) {\n        var edge = edgeStack.pop();\n\n        if (!visitedEdges.contains(edge)) {\n          var triEdges = this.fetchTriangleToVisit(edge, edgeStack, includeFrame, visitedEdges);\n          if (triEdges !== null) triVisitor.visit(triEdges);\n        }\n      }\n    }\n\n    isFrameEdge(e) {\n      if (this.isFrameVertex(e.orig()) || this.isFrameVertex(e.dest())) return true;\n      return false;\n    }\n\n    isOnEdge(e, p) {\n      this._seg.setCoordinates(e.orig().getCoordinate(), e.dest().getCoordinate());\n\n      var dist = this._seg.distance(p);\n\n      return dist < this._edgeCoincidenceTolerance;\n    }\n\n    getEnvelope() {\n      return new Envelope(this._frameEnv);\n    }\n\n    createFrame(env) {\n      var deltaX = env.getWidth();\n      var deltaY = env.getHeight();\n      var offset = 0.0;\n\n      if (deltaX > deltaY) {\n        offset = deltaX * 10.0;\n      } else {\n        offset = deltaY * 10.0;\n      }\n\n      this._frameVertex[0] = new Vertex((env.getMaxX() + env.getMinX()) / 2.0, env.getMaxY() + offset);\n      this._frameVertex[1] = new Vertex(env.getMinX() - offset, env.getMinY() - offset);\n      this._frameVertex[2] = new Vertex(env.getMaxX() + offset, env.getMinY() - offset);\n      this._frameEnv = new Envelope(this._frameVertex[0].getCoordinate(), this._frameVertex[1].getCoordinate());\n\n      this._frameEnv.expandToInclude(this._frameVertex[2].getCoordinate());\n    }\n\n    getTriangleCoordinates(includeFrame) {\n      var visitor = new TriangleCoordinatesVisitor();\n      this.visitTriangles(visitor, includeFrame);\n      return visitor.getTriangles();\n    }\n\n    getVertices(includeFrame) {\n      var vertices = new HashSet();\n\n      for (var i = this._quadEdges.iterator(); i.hasNext();) {\n        var qe = i.next();\n        var v = qe.orig();\n        if (includeFrame || !this.isFrameVertex(v)) vertices.add(v);\n        var vd = qe.dest();\n        if (includeFrame || !this.isFrameVertex(vd)) vertices.add(vd);\n      }\n\n      return vertices;\n    }\n\n    fetchTriangleToVisit(edge, edgeStack, includeFrame, visitedEdges) {\n      var curr = edge;\n      var edgeCount = 0;\n      var isFrame = false;\n\n      do {\n        this._triEdges[edgeCount] = curr;\n        if (this.isFrameEdge(curr)) isFrame = true;\n        var sym = curr.sym();\n        if (!visitedEdges.contains(sym)) edgeStack.push(sym);\n        visitedEdges.add(curr);\n        edgeCount++;\n        curr = curr.lNext();\n      } while (curr !== edge);\n\n      if (isFrame && !includeFrame) return null;\n      return this._triEdges;\n    }\n\n    getEdges() {\n      if (arguments.length === 0) {\n        return this._quadEdges;\n      } else if (arguments.length === 1) {\n        let geomFact = arguments[0];\n        var quadEdges = this.getPrimaryEdges(false);\n        var edges = new Array(quadEdges.size()).fill(null);\n        var i = 0;\n\n        for (var it = quadEdges.iterator(); it.hasNext();) {\n          var qe = it.next();\n          edges[i++] = geomFact.createLineString([qe.orig().getCoordinate(), qe.dest().getCoordinate()]);\n        }\n\n        return geomFact.createMultiLineString(edges);\n      }\n    }\n\n    getVertexUniqueEdges(includeFrame) {\n      var edges = new ArrayList();\n      var visitedVertices = new HashSet();\n\n      for (var i = this._quadEdges.iterator(); i.hasNext();) {\n        var qe = i.next();\n        var v = qe.orig();\n\n        if (!visitedVertices.contains(v)) {\n          visitedVertices.add(v);\n\n          if (includeFrame || !this.isFrameVertex(v)) {\n            edges.add(qe);\n          }\n        }\n\n        var qd = qe.sym();\n        var vd = qd.orig();\n\n        if (!visitedVertices.contains(vd)) {\n          visitedVertices.add(vd);\n\n          if (includeFrame || !this.isFrameVertex(vd)) {\n            edges.add(qd);\n          }\n        }\n      }\n\n      return edges;\n    }\n\n    getTriangleEdges(includeFrame) {\n      var visitor = new TriangleEdgesListVisitor();\n      this.visitTriangles(visitor, includeFrame);\n      return visitor.getTriangleEdges();\n    }\n\n    getPrimaryEdges(includeFrame) {\n      this._visitedKey++;\n      var edges = new ArrayList();\n      var edgeStack = new Stack();\n      edgeStack.push(this._startingEdge);\n      var visitedEdges = new HashSet();\n\n      while (!edgeStack.empty()) {\n        var edge = edgeStack.pop();\n\n        if (!visitedEdges.contains(edge)) {\n          var priQE = edge.getPrimary();\n          if (includeFrame || !this.isFrameEdge(priQE)) edges.add(priQE);\n          edgeStack.push(edge.oNext());\n          edgeStack.push(edge.sym().oNext());\n          visitedEdges.add(edge);\n          visitedEdges.add(edge.sym());\n        }\n      }\n\n      return edges;\n    }\n\n    delete(e) {\n      QuadEdge.splice(e, e.oPrev());\n      QuadEdge.splice(e.sym(), e.sym().oPrev());\n      var eSym = e.sym();\n      var eRot = e.rot();\n      var eRotSym = e.rot().sym();\n\n      this._quadEdges.remove(e);\n\n      this._quadEdges.remove(eSym);\n\n      this._quadEdges.remove(eRot);\n\n      this._quadEdges.remove(eRotSym);\n\n      e.delete();\n      eSym.delete();\n      eRot.delete();\n      eRotSym.delete();\n    }\n\n    locateFromEdge(v, startEdge) {\n      var iter = 0;\n\n      var maxIter = this._quadEdges.size();\n\n      var e = startEdge;\n\n      while (true) {\n        iter++;\n\n        if (iter > maxIter) {\n          throw new LocateFailureException(e.toLineSegment());\n        }\n\n        if (v.equals(e.orig()) || v.equals(e.dest())) {\n          break;\n        } else if (v.rightOf(e)) {\n          e = e.sym();\n        } else if (!v.rightOf(e.oNext())) {\n          e = e.oNext();\n        } else if (!v.rightOf(e.dPrev())) {\n          e = e.dPrev();\n        } else {\n          break;\n        }\n      }\n\n      return e;\n    }\n\n    getTolerance() {\n      return this._tolerance;\n    }\n\n    getVoronoiCellPolygons(geomFact) {\n      this.visitTriangles(new TriangleCircumcentreVisitor(), true);\n      var cells = new ArrayList();\n      var edges = this.getVertexUniqueEdges(false);\n\n      for (var i = edges.iterator(); i.hasNext();) {\n        var qe = i.next();\n        cells.add(this.getVoronoiCellPolygon(qe, geomFact));\n      }\n\n      return cells;\n    }\n\n    getVoronoiDiagram(geomFact) {\n      var vorCells = this.getVoronoiCellPolygons(geomFact);\n      return geomFact.createGeometryCollection(GeometryFactory.toGeometryArray(vorCells));\n    }\n\n    getTriangles(geomFact) {\n      var triPtsList = this.getTriangleCoordinates(false);\n      var tris = new Array(triPtsList.size()).fill(null);\n      var i = 0;\n\n      for (var it = triPtsList.iterator(); it.hasNext();) {\n        var triPt = it.next();\n        tris[i++] = geomFact.createPolygon(geomFact.createLinearRing(triPt));\n      }\n\n      return geomFact.createGeometryCollection(tris);\n    }\n\n    insertSite(v) {\n      var e = this.locate(v);\n\n      if (v.equals(e.orig(), this._tolerance) || v.equals(e.dest(), this._tolerance)) {\n        return e;\n      }\n\n      var base = this.makeEdge(e.orig(), v);\n      QuadEdge.splice(base, e);\n      var startEdge = base;\n\n      do {\n        base = this.connect(e, base.sym());\n        e = base.oPrev();\n      } while (e.lNext() !== startEdge);\n\n      return startEdge;\n    }\n\n    locate() {\n      if (arguments.length === 1) {\n        if (arguments[0] instanceof Vertex) {\n          let v = arguments[0];\n          return this._locator.locate(v);\n        } else if (arguments[0] instanceof Coordinate) {\n          let p = arguments[0];\n          return this._locator.locate(new Vertex(p));\n        }\n      } else if (arguments.length === 2) {\n        let p0 = arguments[0],\n            p1 = arguments[1];\n\n        var e = this._locator.locate(new Vertex(p0));\n\n        if (e === null) return null;\n        var base = e;\n        if (e.dest().getCoordinate().equals2D(p0)) base = e.sym();\n        var locEdge = base;\n\n        do {\n          if (locEdge.dest().getCoordinate().equals2D(p1)) return locEdge;\n          locEdge = locEdge.oNext();\n        } while (locEdge !== base);\n\n        return null;\n      }\n    }\n\n    getClass() {\n      return QuadEdgeSubdivision;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  class TriangleCircumcentreVisitor {\n    constructor() {\n      TriangleCircumcentreVisitor.constructor_.apply(this, arguments);\n    }\n\n    visit(triEdges) {\n      var a = triEdges[0].orig().getCoordinate();\n      var b = triEdges[1].orig().getCoordinate();\n      var c = triEdges[2].orig().getCoordinate();\n      var cc = Triangle.circumcentre(a, b, c);\n      var ccVertex = new Vertex(cc);\n\n      for (var i = 0; i < 3; i++) {\n        triEdges[i].rot().setOrig(ccVertex);\n      }\n    }\n\n    getClass() {\n      return TriangleCircumcentreVisitor;\n    }\n\n    get interfaces_() {\n      return [TriangleVisitor];\n    }\n\n  }\n\n  TriangleCircumcentreVisitor.constructor_ = function () {};\n\n  class TriangleEdgesListVisitor {\n    constructor() {\n      TriangleEdgesListVisitor.constructor_.apply(this, arguments);\n    }\n\n    getTriangleEdges() {\n      return this._triList;\n    }\n\n    visit(triEdges) {\n      this._triList.add(triEdges);\n    }\n\n    getClass() {\n      return TriangleEdgesListVisitor;\n    }\n\n    get interfaces_() {\n      return [TriangleVisitor];\n    }\n\n  }\n\n  TriangleEdgesListVisitor.constructor_ = function () {\n    this._triList = new ArrayList();\n  };\n\n  class TriangleVertexListVisitor {\n    constructor() {\n      TriangleVertexListVisitor.constructor_.apply(this, arguments);\n    }\n\n    visit(triEdges) {\n      this._triList.add([triEdges[0].orig(), triEdges[1].orig(), triEdges[2].orig()]);\n    }\n\n    getTriangleVertices() {\n      return this._triList;\n    }\n\n    getClass() {\n      return TriangleVertexListVisitor;\n    }\n\n    get interfaces_() {\n      return [TriangleVisitor];\n    }\n\n  }\n\n  TriangleVertexListVisitor.constructor_ = function () {\n    this._triList = new ArrayList();\n  };\n\n  class TriangleCoordinatesVisitor {\n    constructor() {\n      TriangleCoordinatesVisitor.constructor_.apply(this, arguments);\n    }\n\n    checkTriangleSize(pts) {\n      var loc = \"\";\n      if (pts.length >= 2) loc = WKTWriter.toLineString(pts[0], pts[1]);else {\n        if (pts.length >= 1) loc = WKTWriter.toPoint(pts[0]);\n      }\n    }\n\n    visit(triEdges) {\n      this._coordList.clear();\n\n      for (var i = 0; i < 3; i++) {\n        var v = triEdges[i].orig();\n\n        this._coordList.add(v.getCoordinate());\n      }\n\n      if (this._coordList.size() > 0) {\n        this._coordList.closeRing();\n\n        var pts = this._coordList.toCoordinateArray();\n\n        if (pts.length !== 4) {\n          return null;\n        }\n\n        this._triCoords.add(pts);\n      }\n    }\n\n    getTriangles() {\n      return this._triCoords;\n    }\n\n    getClass() {\n      return TriangleCoordinatesVisitor;\n    }\n\n    get interfaces_() {\n      return [TriangleVisitor];\n    }\n\n  }\n\n  TriangleCoordinatesVisitor.constructor_ = function () {\n    this._coordList = new CoordinateList();\n    this._triCoords = new ArrayList();\n  };\n\n  QuadEdgeSubdivision.TriangleCircumcentreVisitor = TriangleCircumcentreVisitor;\n  QuadEdgeSubdivision.TriangleEdgesListVisitor = TriangleEdgesListVisitor;\n  QuadEdgeSubdivision.TriangleVertexListVisitor = TriangleVertexListVisitor;\n  QuadEdgeSubdivision.TriangleCoordinatesVisitor = TriangleCoordinatesVisitor;\n\n  QuadEdgeSubdivision.constructor_ = function () {\n    this._visitedKey = 0;\n    this._quadEdges = new ArrayList();\n    this._startingEdge = null;\n    this._tolerance = null;\n    this._edgeCoincidenceTolerance = null;\n    this._frameVertex = new Array(3).fill(null);\n    this._frameEnv = null;\n    this._locator = null;\n    this._seg = new LineSegment();\n    this._triEdges = new Array(3).fill(null);\n    let env = arguments[0],\n        tolerance = arguments[1];\n    this._tolerance = tolerance;\n    this._edgeCoincidenceTolerance = tolerance / QuadEdgeSubdivision.EDGE_COINCIDENCE_TOL_FACTOR;\n    this.createFrame(env);\n    this._startingEdge = this.initSubdiv();\n    this._locator = new LastFoundQuadEdgeLocator(this);\n  };\n\n  QuadEdgeSubdivision.EDGE_COINCIDENCE_TOL_FACTOR = 1000;\n\n  class Segment {\n    constructor() {\n      Segment.constructor_.apply(this, arguments);\n    }\n\n    getLineSegment() {\n      return this._ls;\n    }\n\n    getEndZ() {\n      var p = this._ls.getCoordinate(1);\n\n      return p.z;\n    }\n\n    getStartZ() {\n      var p = this._ls.getCoordinate(0);\n\n      return p.z;\n    }\n\n    intersection(s) {\n      return this._ls.intersection(s.getLineSegment());\n    }\n\n    getStart() {\n      return this._ls.getCoordinate(0);\n    }\n\n    getEnd() {\n      return this._ls.getCoordinate(1);\n    }\n\n    getEndY() {\n      var p = this._ls.getCoordinate(1);\n\n      return p.y;\n    }\n\n    getStartX() {\n      var p = this._ls.getCoordinate(0);\n\n      return p.x;\n    }\n\n    equalsTopo(s) {\n      return this._ls.equalsTopo(s.getLineSegment());\n    }\n\n    getStartY() {\n      var p = this._ls.getCoordinate(0);\n\n      return p.y;\n    }\n\n    setData(data) {\n      this._data = data;\n    }\n\n    getData() {\n      return this._data;\n    }\n\n    getEndX() {\n      var p = this._ls.getCoordinate(1);\n\n      return p.x;\n    }\n\n    toString() {\n      return this._ls.toString();\n    }\n\n    getClass() {\n      return Segment;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  Segment.constructor_ = function () {\n    this._ls = null;\n    this._data = null;\n\n    if (arguments.length === 2) {\n      let p0 = arguments[0],\n          p1 = arguments[1];\n      this._ls = new LineSegment(p0, p1);\n    } else if (arguments.length === 3) {\n      let p0 = arguments[0],\n          p1 = arguments[1],\n          data = arguments[2];\n      this._ls = new LineSegment(p0, p1);\n      this._data = data;\n    } else if (arguments.length === 6) {\n      let x1 = arguments[0],\n          y1 = arguments[1],\n          z1 = arguments[2],\n          x2 = arguments[3],\n          y2 = arguments[4],\n          z2 = arguments[5];\n      Segment.constructor_.call(this, new Coordinate(x1, y1, z1), new Coordinate(x2, y2, z2));\n    } else if (arguments.length === 7) {\n      let x1 = arguments[0],\n          y1 = arguments[1],\n          z1 = arguments[2],\n          x2 = arguments[3],\n          y2 = arguments[4],\n          z2 = arguments[5],\n          data = arguments[6];\n      Segment.constructor_.call(this, new Coordinate(x1, y1, z1), new Coordinate(x2, y2, z2), data);\n    }\n  };\n\n  class ConformingDelaunayTriangulator {\n    constructor() {\n      ConformingDelaunayTriangulator.constructor_.apply(this, arguments);\n    }\n\n    static computeVertexEnvelope(vertices) {\n      var env = new Envelope();\n\n      for (var i = vertices.iterator(); i.hasNext();) {\n        var v = i.next();\n        env.expandToInclude(v.getCoordinate());\n      }\n\n      return env;\n    }\n\n    getInitialVertices() {\n      return this._initialVertices;\n    }\n\n    getKDT() {\n      return this._kdt;\n    }\n\n    enforceConstraints() {\n      this.addConstraintVertices();\n      var count = 0;\n      var splits = 0;\n\n      do {\n        splits = this.enforceGabriel(this._segments);\n        count++;\n      } while (splits > 0 && count < ConformingDelaunayTriangulator.MAX_SPLIT_ITER);\n    }\n\n    insertSites(vertices) {\n      for (var i = vertices.iterator(); i.hasNext();) {\n        var v = i.next();\n        this.insertSite(v);\n      }\n    }\n\n    getVertexFactory() {\n      return this._vertexFactory;\n    }\n\n    getPointArray() {\n      var pts = new Array(this._initialVertices.size() + this._segVertices.size()).fill(null);\n      var index = 0;\n\n      for (var i = this._initialVertices.iterator(); i.hasNext();) {\n        var v = i.next();\n        pts[index++] = v.getCoordinate();\n      }\n\n      for (var i2 = this._segVertices.iterator(); i2.hasNext();) {\n        var v = i2.next();\n        pts[index++] = v.getCoordinate();\n      }\n\n      return pts;\n    }\n\n    setConstraints(segments, segVertices) {\n      this._segments = segments;\n      this._segVertices = segVertices;\n    }\n\n    computeConvexHull() {\n      var fact = new GeometryFactory();\n      var coords = this.getPointArray();\n      var hull = new ConvexHull(coords, fact);\n      this._convexHull = hull.getConvexHull();\n    }\n\n    addConstraintVertices() {\n      this.computeConvexHull();\n      this.insertSites(this._segVertices);\n    }\n\n    findNonGabrielPoint(seg) {\n      var p = seg.getStart();\n      var q = seg.getEnd();\n      var midPt = new Coordinate((p.x + q.x) / 2.0, (p.y + q.y) / 2.0);\n      var segRadius = p.distance(midPt);\n      var env = new Envelope(midPt);\n      env.expandBy(segRadius);\n\n      var result = this._kdt.query(env);\n\n      var closestNonGabriel = null;\n      var minDist = Double.MAX_VALUE;\n\n      for (var i = result.iterator(); i.hasNext();) {\n        var nextNode = i.next();\n        var testPt = nextNode.getCoordinate();\n        if (testPt.equals2D(p) || testPt.equals2D(q)) continue;\n        var testRadius = midPt.distance(testPt);\n\n        if (testRadius < segRadius) {\n          var testDist = testRadius;\n\n          if (closestNonGabriel === null || testDist < minDist) {\n            closestNonGabriel = testPt;\n            minDist = testDist;\n          }\n        }\n      }\n\n      return closestNonGabriel;\n    }\n\n    getConstraintSegments() {\n      return this._segments;\n    }\n\n    setSplitPointFinder(splitFinder) {\n      this._splitFinder = splitFinder;\n    }\n\n    getConvexHull() {\n      return this._convexHull;\n    }\n\n    getTolerance() {\n      return this._tolerance;\n    }\n\n    enforceGabriel(segsToInsert) {\n      var newSegments = new ArrayList();\n      var splits = 0;\n      var segsToRemove = new ArrayList();\n\n      for (var i = segsToInsert.iterator(); i.hasNext();) {\n        var seg = i.next();\n        var encroachPt = this.findNonGabrielPoint(seg);\n        if (encroachPt === null) continue;\n        this._splitPt = this._splitFinder.findSplitPoint(seg, encroachPt);\n        var splitVertex = this.createVertex(this._splitPt, seg);\n        var insertedVertex = this.insertSite(splitVertex);\n\n        if (!insertedVertex.getCoordinate().equals2D(this._splitPt)) ;\n\n        var s1 = new Segment(seg.getStartX(), seg.getStartY(), seg.getStartZ(), splitVertex.getX(), splitVertex.getY(), splitVertex.getZ(), seg.getData());\n        var s2 = new Segment(splitVertex.getX(), splitVertex.getY(), splitVertex.getZ(), seg.getEndX(), seg.getEndY(), seg.getEndZ(), seg.getData());\n        newSegments.add(s1);\n        newSegments.add(s2);\n        segsToRemove.add(seg);\n        splits = splits + 1;\n      }\n\n      segsToInsert.removeAll(segsToRemove);\n      segsToInsert.addAll(newSegments);\n      return splits;\n    }\n\n    createVertex() {\n      if (arguments.length === 1) {\n        let p = arguments[0];\n        var v = null;\n        if (this._vertexFactory !== null) v = this._vertexFactory.createVertex(p, null);else v = new ConstraintVertex(p);\n        return v;\n      } else if (arguments.length === 2) {\n        let p = arguments[0],\n            seg = arguments[1];\n        var v = null;\n        if (this._vertexFactory !== null) v = this._vertexFactory.createVertex(p, seg);else v = new ConstraintVertex(p);\n        v.setOnConstraint(true);\n        return v;\n      }\n    }\n\n    getSubdivision() {\n      return this._subdiv;\n    }\n\n    computeBoundingBox() {\n      var vertexEnv = ConformingDelaunayTriangulator.computeVertexEnvelope(this._initialVertices);\n      var segEnv = ConformingDelaunayTriangulator.computeVertexEnvelope(this._segVertices);\n      var allPointsEnv = new Envelope(vertexEnv);\n      allPointsEnv.expandToInclude(segEnv);\n      var deltaX = allPointsEnv.getWidth() * 0.2;\n      var deltaY = allPointsEnv.getHeight() * 0.2;\n      var delta = Math.max(deltaX, deltaY);\n      this._computeAreaEnv = new Envelope(allPointsEnv);\n\n      this._computeAreaEnv.expandBy(delta);\n    }\n\n    setVertexFactory(vertexFactory) {\n      this._vertexFactory = vertexFactory;\n    }\n\n    formInitialDelaunay() {\n      this.computeBoundingBox();\n      this._subdiv = new QuadEdgeSubdivision(this._computeAreaEnv, this._tolerance);\n\n      this._subdiv.setLocator(new LastFoundQuadEdgeLocator(this._subdiv));\n\n      this._incDel = new IncrementalDelaunayTriangulator(this._subdiv);\n      this.insertSites(this._initialVertices);\n    }\n\n    insertSite() {\n      if (arguments[0] instanceof ConstraintVertex) {\n        let v = arguments[0];\n\n        var kdnode = this._kdt.insert(v.getCoordinate(), v);\n\n        if (!kdnode.isRepeated()) {\n          this._incDel.insertSite(v);\n        } else {\n          var snappedV = kdnode.getData();\n          snappedV.merge(v);\n          return snappedV;\n        }\n\n        return v;\n      } else if (arguments[0] instanceof Coordinate) {\n        let p = arguments[0];\n        this.insertSite(this.createVertex(p));\n      }\n    }\n\n    getClass() {\n      return ConformingDelaunayTriangulator;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  ConformingDelaunayTriangulator.constructor_ = function () {\n    this._initialVertices = null;\n    this._segVertices = null;\n    this._segments = new ArrayList();\n    this._subdiv = null;\n    this._incDel = null;\n    this._convexHull = null;\n    this._splitFinder = new NonEncroachingSplitPointFinder();\n    this._kdt = null;\n    this._vertexFactory = null;\n    this._computeAreaEnv = null;\n    this._splitPt = null;\n    this._tolerance = null;\n    let initialVertices = arguments[0],\n        tolerance = arguments[1];\n    this._initialVertices = new ArrayList(initialVertices);\n    this._tolerance = tolerance;\n    this._kdt = new KdTree(tolerance);\n  };\n\n  ConformingDelaunayTriangulator.MAX_SPLIT_ITER = 99;\n\n  class DelaunayTriangulationBuilder {\n    constructor() {\n      DelaunayTriangulationBuilder.constructor_.apply(this, arguments);\n    }\n\n    static extractUniqueCoordinates(geom) {\n      if (geom === null) return new CoordinateList();\n      var coords = geom.getCoordinates();\n      return DelaunayTriangulationBuilder.unique(coords);\n    }\n\n    static envelope(coords) {\n      var env = new Envelope();\n\n      for (var i = coords.iterator(); i.hasNext();) {\n        var coord = i.next();\n        env.expandToInclude(coord);\n      }\n\n      return env;\n    }\n\n    static unique(coords) {\n      var coordsCopy = CoordinateArrays.copyDeep(coords);\n      Arrays.sort(coordsCopy);\n      var coordList = new CoordinateList(coordsCopy, false);\n      return coordList;\n    }\n\n    static toVertices(coords) {\n      var verts = new ArrayList();\n\n      for (var i = coords.iterator(); i.hasNext();) {\n        var coord = i.next();\n        verts.add(new Vertex(coord));\n      }\n\n      return verts;\n    }\n\n    create() {\n      if (this._subdiv !== null) return null;\n      var siteEnv = DelaunayTriangulationBuilder.envelope(this._siteCoords);\n      var vertices = DelaunayTriangulationBuilder.toVertices(this._siteCoords);\n      this._subdiv = new QuadEdgeSubdivision(siteEnv, this._tolerance);\n      var triangulator = new IncrementalDelaunayTriangulator(this._subdiv);\n      triangulator.insertSites(vertices);\n    }\n\n    setTolerance(tolerance) {\n      this._tolerance = tolerance;\n    }\n\n    setSites() {\n      if (arguments[0] instanceof Geometry) {\n        let geom = arguments[0];\n        this._siteCoords = DelaunayTriangulationBuilder.extractUniqueCoordinates(geom);\n      } else if (hasInterface(arguments[0], Collection)) {\n        let coords = arguments[0];\n        this._siteCoords = DelaunayTriangulationBuilder.unique(CoordinateArrays.toCoordinateArray(coords));\n      }\n    }\n\n    getEdges(geomFact) {\n      this.create();\n      return this._subdiv.getEdges(geomFact);\n    }\n\n    getSubdivision() {\n      this.create();\n      return this._subdiv;\n    }\n\n    getTriangles(geomFact) {\n      this.create();\n      return this._subdiv.getTriangles(geomFact);\n    }\n\n    getClass() {\n      return DelaunayTriangulationBuilder;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  DelaunayTriangulationBuilder.constructor_ = function () {\n    this._siteCoords = null;\n    this._tolerance = 0.0;\n    this._subdiv = null;\n  };\n\n  class ConformingDelaunayTriangulationBuilder {\n    constructor() {\n      ConformingDelaunayTriangulationBuilder.constructor_.apply(this, arguments);\n    }\n\n    static createConstraintSegments() {\n      if (arguments.length === 1) {\n        let geom = arguments[0];\n        var lines = LinearComponentExtracter.getLines(geom);\n        var constraintSegs = new ArrayList();\n\n        for (var i = lines.iterator(); i.hasNext();) {\n          var line = i.next();\n          ConformingDelaunayTriangulationBuilder.createConstraintSegments(line, constraintSegs);\n        }\n\n        return constraintSegs;\n      } else if (arguments.length === 2) {\n        let line = arguments[0],\n            constraintSegs = arguments[1];\n        var coords = line.getCoordinates();\n\n        for (var i = 1; i < coords.length; i++) {\n          constraintSegs.add(new Segment(coords[i - 1], coords[i]));\n        }\n      }\n    }\n\n    createSiteVertices(coords) {\n      var verts = new ArrayList();\n\n      for (var i = coords.iterator(); i.hasNext();) {\n        var coord = i.next();\n        if (this._constraintVertexMap.containsKey(coord)) continue;\n        verts.add(new ConstraintVertex(coord));\n      }\n\n      return verts;\n    }\n\n    create() {\n      if (this._subdiv !== null) return null;\n      var siteEnv = DelaunayTriangulationBuilder.envelope(this._siteCoords);\n      var segments = new ArrayList();\n\n      if (this._constraintLines !== null) {\n        siteEnv.expandToInclude(this._constraintLines.getEnvelopeInternal());\n        this.createVertices(this._constraintLines);\n        segments = ConformingDelaunayTriangulationBuilder.createConstraintSegments(this._constraintLines);\n      }\n\n      var sites = this.createSiteVertices(this._siteCoords);\n      var cdt = new ConformingDelaunayTriangulator(sites, this._tolerance);\n      cdt.setConstraints(segments, new ArrayList(this._constraintVertexMap.values()));\n      cdt.formInitialDelaunay();\n      cdt.enforceConstraints();\n      this._subdiv = cdt.getSubdivision();\n    }\n\n    setTolerance(tolerance) {\n      this._tolerance = tolerance;\n    }\n\n    setConstraints(constraintLines) {\n      this._constraintLines = constraintLines;\n    }\n\n    setSites(geom) {\n      this._siteCoords = DelaunayTriangulationBuilder.extractUniqueCoordinates(geom);\n    }\n\n    getEdges(geomFact) {\n      this.create();\n      return this._subdiv.getEdges(geomFact);\n    }\n\n    getSubdivision() {\n      this.create();\n      return this._subdiv;\n    }\n\n    getTriangles(geomFact) {\n      this.create();\n      return this._subdiv.getTriangles(geomFact);\n    }\n\n    createVertices(geom) {\n      var coords = geom.getCoordinates();\n\n      for (var i = 0; i < coords.length; i++) {\n        var v = new ConstraintVertex(coords[i]);\n\n        this._constraintVertexMap.put(coords[i], v);\n      }\n    }\n\n    getClass() {\n      return ConformingDelaunayTriangulationBuilder;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  ConformingDelaunayTriangulationBuilder.constructor_ = function () {\n    this._siteCoords = null;\n    this._constraintLines = null;\n    this._tolerance = 0.0;\n    this._subdiv = null;\n    this._constraintVertexMap = new TreeMap();\n  };\n\n  class VoronoiDiagramBuilder {\n    constructor() {\n      VoronoiDiagramBuilder.constructor_.apply(this, arguments);\n    }\n\n    static clipGeometryCollection(geom, clipEnv) {\n      var clipPoly = geom.getFactory().toGeometry(clipEnv);\n      var clipped = new ArrayList();\n\n      for (var i = 0; i < geom.getNumGeometries(); i++) {\n        var g = geom.getGeometryN(i);\n        var result = null;\n        if (clipEnv.contains(g.getEnvelopeInternal())) result = g;else if (clipEnv.intersects(g.getEnvelopeInternal())) {\n          result = clipPoly.intersection(g);\n          result.setUserData(g.getUserData());\n        }\n\n        if (result !== null && !result.isEmpty()) {\n          clipped.add(result);\n        }\n      }\n\n      return geom.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(clipped));\n    }\n\n    create() {\n      if (this._subdiv !== null) return null;\n      var siteEnv = DelaunayTriangulationBuilder.envelope(this._siteCoords);\n      this._diagramEnv = siteEnv;\n      var expandBy = Math.max(this._diagramEnv.getWidth(), this._diagramEnv.getHeight());\n\n      this._diagramEnv.expandBy(expandBy);\n\n      if (this._clipEnv !== null) this._diagramEnv.expandToInclude(this._clipEnv);\n      var vertices = DelaunayTriangulationBuilder.toVertices(this._siteCoords);\n      this._subdiv = new QuadEdgeSubdivision(siteEnv, this._tolerance);\n      var triangulator = new IncrementalDelaunayTriangulator(this._subdiv);\n      triangulator.insertSites(vertices);\n    }\n\n    getDiagram(geomFact) {\n      this.create();\n\n      var polys = this._subdiv.getVoronoiDiagram(geomFact);\n\n      return VoronoiDiagramBuilder.clipGeometryCollection(polys, this._diagramEnv);\n    }\n\n    setTolerance(tolerance) {\n      this._tolerance = tolerance;\n    }\n\n    setSites() {\n      if (arguments[0] instanceof Geometry) {\n        let geom = arguments[0];\n        this._siteCoords = DelaunayTriangulationBuilder.extractUniqueCoordinates(geom);\n      } else if (hasInterface(arguments[0], Collection)) {\n        let coords = arguments[0];\n        this._siteCoords = DelaunayTriangulationBuilder.unique(CoordinateArrays.toCoordinateArray(coords));\n      }\n    }\n\n    setClipEnvelope(clipEnv) {\n      this._clipEnv = clipEnv;\n    }\n\n    getSubdivision() {\n      this.create();\n      return this._subdiv;\n    }\n\n    getClass() {\n      return VoronoiDiagramBuilder;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  VoronoiDiagramBuilder.constructor_ = function () {\n    this._siteCoords = null;\n    this._tolerance = 0.0;\n    this._subdiv = null;\n    this._clipEnv = null;\n    this._diagramEnv = null;\n  };\n\n\n\n  var quadedge = /*#__PURE__*/Object.freeze({\n    Vertex: Vertex\n  });\n\n\n\n  var triangulate = /*#__PURE__*/Object.freeze({\n    ConformingDelaunayTriangulationBuilder: ConformingDelaunayTriangulationBuilder,\n    DelaunayTriangulationBuilder: DelaunayTriangulationBuilder,\n    VoronoiDiagramBuilder: VoronoiDiagramBuilder,\n    quadedge: quadedge\n  });\n\n  class LinearLocation {\n    constructor() {\n      LinearLocation.constructor_.apply(this, arguments);\n    }\n\n    static getEndLocation(linear) {\n      var loc = new LinearLocation();\n      loc.setToEnd(linear);\n      return loc;\n    }\n\n    static pointAlongSegmentByFraction(p0, p1, frac) {\n      if (frac <= 0.0) return p0;\n      if (frac >= 1.0) return p1;\n      var x = (p1.x - p0.x) * frac + p0.x;\n      var y = (p1.y - p0.y) * frac + p0.y;\n      var z = (p1.z - p0.z) * frac + p0.z;\n      return new Coordinate(x, y, z);\n    }\n\n    static compareLocationValues(componentIndex0, segmentIndex0, segmentFraction0, componentIndex1, segmentIndex1, segmentFraction1) {\n      if (componentIndex0 < componentIndex1) return -1;\n      if (componentIndex0 > componentIndex1) return 1;\n      if (segmentIndex0 < segmentIndex1) return -1;\n      if (segmentIndex0 > segmentIndex1) return 1;\n      if (segmentFraction0 < segmentFraction1) return -1;\n      if (segmentFraction0 > segmentFraction1) return 1;\n      return 0;\n    }\n\n    getSegmentIndex() {\n      return this._segmentIndex;\n    }\n\n    getComponentIndex() {\n      return this._componentIndex;\n    }\n\n    isEndpoint(linearGeom) {\n      var lineComp = linearGeom.getGeometryN(this._componentIndex);\n      var nseg = lineComp.getNumPoints() - 1;\n      return this._segmentIndex >= nseg || this._segmentIndex === nseg && this._segmentFraction >= 1.0;\n    }\n\n    isValid(linearGeom) {\n      if (this._componentIndex < 0 || this._componentIndex >= linearGeom.getNumGeometries()) return false;\n      var lineComp = linearGeom.getGeometryN(this._componentIndex);\n      if (this._segmentIndex < 0 || this._segmentIndex > lineComp.getNumPoints()) return false;\n      if (this._segmentIndex === lineComp.getNumPoints() && this._segmentFraction !== 0.0) return false;\n      if (this._segmentFraction < 0.0 || this._segmentFraction > 1.0) return false;\n      return true;\n    }\n\n    normalize() {\n      if (this._segmentFraction < 0.0) {\n        this._segmentFraction = 0.0;\n      }\n\n      if (this._segmentFraction > 1.0) {\n        this._segmentFraction = 1.0;\n      }\n\n      if (this._componentIndex < 0) {\n        this._componentIndex = 0;\n        this._segmentIndex = 0;\n        this._segmentFraction = 0.0;\n      }\n\n      if (this._segmentIndex < 0) {\n        this._segmentIndex = 0;\n        this._segmentFraction = 0.0;\n      }\n\n      if (this._segmentFraction === 1.0) {\n        this._segmentFraction = 0.0;\n        this._segmentIndex += 1;\n      }\n    }\n\n    toLowest(linearGeom) {\n      var lineComp = linearGeom.getGeometryN(this._componentIndex);\n      var nseg = lineComp.getNumPoints() - 1;\n      if (this._segmentIndex < nseg) return this;\n      return new LinearLocation(this._componentIndex, nseg, 1.0, false);\n    }\n\n    getCoordinate(linearGeom) {\n      var lineComp = linearGeom.getGeometryN(this._componentIndex);\n      var p0 = lineComp.getCoordinateN(this._segmentIndex);\n      if (this._segmentIndex >= lineComp.getNumPoints() - 1) return p0;\n      var p1 = lineComp.getCoordinateN(this._segmentIndex + 1);\n      return LinearLocation.pointAlongSegmentByFraction(p0, p1, this._segmentFraction);\n    }\n\n    getSegmentFraction() {\n      return this._segmentFraction;\n    }\n\n    getSegment(linearGeom) {\n      var lineComp = linearGeom.getGeometryN(this._componentIndex);\n      var p0 = lineComp.getCoordinateN(this._segmentIndex);\n\n      if (this._segmentIndex >= lineComp.getNumPoints() - 1) {\n        var prev = lineComp.getCoordinateN(lineComp.getNumPoints() - 2);\n        return new LineSegment(prev, p0);\n      }\n\n      var p1 = lineComp.getCoordinateN(this._segmentIndex + 1);\n      return new LineSegment(p0, p1);\n    }\n\n    clamp(linear) {\n      if (this._componentIndex >= linear.getNumGeometries()) {\n        this.setToEnd(linear);\n        return null;\n      }\n\n      if (this._segmentIndex >= linear.getNumPoints()) {\n        var line = linear.getGeometryN(this._componentIndex);\n        this._segmentIndex = line.getNumPoints() - 1;\n        this._segmentFraction = 1.0;\n      }\n    }\n\n    setToEnd(linear) {\n      this._componentIndex = linear.getNumGeometries() - 1;\n      var lastLine = linear.getGeometryN(this._componentIndex);\n      this._segmentIndex = lastLine.getNumPoints() - 1;\n      this._segmentFraction = 1.0;\n    }\n\n    compareTo(o) {\n      var other = o;\n      if (this._componentIndex < other._componentIndex) return -1;\n      if (this._componentIndex > other._componentIndex) return 1;\n      if (this._segmentIndex < other._segmentIndex) return -1;\n      if (this._segmentIndex > other._segmentIndex) return 1;\n      if (this._segmentFraction < other._segmentFraction) return -1;\n      if (this._segmentFraction > other._segmentFraction) return 1;\n      return 0;\n    }\n\n    copy() {\n      return new LinearLocation(this._componentIndex, this._segmentIndex, this._segmentFraction);\n    }\n\n    toString() {\n      return \"LinearLoc[\" + this._componentIndex + \", \" + this._segmentIndex + \", \" + this._segmentFraction + \"]\";\n    }\n\n    isOnSameSegment(loc) {\n      if (this._componentIndex !== loc._componentIndex) return false;\n      if (this._segmentIndex === loc._segmentIndex) return true;\n      if (loc._segmentIndex - this._segmentIndex === 1 && loc._segmentFraction === 0.0) return true;\n      if (this._segmentIndex - loc._segmentIndex === 1 && this._segmentFraction === 0.0) return true;\n      return false;\n    }\n\n    snapToVertex(linearGeom, minDistance) {\n      if (this._segmentFraction <= 0.0 || this._segmentFraction >= 1.0) return null;\n      var segLen = this.getSegmentLength(linearGeom);\n      var lenToStart = this._segmentFraction * segLen;\n      var lenToEnd = segLen - lenToStart;\n\n      if (lenToStart <= lenToEnd && lenToStart < minDistance) {\n        this._segmentFraction = 0.0;\n      } else if (lenToEnd <= lenToStart && lenToEnd < minDistance) {\n        this._segmentFraction = 1.0;\n      }\n    }\n\n    compareLocationValues(componentIndex1, segmentIndex1, segmentFraction1) {\n      if (this._componentIndex < componentIndex1) return -1;\n      if (this._componentIndex > componentIndex1) return 1;\n      if (this._segmentIndex < segmentIndex1) return -1;\n      if (this._segmentIndex > segmentIndex1) return 1;\n      if (this._segmentFraction < segmentFraction1) return -1;\n      if (this._segmentFraction > segmentFraction1) return 1;\n      return 0;\n    }\n\n    getSegmentLength(linearGeom) {\n      var lineComp = linearGeom.getGeometryN(this._componentIndex);\n      var segIndex = this._segmentIndex;\n      if (this._segmentIndex >= lineComp.getNumPoints() - 1) segIndex = lineComp.getNumPoints() - 2;\n      var p0 = lineComp.getCoordinateN(segIndex);\n      var p1 = lineComp.getCoordinateN(segIndex + 1);\n      return p0.distance(p1);\n    }\n\n    isVertex() {\n      return this._segmentFraction <= 0.0 || this._segmentFraction >= 1.0;\n    }\n\n    getClass() {\n      return LinearLocation;\n    }\n\n    get interfaces_() {\n      return [Comparable];\n    }\n\n  }\n\n  LinearLocation.constructor_ = function () {\n    this._componentIndex = 0;\n    this._segmentIndex = 0;\n    this._segmentFraction = 0.0;\n\n    if (arguments.length === 0) ; else if (arguments.length === 1) {\n      let loc = arguments[0];\n      this._componentIndex = loc._componentIndex;\n      this._segmentIndex = loc._segmentIndex;\n      this._segmentFraction = loc._segmentFraction;\n    } else if (arguments.length === 2) {\n      let segmentIndex = arguments[0],\n          segmentFraction = arguments[1];\n      LinearLocation.constructor_.call(this, 0, segmentIndex, segmentFraction);\n    } else if (arguments.length === 3) {\n      let componentIndex = arguments[0],\n          segmentIndex = arguments[1],\n          segmentFraction = arguments[2];\n      this._componentIndex = componentIndex;\n      this._segmentIndex = segmentIndex;\n      this._segmentFraction = segmentFraction;\n      this.normalize();\n    } else if (arguments.length === 4) {\n      let componentIndex = arguments[0],\n          segmentIndex = arguments[1],\n          segmentFraction = arguments[2],\n          doNormalize = arguments[3];\n      this._componentIndex = componentIndex;\n      this._segmentIndex = segmentIndex;\n      this._segmentFraction = segmentFraction;\n      if (doNormalize) this.normalize();\n    }\n  };\n\n  class LinearIterator {\n    constructor() {\n      LinearIterator.constructor_.apply(this, arguments);\n    }\n\n    static segmentEndVertexIndex(loc) {\n      if (loc.getSegmentFraction() > 0.0) return loc.getSegmentIndex() + 1;\n      return loc.getSegmentIndex();\n    }\n\n    getComponentIndex() {\n      return this._componentIndex;\n    }\n\n    getLine() {\n      return this._currentLine;\n    }\n\n    getVertexIndex() {\n      return this._vertexIndex;\n    }\n\n    getSegmentEnd() {\n      if (this._vertexIndex < this.getLine().getNumPoints() - 1) return this._currentLine.getCoordinateN(this._vertexIndex + 1);\n      return null;\n    }\n\n    next() {\n      if (!this.hasNext()) return null;\n      this._vertexIndex++;\n\n      if (this._vertexIndex >= this._currentLine.getNumPoints()) {\n        this._componentIndex++;\n        this.loadCurrentLine();\n        this._vertexIndex = 0;\n      }\n    }\n\n    loadCurrentLine() {\n      if (this._componentIndex >= this._numLines) {\n        this._currentLine = null;\n        return null;\n      }\n\n      this._currentLine = this._linearGeom.getGeometryN(this._componentIndex);\n    }\n\n    getSegmentStart() {\n      return this._currentLine.getCoordinateN(this._vertexIndex);\n    }\n\n    isEndOfLine() {\n      if (this._componentIndex >= this._numLines) return false;\n      if (this._vertexIndex < this._currentLine.getNumPoints() - 1) return false;\n      return true;\n    }\n\n    hasNext() {\n      if (this._componentIndex >= this._numLines) return false;\n      if (this._componentIndex === this._numLines - 1 && this._vertexIndex >= this._currentLine.getNumPoints()) return false;\n      return true;\n    }\n\n    getClass() {\n      return LinearIterator;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  LinearIterator.constructor_ = function () {\n    this._linearGeom = null;\n    this._numLines = null;\n    this._currentLine = null;\n    this._componentIndex = 0;\n    this._vertexIndex = 0;\n\n    if (arguments.length === 1) {\n      let linear = arguments[0];\n      LinearIterator.constructor_.call(this, linear, 0, 0);\n    } else if (arguments.length === 2) {\n      let linear = arguments[0],\n          start = arguments[1];\n      LinearIterator.constructor_.call(this, linear, start.getComponentIndex(), LinearIterator.segmentEndVertexIndex(start));\n    } else if (arguments.length === 3) {\n      let linearGeom = arguments[0],\n          componentIndex = arguments[1],\n          vertexIndex = arguments[2];\n      if (!hasInterface(linearGeom, Lineal)) throw new IllegalArgumentException(\"Lineal geometry is required\");\n      this._linearGeom = linearGeom;\n      this._numLines = linearGeom.getNumGeometries();\n      this._componentIndex = componentIndex;\n      this._vertexIndex = vertexIndex;\n      this.loadCurrentLine();\n    }\n  };\n\n  class LocationIndexOfPoint {\n    constructor() {\n      LocationIndexOfPoint.constructor_.apply(this, arguments);\n    }\n\n    static indexOf(linearGeom, inputPt) {\n      var locater = new LocationIndexOfPoint(linearGeom);\n      return locater.indexOf(inputPt);\n    }\n\n    static indexOfAfter(linearGeom, inputPt, minIndex) {\n      var locater = new LocationIndexOfPoint(linearGeom);\n      return locater.indexOfAfter(inputPt, minIndex);\n    }\n\n    indexOf(inputPt) {\n      return this.indexOfFromStart(inputPt, null);\n    }\n\n    indexOfFromStart(inputPt, minIndex) {\n      var minDistance = Double.MAX_VALUE;\n      var minComponentIndex = 0;\n      var minSegmentIndex = 0;\n      var minFrac = -1.0;\n      var seg = new LineSegment();\n\n      for (var it = new LinearIterator(this._linearGeom); it.hasNext(); it.next()) {\n        if (!it.isEndOfLine()) {\n          seg.p0 = it.getSegmentStart();\n          seg.p1 = it.getSegmentEnd();\n          var segDistance = seg.distance(inputPt);\n          var segFrac = seg.segmentFraction(inputPt);\n          var candidateComponentIndex = it.getComponentIndex();\n          var candidateSegmentIndex = it.getVertexIndex();\n\n          if (segDistance < minDistance) {\n            if (minIndex === null || minIndex.compareLocationValues(candidateComponentIndex, candidateSegmentIndex, segFrac) < 0) {\n              minComponentIndex = candidateComponentIndex;\n              minSegmentIndex = candidateSegmentIndex;\n              minFrac = segFrac;\n              minDistance = segDistance;\n            }\n          }\n        }\n      }\n\n      if (minDistance === Double.MAX_VALUE) {\n        return new LinearLocation(minIndex);\n      }\n\n      var loc = new LinearLocation(minComponentIndex, minSegmentIndex, minFrac);\n      return loc;\n    }\n\n    indexOfAfter(inputPt, minIndex) {\n      if (minIndex === null) return this.indexOf(inputPt);\n      var endLoc = LinearLocation.getEndLocation(this._linearGeom);\n      if (endLoc.compareTo(minIndex) <= 0) return endLoc;\n      var closestAfter = this.indexOfFromStart(inputPt, minIndex);\n      Assert.isTrue(closestAfter.compareTo(minIndex) >= 0, \"computed location is before specified minimum location\");\n      return closestAfter;\n    }\n\n    getClass() {\n      return LocationIndexOfPoint;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  LocationIndexOfPoint.constructor_ = function () {\n    this._linearGeom = null;\n    let linearGeom = arguments[0];\n    this._linearGeom = linearGeom;\n  };\n\n  class LocationIndexOfLine {\n    constructor() {\n      LocationIndexOfLine.constructor_.apply(this, arguments);\n    }\n\n    static indicesOf(linearGeom, subLine) {\n      var locater = new LocationIndexOfLine(linearGeom);\n      return locater.indicesOf(subLine);\n    }\n\n    indicesOf(subLine) {\n      var startPt = subLine.getGeometryN(0).getCoordinateN(0);\n      var lastLine = subLine.getGeometryN(subLine.getNumGeometries() - 1);\n      var endPt = lastLine.getCoordinateN(lastLine.getNumPoints() - 1);\n      var locPt = new LocationIndexOfPoint(this._linearGeom);\n      var subLineLoc = new Array(2).fill(null);\n      subLineLoc[0] = locPt.indexOf(startPt);\n\n      if (subLine.getLength() === 0.0) {\n        subLineLoc[1] = subLineLoc[0].copy();\n      } else {\n        subLineLoc[1] = locPt.indexOfAfter(endPt, subLineLoc[0]);\n      }\n\n      return subLineLoc;\n    }\n\n    getClass() {\n      return LocationIndexOfLine;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  LocationIndexOfLine.constructor_ = function () {\n    this._linearGeom = null;\n    let linearGeom = arguments[0];\n    this._linearGeom = linearGeom;\n  };\n\n  class LinearGeometryBuilder {\n    constructor() {\n      LinearGeometryBuilder.constructor_.apply(this, arguments);\n    }\n\n    getGeometry() {\n      this.endLine();\n      return this._geomFact.buildGeometry(this._lines);\n    }\n\n    getLastCoordinate() {\n      return this._lastPt;\n    }\n\n    endLine() {\n      if (this._coordList === null) {\n        return null;\n      }\n\n      if (this._ignoreInvalidLines && this._coordList.size() < 2) {\n        this._coordList = null;\n        return null;\n      }\n\n      var rawPts = this._coordList.toCoordinateArray();\n\n      var pts = rawPts;\n      if (this._fixInvalidLines) pts = this.validCoordinateSequence(rawPts);\n      this._coordList = null;\n      var line = null;\n\n      try {\n        line = this._geomFact.createLineString(pts);\n      } catch (ex) {\n        if (ex instanceof IllegalArgumentException) {\n          if (!this._ignoreInvalidLines) throw ex;\n        } else throw ex;\n      } finally {}\n\n      if (line !== null) this._lines.add(line);\n    }\n\n    setFixInvalidLines(fixInvalidLines) {\n      this._fixInvalidLines = fixInvalidLines;\n    }\n\n    add() {\n      if (arguments.length === 1) {\n        let pt = arguments[0];\n        this.add(pt, true);\n      } else if (arguments.length === 2) {\n        let pt = arguments[0],\n            allowRepeatedPoints = arguments[1];\n        if (this._coordList === null) this._coordList = new CoordinateList();\n\n        this._coordList.add(pt, allowRepeatedPoints);\n\n        this._lastPt = pt;\n      }\n    }\n\n    setIgnoreInvalidLines(ignoreInvalidLines) {\n      this._ignoreInvalidLines = ignoreInvalidLines;\n    }\n\n    validCoordinateSequence(pts) {\n      if (pts.length >= 2) return pts;\n      var validPts = [pts[0], pts[0]];\n      return validPts;\n    }\n\n    getClass() {\n      return LinearGeometryBuilder;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  LinearGeometryBuilder.constructor_ = function () {\n    this._geomFact = null;\n    this._lines = new ArrayList();\n    this._coordList = null;\n    this._ignoreInvalidLines = false;\n    this._fixInvalidLines = false;\n    this._lastPt = null;\n    let geomFact = arguments[0];\n    this._geomFact = geomFact;\n  };\n\n  class ExtractLineByLocation {\n    constructor() {\n      ExtractLineByLocation.constructor_.apply(this, arguments);\n    }\n\n    static extract(line, start, end) {\n      var ls = new ExtractLineByLocation(line);\n      return ls.extract(start, end);\n    }\n\n    computeLinear(start, end) {\n      var builder = new LinearGeometryBuilder(this._line.getFactory());\n      builder.setFixInvalidLines(true);\n      if (!start.isVertex()) builder.add(start.getCoordinate(this._line));\n\n      for (var it = new LinearIterator(this._line, start); it.hasNext(); it.next()) {\n        if (end.compareLocationValues(it.getComponentIndex(), it.getVertexIndex(), 0.0) < 0) break;\n        var pt = it.getSegmentStart();\n        builder.add(pt);\n        if (it.isEndOfLine()) builder.endLine();\n      }\n\n      if (!end.isVertex()) builder.add(end.getCoordinate(this._line));\n      return builder.getGeometry();\n    }\n\n    computeLine(start, end) {\n      var coordinates = this._line.getCoordinates();\n\n      var newCoordinates = new CoordinateList();\n      var startSegmentIndex = start.getSegmentIndex();\n      if (start.getSegmentFraction() > 0.0) startSegmentIndex += 1;\n      var lastSegmentIndex = end.getSegmentIndex();\n      if (end.getSegmentFraction() === 1.0) lastSegmentIndex += 1;\n      if (lastSegmentIndex >= coordinates.length) lastSegmentIndex = coordinates.length - 1;\n      if (!start.isVertex()) newCoordinates.add(start.getCoordinate(this._line));\n\n      for (var i = startSegmentIndex; i <= lastSegmentIndex; i++) {\n        newCoordinates.add(coordinates[i]);\n      }\n\n      if (!end.isVertex()) newCoordinates.add(end.getCoordinate(this._line));\n      if (newCoordinates.size() <= 0) newCoordinates.add(start.getCoordinate(this._line));\n      var newCoordinateArray = newCoordinates.toCoordinateArray();\n\n      if (newCoordinateArray.length <= 1) {\n        newCoordinateArray = [newCoordinateArray[0], newCoordinateArray[0]];\n      }\n\n      return this._line.getFactory().createLineString(newCoordinateArray);\n    }\n\n    extract(start, end) {\n      if (end.compareTo(start) < 0) {\n        return this.reverse(this.computeLinear(end, start));\n      }\n\n      return this.computeLinear(start, end);\n    }\n\n    reverse(linear) {\n      if (linear instanceof LineString) return linear.reverse();\n      if (linear instanceof MultiLineString) return linear.reverse();\n      Assert.shouldNeverReachHere(\"non-linear geometry encountered\");\n      return null;\n    }\n\n    getClass() {\n      return ExtractLineByLocation;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  ExtractLineByLocation.constructor_ = function () {\n    this._line = null;\n    let line = arguments[0];\n    this._line = line;\n  };\n\n  class LocationIndexedLine {\n    constructor() {\n      LocationIndexedLine.constructor_.apply(this, arguments);\n    }\n\n    clampIndex(index) {\n      var loc = index.copy();\n      loc.clamp(this._linearGeom);\n      return loc;\n    }\n\n    project(pt) {\n      return LocationIndexOfPoint.indexOf(this._linearGeom, pt);\n    }\n\n    checkGeometryType() {\n      if (!(this._linearGeom instanceof LineString || this._linearGeom instanceof MultiLineString)) throw new IllegalArgumentException(\"Input geometry must be linear\");\n    }\n\n    extractPoint() {\n      if (arguments.length === 1) {\n        let index = arguments[0];\n        return index.getCoordinate(this._linearGeom);\n      } else if (arguments.length === 2) {\n        let index = arguments[0],\n            offsetDistance = arguments[1];\n        var indexLow = index.toLowest(this._linearGeom);\n        return indexLow.getSegment(this._linearGeom).pointAlongOffset(indexLow.getSegmentFraction(), offsetDistance);\n      }\n    }\n\n    isValidIndex(index) {\n      return index.isValid(this._linearGeom);\n    }\n\n    getEndIndex() {\n      return LinearLocation.getEndLocation(this._linearGeom);\n    }\n\n    getStartIndex() {\n      return new LinearLocation();\n    }\n\n    indexOfAfter(pt, minIndex) {\n      return LocationIndexOfPoint.indexOfAfter(this._linearGeom, pt, minIndex);\n    }\n\n    extractLine(startIndex, endIndex) {\n      return ExtractLineByLocation.extract(this._linearGeom, startIndex, endIndex);\n    }\n\n    indexOf(pt) {\n      return LocationIndexOfPoint.indexOf(this._linearGeom, pt);\n    }\n\n    indicesOf(subLine) {\n      return LocationIndexOfLine.indicesOf(this._linearGeom, subLine);\n    }\n\n    getClass() {\n      return LocationIndexedLine;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  LocationIndexedLine.constructor_ = function () {\n    this._linearGeom = null;\n    let linearGeom = arguments[0];\n    this._linearGeom = linearGeom;\n    this.checkGeometryType();\n  };\n\n  class LengthIndexOfPoint {\n    constructor() {\n      LengthIndexOfPoint.constructor_.apply(this, arguments);\n    }\n\n    static indexOf(linearGeom, inputPt) {\n      var locater = new LengthIndexOfPoint(linearGeom);\n      return locater.indexOf(inputPt);\n    }\n\n    static indexOfAfter(linearGeom, inputPt, minIndex) {\n      var locater = new LengthIndexOfPoint(linearGeom);\n      return locater.indexOfAfter(inputPt, minIndex);\n    }\n\n    indexOf(inputPt) {\n      return this.indexOfFromStart(inputPt, -1.0);\n    }\n\n    indexOfFromStart(inputPt, minIndex) {\n      var minDistance = Double.MAX_VALUE;\n      var ptMeasure = minIndex;\n      var segmentStartMeasure = 0.0;\n      var seg = new LineSegment();\n      var it = new LinearIterator(this._linearGeom);\n\n      while (it.hasNext()) {\n        if (!it.isEndOfLine()) {\n          seg.p0 = it.getSegmentStart();\n          seg.p1 = it.getSegmentEnd();\n          var segDistance = seg.distance(inputPt);\n          var segMeasureToPt = this.segmentNearestMeasure(seg, inputPt, segmentStartMeasure);\n\n          if (segDistance < minDistance && segMeasureToPt > minIndex) {\n            ptMeasure = segMeasureToPt;\n            minDistance = segDistance;\n          }\n\n          segmentStartMeasure += seg.getLength();\n        }\n\n        it.next();\n      }\n\n      return ptMeasure;\n    }\n\n    indexOfAfter(inputPt, minIndex) {\n      if (minIndex < 0.0) return this.indexOf(inputPt);\n\n      var endIndex = this._linearGeom.getLength();\n\n      if (endIndex < minIndex) return endIndex;\n      var closestAfter = this.indexOfFromStart(inputPt, minIndex);\n      Assert.isTrue(closestAfter >= minIndex, \"computed index is before specified minimum index\");\n      return closestAfter;\n    }\n\n    segmentNearestMeasure(seg, inputPt, segmentStartMeasure) {\n      var projFactor = seg.projectionFactor(inputPt);\n      if (projFactor <= 0.0) return segmentStartMeasure;\n      if (projFactor <= 1.0) return segmentStartMeasure + projFactor * seg.getLength();\n      return segmentStartMeasure + seg.getLength();\n    }\n\n    getClass() {\n      return LengthIndexOfPoint;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  LengthIndexOfPoint.constructor_ = function () {\n    this._linearGeom = null;\n    let linearGeom = arguments[0];\n    this._linearGeom = linearGeom;\n  };\n\n  class LengthLocationMap {\n    constructor() {\n      LengthLocationMap.constructor_.apply(this, arguments);\n    }\n\n    static getLength(linearGeom, loc) {\n      var locater = new LengthLocationMap(linearGeom);\n      return locater.getLength(loc);\n    }\n\n    static getLocation() {\n      if (arguments.length === 2) {\n        let linearGeom = arguments[0],\n            length = arguments[1];\n        var locater = new LengthLocationMap(linearGeom);\n        return locater.getLocation(length);\n      } else if (arguments.length === 3) {\n        let linearGeom = arguments[0],\n            length = arguments[1],\n            resolveLower = arguments[2];\n        var locater = new LengthLocationMap(linearGeom);\n        return locater.getLocation(length, resolveLower);\n      }\n    }\n\n    getLength(loc) {\n      var totalLength = 0.0;\n      var it = new LinearIterator(this._linearGeom);\n\n      while (it.hasNext()) {\n        if (!it.isEndOfLine()) {\n          var p0 = it.getSegmentStart();\n          var p1 = it.getSegmentEnd();\n          var segLen = p1.distance(p0);\n\n          if (loc.getComponentIndex() === it.getComponentIndex() && loc.getSegmentIndex() === it.getVertexIndex()) {\n            return totalLength + segLen * loc.getSegmentFraction();\n          }\n\n          totalLength += segLen;\n        }\n\n        it.next();\n      }\n\n      return totalLength;\n    }\n\n    resolveHigher(loc) {\n      if (!loc.isEndpoint(this._linearGeom)) return loc;\n      var compIndex = loc.getComponentIndex();\n      if (compIndex >= this._linearGeom.getNumGeometries() - 1) return loc;\n\n      do {\n        compIndex++;\n      } while (compIndex < this._linearGeom.getNumGeometries() - 1 && this._linearGeom.getGeometryN(compIndex).getLength() === 0);\n\n      return new LinearLocation(compIndex, 0, 0.0);\n    }\n\n    getLocation() {\n      if (arguments.length === 1) {\n        let length = arguments[0];\n        return this.getLocation(length, true);\n      } else if (arguments.length === 2) {\n        let length = arguments[0],\n            resolveLower = arguments[1];\n        var forwardLength = length;\n\n        if (length < 0.0) {\n          var lineLen = this._linearGeom.getLength();\n\n          forwardLength = lineLen + length;\n        }\n\n        var loc = this.getLocationForward(forwardLength);\n\n        if (resolveLower) {\n          return loc;\n        }\n\n        return this.resolveHigher(loc);\n      }\n    }\n\n    getLocationForward(length) {\n      if (length <= 0.0) return new LinearLocation();\n      var totalLength = 0.0;\n      var it = new LinearIterator(this._linearGeom);\n\n      while (it.hasNext()) {\n        if (it.isEndOfLine()) {\n          if (totalLength === length) {\n            var compIndex = it.getComponentIndex();\n            var segIndex = it.getVertexIndex();\n            return new LinearLocation(compIndex, segIndex, 0.0);\n          }\n        } else {\n          var p0 = it.getSegmentStart();\n          var p1 = it.getSegmentEnd();\n          var segLen = p1.distance(p0);\n\n          if (totalLength + segLen > length) {\n            var frac = (length - totalLength) / segLen;\n            var compIndex = it.getComponentIndex();\n            var segIndex = it.getVertexIndex();\n            return new LinearLocation(compIndex, segIndex, frac);\n          }\n\n          totalLength += segLen;\n        }\n\n        it.next();\n      }\n\n      return LinearLocation.getEndLocation(this._linearGeom);\n    }\n\n    getClass() {\n      return LengthLocationMap;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  LengthLocationMap.constructor_ = function () {\n    this._linearGeom = null;\n    let linearGeom = arguments[0];\n    this._linearGeom = linearGeom;\n  };\n\n  class LengthIndexedLine {\n    constructor() {\n      LengthIndexedLine.constructor_.apply(this, arguments);\n    }\n\n    clampIndex(index) {\n      var posIndex = this.positiveIndex(index);\n      var startIndex = this.getStartIndex();\n      if (posIndex < startIndex) return startIndex;\n      var endIndex = this.getEndIndex();\n      if (posIndex > endIndex) return endIndex;\n      return posIndex;\n    }\n\n    locationOf() {\n      if (arguments.length === 1) {\n        let index = arguments[0];\n        return LengthLocationMap.getLocation(this._linearGeom, index);\n      } else if (arguments.length === 2) {\n        let index = arguments[0],\n            resolveLower = arguments[1];\n        return LengthLocationMap.getLocation(this._linearGeom, index, resolveLower);\n      }\n    }\n\n    project(pt) {\n      return LengthIndexOfPoint.indexOf(this._linearGeom, pt);\n    }\n\n    positiveIndex(index) {\n      if (index >= 0.0) return index;\n      return this._linearGeom.getLength() + index;\n    }\n\n    extractPoint() {\n      if (arguments.length === 1) {\n        let index = arguments[0];\n        var loc = LengthLocationMap.getLocation(this._linearGeom, index);\n        return loc.getCoordinate(this._linearGeom);\n      } else if (arguments.length === 2) {\n        let index = arguments[0],\n            offsetDistance = arguments[1];\n        var loc = LengthLocationMap.getLocation(this._linearGeom, index);\n        var locLow = loc.toLowest(this._linearGeom);\n        return locLow.getSegment(this._linearGeom).pointAlongOffset(locLow.getSegmentFraction(), offsetDistance);\n      }\n    }\n\n    isValidIndex(index) {\n      return index >= this.getStartIndex() && index <= this.getEndIndex();\n    }\n\n    getEndIndex() {\n      return this._linearGeom.getLength();\n    }\n\n    getStartIndex() {\n      return 0.0;\n    }\n\n    indexOfAfter(pt, minIndex) {\n      return LengthIndexOfPoint.indexOfAfter(this._linearGeom, pt, minIndex);\n    }\n\n    extractLine(startIndex, endIndex) {\n      var lil = new LocationIndexedLine(this._linearGeom);\n      var startIndex2 = this.clampIndex(startIndex);\n      var endIndex2 = this.clampIndex(endIndex);\n      var resolveStartLower = startIndex2 === endIndex2;\n      var startLoc = this.locationOf(startIndex2, resolveStartLower);\n      var endLoc = this.locationOf(endIndex2);\n      return ExtractLineByLocation.extract(this._linearGeom, startLoc, endLoc);\n    }\n\n    indexOf(pt) {\n      return LengthIndexOfPoint.indexOf(this._linearGeom, pt);\n    }\n\n    indicesOf(subLine) {\n      var locIndex = LocationIndexOfLine.indicesOf(this._linearGeom, subLine);\n      var index = [LengthLocationMap.getLength(this._linearGeom, locIndex[0]), LengthLocationMap.getLength(this._linearGeom, locIndex[1])];\n      return index;\n    }\n\n    getClass() {\n      return LengthIndexedLine;\n    }\n\n    get interfaces_() {\n      return [];\n    }\n\n  }\n\n  LengthIndexedLine.constructor_ = function () {\n    this._linearGeom = null;\n    let linearGeom = arguments[0];\n    this._linearGeom = linearGeom;\n  };\n\n\n\n  var linearref = /*#__PURE__*/Object.freeze({\n    LengthIndexedLine: LengthIndexedLine,\n    LengthLocationMap: LengthLocationMap,\n    LinearGeometryBuilder: LinearGeometryBuilder,\n    LinearIterator: LinearIterator,\n    LinearLocation: LinearLocation,\n    LocationIndexedLine: LocationIndexedLine\n  });\n\n  class UnionOp {\n    get interfaces_() {\n      return [];\n    }\n\n    getClass() {\n      return UnionOp;\n    }\n\n    static union(g, other) {\n      if (g.isEmpty() || other.isEmpty()) {\n        if (g.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.UNION, g, other, g.getFactory());\n        if (g.isEmpty()) return other.copy();\n        if (other.isEmpty()) return g.copy();\n      }\n\n      g.checkNotGeometryCollection(g);\n      g.checkNotGeometryCollection(other);\n      return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.UNION);\n    }\n\n  }\n\n  Geometry.prototype.equalsTopo = function (g) {\n    if (!this.getEnvelopeInternal().equals(g.getEnvelopeInternal())) return false;\n    return RelateOp.relate(this, g).isEquals(this.getDimension(), g.getDimension());\n  };\n\n  Geometry.prototype.union = function () {\n    if (arguments.length === 0) {\n      return UnaryUnionOp.union(this);\n    } else if (arguments.length === 1) {\n      let other = arguments[0];\n      return UnionOp.union(this, other);\n    }\n  };\n\n  Geometry.prototype.isValid = function () {\n    return IsValidOp.isValid(this);\n  };\n\n  Geometry.prototype.intersection = function (other) {\n    return OverlayOp.intersection(this, other);\n  };\n\n  Geometry.prototype.covers = function (g) {\n    return RelateOp.covers(this, g);\n  };\n\n  Geometry.prototype.coveredBy = function (g) {\n    return RelateOp.covers(g, this);\n  };\n\n  Geometry.prototype.touches = function (g) {\n    return RelateOp.touches(this, g);\n  };\n\n  Geometry.prototype.intersects = function (g) {\n    return RelateOp.intersects(this, g);\n  };\n\n  Geometry.prototype.within = function (g) {\n    return RelateOp.contains(g, this);\n  };\n\n  Geometry.prototype.overlaps = function (g) {\n    return RelateOp.overlaps(this, g);\n  };\n\n  Geometry.prototype.disjoint = function (g) {\n    return RelateOp.disjoint(this, g);\n  };\n\n  Geometry.prototype.crosses = function (g) {\n    return RelateOp.crosses(this, g);\n  };\n\n  Geometry.prototype.buffer = function () {\n    if (arguments.length === 1) {\n      let distance = arguments[0];\n      return BufferOp.bufferOp(this, distance);\n    } else if (arguments.length === 2) {\n      let distance = arguments[0],\n          quadrantSegments = arguments[1];\n      return BufferOp.bufferOp(this, distance, quadrantSegments);\n    } else if (arguments.length === 3) {\n      let distance = arguments[0],\n          quadrantSegments = arguments[1],\n          endCapStyle = arguments[2];\n      return BufferOp.bufferOp(this, distance, quadrantSegments, endCapStyle);\n    }\n  };\n\n  Geometry.prototype.convexHull = function () {\n    return new ConvexHull(this).getConvexHull();\n  };\n\n  Geometry.prototype.relate = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (arguments.length === 1) {\n      let geometry = arguments[0];\n      return RelateOp.relate(this, geometry);\n    } else if (arguments.length === 2) {\n      let geometry = arguments[0],\n          intersectionPattern = arguments[1];\n      return RelateOp.relate(this, geometry).matches(intersectionPattern);\n    }\n  };\n\n  Geometry.prototype.getCentroid = function () {\n    if (this.isEmpty()) return this._factory.createPoint();\n    var centPt = Centroid.getCentroid(this);\n    return this.createPointFromInternalCoord(centPt, this);\n  };\n\n  Geometry.prototype.getInteriorPoint = function () {\n    if (this.isEmpty()) return this._factory.createPoint();\n    var interiorPt = null;\n    var dim = this.getDimension();\n\n    if (dim === 0) {\n      var intPt = new InteriorPointPoint(this);\n      interiorPt = intPt.getInteriorPoint();\n    } else if (dim === 1) {\n      var intPt = new InteriorPointLine(this);\n      interiorPt = intPt.getInteriorPoint();\n    } else {\n      var intPt = new InteriorPointArea(this);\n      interiorPt = intPt.getInteriorPoint();\n    }\n\n    return this.createPointFromInternalCoord(interiorPt, this);\n  };\n\n  Geometry.prototype.symDifference = function (other) {\n    return OverlayOp.symDifference(this, other);\n  };\n\n  Geometry.prototype.createPointFromInternalCoord = function (coord, exemplar) {\n    exemplar.getPrecisionModel().makePrecise(coord);\n    return exemplar.getFactory().createPoint(coord);\n  };\n\n  Geometry.prototype.toText = function () {\n    var writer = new WKTWriter();\n    return writer.write(this);\n  };\n\n  Geometry.prototype.toString = function () {\n    this.toText();\n  };\n\n  Geometry.prototype.contains = function (g) {\n    return RelateOp.contains(this, g);\n  };\n\n  Geometry.prototype.difference = function (other) {\n    return OverlayOp.difference(this, other);\n  };\n\n  Geometry.prototype.isSimple = function () {\n    var op = new IsSimpleOp(this);\n    return op.isSimple();\n  };\n\n  Geometry.prototype.isWithinDistance = function (geom, distance) {\n    var envDist = this.getEnvelopeInternal().distance(geom.getEnvelopeInternal());\n    if (envDist > distance) return false;\n    return DistanceOp.isWithinDistance(this, geom, distance);\n  };\n\n  Geometry.prototype.distance = function (g) {\n    return DistanceOp.distance(this, g);\n  };\n\n  Geometry.prototype.isEquivalentClass = function (other) {\n    return this.getClass() === other.getClass();\n  };\n\n  const version = '2.0.4 (c9e3376)';\n\n  exports.algorithm = algorithm;\n  exports.densify = densify;\n  exports.dissolve = dissolve;\n  exports.geom = geom;\n  exports.geomgraph = geomgraph;\n  exports.index = index;\n  exports.io = io;\n  exports.linearref = linearref;\n  exports.noding = noding;\n  exports.operation = operation;\n  exports.precision = precision;\n  exports.simplify = simplify;\n  exports.triangulate = triangulate;\n  exports.version = version;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=jsts.js.map\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = function Disposable() {\n  /**\n   * The object has already been disposed.\n   * @type {boolean}\n   * @private\n   */\n  this.disposed_ = false;\n};\n\n/**\n * Clean up.\n */\nDisposable.prototype.dispose = function dispose () {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = function disposeInternal () {};\n\nexport default Disposable;\n\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n}\n\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n}\n\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n}\n\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n}\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\nvar MsSource = /*@__PURE__*/(function (EventSource) {\n  function MsSource(dispatcher) {\n    var mapping = {\n      'MSPointerDown': msPointerDown,\n      'MSPointerMove': msPointerMove,\n      'MSPointerUp': msPointerUp,\n      'MSPointerOut': msPointerOut,\n      'MSPointerOver': msPointerOver,\n      'MSPointerCancel': msPointerCancel,\n      'MSGotPointerCapture': msGotPointerCapture,\n      'MSLostPointerCapture': msLostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, MSPointerEvent|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n  }\n\n  if ( EventSource ) MsSource.__proto__ = EventSource;\n  MsSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MsSource.prototype.constructor = MsSource;\n\n  /**\n   * Creates a copy of the original event that will be used\n   * for the fake pointer event.\n   *\n   * @private\n   * @param {MSPointerEvent} inEvent The in event.\n   * @return {Object} The copied event.\n   */\n  MsSource.prototype.prepareEvent_ = function prepareEvent_ (inEvent) {\n    /** @type {MSPointerEvent|Object} */\n    var e = inEvent;\n    if (typeof inEvent.pointerType === 'number') {\n      e = this.dispatcher.cloneEvent(inEvent, inEvent);\n      e.pointerType = POINTER_TYPES[inEvent.pointerType];\n    }\n\n    return e;\n  };\n\n  /**\n   * Remove this pointer from the list of active pointers.\n   * @param {number} pointerId Pointer identifier.\n   */\n  MsSource.prototype.cleanup = function cleanup (pointerId) {\n    delete this.pointerMap[pointerId.toString()];\n  };\n\n  return MsSource;\n}(EventSource));\n\nexport default MsSource;\n\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\nvar NativeSource = /*@__PURE__*/(function (EventSource) {\n  function NativeSource(dispatcher) {\n    var mapping = {\n      'pointerdown': pointerDown,\n      'pointermove': pointerMove,\n      'pointerup': pointerUp,\n      'pointerout': pointerOut,\n      'pointerover': pointerOver,\n      'pointercancel': pointerCancel,\n      'gotpointercapture': gotPointerCapture,\n      'lostpointercapture': lostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n  }\n\n  if ( EventSource ) NativeSource.__proto__ = EventSource;\n  NativeSource.prototype = Object.create( EventSource && EventSource.prototype );\n  NativeSource.prototype.constructor = NativeSource;\n\n  return NativeSource;\n}(EventSource));\n\nexport default NativeSource;\n\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _Event from '../events/Event.js';\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\n\n\nvar PointerEvent = /*@__PURE__*/(function (_Event) {\n  function PointerEvent(type, originalEvent, opt_eventDict) {\n    _Event.call(this, type);\n\n    /**\n     * @const\n     * @type {Event}\n     */\n    this.originalEvent = originalEvent;\n\n    var eventDict = opt_eventDict ? opt_eventDict : {};\n\n    /**\n     * @type {number}\n     */\n    this.buttons = getButtons(eventDict);\n\n    /**\n     * @type {number}\n     */\n    this.pressure = getPressure(eventDict, this.buttons);\n\n    // MouseEvent related properties\n\n    /**\n     * @type {boolean}\n     */\n    this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n    /**\n     * @type {Object}\n     */\n    this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n    /**\n     * @type {number}\n     */\n    this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n    /**\n     * @type {Node}\n     */\n    this.relatedTarget = 'relatedTarget' in eventDict ?\n      eventDict['relatedTarget'] : null;\n\n    // PointerEvent related properties\n\n    /**\n     * @const\n     * @type {number}\n     */\n    this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n    /**\n     * @type {string}\n     */\n    this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n    /**\n     * @type {number}\n     */\n    this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n    // keep the semantics of preventDefault\n    if (originalEvent.preventDefault) {\n      this.preventDefault = function() {\n        originalEvent.preventDefault();\n      };\n    }\n  }\n\n  if ( _Event ) PointerEvent.__proto__ = _Event;\n  PointerEvent.prototype = Object.create( _Event && _Event.prototype );\n  PointerEvent.prototype.constructor = PointerEvent;\n\n  return PointerEvent;\n}(_Event));\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n  // According to the w3c spec,\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n  // left mouse button depressed.\n  //\n  // As of now, the only way to distinguish between the two states of\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n  // no mouse button is held.\n  //\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n  // but initMouseEvent does not expose an argument with which to set\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n  // of app developers.\n  //\n  // The only way to propagate the correct state of MouseEvent.which and\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n  // is to call initMouseEvent with a buttonArg value of -1.\n  //\n  // This is fixed with DOM Level 4's use of buttons\n  var buttons;\n  if (eventDict.buttons || HAS_BUTTONS) {\n    buttons = eventDict.buttons;\n  } else {\n    switch (eventDict.which) {\n      case 1: buttons = 1; break;\n      case 2: buttons = 4; break;\n      case 3: buttons = 2; break;\n      default: buttons = 0;\n    }\n  }\n  return buttons;\n}\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n  // Spec requires that pointers without pressure specified use 0.5 for down\n  // state and 0 for up state.\n  var pressure = 0;\n  if (eventDict.pressure) {\n    pressure = eventDict.pressure;\n  } else {\n    pressure = buttons ? 0.5 : 0;\n  }\n  return pressure;\n}\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    var ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\n\nexport default PointerEvent;\n\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/pointer/TouchSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {remove} from '../array.js';\nimport EventSource from './EventSource.js';\nimport {POINTER_ID} from './MouseSource.js';\n\n\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n}\n\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n  this.processTouches_(inEvent, this.moveOverOut_);\n}\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n}\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n}\n\n\nvar TouchSource = /*@__PURE__*/(function (EventSource) {\n  function TouchSource(dispatcher, mouseSource) {\n    var mapping = {\n      'touchstart': touchstart,\n      'touchmove': touchmove,\n      'touchend': touchend,\n      'touchcancel': touchcancel\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {import(\"./MouseSource.js\").default}\n     */\n    this.mouseSource = mouseSource;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.firstTouchId_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clickCount_ = 0;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.resetId_;\n\n    /**\n     * Mouse event timeout: This should be long enough to\n     * ignore compat mouse events made by touch.\n     * @private\n     * @type {number}\n     */\n    this.dedupTimeout_ = 2500;\n  }\n\n  if ( EventSource ) TouchSource.__proto__ = EventSource;\n  TouchSource.prototype = Object.create( EventSource && EventSource.prototype );\n  TouchSource.prototype.constructor = TouchSource;\n\n  /**\n   * @private\n   * @param {Touch} inTouch The in touch.\n   * @return {boolean} True, if this is the primary touch.\n   */\n  TouchSource.prototype.isPrimaryTouch_ = function isPrimaryTouch_ (inTouch) {\n    return this.firstTouchId_ === inTouch.identifier;\n  };\n\n  /**\n   * Set primary touch if there are no pointers, or the only pointer is the mouse.\n   * @param {Touch} inTouch The in touch.\n   * @private\n   */\n  TouchSource.prototype.setPrimaryTouch_ = function setPrimaryTouch_ (inTouch) {\n    var count = Object.keys(this.pointerMap).length;\n    if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n      this.firstTouchId_ = inTouch.identifier;\n      this.cancelResetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.removePrimaryPointer_ = function removePrimaryPointer_ (inPointer) {\n    if (inPointer.isPrimary) {\n      this.firstTouchId_ = undefined;\n      this.resetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCount_ = function resetClickCount_ () {\n    this.resetId_ = setTimeout(\n      this.resetClickCountHandler_.bind(this),\n      CLICK_COUNT_TIMEOUT);\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCountHandler_ = function resetClickCountHandler_ () {\n    this.clickCount_ = 0;\n    this.resetId_ = undefined;\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.cancelResetClickCount_ = function cancelResetClickCount_ () {\n    if (this.resetId_ !== undefined) {\n      clearTimeout(this.resetId_);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent Browser event\n   * @param {Touch} inTouch Touch event\n   * @return {PointerEvent} A pointer object.\n   */\n  TouchSource.prototype.touchToPointer_ = function touchToPointer_ (browserEvent, inTouch) {\n    var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n    // Spec specifies that pointerId 1 is reserved for Mouse.\n    // Touch identifiers can start at 0.\n    // Add 2 to the touch identifier for compatibility.\n    e.pointerId = inTouch.identifier + 2;\n    // TODO: check if this is necessary?\n    //e.target = findTarget(e);\n    e.bubbles = true;\n    e.cancelable = true;\n    e.detail = this.clickCount_;\n    e.button = 0;\n    e.buttons = 1;\n    e.width = inTouch.radiusX || 0;\n    e.height = inTouch.radiusY || 0;\n    e.pressure = inTouch.force || 0.5;\n    e.isPrimary = this.isPrimaryTouch_(inTouch);\n    e.pointerType = POINTER_TYPE;\n\n    // make sure that the properties that are different for\n    // each `Touch` object are not copied from the BrowserEvent object\n    e.clientX = inTouch.clientX;\n    e.clientY = inTouch.clientY;\n    e.screenX = inTouch.screenX;\n    e.screenY = inTouch.screenY;\n\n    return e;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} inEvent Touch event\n   * @param {function(TouchEvent, PointerEvent)} inFunction In function.\n   */\n  TouchSource.prototype.processTouches_ = function processTouches_ (inEvent, inFunction) {\n    var touches = Array.prototype.slice.call(inEvent.changedTouches);\n    var count = touches.length;\n    function preventDefault() {\n      inEvent.preventDefault();\n    }\n    for (var i = 0; i < count; ++i) {\n      var pointer = this.touchToPointer_(inEvent, touches[i]);\n      // forward touch preventDefaults\n      pointer.preventDefault = preventDefault;\n      inFunction.call(this, inEvent, pointer);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchList} touchList The touch list.\n   * @param {number} searchId Search identifier.\n   * @return {boolean} True, if the `Touch` with the given id is in the list.\n   */\n  TouchSource.prototype.findTouch_ = function findTouch_ (touchList, searchId) {\n    var l = touchList.length;\n    for (var i = 0; i < l; i++) {\n      var touch = touchList[i];\n      if (touch.identifier === searchId) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * In some instances, a touchstart can happen without a touchend. This\n   * leaves the pointermap in a broken state.\n   * Therefore, on every touchstart, we remove the touches that did not fire a\n   * touchend event.\n   * To keep state globally consistent, we fire a pointercancel for\n   * this \"abandoned\" touch\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.vacuumTouches_ = function vacuumTouches_ (inEvent) {\n    var touchList = inEvent.touches;\n    // pointerMap.getCount() should be < touchList.length here,\n    // as the touchstart has not been processed yet.\n    var keys = Object.keys(this.pointerMap);\n    var count = keys.length;\n    if (count >= touchList.length) {\n      var d = [];\n      for (var i = 0; i < count; ++i) {\n        var key = Number(keys[i]);\n        var value = this.pointerMap[key];\n        // Never remove pointerId == 1, which is mouse.\n        // Touch identifiers are 2 smaller than their pointerId, which is the\n        // index in pointermap.\n        if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n          d.push(value.out);\n        }\n      }\n      for (var i$1 = 0; i$1 < d.length; ++i$1) {\n        this.cancelOut_(inEvent, d[i$1]);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.overDown_ = function overDown_ (browserEvent, inPointer) {\n    this.pointerMap[inPointer.pointerId] = {\n      target: inPointer.target,\n      out: inPointer,\n      outTarget: inPointer.target\n    };\n    this.dispatcher.over(inPointer, browserEvent);\n    this.dispatcher.enter(inPointer, browserEvent);\n    this.dispatcher.down(inPointer, browserEvent);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.moveOverOut_ = function moveOverOut_ (browserEvent, inPointer) {\n    var event = inPointer;\n    var pointer = this.pointerMap[event.pointerId];\n    // a finger drifted off the screen, ignore it\n    if (!pointer) {\n      return;\n    }\n    var outEvent = pointer.out;\n    var outTarget = pointer.outTarget;\n    this.dispatcher.move(event, browserEvent);\n    if (outEvent && outTarget !== event.target) {\n      outEvent.relatedTarget = event.target;\n      /** @type {Object} */ (event).relatedTarget = outTarget;\n      // recover from retargeting by shadow\n      outEvent.target = outTarget;\n      if (event.target) {\n        this.dispatcher.leaveOut(outEvent, browserEvent);\n        this.dispatcher.enterOver(event, browserEvent);\n      } else {\n        // clean up case when finger leaves the screen\n        /** @type {Object} */ (event).target = outTarget;\n        /** @type {Object} */ (event).relatedTarget = null;\n        this.cancelOut_(browserEvent, event);\n      }\n    }\n    pointer.out = event;\n    pointer.outTarget = event.target;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent An event.\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.upOut_ = function upOut_ (browserEvent, inPointer) {\n    this.dispatcher.up(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.cancelOut_ = function cancelOut_ (browserEvent, inPointer) {\n    this.dispatcher.cancel(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.cleanUpPointer_ = function cleanUpPointer_ (inPointer) {\n    delete this.pointerMap[inPointer.pointerId];\n    this.removePrimaryPointer_(inPointer);\n  };\n\n  /**\n   * Prevent synth mouse events from creating pointer events.\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.dedupSynthMouse_ = function dedupSynthMouse_ (inEvent) {\n    var lts = this.mouseSource.lastTouches;\n    var t = inEvent.changedTouches[0];\n    // only the primary finger will synth mouse events\n    if (this.isPrimaryTouch_(t)) {\n      // remember x/y of last touch\n      var lt = [t.clientX, t.clientY];\n      lts.push(lt);\n\n      setTimeout(function() {\n        // remove touch after timeout\n        remove(lts, lt);\n      }, this.dedupTimeout_);\n    }\n  };\n\n  return TouchSource;\n}(EventSource));\n\nexport default TouchSource;\n\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, {prepareEvent as prepareMouseEvent} from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\nvar PointerEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function PointerEventHandler(element) {\n    EventTarget.call(this);\n\n    /**\n     * @const\n     * @private\n     * @type {Element|HTMLDocument}\n     */\n    this.element_ = element;\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = {};\n\n    /**\n     * @type {Object<string, function(Event)>}\n     * @private\n     */\n    this.eventMap_ = {};\n\n    /**\n     * @type {Array<import(\"./EventSource.js\").default>}\n     * @private\n     */\n    this.eventSourceList_ = [];\n\n    this.registerSources();\n  }\n\n  if ( EventTarget ) PointerEventHandler.__proto__ = EventTarget;\n  PointerEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  PointerEventHandler.prototype.constructor = PointerEventHandler;\n\n  /**\n   * Set up the event sources (mouse, touch and native pointers)\n   * that generate pointer events.\n   */\n  PointerEventHandler.prototype.registerSources = function registerSources () {\n    if (POINTER) {\n      this.registerSource('native', new NativeSource(this));\n    } else if (MSPOINTER) {\n      this.registerSource('ms', new MsSource(this));\n    } else {\n      var mouseSource = new MouseSource(this);\n      this.registerSource('mouse', mouseSource);\n\n      if (TOUCH) {\n        this.registerSource('touch', new TouchSource(this, mouseSource));\n      }\n    }\n\n    // register events on the viewport element\n    this.register_();\n  };\n\n  /**\n   * Add a new event source that will generate pointer events.\n   *\n   * @param {string} name A name for the event source\n   * @param {import(\"./EventSource.js\").default} source The source event.\n   */\n  PointerEventHandler.prototype.registerSource = function registerSource (name, source) {\n    var s = source;\n    var newEvents = s.getEvents();\n\n    if (newEvents) {\n      newEvents.forEach(function(e) {\n        var handler = s.getHandlerForEvent(e);\n\n        if (handler) {\n          this.eventMap_[e] = handler.bind(s);\n        }\n      }.bind(this));\n      this.eventSourceList_.push(s);\n    }\n  };\n\n  /**\n   * Set up the events for all registered event sources.\n   * @private\n   */\n  PointerEventHandler.prototype.register_ = function register_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.addEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Remove all registered events.\n   * @private\n   */\n  PointerEventHandler.prototype.unregister_ = function unregister_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.removeEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Calls the right handler for a new event.\n   * @private\n   * @param {Event} inEvent Browser event.\n   */\n  PointerEventHandler.prototype.eventHandler_ = function eventHandler_ (inEvent) {\n    var type = inEvent.type;\n    var handler = this.eventMap_[type];\n    if (handler) {\n      handler(inEvent);\n    }\n  };\n\n  /**\n   * Setup listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.addEvents_ = function addEvents_ (events) {\n    events.forEach(function(eventName) {\n      listen(this.element_, eventName, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Unregister listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.removeEvents_ = function removeEvents_ (events) {\n    events.forEach(function(e) {\n      unlisten(this.element_, e, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Returns a snapshot of inEvent, with writable properties.\n   *\n   * @param {Event} event Browser event.\n   * @param {Event|Touch} inEvent An event that contains\n   *    properties to copy.\n   * @return {Object} An object containing shallow copies of\n   *    `inEvent`'s properties.\n   */\n  PointerEventHandler.prototype.cloneEvent = function cloneEvent (event, inEvent) {\n    var eventCopy = {};\n    for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n      var p = CLONE_PROPS[i][0];\n      eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n    }\n\n    return eventCopy;\n  };\n\n  // EVENTS\n\n\n  /**\n   * Triggers a 'pointerdown' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.down = function down (data, event) {\n    this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n  };\n\n  /**\n   * Triggers a 'pointermove' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.move = function move (data, event) {\n    this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerup' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.up = function up (data, event) {\n    this.fireEvent(PointerEventType.POINTERUP, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerenter' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enter = function enter (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERENTER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerleave' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leave = function leave (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerover' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.over = function over (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROVER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerout' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.out = function out (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROUT, data, event);\n  };\n\n  /**\n   * Triggers a 'pointercancel' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.cancel = function cancel (data, event) {\n    this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n  };\n\n  /**\n   * Triggers a combination of 'pointerout' and 'pointerleave' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leaveOut = function leaveOut (data, event) {\n    this.out(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.leave(data, event);\n    }\n  };\n\n  /**\n   * Triggers a combination of 'pointerover' and 'pointerevents' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enterOver = function enterOver (data, event) {\n    this.over(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.enter(data, event);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Element} container The container element.\n   * @param {Element} contained The contained element.\n   * @return {boolean} Returns true if the container element\n   *   contains the other element.\n   */\n  PointerEventHandler.prototype.contains_ = function contains_ (container, contained) {\n    if (!container || !contained) {\n      return false;\n    }\n    return container.contains(contained);\n  };\n\n  // EVENT CREATION AND TRACKING\n  /**\n   * Creates a new Event of type `inType`, based on the information in\n   * `data`.\n   *\n   * @param {string} inType A string representing the type of event to create.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   * @return {PointerEvent} A PointerEvent of type `inType`.\n   */\n  PointerEventHandler.prototype.makeEvent = function makeEvent (inType, data, event) {\n    return new PointerEvent(inType, event, data);\n  };\n\n  /**\n   * Make and dispatch an event in one call.\n   * @param {string} inType A string representing the type of event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.fireEvent = function fireEvent (inType, data, event) {\n    var e = this.makeEvent(inType, data, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Creates a pointer event from a native pointer event\n   * and dispatches this event.\n   * @param {Event} event A platform event with a target.\n   */\n  PointerEventHandler.prototype.fireNativeEvent = function fireNativeEvent (event) {\n    var e = this.makeEvent(event.type, event, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Wrap a native mouse event into a pointer event.\n   * This proxy method is required for the legacy IE support.\n   * @param {string} eventType The pointer event type.\n   * @param {Event} event The event.\n   * @return {PointerEvent} The wrapped event.\n   */\n  PointerEventHandler.prototype.wrapMouseEvent = function wrapMouseEvent (eventType, event) {\n    var pointerEvent = this.makeEvent(\n      eventType, prepareMouseEvent(event, this), event);\n    return pointerEvent;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PointerEventHandler.prototype.disposeInternal = function disposeInternal () {\n    this.unregister_();\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return PointerEventHandler;\n}(EventTarget));\n\nexport default PointerEventHandler;\n\n//# sourceMappingURL=PointerEventHandler.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\nvar MapBrowserEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function MapBrowserEventHandler(map, moveTolerance) {\n\n    EventTarget.call(this);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance ?\n      moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     * @private\n     */\n    this.down_ = null;\n\n    var element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * Event handler which generates pointer events for\n     * the viewport element.\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.pointerEventHandler_ = new PointerEventHandler(element);\n\n    /**\n     * Event handler which generates pointer events for\n     * the document (used when dragging).\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.documentPointerEventHandler_ = null;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_, this);\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_, this);\n\n  }\n\n  if ( EventTarget ) MapBrowserEventHandler.__proto__ = EventTarget;\n  MapBrowserEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  MapBrowserEventHandler.prototype.constructor = MapBrowserEventHandler;\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.emulateClick_ = function emulateClick_ (pointerEvent) {\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.CLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(function() {\n        this.clickTimeoutId_ = undefined;\n        var newEvent = new MapBrowserPointerEvent(\n          MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n      }.bind(this), 250);\n    }\n  };\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.updateActivePointers_ = function updateActivePointers_ (pointerEvent) {\n    var event = pointerEvent;\n\n    if (event.type == MapBrowserEventType.POINTERUP ||\n        event.type == MapBrowserEventType.POINTERCANCEL) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerUp_ = function handlePointerUp_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMouseActionButton_ = function isMouseActionButton_ (pointerEvent) {\n    return pointerEvent.button === 0;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerDown_ = function handlePointerDown_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      /* Set up a pointer event handler on the `document`,\n       * which is required when the pointer is moved outside\n       * the viewport when dragging.\n       */\n      this.documentPointerEventHandler_ =\n          new PointerEventHandler(document);\n\n      this.dragListenerKeys_.push(\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_, this),\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERUP,\n          this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(this.pointerEventHandler_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_, this)\n      );\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerMove_ = function handlePointerMove_ (pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      var newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n        this.dragging_);\n      this.dispatchEvent(newEvent);\n    }\n\n    // Some native android browser triggers mousemove events during small period\n    // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n    // https://code.google.com/p/android/issues/detail?id=19827\n    // ex: Galaxy Tab P3110 + Android 4.1.1\n    pointerEvent.preventDefault();\n  };\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserPointerEvent matches the PointerEvent type.\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.relayEvent_ = function relayEvent_ (pointerEvent) {\n    var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(new MapBrowserPointerEvent(\n      pointerEvent.type, this.map_, pointerEvent, dragging));\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMoving_ = function isMoving_ (pointerEvent) {\n    return this.dragging_ ||\n        Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n        Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MapBrowserEventHandler.prototype.disposeInternal = function disposeInternal () {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    if (this.documentPointerEventHandler_) {\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n    if (this.pointerEventHandler_) {\n      this.pointerEventHandler_.dispose();\n      this.pointerEventHandler_ = null;\n    }\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return MapBrowserEventHandler;\n}(EventTarget));\n\n\nexport default MapBrowserEventHandler;\n\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = function PriorityQueue(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function clear$1 () {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function dequeue () {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  var elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function enqueue (element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  var priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function getCount () {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function getLeftChildIndex_ (index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function getRightChildIndex_ (index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function getParentIndex_ (index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function heapify_ () {\n  var i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function isKeyQueued (key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function isQueued (element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function siftUp_ (index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var count = elements.length;\n  var element = elements[index];\n  var priority = priorities[index];\n  var startIndex = index;\n\n  while (index < (count >> 1)) {\n    var lIndex = this.getLeftChildIndex_(index);\n    var rIndex = this.getRightChildIndex_(index);\n\n    var smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function siftDown_ (startIndex, index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[index];\n  var priority = priorities[index];\n\n  while (index > startIndex) {\n    var parentIndex = this.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function reprioritize () {\n  var priorityFunction = this.priorityFunction_;\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var index = 0;\n  var n = elements.length;\n  var element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this.queuedElements_[this.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\n\n\nexport default PriorityQueue;\n\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\n\nvar TileQueue = /*@__PURE__*/(function (PriorityQueue) {\n  function TileQueue(tilePriorityFunction, tileChangeCallback) {\n\n    PriorityQueue.call(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      this, function(element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (/** @type {import(\"./Tile.js\").default} */ (element[0]).getKey());\n      });\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n\n  }\n\n  if ( PriorityQueue ) TileQueue.__proto__ = PriorityQueue;\n  TileQueue.prototype = Object.create( PriorityQueue && PriorityQueue.prototype );\n  TileQueue.prototype.constructor = TileQueue;\n\n  /**\n   * @inheritDoc\n   */\n  TileQueue.prototype.enqueue = function enqueue (element) {\n    var added = PriorityQueue.prototype.enqueue.call(this, element);\n    if (added) {\n      var tile = element[0];\n      listen(tile, EventType.CHANGE, this.handleTileChange, this);\n    }\n    return added;\n  };\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  TileQueue.prototype.getTilesLoading = function getTilesLoading () {\n    return this.tilesLoading_;\n  };\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  TileQueue.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    var state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR ||\n        state === TileState.EMPTY || state === TileState.ABORT) {\n      unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n      var tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  };\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  TileQueue.prototype.loadMoreTiles = function loadMoreTiles (maxTotalLoading, maxNewLoads) {\n    var newLoads = 0;\n    var abortedTiles = false;\n    var state, tile, tileKey;\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n           this.getCount() > 0) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.ABORT) {\n        abortedTiles = true;\n      } else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n    if (newLoads === 0 && abortedTiles) {\n      // Do not stop the render loop when all wanted tiles were aborted due to\n      // a small, saturated tile cache.\n      this.tileChangeCallback_();\n    }\n  };\n\n  return TileQueue;\n}(PriorityQueue));\n\n\nexport default TileQueue;\n\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined)): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @return {Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        var index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          var power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var offset = -direction / 2 + 0.5;\n        var oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        var newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {getUid} from './util.js';\nimport {VOID} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n  * @api\n */\nvar View = /*@__PURE__*/(function (BaseObject) {\n  function View(opt_options) {\n    BaseObject.call(this);\n\n    var options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    this.applyOptions_(options);\n  }\n\n  if ( BaseObject ) View.__proto__ = BaseObject;\n  View.prototype = Object.create( BaseObject && BaseObject.prototype );\n  View.prototype.constructor = View;\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  View.prototype.applyOptions_ = function applyOptions_ (options) {\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = {};\n    properties[ViewProperty.CENTER] = options.center !== undefined ?\n      options.center : null;\n\n    var resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    var centerConstraint = createCenterConstraint(options);\n    var resolutionConstraint = resolutionConstraintInfo.constraint;\n    var rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint\n    };\n\n    if (options.resolution !== undefined) {\n      properties[ViewProperty.RESOLUTION] = options.resolution;\n    } else if (options.zoom !== undefined) {\n      properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_);\n\n      if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n        properties[ViewProperty.RESOLUTION] = clamp(\n          Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n          this.minResolution_, this.maxResolution_);\n      }\n    }\n    properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n\n  };\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  View.prototype.getUpdatedOptions_ = function getUpdatedOptions_ (newOptions) {\n    var options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenter();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  };\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean))} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  View.prototype.animate = function animate (var_args) {\n    var arguments$1 = arguments;\n\n    var animationCount = arguments.length;\n    var callback;\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      var state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenter(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    var start = Date.now();\n    var center = this.getCenter().slice();\n    var resolution = this.getResolution();\n    var rotation = this.getRotation();\n    var series = [];\n    for (var i = 0; i < animationCount; ++i) {\n      var options = /** @type {AnimationOptions} */ (arguments$1[i]);\n\n      var animation = /** @type {Animation} */ ({\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut\n      });\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center;\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.constrainResolution(\n          this.maxResolution_, options.zoom - this.minZoom_, 0);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      animation.callback = callback;\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  };\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  View.prototype.getAnimating = function getAnimating () {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  };\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  View.prototype.getInteracting = function getInteracting () {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  };\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  View.prototype.cancelAnimations = function cancelAnimations () {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n      var series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n    }\n    this.animations_.length = 0;\n  };\n\n  /**\n   * Update all animations.\n   */\n  View.prototype.updateAnimations_ = function updateAnimations_ () {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    var now = Date.now();\n    var more = false;\n    for (var i = this.animations_.length - 1; i >= 0; --i) {\n      var series = this.animations_[i];\n      var seriesComplete = true;\n      for (var j = 0, jj = series.length; j < jj; ++j) {\n        var animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        var elapsed = now - animation.start;\n        var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        var progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          var x0 = animation.sourceCenter[0];\n          var y0 = animation.sourceCenter[1];\n          var x1 = animation.targetCenter[0];\n          var y1 = animation.targetCenter[1];\n          var x = x0 + progress * (x1 - x0);\n          var y = y0 + progress * (y1 - y0);\n          this.set(ViewProperty.CENTER, [x, y]);\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          var resolution = progress === 1 ?\n            animation.targetResolution :\n            animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterZoom(resolution, animation.anchor));\n          }\n          this.set(ViewProperty.RESOLUTION, resolution);\n        }\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n          var rotation = progress === 1 ?\n            modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n            animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterRotate(rotation, animation.anchor));\n          }\n          this.set(ViewProperty.ROTATION, rotation);\n        }\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        var callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  View.prototype.calculateCenterRotate = function calculateCenterRotate (rotation, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  };\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  View.prototype.calculateCenterZoom = function calculateCenterZoom (resolution, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    var currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n      var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  };\n\n  /**\n   * @private\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  View.prototype.getSizeFromViewport_ = function getSizeFromViewport_ () {\n    var size = [100, 100];\n    var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n    var element = document.querySelector(selector);\n    if (element) {\n      var metrics = getComputedStyle(element);\n      size[0] = parseInt(metrics.width, 10);\n      size[1] = parseInt(metrics.height, 10);\n    }\n    return size;\n  };\n\n  /**\n   * Get the constrained center of this view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Constrained center.\n   * @api\n   */\n  View.prototype.constrainCenter = function constrainCenter (center) {\n    return this.constraints_.center(center);\n  };\n\n  /**\n   * Get the constrained resolution of this view.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @param {number=} opt_direction Direction. Default is `0`.\n   * @return {number|undefined} Constrained resolution.\n   * @api\n   */\n  View.prototype.constrainResolution = function constrainResolution (resolution, opt_delta, opt_direction) {\n    var delta = opt_delta || 0;\n    var direction = opt_direction || 0;\n    return this.constraints_.resolution(resolution, delta, direction);\n  };\n\n  /**\n   * Get the constrained rotation of this view.\n   * @param {number|undefined} rotation Rotation.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @return {number|undefined} Constrained rotation.\n   * @api\n   */\n  View.prototype.constrainRotation = function constrainRotation (rotation, opt_delta) {\n    var delta = opt_delta || 0;\n    return this.constraints_.rotation(rotation, delta);\n  };\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getCenter = function getCenter () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n    );\n  };\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  View.prototype.getConstraints = function getConstraints () {\n    return this.constraints_;\n  };\n\n  /**\n   * @param {Array<number>=} opt_hints Destination array.\n   * @return {Array<number>} Hint.\n   */\n  View.prototype.getHints = function getHints (opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  };\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n   * first map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  View.prototype.calculateExtent = function calculateExtent (opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    assert(center, 1); // The view center is not defined\n    var resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    var rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  };\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  View.prototype.getMaxResolution = function getMaxResolution () {\n    return this.maxResolution_;\n  };\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  View.prototype.getMinResolution = function getMinResolution () {\n    return this.minResolution_;\n  };\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  View.prototype.getMaxZoom = function getMaxZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n  };\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  View.prototype.setMaxZoom = function setMaxZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  };\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  View.prototype.getMinZoom = function getMinZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n  };\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  View.prototype.setMinZoom = function setMinZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  };\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  View.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getResolution = function getResolution () {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  };\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  View.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  View.prototype.getResolutionForExtent = function getResolutionForExtent (extent, opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var xResolution = getWidth(extent) / size[0];\n    var yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  };\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  View.prototype.getResolutionForValueFunction = function getResolutionForValueFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function(value) {\n        var resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      });\n  };\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.getRotation = function getRotation () {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  };\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  View.prototype.getValueForResolutionFunction = function getValueForResolutionFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function(resolution) {\n        var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n        return value;\n      });\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio for center rounding.\n   * @return {State} View state.\n   */\n  View.prototype.getState = function getState (pixelRatio) {\n    var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    var projection = this.getProjection();\n    var resolution = /** @type {number} */ (this.getResolution());\n    var pixelResolution = resolution / pixelRatio;\n    var rotation = this.getRotation();\n    return (\n      /** @type {State} */ ({\n        center: [\n          Math.round(center[0] / pixelResolution) * pixelResolution,\n          Math.round(center[1] / pixelResolution) * pixelResolution\n        ],\n        projection: projection !== undefined ? projection : null,\n        resolution: resolution,\n        rotation: rotation,\n        zoom: this.getZoom()\n      })\n    );\n  };\n\n  /**\n   * Get the current zoom level.  If you configured your view with a resolutions\n   * array (this is rare), this method may return non-integer zoom levels (so\n   * the zoom level is not safe to use as an index into a resolutions array).\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  View.prototype.getZoom = function getZoom () {\n    var zoom;\n    var resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  };\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  View.prototype.getZoomForResolution = function getZoomForResolution (resolution) {\n    var offset = this.minZoom_ || 0;\n    var max, zoomFactor;\n    if (this.resolutions_) {\n      var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  };\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  View.prototype.getResolutionForZoom = function getResolutionForZoom (zoom) {\n    return /** @type {number} */ (this.constrainResolution(\n      this.maxResolution_, zoom - this.minZoom_, 0));\n  };\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions=} opt_options Options.\n   * @api\n   */\n  View.prototype.fit = function fit (geometryOrExtent, opt_options) {\n    var options = opt_options || {};\n    var size = options.size;\n    if (!size) {\n      size = this.getSizeFromViewport_();\n    }\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    var geometry;\n    assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function',\n      24); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent),\n        25); // Cannot fit empty extent provided as `geometry`\n      geometry = polygonFromExtent(geometryOrExtent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      geometryOrExtent = geometryOrExtent.getExtent();\n      geometry = polygonFromExtent(geometryOrExtent);\n      geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n    } else {\n      geometry = geometryOrExtent;\n    }\n\n    var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    var constrainResolution = options.constrainResolution !== undefined ?\n      options.constrainResolution : true;\n    var nearest = options.nearest !== undefined ? options.nearest : false;\n    var minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.constrainResolution(\n        this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n    } else {\n      minResolution = 0;\n    }\n    var coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var minRotX = +Infinity;\n    var minRotY = +Infinity;\n    var maxRotX = -Infinity;\n    var maxRotY = -Infinity;\n    var stride = geometry.getStride();\n    for (var i = 0, ii = coords.length; i < ii; i += stride) {\n      var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    var resolution = this.getResolutionForExtent(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n    resolution = isNaN(resolution) ? minResolution :\n      Math.max(resolution, minResolution);\n    if (constrainResolution) {\n      var constrainedResolution = this.constrainResolution(resolution, 0, 0);\n      if (!nearest && constrainedResolution < resolution) {\n        constrainedResolution = this.constrainResolution(\n          constrainedResolution, -1, 0);\n      }\n      resolution = constrainedResolution;\n    }\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerRotX = (minRotX + maxRotX) / 2;\n    var centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n    var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    var center = [centerX, centerY];\n    var callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animate({\n        resolution: resolution,\n        center: center,\n        duration: options.duration,\n        easing: options.easing\n      }, callback);\n    } else {\n      this.setResolution(resolution);\n      this.setCenter(center);\n      animationCallback(callback, true);\n    }\n  };\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  View.prototype.centerOn = function centerOn (coordinate, size, position) {\n    // calculate rotated position\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    var resolution = this.getResolution();\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n\n    this.setCenter([centerX, centerY]);\n  };\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  View.prototype.isDef = function isDef () {\n    return !!this.getCenter() && this.getResolution() !== undefined;\n  };\n\n  /**\n   * Rotate the view around a given coordinate.\n   * @param {number} rotation New rotation value for the view.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  View.prototype.rotate = function rotate (rotation, opt_anchor) {\n    if (opt_anchor !== undefined) {\n      var center = this.calculateCenterRotate(rotation, opt_anchor);\n      this.setCenter(center);\n    }\n    this.setRotation(rotation);\n  };\n\n  /**\n   * Set the center of the current view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setCenter = function setCenter (center) {\n    this.set(ViewProperty.CENTER, center);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * @param {ViewHint} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  View.prototype.setHint = function setHint (hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  };\n\n  /**\n   * Set the resolution for this view.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setResolution = function setResolution (resolution) {\n    this.set(ViewProperty.RESOLUTION, resolution);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Set the rotation for this view.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.setRotation = function setRotation (rotation) {\n    this.set(ViewProperty.ROTATION, rotation);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Zoom to a specific zoom level.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  View.prototype.setZoom = function setZoom (zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  };\n\n  return View;\n}(BaseObject));\n\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function() {\n    callback(returnValue);\n  }, 0);\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  var resolutionConstraint;\n  var maxResolution;\n  var minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  var defaultMaxZoom = 28;\n  var defaultZoomFactor = 2;\n\n  var minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  var maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  var zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    var resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var extent = projection.getExtent();\n    var size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    var defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  var enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    var constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n\n//# sourceMappingURL=View.js.map","/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from './Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /*@__PURE__*/(function (BaseLayer) {\n  function LayerGroup(opt_options) {\n\n    var options = opt_options || {};\n    var baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    var layers = options.layers;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    listen(this,\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof /** @type {?} */ (layers).getArray === 'function',\n          43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  if ( BaseLayer ) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  LayerGroup.prototype.constructor = LayerGroup;\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_ () {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (var id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    var layersArray = layers.getArray();\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n      ];\n    }\n\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    var key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.getLayers = function getLayers () {\n    return (\n      /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS))\n    );\n  };\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.setLayers = function setLayers (layers) {\n    this.set(Property.LAYERS, layers);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n\n    var pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    var ownLayerState = this.getLayerState();\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getSourceState = function getSourceState () {\n    return SourceState.READY;\n  };\n\n  return LayerGroup;\n}(BaseLayer));\n\n\nexport default LayerGroup;\n\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n\n//# sourceMappingURL=size.js.map","/**\n * @module ol/PluggableMap\n */\nimport {getUid} from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {import(\"./coordinate.js\").Coordinate} focus\n * @property {number} index\n * @property {Object<string, import(\"./layer/Layer.js\").State>} layerStates\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {TileQueue} tileQueue\n * @property {Object<string, Object<string, import(\"./TileRange.js\").default>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @fires module:ol/render/Event~RenderEvent#rendercomplete\n * @api\n */\nvar PluggableMap = /*@__PURE__*/(function (BaseObject) {\n  function PluggableMap(options) {\n\n    BaseObject.call(this);\n\n    var optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileAnimating_ =\n        options.loadTilesWhileAnimating !== undefined ?\n          options.loadTilesWhileAnimating : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileInteracting_ =\n        options.loadTilesWhileInteracting !== undefined ?\n          options.loadTilesWhileInteracting : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio !== undefined ?\n      options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = function() {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_.call(this, Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n    // prevent page zoom on IE >= 10 browsers\n    this.viewport_.style.msTouchAction = 'none';\n    this.viewport_.style.touchAction = 'none';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    var overlayEvents = [\n      EventType.CLICK,\n      EventType.DBLCLICK,\n      EventType.MOUSEDOWN,\n      EventType.TOUCHSTART,\n      EventType.MSPOINTERDOWN,\n      MapBrowserEventType.POINTERDOWN,\n      EventType.MOUSEWHEEL,\n      EventType.WHEEL\n    ];\n    for (var i = 0, ii = overlayEvents.length; i < ii; ++i) {\n      listen(this.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n    }\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n    for (var key in MapBrowserEventType) {\n      listen(this.mapBrowserEventHandler_, MapBrowserEventType[key],\n        this.handleMapBrowserEvent, this);\n    }\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = this.createRenderer();\n\n    /**\n     * @type {function(Event)|undefined}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this));\n\n    /**\n     * Uids of features to skip at rendering time.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.skippedFeatureUids_ = {};\n\n    listen(\n      this, getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_, this);\n    listen(this, getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_, this);\n    listen(this, getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_, this);\n    listen(this, getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_, this);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      (function(control) {\n        control.setMap(this);\n      }).bind(this));\n\n    listen(this.controls, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.controls, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      (function(interaction) {\n        interaction.setMap(this);\n      }).bind(this));\n\n    listen(this.interactions, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.interactions, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    listen(this.overlays_, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n      }, this);\n\n    listen(this.overlays_, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        var id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }, this);\n\n  }\n\n  if ( BaseObject ) PluggableMap.__proto__ = BaseObject;\n  PluggableMap.prototype = Object.create( BaseObject && BaseObject.prototype );\n  PluggableMap.prototype.constructor = PluggableMap;\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  PluggableMap.prototype.createRenderer = function createRenderer () {\n    throw new Error('Use a map type that has a createRenderer method');\n  };\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  PluggableMap.prototype.addControl = function addControl (control) {\n    this.getControls().push(control);\n  };\n\n  /**\n   * Add the given interaction to the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  PluggableMap.prototype.addInteraction = function addInteraction (interaction) {\n    this.getInteractions().push(interaction);\n  };\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  PluggableMap.prototype.addLayer = function addLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  };\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  PluggableMap.prototype.addOverlay = function addOverlay (overlay) {\n    this.getOverlays().push(overlay);\n  };\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  PluggableMap.prototype.addOverlayInternal_ = function addOverlayInternal_ (overlay) {\n    var id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  };\n\n  /**\n   *\n   * @inheritDoc\n   */\n  PluggableMap.prototype.disposeInternal = function disposeInternal () {\n    this.mapBrowserEventHandler_.dispose();\n    unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n      this.animationDelayKey_ = undefined;\n    }\n    this.setTarget(null);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n   *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachFeatureAtPixel = function forEachFeatureAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = opt_options.layerFilter !== undefined ?\n      opt_options.layerFilter : TRUE;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, callback, null,\n      layerFilter, null);\n  };\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * `null` if none were found.\n   * @api\n   */\n  PluggableMap.prototype.getFeaturesAtPixel = function getFeaturesAtPixel (pixel, opt_options) {\n    var features = null;\n    this.forEachFeatureAtPixel(pixel, function(feature) {\n      if (!features) {\n        features = [];\n      }\n      features.push(feature);\n    }, opt_options);\n    return features;\n  };\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var options = opt_options || /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n  };\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @template U\n   * @api\n   */\n  PluggableMap.prototype.hasFeatureAtPixel = function hasFeatureAtPixel (pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, layerFilter, null);\n  };\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {Event} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  PluggableMap.prototype.getEventCoordinate = function getEventCoordinate (event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  };\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {Event|TouchEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  PluggableMap.prototype.getEventPixel = function getEventPixel (event) {\n    var viewportPosition = this.viewport_.getBoundingClientRect();\n    var eventPosition = 'changedTouches' in event ?\n      /** @type {TouchEvent} */ (event).changedTouches[0] :\n      /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top\n    ];\n  };\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getTarget = function getTarget () {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n  };\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  PluggableMap.prototype.getTargetElement = function getTargetElement () {\n    var target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string' ? document.getElementById(target) : target;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  PluggableMap.prototype.getCoordinateFromPixel = function getCoordinateFromPixel (pixel) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    }\n  };\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  PluggableMap.prototype.getControls = function getControls () {\n    return this.controls;\n  };\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  PluggableMap.prototype.getOverlays = function getOverlays () {\n    return this.overlays_;\n  };\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  PluggableMap.prototype.getOverlayById = function getOverlayById (id) {\n    var overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  };\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  PluggableMap.prototype.getInteractions = function getInteractions () {\n    return this.interactions;\n  };\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getLayerGroup = function getLayerGroup () {\n    return (\n      /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP))\n    );\n  };\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  PluggableMap.prototype.getLayers = function getLayers () {\n    var layers = this.getLayerGroup().getLayers();\n    return layers;\n  };\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.getPixelFromCoordinate = function getPixelFromCoordinate (coordinate) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n    }\n  };\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  PluggableMap.prototype.getRenderer = function getRenderer () {\n    return this.renderer_;\n  };\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getSize = function getSize () {\n    return (\n      /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE))\n    );\n  };\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getView = function getView () {\n    return (\n      /** @type {View} */ (this.get(MapProperty.VIEW))\n    );\n  };\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  PluggableMap.prototype.getViewport = function getViewport () {\n    return this.viewport_;\n  };\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  PluggableMap.prototype.getOverlayContainer = function getOverlayContainer () {\n    return this.overlayContainer_;\n  };\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  PluggableMap.prototype.getOverlayContainerStopEvent = function getOverlayContainerStopEvent () {\n    return this.overlayContainerStopEvent_;\n  };\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  PluggableMap.prototype.getTilePriority = function getTilePriority (tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    var frameState = this.frameState_;\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n      return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n      return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels\n    // between the center of the tile and the focus.  The factor of 65536 means\n    // that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var deltaX = tileCenter[0] - frameState.focus[0];\n    var deltaY = tileCenter[1] - frameState.focus[1];\n    return 65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n  };\n\n  /**\n   * @param {Event} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  PluggableMap.prototype.handleBrowserEvent = function handleBrowserEvent (browserEvent, opt_type) {\n    var type = opt_type || browserEvent.type;\n    var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  };\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  PluggableMap.prototype.handleMapBrowserEvent = function handleMapBrowserEvent (mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    this.focus_ = mapBrowserEvent.coordinate;\n    mapBrowserEvent.frameState = this.frameState_;\n    var interactionsArray = this.getInteractions().getArray();\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      for (var i = interactionsArray.length - 1; i >= 0; i--) {\n        var interaction = interactionsArray[i];\n        if (!interaction.getActive()) {\n          continue;\n        }\n        var cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont) {\n          break;\n        }\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  PluggableMap.prototype.handlePostRender = function handlePostRender () {\n\n    var frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    var tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      var maxTotalLoading = this.maxTilesLoading_;\n      var maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        var hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING]) {\n          maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n        if (hints[ViewHint.INTERACTING]) {\n          maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n    if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n        !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n      this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n    }\n\n    var postRenderFunctions = this.postRenderFunctions_;\n    for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleSizeChanged_ = function handleSizeChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTargetChanged_ = function handleTargetChanged_ () {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    var targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.keyHandlerKeys_) {\n      for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n    }\n\n    if (!targetElement) {\n      this.renderer_.removeLayerRenderers();\n      removeNode(this.viewport_);\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n\n      var keyboardEventTarget = !this.keyboardEventTarget_ ?\n        targetElement : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n        listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTileChange_ = function handleTileChange_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewPropertyChanged_ = function handleViewPropertyChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewChanged_ = function handleViewChanged_ () {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    var view = this.getView();\n    if (view) {\n      this.viewport_.setAttribute('data-view', getUid(view));\n      this.viewPropertyListenerKey_ = listen(\n        view, ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_, this);\n      this.viewChangeListenerKey_ = listen(\n        view, EventType.CHANGE,\n        this.handleViewPropertyChanged_, this);\n    }\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleLayerGroupChanged_ = function handleLayerGroupChanged_ () {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    var layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(\n          layerGroup, ObjectEventType.PROPERTYCHANGE,\n          this.render, this),\n        listen(\n          layerGroup, EventType.CHANGE,\n          this.render, this)\n      ];\n    }\n    this.render();\n  };\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  PluggableMap.prototype.isRendered = function isRendered () {\n    return !!this.frameState_;\n  };\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  PluggableMap.prototype.renderSync = function renderSync () {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  };\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  PluggableMap.prototype.render = function render () {\n    if (this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  };\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeControl = function removeControl (control) {\n    return this.getControls().remove(control);\n  };\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeInteraction = function removeInteraction (interaction) {\n    return this.getInteractions().remove(interaction);\n  };\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeLayer = function removeLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  };\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeOverlay = function removeOverlay (overlay) {\n    return this.getOverlays().remove(overlay);\n  };\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  PluggableMap.prototype.renderFrame_ = function renderFrame_ (time) {\n    var viewState;\n\n    var size = this.getSize();\n    var view = this.getView();\n    var extent = createEmpty();\n    var previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    var frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n      var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n      var layerStates = {};\n      for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n        layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n      }\n      viewState = view.getState(this.pixelRatio_);\n      frameState = /** @type {FrameState} */ ({\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        extent: extent,\n        focus: this.focus_ ? this.focus_ : viewState.center,\n        index: this.frameIndex_++,\n        layerStates: layerStates,\n        layerStatesArray: layerStatesArray,\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        skippedFeatureUids: this.skippedFeatureUids_,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {}\n      });\n    }\n\n    if (frameState) {\n      frameState.extent = getForViewAndSize(viewState.center,\n        viewState.resolution, viewState.rotation, frameState.size, extent);\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n      if (previousFrameState) {\n        var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                    !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      var idle = this.previousExtent_ &&\n          !frameState.viewHints[ViewHint.ANIMATING] &&\n          !frameState.viewHints[ViewHint.INTERACTING] &&\n          !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    setTimeout(this.handlePostRender.bind(this), 0);\n\n  };\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setLayerGroup = function setLayerGroup (layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  };\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setSize = function setSize (size) {\n    this.set(MapProperty.SIZE, size);\n  };\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setTarget = function setTarget (target) {\n    this.set(MapProperty.TARGET, target);\n  };\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setView = function setView (view) {\n    this.set(MapProperty.VIEW, view);\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.skipFeature = function skipFeature (feature) {\n    this.skippedFeatureUids_[getUid(feature)] = true;\n    this.render();\n  };\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.updateSize = function updateSize () {\n    var targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      var computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n            parseFloat(computedStyle['borderLeftWidth']) -\n            parseFloat(computedStyle['paddingLeft']) -\n            parseFloat(computedStyle['paddingRight']) -\n            parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n            parseFloat(computedStyle['borderTopWidth']) -\n            parseFloat(computedStyle['paddingTop']) -\n            parseFloat(computedStyle['paddingBottom']) -\n            parseFloat(computedStyle['borderBottomWidth'])\n      ]);\n    }\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.unskipFeature = function unskipFeature (feature) {\n    delete this.skippedFeatureUids_[getUid(feature)];\n    this.render();\n  };\n\n  return PluggableMap;\n}(BaseObject));\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {HTMLElement|Document}\n   */\n  var keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  var values = {};\n\n  var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n    /** @type {LayerGroup} */ (options.layers) : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  var controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.controls).getArray === 'function',\n        47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  var interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.interactions).getArray === 'function',\n        48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  var overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.overlays).getArray === 'function',\n        49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n\n/**\n * @param  {Array<import(\"./layer/Base.js\").default>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\nfunction getLoading(layers) {\n  for (var i = 0, ii = layers.length; i < ii; ++i) {\n    var layer = layers[i];\n    if (typeof /** @type {?} */ (layer).getLayers === 'function') {\n      return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\n    } else {\n      var source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n//# sourceMappingURL=PluggableMap.js.map","/**\n * @module ol/control/Control\n */\nimport {VOID} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /*@__PURE__*/(function (BaseObject) {\n  function Control(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = options.element ? options.element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    /**\n     * @type {function(import(\"../MapEvent.js\").default)}\n     */\n    this.render = options.render ? options.render : VOID;\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n\n  }\n\n  if ( BaseObject ) Control.__proto__ = BaseObject;\n  Control.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Control.prototype.constructor = Control;\n\n  /**\n   * @inheritDoc\n   */\n  Control.prototype.disposeInternal = function disposeInternal () {\n    removeNode(this.element);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Control.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Control.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      var target = this.target_ ?\n        this.target_ : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(listen(map,\n          MapEventType.POSTRENDER, this.render, this));\n      }\n      map.render();\n    }\n  };\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  Control.prototype.setTarget = function setTarget (target) {\n    this.target_ = typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  };\n\n  return Control;\n}(BaseObject));\n\n\nexport default Control;\n\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /*@__PURE__*/(function (Control) {\n  function Attribution(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-attribution';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n  }\n\n  if ( Control ) Attribution.__proto__ = Control;\n  Attribution.prototype = Object.create( Control && Control.prototype );\n  Attribution.prototype.constructor = Attribution;\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  Attribution.prototype.collectSourceAttributions_ = function collectSourceAttributions_ (frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    var lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    var visibleAttributions = [];\n\n    var layerStatesArray = frameState.layerStatesArray;\n    var resolution = frameState.viewState.resolution;\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      if (!visibleAtResolution(layerState, resolution)) {\n        continue;\n      }\n\n      var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      var attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      var attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n        this.setCollapsible(false);\n      }\n\n      if (Array.isArray(attributions)) {\n        for (var j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    return visibleAttributions;\n  };\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  Attribution.prototype.updateElement_ = function updateElement_ (frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var attributions = this.collectSourceAttributions_(frameState);\n\n    var visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (var i = 0, ii = attributions.length; i < ii; ++i) {\n      var element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Attribution.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  Attribution.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  };\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  return Attribution;\n}(Control));\n\n\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\nexport default Attribution;\n\n//# sourceMappingURL=Attribution.js.map","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /*@__PURE__*/(function (Control) {\n  function Rotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-rotate';\n\n    var label = options.label !== undefined ? options.label : '\\u21E7';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = 'ol-compass';\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add('ol-compass');\n    }\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    var button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n\n  }\n\n  if ( Control ) Rotate.__proto__ = Control;\n  Rotate.prototype = Object.create( Control && Control.prototype );\n  Rotate.prototype.constructor = Rotate;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Rotate.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  Rotate.prototype.resetNorth_ = function resetNorth_ () {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    if (view.getRotation() !== undefined) {\n      if (this.duration_ > 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  };\n\n  return Rotate;\n}(Control));\n\n\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  var rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    var transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      var contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n\n//# sourceMappingURL=Rotate.js.map","/**\n * @module ol/control/Zoom\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /*@__PURE__*/(function (Control) {\n  function Zoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom';\n\n    var delta = options.delta !== undefined ? options.delta : 1;\n\n    var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n      options.zoomInTipLabel : 'Zoom in';\n    var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n      options.zoomOutTipLabel : 'Zoom out';\n\n    var inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n    );\n\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\n\n    var outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n    );\n\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Control ) Zoom.__proto__ = Control;\n  Zoom.prototype = Object.create( Control && Control.prototype );\n  Zoom.prototype.constructor = Zoom;\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Zoom.prototype.handleClick_ = function handleClick_ (delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  };\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  Zoom.prototype.zoomByDelta_ = function zoomByDelta_ (delta) {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    var currentResolution = view.getResolution();\n    if (currentResolution) {\n      var newResolution = view.constrainResolution(currentResolution, delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          resolution: newResolution,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setResolution(newResolution);\n      }\n    }\n  };\n\n  return Zoom;\n}(Control));\n\n\nexport default Zoom;\n\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var controls = new Collection();\n\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  var attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/ImageBase\n */\nimport {abstract} from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @abstract\n */\nvar ImageBase = /*@__PURE__*/(function (EventTarget) {\n  function ImageBase(extent, resolution, pixelRatio, state) {\n\n    EventTarget.call(this);\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n\n  }\n\n  if ( EventTarget ) ImageBase.__proto__ = EventTarget;\n  ImageBase.prototype = Object.create( EventTarget && EventTarget.prototype );\n  ImageBase.prototype.constructor = ImageBase;\n\n  /**\n   * @protected\n   */\n  ImageBase.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  ImageBase.prototype.getExtent = function getExtent () {\n    return this.extent;\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  ImageBase.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  ImageBase.prototype.getPixelRatio = function getPixelRatio () {\n    return this.pixelRatio_;\n  };\n\n  /**\n   * @return {number} Resolution.\n   */\n  ImageBase.prototype.getResolution = function getResolution () {\n    return /** @type {number} */ (this.resolution);\n  };\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  ImageBase.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  ImageBase.prototype.load = function load () {\n    abstract();\n  };\n\n  return ImageBase;\n}(EventTarget));\n\n\nexport default ImageBase;\n\n//# sourceMappingURL=ImageBase.js.map","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=))} Loader\n */\n\n\nvar ImageCanvas = /*@__PURE__*/(function (ImageBase) {\n  function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n    var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    ImageBase.call(this, extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {Error}\n     */\n    this.error_ = null;\n\n  }\n\n  if ( ImageBase ) ImageCanvas.__proto__ = ImageBase;\n  ImageCanvas.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageCanvas.prototype.constructor = ImageCanvas;\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {Error} Any error that occurred during rendering.\n   */\n  ImageCanvas.prototype.getError = function getError () {\n    return this.error_;\n  };\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error=} err Any error during drawing.\n   * @private\n   */\n  ImageCanvas.prototype.handleLoad_ = function handleLoad_ (err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageCanvas.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  };\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  ImageCanvas.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  return ImageCanvas;\n}(ImageBase));\n\n\nexport default ImageCanvas;\n\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nvar RenderEvent = /*@__PURE__*/(function (Event) {\n  function RenderEvent(type, opt_vectorContext, opt_frameState, opt_context, opt_glContext) {\n\n    Event.call(this, type);\n\n    /**\n     * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n     * @type {import(\"./VectorContext.js\").default|undefined}\n     * @api\n     */\n    this.vectorContext = opt_vectorContext;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Only available when a Canvas renderer is used, null\n     * otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n\n    /**\n     * WebGL context. Only available when a WebGL renderer is used, null\n     * otherwise.\n     * @type {import(\"../webgl/Context.js\").default|null|undefined}\n     * @api\n     */\n    this.glContext = opt_glContext;\n\n  }\n\n  if ( Event ) RenderEvent.__proto__ = Event;\n  RenderEvent.prototype = Object.create( Event && Event.prototype );\n  RenderEvent.prototype.constructor = RenderEvent;\n\n  return RenderEvent;\n}(Event));\n\nexport default RenderEvent;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = function VectorContext () {};\n\nVectorContext.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {};\n\n/**\n * Render a geometry.\n *\n * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function drawGeometry (geometry) {};\n\n/**\n * Set the rendering style.\n *\n * @param {import(\"../style/Style.js\").default} style The rendering style.\n */\nVectorContext.prototype.setStyle = function setStyle (style) {};\n\n/**\n * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawCircle = function drawCircle (circleGeometry, feature) {};\n\n/**\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n */\nVectorContext.prototype.drawFeature = function drawFeature (feature, style) {};\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function drawGeometryCollection (geometryCollectionGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPoint = function drawPoint (pointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawText = function drawText (geometry, feature) {};\n\n/**\n * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {};\n\n/**\n * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function setImageStyle (imageStyle, opt_declutterGroup) {};\n\n/**\n * @param {import(\"../style/Text.js\").default} textStyle Text style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function setTextStyle (textStyle, opt_declutterGroup) {};\n\nexport default VectorContext;\n\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /*@__PURE__*/(function (VectorContext) {\n  function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n    VectorContext.call(this);\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageScale_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textScale_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n\n  }\n\n  if ( VectorContext ) CanvasImmediateRenderer.__proto__ = VectorContext;\n  CanvasImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasImmediateRenderer.prototype.constructor = CanvasImmediateRenderer;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawImages_ = function drawImages_ (flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var localTransform = this.tmpLocalTransform_;\n    var alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    var rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      var x = pixelCoordinates[i] - this.imageAnchorX_;\n      var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (rotation !== 0 || this.imageScale_ != 1) {\n        var centerX = x + this.imageAnchorX_;\n        var centerY = y + this.imageAnchorY_;\n        composeTransform(localTransform,\n          centerX, centerY,\n          this.imageScale_, this.imageScale_,\n          rotation,\n          -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n      context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n        this.imageWidth_, this.imageHeight_, x, y,\n        this.imageWidth_, this.imageHeight_);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      var x = pixelCoordinates[offset] + this.textOffsetX_;\n      var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (rotation !== 0 || this.textScale_ != 1) {\n        var localTransform = composeTransform(this.tmpLocalTransform_,\n          x, y,\n          this.textScale_, this.textScale_,\n          rotation,\n          -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n      if (this.textStrokeState_) {\n        context.strokeText(this.text_, x, y);\n      }\n      if (this.textFillState_) {\n        context.fillText(this.text_, x, y);\n      }\n    }\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  CanvasImmediateRenderer.prototype.moveToLineTo_ = function moveToLineTo_ (flatCoordinates, offset, end, stride, close) {\n    var context = this.context_;\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    var length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (var i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasImmediateRenderer.prototype.drawRings_ = function drawRings_ (flatCoordinates, offset, ends, stride) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  };\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawCircle = function drawCircle (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var pixelCoordinates = transformGeom2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n      var dx = pixelCoordinates[2] - pixelCoordinates[0];\n      var dy = pixelCoordinates[3] - pixelCoordinates[1];\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      var context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  };\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.setStyle = function setStyle (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry) {\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  };\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPoint = function drawPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawLineString = function drawLineString (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry) {\n    var geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      var offset = 0;\n      var ends = /** @type {Array<number>} */ (geometry.getEnds());\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  };\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      var flatCoordinates = geometry.getOrientedFlatCoordinates();\n      var offset = 0;\n      var endss = geometry.getEndss();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextFillState_ = function setContextFillState_ (fillState) {\n    var context = this.context_;\n    var contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextStrokeState_ = function setContextStrokeState_ (strokeState) {\n    var context = this.context_;\n    var contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      if (CANVAS_LINE_DASH) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      }\n      if (CANVAS_LINE_DASH) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = context.lineDashOffset =\n              strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = context.miterLimit =\n            strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = context.strokeStyle =\n            strokeState.strokeStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextTextState_ = function setContextTextState_ (textState) {\n    var context = this.context_;\n    var contextTextState = this.contextTextState_;\n    var textAlign = textState.textAlign ?\n      textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = context.textBaseline =\n          /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  };\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      var fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ?\n          fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      var strokeStyleColor = strokeStyle.getColor();\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      var strokeStyleWidth = strokeStyle.getWidth();\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ?\n          strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ?\n          strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ?\n          strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ?\n          strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n          strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ?\n          strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ?\n          strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  };\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      var imageAnchor = imageStyle.getAnchor();\n      // FIXME pixel ratio\n      var imageImage = imageStyle.getImage(1);\n      var imageOrigin = imageStyle.getOrigin();\n      var imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageWidth_ = imageSize[0];\n    }\n  };\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ?\n            textFillStyleColor : defaultFillStyle)\n        };\n      }\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        var textStrokeStyleWidth = textStrokeStyle.getWidth();\n        var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ?\n            textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ?\n            textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ?\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\n            textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ?\n            textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\n            textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ?\n            textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      var textFont = textStyle.getFont();\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      var textScale = textStyle.getScale();\n      var textText = textStyle.getText();\n      var textTextAlign = textStyle.getTextAlign();\n      var textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ?\n          textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ?\n          textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ?\n          textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n      this.textOffsetY_ =\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n        textScale : 1);\n    }\n  };\n\n  return CanvasImmediateRenderer;\n}(VectorContext));\n\n\nexport default CanvasImmediateRenderer;\n\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/renderer/Map\n */\nimport {abstract, getUid} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n/**\n * @abstract\n */\nvar MapRenderer = /*@__PURE__*/(function (Disposable) {\n  function MapRenderer(map) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"./Layer.js\").default>}\n     */\n    this.layerRenderers_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     */\n    this.layerRendererListeners_ = {};\n\n    /**\n     * @private\n     * @type {Array<typeof import(\"./Layer.js\").default>}\n     */\n    this.layerRendererConstructors_ = [];\n\n  }\n\n  if ( Disposable ) MapRenderer.__proto__ = Disposable;\n  MapRenderer.prototype = Object.create( Disposable && Disposable.prototype );\n  MapRenderer.prototype.constructor = MapRenderer;\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    abstract();\n  };\n\n  /**\n   * Register layer renderer constructors.\n   * @param {Array<typeof import(\"./Layer.js\").default>} constructors Layer renderers.\n   */\n  MapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  MapRenderer.prototype.calculateMatrices2D = function calculateMatrices2D (frameState) {\n    var viewState = frameState.viewState;\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n    invertTransform(\n      transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n  };\n\n  /**\n   * Removes all layer renderers.\n   */\n  MapRenderer.prototype.removeLayerRenderers = function removeLayerRenderers () {\n    for (var key in this.layerRenderers_) {\n      this.removeLayerRendererByKey_(key).dispose();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n   *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(feature, layer) {\n      var managed = frameState.layerStates[getUid(layer)].managed;\n      if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n\n    var projection = viewState.projection;\n\n    var translatedCoordinate = coordinate;\n    if (projection.canWrapX()) {\n      var projectionExtent = projection.getExtent();\n      var worldWidth = getWidth(projectionExtent);\n      var x = coordinate[0];\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this.getLayerRenderer(layer);\n        var source = /** @type {import(\"../layer/Layer.js\").default} */ (layer).getSource();\n        if (source) {\n          result = layerRenderer.forEachFeatureAtCoordinate(\n            source.getWrapX() ? translatedCoordinate : coordinate,\n            frameState, hitTolerance, forEachFeatureAtCoordinate);\n        }\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    return abstract();\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  MapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n    return hasFeature !== undefined;\n  };\n\n  /**\n   * @param {import(\"../layer/Base.js\").default} layer Layer.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRenderer = function getLayerRenderer (layer) {\n    var layerKey = getUid(layer);\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    } else {\n      var renderer;\n      for (var i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n        var candidate = this.layerRendererConstructors_[i];\n        if (candidate['handles'](layer)) {\n          renderer = candidate['create'](this, layer);\n          break;\n        }\n      }\n      if (renderer) {\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer,\n          EventType.CHANGE, this.handleLayerRendererChange_, this);\n      } else {\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\n      }\n      return renderer;\n    }\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRendererByKey = function getLayerRendererByKey (layerKey) {\n    return this.layerRenderers_[layerKey];\n  };\n\n  /**\n   * @protected\n   * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n   */\n  MapRenderer.prototype.getLayerRenderers = function getLayerRenderers () {\n    return this.layerRenderers_;\n  };\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  MapRenderer.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.handleLayerRendererChange_ = function handleLayerRendererChange_ () {\n    this.map_.render();\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.removeLayerRendererByKey_ = function removeLayerRendererByKey_ (layerKey) {\n    var layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n\n    return layerRenderer;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  MapRenderer.prototype.removeUnusedLayerRenderers_ = function removeUnusedLayerRenderers_ (map, frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!frameState || !(layerKey in frameState.layerStates)) {\n        this.removeLayerRendererByKey_(layerKey).dispose();\n      }\n    }\n  };\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    abstract();\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleExpireIconCache = function scheduleExpireIconCache (frameState) {\n    frameState.postRenderFunctions.push(/** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (expireIconCache));\n  };\n\n  /**\n   * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function scheduleRemoveUnusedLayerRenderers (frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!(layerKey in frameState.layerStates)) {\n        frameState.postRenderFunctions.push(\n          /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (this.removeUnusedLayerRenderers_.bind(this))\n        );\n        return;\n      }\n    }\n  };\n\n  return MapRenderer;\n}(Disposable));\n\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * @param {import(\"../layer/Layer.js\").State} state1 First layer state.\n * @param {import(\"../layer/Layer.js\").State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array<typeof import(\"../Layer.js\").default>}\n */\nexport var layerRendererConstructors = [];\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CanvasMapRenderer = /*@__PURE__*/(function (MapRenderer) {\n  function CanvasMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( MapRenderer ) CanvasMapRenderer.__proto__ = MapRenderer;\n  CanvasMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  CanvasMapRenderer.prototype.constructor = CanvasMapRenderer;\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  CanvasMapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    var map = this.getMap();\n    var context = this.context_;\n    if (map.hasListener(type)) {\n      var extent = frameState.extent;\n      var pixelRatio = frameState.pixelRatio;\n      var viewState = frameState.viewState;\n      var rotation = viewState.rotation;\n\n      var transform = this.getTransform(frameState);\n\n      var vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n        extent, transform, rotation);\n      var composeEvent = new RenderEvent(type, vectorContext,\n        frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasMapRenderer.prototype.getTransform = function getTransform (frameState) {\n    var viewState = frameState.viewState;\n    var dx1 = this.canvas_.width / 2;\n    var dy1 = this.canvas_.height / 2;\n    var sx = frameState.pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0];\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var context = this.context_;\n    var pixelRatio = frameState.pixelRatio;\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    var rotation = frameState.viewState.rotation;\n\n    this.calculateMatrices2D(frameState);\n\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      var layer = layerState.layer;\n      var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n      if (!visibleAtResolution(layerState, viewResolution) ||\n          layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n\n    var coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n    for (var i = 0, ii = constructors.length; i < ii; ++i) {\n      var ctor = constructors[i];\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  };\n\n  return CanvasMapRenderer;\n}(MapRenderer));\n\n\nexport default CanvasMapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/Layer\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\n\nvar LayerRenderer = /*@__PURE__*/(function (Observable) {\n  function LayerRenderer(layer) {\n\n    Observable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../layer/Layer.js\").default}\n     */\n    this.layer_ = layer;\n\n  }\n\n  if ( Observable ) LayerRenderer.__proto__ = Observable;\n  LayerRenderer.prototype = Object.create( Observable && Observable.prototype );\n  LayerRenderer.prototype.constructor = LayerRenderer;\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  LayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        /**\n         * @param {import(\"../Tile.js\").default} tile Tile.\n         */\n        function callback(tile) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @return {T|void} Callback result.\n   * @template T\n   */\n  LayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {};\n\n  /**\n   * @return {import(\"../layer/Layer.js\").default} Layer.\n   */\n  LayerRenderer.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  LayerRenderer.prototype.handleImageChange_ = function handleImageChange_ (event) {\n    var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Is there a feature at the given coordinate?\n   */\n  LayerRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState) {\n    return false;\n  };\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  LayerRenderer.prototype.loadImage = function loadImage (image) {\n    var imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      listen(image, EventType.CHANGE, this.handleImageChange_, this);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  };\n\n  /**\n   * @protected\n   */\n  LayerRenderer.prototype.renderIfReadyAndVisible = function renderIfReadyAndVisible () {\n    var layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  LayerRenderer.prototype.scheduleExpireCache = function scheduleExpireCache (frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../PluggableMap.js\").default} map Map.\n       * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      var postRenderFunction = function(tileSource, map, frameState) {\n        var tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]);\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  };\n\n  /**\n   * @param {!Object<string, !Object<string, import(\"../TileRange.js\").default>>} usedTiles Used tiles.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {number} z Z.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @protected\n   */\n  LayerRenderer.prototype.updateUsedTiles = function updateUsedTiles (usedTiles, tileSource, z, tileRange) {\n    // FIXME should we use tilesToDrawByZ instead?\n    var tileSourceKey = getUid(tileSource);\n    var zKey = z.toString();\n    if (tileSourceKey in usedTiles) {\n      if (zKey in usedTiles[tileSourceKey]) {\n        usedTiles[tileSourceKey][zKey].extend(tileRange);\n      } else {\n        usedTiles[tileSourceKey][zKey] = tileRange;\n      }\n    } else {\n      usedTiles[tileSourceKey] = {};\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  };\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(this: T, import(\"../Tile.js\").default)=} opt_tileCallback Tile callback.\n   * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n   * @protected\n   * @template T\n   */\n  LayerRenderer.prototype.manageTilePyramid = function manageTilePyramid (\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback,\n    opt_this\n  ) {\n    var tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    var wantedTiles = frameState.wantedTiles[tileSourceKey];\n    var tileQueue = frameState.tileQueue;\n    var minZoom = tileGrid.getMinZoom();\n    var tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([tile, tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback.call(opt_this, tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n  };\n\n  return LayerRenderer;\n}(Observable));\n\nexport default LayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {abstract} from '../../util.js';\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = /*@__PURE__*/(function (LayerRenderer) {\n  function CanvasLayerRenderer(layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( LayerRenderer ) CanvasLayerRenderer.__proto__ = LayerRenderer;\n  CanvasLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  CanvasLayerRenderer.prototype.constructor = CanvasLayerRenderer;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.clip = function clip (context, frameState, extent) {\n    var pixelRatio = frameState.pixelRatio;\n    var width = frameState.size[0] * pixelRatio;\n    var height = frameState.size[1] * pixelRatio;\n    var rotation = frameState.viewState.rotation;\n    var topLeft = getTopLeft(extent);\n    var topRight = getTopRight(extent);\n    var bottomRight = getBottomRight(extent);\n    var bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  };\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @private\n   */\n  CanvasLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState, opt_transform) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var width = frameState.size[0] * frameState.pixelRatio;\n      var height = frameState.size[1] * frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      rotateAtOffset(context, -rotation, width / 2, height / 2);\n      var transform = opt_transform !== undefined ?\n        opt_transform : this.getTransform(frameState, 0);\n      var render = new CanvasImmediateRenderer(\n        context, frameState.pixelRatio, frameState.extent, transform,\n        frameState.viewState.rotation);\n      var composeEvent = new RenderEvent(type, render, frameState,\n        context, null);\n      layer.dispatchEvent(composeEvent);\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  CanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.preCompose = function preCompose (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasLayerRenderer.prototype.getTransform = function getTransform (frameState, offsetX) {\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var dx1 = pixelRatio * frameState.size[0] / 2;\n    var dy1 = pixelRatio * frameState.size[1] / 2;\n    var sx = pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0] + offsetX;\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  CanvasLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    return abstract();\n  };\n\n  return CanvasLayerRenderer;\n}(LayerRenderer));\n\nexport default CanvasLayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {abstract} from '../../util.js';\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar IntermediateCanvasRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function IntermediateCanvasRenderer(layer) {\n\n    CanvasLayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToCanvasPixelTransform = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n  }\n\n  if ( CanvasLayerRenderer ) IntermediateCanvasRenderer.__proto__ = CanvasLayerRenderer;\n  IntermediateCanvasRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  IntermediateCanvasRenderer.prototype.constructor = IntermediateCanvasRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n\n    this.preCompose(context, frameState);\n\n    var image = this.getImage();\n    if (image) {\n\n      // clipped rendering if layer extent is set\n      var extent = layerState.extent;\n      var clipped = extent !== undefined &&\n          !containsExtent(extent, frameState.extent) &&\n          intersects(extent, frameState.extent);\n      if (clipped) {\n        this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (extent));\n      }\n\n      var imageTransform = this.getImageTransform();\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      var alpha = context.globalAlpha;\n      context.globalAlpha = layerState.opacity;\n\n      // for performance reasons, context.setTransform is only used\n      // when the view is rotated. see http://jsperf.com/canvas-transform\n      var dx = imageTransform[4];\n      var dy = imageTransform[5];\n      var dw = image.width * imageTransform[0];\n      var dh = image.height * imageTransform[3];\n      if (dw >= 0.5 && dh >= 0.5) {\n        context.drawImage(image, 0, 0, +image.width, +image.height,\n          Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n      }\n      context.globalAlpha = alpha;\n\n      if (clipped) {\n        context.restore();\n      }\n    }\n\n    this.postCompose(context, frameState, layerState);\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Canvas.\n   */\n  IntermediateCanvasRenderer.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @return {!import(\"../../transform.js\").Transform} Image transform.\n   */\n  IntermediateCanvasRenderer.prototype.getImageTransform = function getImageTransform () {\n    return abstract();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.getImage()) {\n      return undefined;\n    }\n\n    var pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n    scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n    var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(), imageData);\n    } else {\n      return undefined;\n    }\n  };\n\n  return IntermediateCanvasRenderer;\n}(CanvasLayerRenderer));\n\n\nexport default IntermediateCanvasRenderer;\n\n//# sourceMappingURL=IntermediateCanvas.js.map","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasImageLayerRenderer(imageLayer) {\n\n    IntermediateCanvasRenderer.call(this, imageLayer);\n\n    /**\n     * @private\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @type {!Array<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = null;\n\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (var i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        var ctor = layerRendererConstructors[i];\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this.vectorRenderer_ = /** @type {import(\"./VectorLayer.js\").default} */ (new ctor(imageLayer));\n          break;\n        }\n      }\n    }\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasImageLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasImageLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasImageLayerRenderer.prototype.constructor = CanvasImageLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n    IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImage = function getImage () {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n\n    var image;\n    var imageLayer = /** @type {import(\"../../layer/Image.js\").default} */ (this.getLayer());\n    var imageSource = /** @type {import(\"../../source/Image.js\").default} */ (imageLayer.getSource());\n\n    var hints = frameState.viewHints;\n\n    var vectorRenderer = this.vectorRenderer_;\n    var renderedExtent = frameState.extent;\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var skippedFeatures = this.skippedFeatures_;\n      if (vectorRenderer) {\n        var context = vectorRenderer.context;\n        var imageFrameState = /** @type {import(\"../../PluggableMap.js\").FrameState} */ (assign({}, frameState, {\n          size: [\n            getWidth(renderedExtent) / viewResolution,\n            getHeight(renderedExtent) / viewResolution\n          ],\n          viewState: /** @type {import(\"../../View.js\").State} */ (assign({}, frameState.viewState, {\n            rotation: 0\n          }))\n        }));\n        var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n              (vectorRenderer.replayGroupChanged ||\n              !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(\n          renderedExtent, viewResolution, pixelRatio, projection);\n      }\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      image = this.image_;\n      var imageExtent = image.getExtent();\n      var imageResolution = image.getResolution();\n      var imagePixelRatio = image.getPixelRatio();\n      var scale = pixelRatio * imageResolution /\n          (viewResolution * imagePixelRatio);\n      var transform = composeTransform(this.imageTransform_,\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n        scale, scale,\n        0,\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform,\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\n        0,\n        -viewCenter[0], -viewCenter[1]);\n\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback);\n    } else {\n      return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback);\n    }\n  };\n\n  return CanvasImageLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {import(\"../../layer/Vector.js\").default} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasImageLayerRenderer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {import(\"../../layer/Image.js\").default} */ (layer));\n};\n\n\nexport default CanvasImageLayerRenderer;\n\n//# sourceMappingURL=ImageLayer.js.map","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = function TileRange(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function contains (tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function containsTileRange (tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n     this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function containsXY (x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function equals (tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n     this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function extend (tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n/**\n * @return {number} Height.\n */\nTileRange.prototype.getHeight = function getHeight () {\n  return this.maxY - this.minY + 1;\n};\n\n/**\n * @return {import(\"./size.js\").Size} Size.\n */\nTileRange.prototype.getSize = function getSize () {\n  return [this.getWidth(), this.getHeight()];\n};\n\n/**\n * @return {number} Width.\n */\nTileRange.prototype.getWidth = function getWidth () {\n  return this.maxX - this.minX + 1;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Intersects.\n */\nTileRange.prototype.intersects = function intersects (tileRange) {\n  return this.minX <= tileRange.maxX &&\n     this.maxX >= tileRange.minX &&\n     this.minY <= tileRange.maxY &&\n     this.maxY >= tileRange.minY;\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\nexport default TileRange;\n\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasTileLayerRenderer(tileLayer, opt_noContext) {\n\n    IntermediateCanvasRenderer.call(this, tileLayer);\n\n    /**\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = opt_noContext ? null : createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.oversampling_;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.zDirection = 0;\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasTileLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasTileLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasTileLayerRenderer.prototype.constructor = CanvasTileLayerRenderer;\n\n  /**\n   * @private\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  CanvasTileLayerRenderer.prototype.isDrawableTile_ = function isDrawableTile_ (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileState = tile.getState();\n    var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return tileState == TileState.LOADED ||\n        tileState == TileState.EMPTY ||\n        tileState == TileState.ERROR && !useInterimTilesOnError;\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  CanvasTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile_(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var viewResolution = viewState.resolution;\n    var viewCenter = viewState.center;\n\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var sourceRevision = tileSource.getRevision();\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n    var tileResolution = tileGrid.getResolution(z);\n    var oversampling = Math.round(viewResolution / tileResolution) || 1;\n    var extent = frameState.extent;\n\n    if (layerState.extent !== undefined) {\n      extent = getIntersection(extent, layerState.extent);\n    }\n    if (isEmpty(extent)) {\n      // Return false to prevent the rendering of the layer.\n      return false;\n    }\n\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    var imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n    var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    var tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    var findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n    var hints = frameState.viewHints;\n    var animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n    var tmpExtent = this.tmpExtent;\n    var tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    var tile, x, y;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n          continue;\n        }\n        tile = this.getTile(z, x, y, pixelRatio, projection);\n        if (this.isDrawableTile_(tile)) {\n          var uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            var inTransition = tile.inTransition(uid);\n            if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        var childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord, tmpTileRange, tmpExtent);\n        var covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        }\n\n      }\n    }\n\n    var renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n      this.newTiles_ ||\n          !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n          this.renderedRevision != sourceRevision ||\n          oversampling != this.oversampling_ ||\n          !animatingOrInteracting && renderedResolution != this.renderedResolution\n    )) {\n\n      var context = this.context;\n      if (context) {\n        var tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n        var width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n        var height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n          this.oversampling_ = oversampling;\n          canvas.width = width;\n          canvas.height = height;\n        } else {\n          if (this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) {\n            context.clearRect(0, 0, width, height);\n          }\n          oversampling = this.oversampling_;\n        }\n      }\n\n      this.renderedTiles.length = 0;\n      /** @type {Array<number>} */\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(function(a, b) {\n        if (a === z) {\n          return 1;\n        } else if (b === z) {\n          return -1;\n        } else {\n          return a > b ? 1 : a < b ? -1 : 0;\n        }\n      });\n      var currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n      var tileExtent, tileGutter, tilesToDraw, w, h;\n      for (i = 0, ii = zs.length; i < ii; ++i) {\n        currentZ = zs[i];\n        currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n        currentResolution = tileGrid.getResolution(currentZ);\n        currentScale = currentResolution / tileResolution;\n        tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n        tilesToDraw = tilesToDrawByZ[currentZ];\n        for (var tileCoordKey in tilesToDraw) {\n          tile = tilesToDraw[tileCoordKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n          x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n          y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n          w = currentTilePixelSize[0] * currentScale / oversampling;\n          h = currentTilePixelSize[1] * currentScale / oversampling;\n          this.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n          this.renderedTiles.push(tile);\n        }\n      }\n\n      this.renderedRevision = sourceRevision;\n      this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n      this.renderedExtent_ = imageExtent;\n    }\n\n    var scale = this.renderedResolution / viewResolution;\n    var transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n      (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n      projection, extent, z, tileLayer.getPreload());\n    this.scheduleExpireCache(frameState, tileSource);\n\n    return this.renderedTiles.length > 0;\n  };\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  CanvasTileLayerRenderer.prototype.drawTileImage = function drawTileImage (tile, frameState, layerState, x, y, w, h, gutter, transition) {\n    var image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    var uid = getUid(this);\n    var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\n      this.context.clearRect(x, y, w, h);\n    }\n    var alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(image, gutter, gutter,\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImage = function getImage () {\n    var context = this.context;\n    return context ? context.canvas : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  CanvasTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\n  };\n\n  return CanvasTileLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasTileLayerRenderer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {import(\"../../layer/Tile.js\").default} */ (layer));\n};\n\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\nexport default CanvasTileLayerRenderer;\n\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/render/ReplayGroup\n */\nimport {abstract} from '../util.js';\n\n/**\n * Base class for replay groups.\n */\nvar ReplayGroup = function ReplayGroup () {};\n\nReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\nReplayGroup.prototype.isEmpty = function isEmpty () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {boolean} group Group with previous replay\n * @return {Array<*>} The resulting instruction group\n */\nReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n  return abstract();\n};\n\nexport default ReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n\n//# sourceMappingURL=ReplayType.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  var result = [];\n\n  // Keep text upright\n  var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  var numChars = text.length;\n\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  var x2 = flatCoordinates[offset];\n  var y2 = flatCoordinates[offset + 1];\n  var segmentM = 0;\n  var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  var chunk = '';\n  var chunkLength = 0;\n  var data, index, previousAngle;\n  for (var i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    var char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    var charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    var charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    var segmentPos = charM - segmentM;\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      var delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    var interpolate = segmentPos / segmentLength;\n    var x = lerp(x1, x2, interpolate);\n    var y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nvar Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/replay\n */\nimport ReplayType from './ReplayType.js';\n\n\n/**\n * @const\n * @type {Array<ReplayType>}\n */\nexport var ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n\n//# sourceMappingURL=replay.js.map","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid} from '../../util.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n\n\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\nvar CanvasReplay = /*@__PURE__*/(function (VectorContext) {\n  function CanvasReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    VectorContext.call(this);\n\n    /**\n     * @type {?}\n     */\n    this.declutterTree = declutterTree;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n  }\n\n  if ( VectorContext ) CanvasReplay.__proto__ = VectorContext;\n  CanvasReplay.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasReplay.prototype.constructor = CanvasReplay;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayTextBackground_ = function replayTextBackground_ (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n      context.stroke();\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {number} height Height.\n   * @param {number} opacity Opacity.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {number} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {number} width Width.\n   * @param {Array<number>} padding Padding.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayImage_ = function replayImage_ (\n    context,\n    x,\n    y,\n    image,\n    anchorX,\n    anchorY,\n    declutterGroup,\n    height,\n    opacity,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    width,\n    padding,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    var fillStroke = fillInstruction || strokeInstruction;\n    anchorX *= scale;\n    anchorY *= scale;\n    x -= anchorX;\n    y -= anchorY;\n\n    var w = (width + originX > image.width) ? image.width - originX : width;\n    var h = (height + originY > image.height) ? image.height - originY : height;\n    var boxW = padding[3] + w * scale + padding[1];\n    var boxH = padding[0] + h * scale + padding[2];\n    var boxX = x - padding[3];\n    var boxY = y - padding[0];\n\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p1;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p2;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p3;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p4;\n    if (fillStroke || rotation !== 0) {\n      p1 = [boxX, boxY];\n      p2 = [boxX + boxW, boxY];\n      p3 = [boxX + boxW, boxY + boxH];\n      p4 = [boxX, boxY + boxH];\n    }\n\n    var transform = null;\n    if (rotation !== 0) {\n      var centerX = x + anchorX;\n      var centerY = y + anchorY;\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n      createOrUpdateEmpty(tmpExtent);\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n    } else {\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n    }\n    var canvas = context.canvas;\n    var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n    var intersects =\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (declutterGroup) {\n      if (!intersects && declutterGroup[4] == 1) {\n        return;\n      }\n      extend(declutterGroup, tmpExtent);\n      var declutterArgs = intersects ?\n        [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n        null;\n      if (declutterArgs && fillStroke) {\n        declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n      }\n      declutterGroup.push(declutterArgs);\n    } else if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction));\n      }\n      drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n    }\n  };\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  CanvasReplay.prototype.applyPixelRatio = function applyPixelRatio (dashArray) {\n    var pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n      return dash * pixelRatio;\n    });\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  CanvasReplay.prototype.appendFlatCoordinates = function appendFlatCoordinates (flatCoordinates, offset, end, stride, closed, skipFirst) {\n\n    var myEnd = this.coordinates.length;\n    var extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    var lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var nextCoord = [NaN, NaN];\n    var skipped = true;\n\n    var i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          this.coordinates[myEnd++] = lastCoord[0];\n          this.coordinates[myEnd++] = lastCoord[1];\n        }\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else if (nextRel === Relationship.INTERSECTING) {\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastCoord[0] = nextCoord[0];\n      lastCoord[1] = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      this.coordinates[myEnd++] = lastCoord[0];\n      this.coordinates[myEnd++] = lastCoord[1];\n    }\n    return myEnd;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} replayEnds Replay ends.\n   * @return {number} Offset.\n   */\n  CanvasReplay.prototype.drawCustomCoordinates_ = function drawCustomCoordinates_ (flatCoordinates, offset, ends, stride, replayEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var replayEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n      replayEnds.push(replayEnd);\n      offset = end;\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasReplay.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    var type = geometry.getType();\n    var stride = geometry.getStride();\n    var replayBegin = this.coordinates.length;\n    var flatCoordinates, replayEnd, replayEnds, replayEndss;\n    var offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\n      replayEndss = [];\n      var endss = geometry.getEndss();\n      offset = 0;\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var myEnds = [];\n        offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n        replayEndss.push(myEnds);\n      }\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n      replayEnds = [];\n      flatCoordinates = (type == GeometryType.POLYGON) ?\n        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n        geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride, replayEnds);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      replayEnd = this.appendFlatCoordinates(\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      replayEnd = this.coordinates.length;\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer]);\n    }\n    this.endGeometry(geometry, feature);\n  };\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.beginGeometry = function beginGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplay.prototype.finish = function finish () {};\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasReplay.prototype.fill_ = function fill_ (context) {\n    if (this.alignFill_) {\n      var origin = applyTransform(this.renderedTransform_, [0, 0]);\n      var repeatSize = 512 * this.pixelRatio;\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.setTransform.apply(context, resetTransform);\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  CanvasReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (context, instruction) {\n    context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (CANVAS_LINE_DASH) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.renderDeclutter_ = function renderDeclutter_ (declutterGroup, feature) {\n    if (declutterGroup && declutterGroup.length > 5) {\n      var groupCount = declutterGroup[4];\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n        /** @type {import(\"../../structs/RBush.js\").Entry} */\n        var box = {\n          minX: /** @type {number} */ (declutterGroup[0]),\n          minY: /** @type {number} */ (declutterGroup[1]),\n          maxX: /** @type {number} */ (declutterGroup[2]),\n          maxY: /** @type {number} */ (declutterGroup[3]),\n          value: feature\n        };\n        if (!this.declutterTree.collides(box)) {\n          this.declutterTree.insert(box);\n          for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n            var declutterData = /** @type {Array} */ (declutterGroup[j]);\n            if (declutterData) {\n              if (declutterData.length > 11) {\n                this.replayTextBackground_(declutterData[0],\n                  declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                  declutterData[11], declutterData[12]);\n              }\n              drawImage.apply(undefined, declutterData);\n            }\n          }\n        }\n        declutterGroup.length = 5;\n        createOrUpdateEmpty(declutterGroup);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replay_ = function replay_ (\n    context,\n    transform,\n    skippedFeaturesHash,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    opt_hitExtent\n  ) {\n    /** @type {Array<number>} */\n    var pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates, 0, this.coordinates.length, 2,\n        transform, this.pixelCoordinates_);\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    var skipFeatures = !isEmpty(skippedFeaturesHash);\n    var i = 0; // instruction index\n    var ii = instructions.length; // end of instructions\n    var d = 0; // data index\n    var dd; // end of per-instruction data\n    var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n    var pendingFill = 0;\n    var pendingStroke = 0;\n    var lastFillInstruction = null;\n    var lastStrokeInstruction = null;\n    var coordinateCache = this.coordinateCache_;\n    var viewRotation = this.viewRotation_;\n\n    var state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    var /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ feature;\n    var x, y;\n    while (i < ii) {\n      var instruction = instructions[i];\n      var type = /** @type {CanvasInstruction} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n          if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (opt_hitExtent !== undefined && !intersects(\n            opt_hitExtent, feature.getGeometry().getExtent())) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          var x1 = pixelCoordinates[d];\n          var y1 = pixelCoordinates[d + 1];\n          var x2 = pixelCoordinates[d + 2];\n          var y2 = pixelCoordinates[d + 3];\n          var dx = x2 - x1;\n          var dy = y2 - y1;\n          var r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          var renderer = instruction[4];\n          var fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          var coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */\n              (instruction[3]);\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\n          var height = /** @type {number} */ (instruction[7]);\n          var opacity = /** @type {number} */ (instruction[8]);\n          var originX = /** @type {number} */ (instruction[9]);\n          var originY = /** @type {number} */ (instruction[10]);\n          var rotateWithView = /** @type {boolean} */ (instruction[11]);\n          var rotation = /** @type {number} */ (instruction[12]);\n          var scale = /** @type {number} */ (instruction[13]);\n          var width = /** @type {number} */ (instruction[14]);\n\n          var padding = (void 0), backgroundFill = (void 0), backgroundStroke = (void 0);\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = backgroundStroke = false;\n          }\n\n          if (rotateWithView) {\n            rotation += viewRotation;\n          }\n          for (; d < dd; d += 2) {\n            this.replayImage_(context,\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\n              snapToPixel, width, padding,\n              backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null,\n              backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          var begin = /** @type {number} */ (instruction[1]);\n          var end = /** @type {number} */ (instruction[2]);\n          var baseline = /** @type {number} */ (instruction[3]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\n          var overflow = /** @type {number} */ (instruction[5]);\n          var fillKey = /** @type {string} */ (instruction[6]);\n          var maxAngle = /** @type {number} */ (instruction[7]);\n          var measure = /** @type {function(string):number} */ (instruction[8]);\n          var offsetY = /** @type {number} */ (instruction[9]);\n          var strokeKey = /** @type {string} */ (instruction[10]);\n          var strokeWidth = /** @type {number} */ (instruction[11]);\n          var text = /** @type {string} */ (instruction[12]);\n          var textKey = /** @type {string} */ (instruction[13]);\n          var textScale = /** @type {number} */ (instruction[14]);\n\n          var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          var textLength = measure(text);\n          if (overflow || textLength <= pathLength) {\n            /** @type {import(\"./TextReplay.js\").default} */\n            var textReplay = /** @type {?} */ (this);\n            var textAlign = textReplay.textStates[textKey].textAlign;\n            var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            var parts = drawTextOnPath(\n              pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n            if (parts) {\n              var c = (void 0), cc = (void 0), chars = (void 0), label = (void 0), part = (void 0);\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, '', strokeKey);\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n            }\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n            var result = featureCallback(feature);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   */\n  CanvasReplay.prototype.replay = function replay (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n    this.viewRotation_ = viewRotation;\n    this.replay_(context, transform,\n      skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T=} opt_featureCallback\n   *     Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replayHitDetection = function replayHitDetection (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.replay_(context, transform, skippedFeaturesHash,\n      this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n  };\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  CanvasReplay.prototype.reverseHitDetectionInstructions = function reverseHitDetectionInstructions () {\n    var hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    var i;\n    var n = hitDetectionInstructions.length;\n    var instruction;\n    var type;\n    var begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {CanvasInstruction} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var state = this.state;\n    if (fillStyle) {\n      var fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      var strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle);\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap;\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash.slice() : defaultLineDash;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset;\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin;\n      var strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth;\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @return {Array<*>} Fill instruction.\n   */\n  CanvasReplay.prototype.createFill = function createFill (state, geometry) {\n    var fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  CanvasReplay.prototype.applyStroke = function applyStroke (state) {\n    this.instructions.push(this.createStroke(state));\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  CanvasReplay.prototype.createStroke = function createStroke (state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n      state.lineJoin, state.miterLimit,\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n    ];\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState, (import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default)):Array<*>} createFill Create fill.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasReplay.prototype.updateFillStyle = function updateFillStyle (state, createFill, geometry) {\n    var fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state, geometry));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState)} applyStroke Apply stroke.\n   */\n  CanvasReplay.prototype.updateStrokeStyle = function updateStrokeStyle (state, applyStroke) {\n    var strokeStyle = state.strokeStyle;\n    var lineCap = state.lineCap;\n    var lineDash = state.lineDash;\n    var lineDashOffset = state.lineDashOffset;\n    var lineJoin = state.lineJoin;\n    var lineWidth = state.lineWidth;\n    var miterLimit = state.miterLimit;\n    if (state.currentStrokeStyle != strokeStyle ||\n        state.currentLineCap != lineCap ||\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n        state.currentLineDashOffset != lineDashOffset ||\n        state.currentLineJoin != lineJoin ||\n        state.currentLineWidth != lineWidth ||\n        state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  };\n\n  /**\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.endGeometry = function endGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  };\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  CanvasReplay.prototype.getBufferedMaxExtent = function getBufferedMaxExtent () {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        var width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  };\n\n  return CanvasReplay;\n}(VectorContext));\n\n\nexport default CanvasReplay;\n\n//# sourceMappingURL=Replay.js.map","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasImageReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasImageReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n  }\n\n  if ( CanvasReplay ) CanvasImageReplay.__proto__ = CanvasReplay;\n  CanvasImageReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasImageReplay.prototype.constructor = CanvasImageReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} My end.\n   */\n  CanvasImageReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(pointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(multiPointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.setImageStyle = function setImageStyle (imageStyle, declutterGroup) {\n    var anchor = imageStyle.getAnchor();\n    var size = imageStyle.getSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    var image = imageStyle.getImage(1);\n    var origin = imageStyle.getOrigin();\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScale();\n    this.width_ = size[0];\n  };\n\n  return CanvasImageReplay;\n}(CanvasReplay));\n\n\nexport default CanvasImageReplay;\n\n//# sourceMappingURL=ImageReplay.js.map","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasLineStringReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasLineStringReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasLineStringReplay.__proto__ = CanvasReplay;\n  CanvasLineStringReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasLineStringReplay.prototype.constructor = CanvasLineStringReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  CanvasLineStringReplay.prototype.drawFlatCoordinates_ = function drawFlatCoordinates_ (flatCoordinates, offset, end, stride) {\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n    var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(lineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var ends = multiLineStringGeometry.getEnds();\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(multiLineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.finish = function finish () {\n    var state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasLineStringReplay.prototype.applyStroke = function applyStroke (state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    CanvasReplay.prototype.applyStroke.call(this, state);\n    this.instructions.push(beginPathInstruction);\n  };\n\n  return CanvasLineStringReplay;\n}(CanvasReplay));\n\n\nexport default CanvasLineStringReplay;\n\n//# sourceMappingURL=LineStringReplay.js.map","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\n\nvar CanvasPolygonReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasPolygonReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasPolygonReplay.__proto__ = CanvasReplay;\n  CanvasPolygonReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasPolygonReplay.prototype.constructor = CanvasPolygonReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function drawFlatCoordinatess_ (flatCoordinates, offset, ends, stride) {\n    var state = this.state;\n    var fill = state.fillStyle !== undefined;\n    var stroke = state.strokeStyle != undefined;\n    var numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (var i = 0; i < numEnds; ++i) {\n      var end = ends[i];\n      var myBegin = this.coordinates.length;\n      var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(circleGeometry);\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var flatCoordinates = circleGeometry.getFlatCoordinates();\n    var stride = circleGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(circleGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(polygonGeometry);\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var ends = polygonGeometry.getEnds();\n    var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    var stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(polygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(multiPolygonGeometry);\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var endss = multiPolygonGeometry.getEndss();\n    var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    var stride = multiPolygonGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(multiPolygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    var tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      var coordinates = this.coordinates;\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasPolygonReplay.prototype.setFillStrokeStyles_ = function setFillStrokeStyles_ (geometry) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill, geometry);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  };\n\n  return CanvasPolygonReplay;\n}(CanvasReplay));\n\n\nexport default CanvasPolygonReplay;\n\n//# sourceMappingURL=PolygonReplay.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\nvar CanvasTextReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasTextReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_;\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    labelCache.prune();\n\n  }\n\n  if ( CanvasReplay ) CanvasTextReplay.__proto__ = CanvasReplay;\n  CanvasTextReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasTextReplay.prototype.constructor = CanvasTextReplay;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.drawText = function drawText (geometry, feature) {\n    var fillState = this.textFillState_;\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    var begin = this.coordinates.length;\n\n    var geometryType = geometry.getType();\n    var flatCoordinates = null;\n    var end = 2;\n    var stride = 2;\n    var i, ii;\n\n    if (textState.placement === TextPlacement.LINE) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      var ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      stride = geometry.getStride();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        var endss = geometry.getEndss();\n        ends = [];\n        for (i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      var textAlign = textState.textAlign;\n      var flatOffset = 0;\n      var flatEnd;\n      for (var o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (i = flatOffset; i < flatEnd; i += stride) {\n          this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        end = this.coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end, this.declutterGroup_);\n        begin = end;\n      }\n      this.endGeometry(geometry, feature);\n\n    } else {\n      var label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n      var width = label.width / this.pixelRatio;\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n            return;\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (textState.overflow || interiorPoints[i + 2] / this.resolution >= width) {\n              flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n            }\n          }\n          end = flatCoordinates.length;\n          if (end == 0) {\n            return;\n          }\n          break;\n        default:\n      }\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill, geometry);\n          this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      this.drawTextImage_(label, begin, end);\n      this.endGeometry(geometry, feature);\n    }\n  };\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {HTMLCanvasElement} Image.\n   */\n  CanvasTextReplay.prototype.getImage = function getImage (text, textKey, fillKey, strokeKey) {\n    var label;\n    var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n    if (!labelCache.containsKey(key)) {\n      var strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n      var fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n      var textState = this.textStates[textKey] || this.textState_;\n      var pixelRatio = this.pixelRatio;\n      var scale = textState.scale * pixelRatio;\n      var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n      var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n      var lines = text.split('\\n');\n      var numLines = lines.length;\n      var widths = [];\n      var width = measureTextWidths(textState.font, lines, widths);\n      var lineHeight = measureTextHeight(textState.font);\n      var height = lineHeight * numLines;\n      var renderWidth = (width + strokeWidth);\n      var context = createCanvasContext2D(\n        Math.ceil(renderWidth * scale),\n        Math.ceil((height + strokeWidth) * scale));\n      label = context.canvas;\n      labelCache.set(key, label);\n      if (scale != 1) {\n        context.scale(scale, scale);\n      }\n      context.font = textState.font;\n      if (strokeKey) {\n        context.strokeStyle = strokeState.strokeStyle;\n        context.lineWidth = strokeWidth;\n        context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n        context.miterLimit = strokeState.miterLimit;\n        if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n          context.setLineDash(strokeState.lineDash);\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (fillKey) {\n        context.fillStyle = fillState.fillStyle;\n      }\n      context.textBaseline = 'middle';\n      context.textAlign = 'center';\n      var leftRight = (0.5 - align);\n      var x = align * label.width / scale + leftRight * strokeWidth;\n      var i;\n      if (strokeKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n      if (fillKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n    }\n    return labelCache.get(key);\n  };\n\n  /**\n   * @private\n   * @param {HTMLCanvasElement} label Label.\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  CanvasTextReplay.prototype.drawTextImage_ = function drawTextImage_ (label, begin, end) {\n    var textState = this.textState_;\n    var strokeState = this.textStrokeState_;\n    var pixelRatio = this.pixelRatio;\n    var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n    var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n    var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n    this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1, label.width,\n      textState.padding == defaultPadding ?\n        defaultPadding : textState.padding.map(function(p) {\n          return p * pixelRatio;\n        }),\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1 / pixelRatio, label.width, textState.padding,\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n  };\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   */\n  CanvasTextReplay.prototype.drawChars_ = function drawChars_ (begin, end, declutterGroup) {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    var fillState = this.textFillState_;\n\n    var strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = /** @type {import(\"../canvas.js\").StrokeState} */ ({\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        });\n      }\n    }\n    var textKey = this.textKey_;\n    if (!(this.textKey_ in this.textStates)) {\n      this.textStates[this.textKey_] = /** @type {import(\"../canvas.js\").TextState} */ ({\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        scale: textState.scale\n      });\n    }\n    var fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = /** @type {import(\"../canvas.js\").FillState} */ ({\n          fillStyle: fillState.fillStyle\n        });\n      }\n    }\n\n    var pixelRatio = this.pixelRatio;\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n\n    var offsetY = this.textOffsetY_ * pixelRatio;\n    var text = this.text_;\n    var font = textState.font;\n    var textScale = textState.scale;\n    var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n    var widths = this.widths_[font];\n    if (!widths) {\n      this.widths_[font] = widths = {};\n    }\n    this.instructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale * pixelRatio;\n      },\n      offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale;\n      },\n      offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n    ]);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.setTextStyle = function setTextStyle (textStyle, declutterGroup) {\n    var textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = this.textFillState_ = null;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = this.textStrokeState_ = null;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n        }\n        var lineDash = textStrokeStyle.getLineDash();\n        var lineDashOffset = textStrokeStyle.getLineDashOffset();\n        var lineWidth = textStrokeStyle.getWidth();\n        var miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n            lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n            lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n            miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      var font = textStyle.getFont() || defaultFont;\n      checkFont(font);\n      var textScale = textStyle.getScale();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? 1 : textScale;\n\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState ?\n        (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n        strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n        strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n        '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n      this.fillKey_ = fillState ?\n        (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n        '';\n    }\n  };\n\n  return CanvasTextReplay;\n}(CanvasReplay));\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  var numLines = lines.length;\n  var width = 0;\n  for (var i = 0; i < numLines; ++i) {\n    var currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\nexport default CanvasTextReplay;\n\n//# sourceMappingURL=TextReplay.js.map","/**\n * @module ol/render/canvas/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from './Replay.js';\nimport CanvasImageReplay from './ImageReplay.js';\nimport CanvasLineStringReplay from './LineStringReplay.js';\nimport CanvasPolygonReplay from './PolygonReplay.js';\nimport CanvasTextReplay from './TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object<ReplayType, typeof CanvasReplay>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\nvar CanvasReplayGroup = /*@__PURE__*/(function (ReplayGroup) {\n  function CanvasReplayGroup(\n    tolerance,\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    declutterTree,\n    opt_renderBuffer\n  ) {\n    ReplayGroup.call(this);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = declutterTree;\n\n    /**\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     * @private\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<ReplayType, CanvasReplay>>}\n     */\n    this.replaysByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n  }\n\n  if ( ReplayGroup ) CanvasReplayGroup.__proto__ = ReplayGroup;\n  CanvasReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  CanvasReplayGroup.prototype.constructor = CanvasReplayGroup;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n    var declutter = null;\n    if (this.declutterTree_) {\n      if (group) {\n        declutter = this.declutterGroup_;\n        /** @type {number} */ (declutter[4])++;\n      } else {\n        declutter = this.declutterGroup_ = createEmpty();\n        declutter.push(1);\n      }\n    }\n    return declutter;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  CanvasReplayGroup.prototype.clip = function clip (context, transform) {\n    var flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  };\n\n  /**\n   * @param {Array<ReplayType>} replays Replays.\n   * @return {boolean} Has replays of the provided types.\n   */\n  CanvasReplayGroup.prototype.hasReplays = function hasReplays (replays) {\n    for (var zIndex in this.replaysByZIndex_) {\n      var candidates = this.replaysByZIndex_[zIndex];\n      for (var i = 0, ii = replays.length; i < ii; ++i) {\n        if (replays[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplayGroup.prototype.finish = function finish () {\n    for (var zKey in this.replaysByZIndex_) {\n      var replays = this.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        replays[replayKey].finish();\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T} callback Feature callback.\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>} declutterReplays Declutter replays.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    skippedFeaturesHash,\n    callback,\n    declutterReplays\n  ) {\n\n    hitTolerance = Math.round(hitTolerance);\n    var contextSize = hitTolerance * 2 + 1;\n    var transform = composeTransform(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n    var context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    var mask = getCircleArray(hitTolerance);\n    var declutteredFeatures;\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n        return entry.value;\n      });\n    }\n\n    var replayType;\n\n    /**\n     * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n     * @return {?} Callback result.\n     */\n    function featureCallback(feature) {\n      var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n      for (var i = 0; i < contextSize; i++) {\n        for (var j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              var result = (void 0);\n              if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                  declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    var i, j, replays, replay, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replayType = ORDER[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = declutterReplays[zIndexKey];\n            if (!declutter) {\n              declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            result = replay.replayHitDetection(context, transform, rotation,\n              skippedFeaturesHash, featureCallback, hitExtent);\n            if (result) {\n              return result;\n            }\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  CanvasReplayGroup.prototype.getClipCoords = function getClipCoords (transform) {\n    var maxExtent = this.maxExtent_;\n    var minX = maxExtent[0];\n    var minY = maxExtent[1];\n    var maxX = maxExtent[2];\n    var maxY = maxExtent[3];\n    var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[replayType];\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  };\n\n  /**\n   * @return {Object<string, Object<ReplayType, CanvasReplay>>} Replays.\n   */\n  CanvasReplayGroup.prototype.getReplays = function getReplays () {\n    return this.replaysByZIndex_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.isEmpty = function isEmpty$1 () {\n    return isEmpty(this.replaysByZIndex_);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<ReplayType>=} opt_replayTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n  CanvasReplayGroup.prototype.replay = function replay (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    snapToPixel,\n    opt_replayTypes,\n    opt_declutterReplays\n  ) {\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    context.save();\n    this.clip(context, transform);\n\n    var replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n    var i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n        var replayType = replayTypes[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (opt_declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = opt_declutterReplays[zIndexKey];\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.replay(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n          }\n        }\n      }\n    }\n\n    context.restore();\n  };\n\n  return CanvasReplayGroup;\n}(ReplayGroup));\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  var i;\n  var radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  var arraySize = radius * 2 + 1;\n  var arr = new Array(arraySize);\n  for (var i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  var x = radius;\n  var y = 0;\n  var error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\n  var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  var skippedFeatureUids = {};\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\n    var replayData = declutterReplays[zs[z].toString()];\n    for (var i = 0, ii = replayData.length; i < ii;) {\n      var replay = replayData[i++];\n      var transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids, snapToPixel);\n    }\n  }\n}\n\n\nexport default CanvasReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/ReplayGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object)>}\n */\nvar GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  var tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  var loading = false;\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    var imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  var renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  var replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n//# sourceMappingURL=vector.js.map","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function CanvasVectorLayerRenderer(vectorLayer) {\n\n    CanvasLayerRenderer.call(this, vectorLayer);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ReplayGroup.js\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = createCanvasContext2D();\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasLayerRenderer ) CanvasVectorLayerRenderer.__proto__ = CanvasLayerRenderer;\n  CanvasVectorLayerRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  CanvasVectorLayerRenderer.prototype.constructor = CanvasVectorLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n  CanvasVectorLayerRenderer.prototype.compose = function compose (context, frameState, layerState) {\n    var extent = frameState.extent;\n    var pixelRatio = frameState.pixelRatio;\n    var skippedFeatureUids = layerState.managed ?\n      frameState.skippedFeatureUids : {};\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var rotation = viewState.rotation;\n    var projectionExtent = projection.getExtent();\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (this.getLayer().getSource());\n\n    var transform = this.getTransform(frameState, 0);\n\n    // clipped rendering if layer extent is set\n    var clipExtent = layerState.extent;\n    var clipped = clipExtent !== undefined;\n    if (clipped) {\n      this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (clipExtent));\n    }\n    var replayGroup = this.replayGroup_;\n    if (replayGroup && !replayGroup.isEmpty()) {\n      if (this.declutterTree_) {\n        this.declutterTree_.clear();\n      }\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      var drawOffsetX = 0;\n      var drawOffsetY = 0;\n      var replayContext;\n      var transparentLayer = layerState.opacity !== 1;\n      var hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n      if (transparentLayer || hasRenderListeners) {\n        var drawWidth = context.canvas.width;\n        var drawHeight = context.canvas.height;\n        if (rotation) {\n          var drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n          drawOffsetX = (drawSize - drawWidth) / 2;\n          drawOffsetY = (drawSize - drawHeight) / 2;\n          drawWidth = drawHeight = drawSize;\n        }\n        // resize and clear\n        this.context.canvas.width = drawWidth;\n        this.context.canvas.height = drawHeight;\n        replayContext = this.context;\n      } else {\n        replayContext = context;\n      }\n\n      var alpha = replayContext.globalAlpha;\n      if (!transparentLayer) {\n        // for performance reasons, context.save / context.restore is not used\n        // to save and restore the transformation matrix and the opacity.\n        // see http://jsperf.com/context-save-restore-versus-variable\n        replayContext.globalAlpha = layerState.opacity;\n      }\n\n      if (replayContext != context) {\n        replayContext.translate(drawOffsetX, drawOffsetY);\n      }\n\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var width = frameState.size[0] * pixelRatio;\n      var height = frameState.size[1] * pixelRatio;\n      rotateAtOffset(replayContext, -rotation,\n        width / 2, height / 2);\n      replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n      if (vectorSource.getWrapX() && projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)) {\n        var startX = extent[0];\n        var worldWidth = getWidth(projectionExtent);\n        var world = 0;\n        var offsetX;\n        while (startX < projectionExtent[0]) {\n          --world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX += worldWidth;\n        }\n        world = 0;\n        startX = extent[2];\n        while (startX > projectionExtent[2]) {\n          ++world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX -= worldWidth;\n        }\n      }\n      rotateAtOffset(replayContext, rotation,\n        width / 2, height / 2);\n\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (replayContext != context) {\n        if (transparentLayer) {\n          var mainContextAlpha = context.globalAlpha;\n          context.globalAlpha = layerState.opacity;\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n          context.globalAlpha = mainContextAlpha;\n        } else {\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        }\n        replayContext.translate(-drawOffsetX, -drawOffsetY);\n      }\n\n      if (!transparentLayer) {\n        replayContext.globalAlpha = alpha;\n      }\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    var transform = this.getTransform(frameState, 0);\n    this.preCompose(context, frameState, transform);\n    this.compose(context, frameState, layerState);\n    this.postCompose(context, frameState, layerState, transform);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      var resolution = frameState.viewState.resolution;\n      var rotation = frameState.viewState.rotation;\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      /** @type {!Object<string, boolean>} */\n      var features = {};\n      var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = getUid(feature);\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n      return result;\n    }\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (vectorLayer.getSource());\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n    var projectionExtent = viewState.projection.getExtent();\n\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n        !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      var worldWidth = getWidth(projectionExtent);\n      var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n    }\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    var replayGroup = new CanvasReplayGroup(\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @this {CanvasVectorLayerRenderer}\n     */\n    var render = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n    if (vectorLayerRenderOrder) {\n      /** @type {Array<import(\"../../Feature.js\").default>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        });\n      features.sort(vectorLayerRenderOrder);\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        render(features[i]);\n      }\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render);\n    }\n    replayGroup.finish();\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    this.replayGroupChanged = true;\n    return true;\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorLayerRenderer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {import(\"../../layer/Vector.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorLayerRenderer;\n\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorTileRenderType.js.map","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = /*@__PURE__*/(function (CanvasTileLayerRenderer) {\n  function CanvasVectorTileLayerRenderer(layer) {\n\n    CanvasTileLayerRenderer.call(this, layer, true);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    var renderMode = layer.getRenderMode();\n\n    // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n    this.zDirection = renderMode === VectorTileRenderType.VECTOR ? 1 : 0;\n\n    if (renderMode !== VectorTileRenderType.VECTOR) {\n      this.context = createCanvasContext2D();\n    }\n\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasTileLayerRenderer ) CanvasVectorTileLayerRenderer.__proto__ = CanvasTileLayerRenderer;\n  CanvasVectorTileLayerRenderer.prototype = Object.create( CanvasTileLayerRenderer && CanvasTileLayerRenderer.prototype );\n  CanvasVectorTileLayerRenderer.prototype.constructor = CanvasVectorTileLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n    if (tile.getState() === TileState.LOADED) {\n      this.createReplayGroup_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      if (this.context) {\n        this.renderTileImage_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    return /** @type {import(\"../../VectorImageTile.js\").default} */ (tile).getImage(tileLayer);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var layerRevision = layer.getRevision();\n    if (this.renderedLayerRevision_ != layerRevision) {\n      this.renderedTiles.length = 0;\n    }\n    this.renderedLayerRevision_ = layerRevision;\n    return CanvasTileLayerRenderer.prototype.prepareFrame.call(this, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function createReplayGroup_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var revision = layer.getRevision();\n    var renderOrder = /** @type {import(\"../../render.js\").OrderFunction} */ (layer.getRenderOrder()) || null;\n\n    var replayState = tile.getReplayState(layer);\n    if (!replayState.dirty && replayState.renderedRevision == revision &&\n        replayState.renderedRenderOrder == renderOrder) {\n      return;\n    }\n\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var sourceTileGrid = source.getTileGrid();\n    var tileGrid = source.getTileGridForProjection(projection);\n    var resolution = tileGrid.getResolution(tile.tileCoord[0]);\n    var tileExtent = tile.extent;\n\n    var loop = function ( t, tt ) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        return;\n      }\n\n      var sourceTileCoord = sourceTile.tileCoord;\n      var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n        buffer(sharedExtent, layer.getRenderBuffer() * resolution, this$1.tmpExtent);\n      var tileProjection = sourceTile.getProjection();\n      var reproject = false;\n      if (!equivalentProjection(projection, tileProjection)) {\n        reproject = true;\n        sourceTile.setProjection(projection);\n      }\n      replayState.dirty = false;\n      var replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n        pixelRatio, source.getOverlaps(), this$1.declutterTree_, layer.getRenderBuffer());\n      var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      var render = function(feature) {\n        var styles;\n        var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n          this.dirty_ = this.dirty_ || dirty;\n          replayState.dirty = replayState.dirty || dirty;\n        }\n      };\n\n      var features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        var feature = features[i];\n        if (reproject) {\n          if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n            // projected tile extent\n            tileProjection.setWorldExtent(sourceTileExtent);\n            // tile extent in tile pixel space\n            tileProjection.setExtent(sourceTile.getExtent());\n          }\n          feature.getGeometry().transform(tileProjection, projection);\n        }\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n          render.call(this$1, feature);\n        }\n      }\n      replayGroup.finish();\n      sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n    };\n\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) loop( t, tt );\n    replayState.renderedRevision = revision;\n    replayState.renderedRenderOrder = renderOrder;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    var layer = this.getLayer();\n    /** @type {!Object<string, boolean>} */\n    var features = {};\n\n    var renderedTiles = /** @type {Array<import(\"../../VectorImageTile.js\").default>} */ (this.renderedTiles);\n\n    var bufferedExtent, found;\n    var i, ii;\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      var tile = renderedTiles[i];\n      bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n      if (!containsCoordinate(bufferedExtent, coordinate)) {\n        continue;\n      }\n      for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        var sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n          /**\n           * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n           * @return {?} Callback result.\n           */\n          function(feature) {\n            var key = getUid(feature);\n            if (!(key in features)) {\n              features[key] = true;\n              return callback.call(thisArg, feature, layer);\n            }\n          }, null);\n      }\n    }\n    return found;\n  };\n\n  /**\n   * @param {import(\"../../VectorTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../transform.js\").Transform} transform Transform.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function getReplayTransform_ (tile, frameState) {\n    var layer = this.getLayer();\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var tileGrid = source.getTileGrid();\n    var tileCoord = tile.tileCoord;\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var renderResolution = viewState.resolution / pixelRatio;\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    var center = viewState.center;\n    var origin = getTopLeft(tileExtent);\n    var size = frameState.size;\n    var offsetX = Math.round(pixelRatio * size[0] / 2);\n    var offsetY = Math.round(pixelRatio * size[1] / 2);\n    return composeTransform(this.tmpTransform_,\n      offsetX, offsetY,\n      tileResolution / renderResolution, tileResolution / renderResolution,\n      viewState.rotation,\n      (origin[0] - center[0]) / tileResolution,\n      (center[1] - origin[1]) / tileResolution);\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var renderMode = layer.getRenderMode();\n    if (renderMode != VectorTileRenderType.IMAGE) {\n      var declutterReplays = layer.getDeclutter() ? {} : null;\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var replayTypes = VECTOR_REPLAYS[renderMode];\n      var pixelRatio = frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      var size = frameState.size;\n      var offsetX, offsetY;\n      if (rotation) {\n        offsetX = Math.round(pixelRatio * size[0] / 2);\n        offsetY = Math.round(pixelRatio * size[1] / 2);\n        rotateAtOffset(context, -rotation, offsetX, offsetY);\n      }\n      if (declutterReplays) {\n        this.declutterTree_.clear();\n      }\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var tiles = this.renderedTiles;\n      var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n      var clips = [];\n      var zs = [];\n      for (var i = tiles.length - 1; i >= 0; --i) {\n        var tile = /** @type {import(\"../../VectorImageTile.js\").default} */ (tiles[i]);\n        if (tile.getState() == TileState.ABORT) {\n          continue;\n        }\n        var tileCoord = tile.tileCoord;\n        var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tile.extent[0];\n        var transform = undefined;\n        for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n          var sourceTile = tile.getTile(tile.tileKeys[t]);\n          if (sourceTile.getState() != TileState.LOADED) {\n            continue;\n          }\n          var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer, tileCoord.toString()));\n          if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\n            // sourceTile was not yet loaded when this.createReplayGroup_() was\n            // called, or it has no replays of the types we want to render\n            continue;\n          }\n          if (!transform) {\n            transform = this.getTransform(frameState, worldOffset);\n          }\n          var currentZ = sourceTile.tileCoord[0];\n          var currentClip = replayGroup.getClipCoords(transform);\n          context.save();\n          context.globalAlpha = layerState.opacity;\n          // Create a clip mask for regions in this low resolution tile that are\n          // already filled by a higher resolution tile\n          for (var j = 0, jj = clips.length; j < jj; ++j) {\n            var clip = clips[j];\n            if (currentZ < zs[j]) {\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher resolution tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n          replayGroup.replay(context, transform, rotation, {}, snapToPixel, replayTypes, declutterReplays);\n          context.restore();\n          clips.push(currentClip);\n          zs.push(currentZ);\n        }\n      }\n      if (declutterReplays) {\n        replayDeclutter(declutterReplays, context, rotation, snapToPixel);\n      }\n      if (rotation) {\n        rotateAtOffset(context, rotation,\n          /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n      }\n    }\n    CanvasTileLayerRenderer.prototype.postCompose.call(this, context, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, squaredTolerance, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i], squaredTolerance,\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles, squaredTolerance,\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function renderTileImage_ (tile, pixelRatio, projection) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var replayState = tile.getReplayState(layer);\n    var revision = layer.getRevision();\n    var replays = IMAGE_REPLAYS[layer.getRenderMode()];\n    if (replays && replayState.renderedTileRevision !== revision) {\n      replayState.renderedTileRevision = revision;\n      var tileCoord = tile.wrappedTileCoord;\n      var z = tileCoord[0];\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var tileGrid = source.getTileGridForProjection(projection);\n      var resolution = tileGrid.getResolution(z);\n      var context = tile.getContext(layer);\n      var size = source.getTilePixelSize(z, pixelRatio, projection);\n      context.canvas.width = size[0];\n      context.canvas.height = size[1];\n      var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n      for (var i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n        var sourceTile = tile.getTile(tile.tileKeys[i]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var pixelScale = pixelRatio / resolution;\n        var transform = resetTransform(this.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        replayGroup.replay(context, transform, 0, {}, true, replays);\n      }\n    }\n  };\n\n  return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorTileLayerRenderer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {import(\"../../layer/VectorTile.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorTileLayerRenderer;\n\n//# sourceMappingURL=VectorTileLayer.js.map","/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar Map = /*@__PURE__*/(function (PluggableMap) {\n  function Map(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    PluggableMap.call(this, options);\n  }\n\n  if ( PluggableMap ) Map.__proto__ = PluggableMap;\n  Map.prototype = Object.create( PluggableMap && PluggableMap.prototype );\n  Map.prototype.constructor = Map;\n\n  Map.prototype.createRenderer = function createRenderer () {\n    var renderer = new CanvasMapRenderer(this);\n    renderer.registerLayerRenderers([\n      CanvasImageLayerRenderer,\n      CanvasTileLayerRenderer,\n      CanvasVectorLayerRenderer,\n      CanvasVectorTileLayerRenderer\n    ]);\n    return renderer;\n  };\n\n  return Map;\n}(PluggableMap));\n\n\nexport default Map;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n\n//# sourceMappingURL=TileProperty.js.map","/**\n * @module ol/layer/Tile\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /*@__PURE__*/(function (Layer) {\n  function TileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    Layer.call(this, baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.TILE;\n\n  }\n\n  if ( Layer ) TileLayer.__proto__ = Layer;\n  TileLayer.prototype = Object.create( Layer && Layer.prototype );\n  TileLayer.prototype.constructor = TileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return TileLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {import(\"../source/Tile.js\").default} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\nexport default TileLayer;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /*@__PURE__*/(function (EventTarget) {\n  function Tile(tileCoord, state, opt_options) {\n    EventTarget.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {TileState}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n  }\n\n  if ( EventTarget ) Tile.__proto__ = EventTarget;\n  Tile.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Tile.prototype.constructor = Tile;\n\n  /**\n   * @protected\n   */\n  Tile.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {string} Key.\n   */\n  Tile.prototype.getKey = function getKey () {\n    return this.key + '/' + this.tileCoord;\n  };\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  Tile.prototype.getInterimTile = function getInterimTile () {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    var tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  };\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  Tile.prototype.refreshInterimChain = function refreshInterimChain () {\n    if (!this.interimTile) {\n      return;\n    }\n\n    var tile = this.interimTile;\n    var prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  };\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  Tile.prototype.getTileCoord = function getTileCoord () {\n    return this.tileCoord;\n  };\n\n  /**\n   * @return {TileState} State.\n   */\n  Tile.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {TileState} state State.\n   * @api\n   */\n  Tile.prototype.setState = function setState (state) {\n    this.state = state;\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  Tile.prototype.load = function load () {};\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  Tile.prototype.getAlpha = function getAlpha (id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    var start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    var delta = time - start + (1000 / 60); // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  };\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  Tile.prototype.inTransition = function inTransition (id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  };\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  Tile.prototype.endTransition = function endTransition (id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  };\n\n  return Tile;\n}(EventTarget));\n\n\nexport default Tile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n\nvar ImageTile = /*@__PURE__*/(function (Tile) {\n  function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    Tile.call(this, tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n  }\n\n  if ( Tile ) ImageTile.__proto__ = Tile;\n  ImageTile.prototype = Object.create( Tile && Tile.prototype );\n  ImageTile.prototype.constructor = ImageTile;\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenImage_();\n      this.image_ = getBlankImage();\n    }\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n    this.state = TileState.ABORT;\n    this.changed();\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  ImageTile.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.getKey = function getKey () {\n    return this.src_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    var image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageTile.prototype.load = function load () {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.tileLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageTile;\n}(Tile));\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  var ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  var z = tileCoord[0];\n  var digits = new Array(z);\n  var mask = 1 << (z - 1);\n  var i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  var z = tileCoord[0];\n  var x = tileCoord[1];\n  var y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  var extent = tileGrid.getExtent();\n  var tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nvar TileCache = /*@__PURE__*/(function (LRUCache) {\n  function TileCache(opt_highWaterMark) {\n\n    LRUCache.call(this, opt_highWaterMark);\n\n  }\n\n  if ( LRUCache ) TileCache.__proto__ = LRUCache;\n  TileCache.prototype = Object.create( LRUCache && LRUCache.prototype );\n  TileCache.prototype.constructor = TileCache;\n\n  /**\n   * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileCache.prototype.expireCache = function expireCache (usedTiles) {\n    while (this.canExpireCache()) {\n      var tile = this.peekLast();\n      var zKey = tile.tileCoord[0].toString();\n      if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n        break;\n      } else {\n        this.pop().dispose();\n      }\n    }\n  };\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  TileCache.prototype.pruneExceptNewestZ = function pruneExceptNewestZ () {\n    if (this.getCount() === 0) {\n      return;\n    }\n    var key = this.peekFirstKey();\n    var tileCoord = fromKey(key);\n    var z = tileCoord[0];\n    this.forEach(function(tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.dispose();\n      }\n    }, this);\n  };\n\n  return TileCache;\n}(LRUCache));\n\n\nexport default TileCache;\n\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  var targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  var sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  var dX = x - centroidX;\n  var dY = y - centroidY;\n  var distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  var context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  var sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  var canvasWidthInUnits = getWidth(sourceDataExtent);\n  var canvasHeightInUnits = getHeight(sourceDataExtent);\n  var stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  var stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    var xPos = src.extent[0] - sourceDataExtent[0];\n    var yPos = -(src.extent[3] - sourceDataExtent[3]);\n    var srcWidth = getWidth(src.extent);\n    var srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  var targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    var source = triangle.source;\n    var target = triangle.target;\n    var x0 = source[0][0], y0 = source[0][1];\n    var x1 = source[1][0], y1 = source[1][1];\n    var x2 = source[2][0], y2 = source[2][1];\n    var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    var sourceNumericalShiftX = x0;\n    var sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    var augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    var affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    var centroidX = (u0 + u1 + u2) / 3;\n    var centroidY = (v0 + v1 + v2) / 3;\n    var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      var target = triangle.target;\n      var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n  var transformInvCache = {};\n  var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    var key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {import(\"../extent.js\").Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array<Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  var destinationTopLeft = getTopLeft(targetExtent);\n  var destinationTopRight = getTopRight(targetExtent);\n  var destinationBottomRight = getBottomRight(targetExtent);\n  var destinationBottomLeft = getBottomLeft(targetExtent);\n  var sourceTopLeft = this.transformInv_(destinationTopLeft);\n  var sourceTopRight = this.transformInv_(destinationTopRight);\n  var sourceBottomRight = this.transformInv_(destinationBottomRight);\n  var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    var leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        var minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        var maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n/**\n * Adds triangle to the triangulation.\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function addTriangle_ (a, b, c, aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function addQuad_ (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  var sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  var wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  var needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      var targetQuadExtent = boundingExtent([a, b, c, d]);\n      var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n        needsSubdivision;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n          needsSubdivision;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      var centerSrc = this.transformInv_(center);\n\n      var dx;\n      if (wrapsX) {\n        var centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      var centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        var bcSrc = this.transformInv_(bc);\n        var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        var daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        var abSrc = this.transformInv_(ab);\n        var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        var cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {import(\"../extent.js\").Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function calculateSourceExtent () {\n  var extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    var src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n/**\n * @return {Array<Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function getTriangles () {\n  return this.triangles_;\n};\n\nexport default Triangulation;\n\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /*@__PURE__*/(function (Tile) {\n  function ReprojTile(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges\n  ) {\n    Tile.call(this, tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    var targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n    var maxTargetExtent = this.targetTileGrid_.getExtent();\n    var maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    var targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]);\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n      opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    var sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n        sourceExtent[3] = clamp(\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent, this.sourceZ_);\n\n      for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          var tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  if ( Tile ) ReprojTile.__proto__ = Tile;\n  ReprojTile.prototype = Object.create( Tile && Tile.prototype );\n  ReprojTile.prototype.constructor = ReprojTile;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenSources_();\n    }\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  ReprojTile.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.reproject_ = function reproject_ () {\n    var sources = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage()\n        });\n      }\n    }.bind(this));\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      var z = this.wrappedTileCoord_[0];\n      var size = this.targetTileGrid_.getTileSize(z);\n      var width = typeof size === 'number' ? size : size[0];\n      var height = typeof size === 'number' ? size : size[1];\n      var targetResolution = this.targetTileGrid_.getResolution(z);\n      var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n      var targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_);\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n        sourceResolution, this.sourceTileGrid_.getExtent(),\n        targetResolution, targetExtent, this.triangulation_, sources,\n        this.gutter_, this.renderEdges_);\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      var leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          var sourceListenKey = listen(tile, EventType.CHANGE,\n            function(e) {\n              var state = tile.getState();\n              if (state == TileState.LOADED ||\n                    state == TileState.ERROR ||\n                    state == TileState.EMPTY) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            }, this);\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      }.bind(this));\n\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.unlistenSources_ = function unlistenSources_ () {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  };\n\n  return ReprojTile;\n}(Tile));\n\n\nexport default ReprojTile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            var y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            var z = tileCoord[0];\n            var range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            var y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = tileCoordHash(tileCoord);\n        var index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    var stop = parseInt(match[2], 10);\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = function TileGrid(options) {\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  var zoomFactor;\n  if (!options.origins) {\n    for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n      } else {\n        if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {import(\"../coordinate.js\").Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array<import(\"../coordinate.js\").Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  var extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array<number|import(\"../size.js\").Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|import(\"../size.js\").Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array<import(\"../TileRange.js\").default>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {import(\"../size.js\").Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      var tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(import(\"../tilecoord.js\").TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function forEachTileCoord (extent, zoom, callback) {\n  var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, import(\"../TileRange.js\").default): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function forEachTileCoordParentTileRange (tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n  var tileRange, x, y;\n  var tileCoordExtent = null;\n  var z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function getMaxZoom () {\n  return this.maxZoom;\n};\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function getMinZoom () {\n  return this.minZoom;\n};\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {import(\"../coordinate.js\").Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function getOrigin (z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function getResolution (z) {\n  return this.resolutions_[z];\n};\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function getResolutions () {\n  return this.resolutions_;\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function getTileCoordChildTileRange (tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      var minX = tileCoord[1] * 2;\n      var minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function getTileRangeExtent (z, tileRange, opt_extent) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function getTileRangeForExtentAndZ (extent, z, opt_tileRange) {\n  var tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  var minX = tileCoord[1];\n  var minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function getTileCoordCenter (tileCoord) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function getTileCoordExtent (tileCoord, opt_extent) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  var minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  var maxX = minX + tileSize[0] * resolution;\n  var maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function getTileCoordForCoordAndResolution (coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function getTileCoordForXYAndResolution_ (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  var z = this.getZForResolution(resolution);\n  var scale = resolution / this.getResolution(z);\n  var origin = this.getOrigin(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = scale * xFromOrigin / tileSize[0];\n  var tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.This method is for integer zoom\n * levels.The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function getTileCoordForXYAndZ_ (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = xFromOrigin / tileSize[0];\n  var tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function getTileCoordForCoordAndZ (coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function getTileCoordResolution (tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n * @param {number} z Z.\n * @return {number|import(\"../size.js\").Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function getTileSize (z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n/**\n * @param {number} z Zoom level.\n * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function getFullTileRange (z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *   If 1, the nearest lower resolution will be used. If -1, the nearest\n *   higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function getZForResolution (resolution, opt_direction) {\n  var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n/**\n * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function calculateTileRanges_ (extent) {\n  var length = this.resolutions_.length;\n  var fullTileRanges = new Array(length);\n  for (var z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\n\n\nexport default TileGrid;\n\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  var tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  var z = tileCoord[0];\n  var center = tileGrid.getTileCoordCenter(tileCoord);\n  var projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    var worldWidth = getWidth(projectionExtent);\n    var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  /** @type {XYZOptions} */\n  var xyzOptions = opt_options || {};\n\n  var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n  var gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize\n    )\n  };\n  return new TileGrid(gridOptions);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  var maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  var height = getHeight(extent);\n  var width = getWidth(extent);\n\n  var tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  var maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  var length = maxZoom + 1;\n  var resolutions = new Array(length);\n  for (var z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  var extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  var extent = projection.getExtent();\n  if (!extent) {\n    var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n\n//# sourceMappingURL=tilegrid.js.map","/**\n * @module ol/source/Tile\n */\nimport {abstract} from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from './Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /*@__PURE__*/(function (Source) {\n  function TileSource(options) {\n\n    Source.call(this, {\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n      options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n  }\n\n  if ( Source ) TileSource.__proto__ = Source;\n  TileSource.prototype = Object.create( Source && Source.prototype );\n  TileSource.prototype.constructor = TileSource;\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  TileSource.prototype.canExpireCache = function canExpireCache () {\n    return this.tileCache.canExpireCache();\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileSource.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  TileSource.prototype.forEachLoadedTile = function forEachLoadedTile (projection, z, tileRange, callback) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    var covered = true;\n    var tile, tileCoordKey, loaded;\n    for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = (callback(tile) !== false);\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  TileSource.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    return 0;\n  };\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  TileSource.prototype.getKey = function getKey () {\n    return this.key_;\n  };\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  TileSource.prototype.setKey = function setKey (key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  TileSource.prototype.getOpaque = function getOpaque (projection) {\n    return this.opaque_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.getResolutions = function getResolutions () {\n    return this.tileGrid.getResolutions();\n  };\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  TileSource.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    return abstract();\n  };\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  TileSource.prototype.getTileGrid = function getTileGrid () {\n    return this.tileGrid;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  TileSource.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  TileSource.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    var thisProj = this.getProjection();\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  };\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  TileSource.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return this.tilePixelRatio_;\n  };\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  TileSource.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\n    var tileGrid = this.getTileGridForProjection(projection);\n    var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  };\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  TileSource.prototype.getTileCoordForTileUrlFunction = function getTileCoordForTileUrlFunction (tileCoord, opt_projection) {\n    var projection = opt_projection !== undefined ?\n      opt_projection : this.getProjection();\n    var tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.refresh = function refresh () {\n    this.tileCache.clear();\n    this.changed();\n  };\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  TileSource.prototype.useTile = function useTile (z, x, y, projection) {};\n\n  return TileSource;\n}(Source));\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport var TileSourceEvent = /*@__PURE__*/(function (Event) {\n  function TileSourceEvent(type, tile) {\n\n    Event.call(this, type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n\n  }\n\n  if ( Event ) TileSourceEvent.__proto__ = Event;\n  TileSourceEvent.prototype = Object.create( Event && Event.prototype );\n  TileSourceEvent.prototype.constructor = TileSourceEvent;\n\n  return TileSourceEvent;\n}(Event));\n\nexport default TileSource;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/source/UrlTile\n */\nimport {getUid} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /*@__PURE__*/(function (TileSource) {\n  function UrlTile(options) {\n\n    TileSource.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ = !options.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(this) : nullTileUrlFunction;\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    if (options.tileUrlFunction) {\n      this.setTileUrlFunction(options.tileUrlFunction, this.key_);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n  }\n\n  if ( TileSource ) UrlTile.__proto__ = TileSource;\n  UrlTile.prototype = Object.create( TileSource && TileSource.prototype );\n  UrlTile.prototype.constructor = UrlTile;\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  UrlTile.prototype.getTileLoadFunction = function getTileLoadFunction () {\n    return this.tileLoadFunction;\n  };\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  UrlTile.prototype.getTileUrlFunction = function getTileUrlFunction () {\n    return this.tileUrlFunction;\n  };\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  UrlTile.prototype.getUrls = function getUrls () {\n    return this.urls;\n  };\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  UrlTile.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    var uid = getUid(tile);\n    var tileState = tile.getState();\n    var type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n          TileEventType.TILELOADEND : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  };\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  UrlTile.prototype.setTileLoadFunction = function setTileLoadFunction (tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} key Optional new tile key for the source.\n   * @api\n   */\n  UrlTile.prototype.setTileUrlFunction = function setTileUrlFunction (tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  UrlTile.prototype.setUrl = function setUrl (url) {\n    var urls = this.urls = expandUrl(url);\n    this.setUrls(urls);\n  };\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  UrlTile.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  UrlTile.prototype.useTile = function useTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UrlTile;\n}(TileSource));\n\n\nexport default UrlTile;\n\n//# sourceMappingURL=UrlTile.js.map","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /*@__PURE__*/(function (UrlTile) {\n  function TileImage(options) {\n\n    UrlTile.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction ?\n        options.tileLoadFunction : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass = options.tileClass !== undefined ?\n      options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  if ( UrlTile ) TileImage.__proto__ = UrlTile;\n  TileImage.prototype = Object.create( UrlTile && UrlTile.prototype );\n  TileImage.prototype.constructor = TileImage;\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.canExpireCache = function canExpireCache () {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.canExpireCache.call(this);\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (var key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.expireCache = function expireCache (projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n      return;\n    }\n    var usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n    for (var id in this.tileCacheForProjection) {\n      var tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  };\n\n  /**\n   * @return {number} Gutter.\n   */\n  TileImage.prototype.getGutter = function getGutter () {\n    return 0;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getOpaque = function getOpaque (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return false;\n    } else {\n      return UrlTile.prototype.getOpaque.call(this, projection);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n      }\n      return (\n        /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey])\n      );\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  TileImage.prototype.createTile_ = function createTile_ (z, x, y, pixelRatio, projection, key) {\n    var tileCoord = [z, x, y];\n    var urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    var tileUrl = urlTileCoord ?\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n    var tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n    tile.key = key;\n    listen(tile, EventType.CHANGE,\n      this.handleTileChange, this);\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n    } else {\n      var cache = this.getTileCacheForProjection(projection);\n      var tileCoord = [z, x, y];\n      var tile;\n      var tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n      }\n      var key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        var targetTileGrid = this.getTileGridForProjection(projection);\n        var wrappedTileCoord =\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var newTile = new ReprojTile(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  TileImage.prototype.getTileInternal = function getTileInternal (z, x, y, pixelRatio, projection) {\n    var tile = null;\n    var tileCoordKey = getKeyZXY(z, x, y);\n    var key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        var interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  TileImage.prototype.setRenderReprojectionEdges = function setRenderReprojectionEdges (render) {\n    if (!ENABLE_RASTER_REPROJECTION ||\n        this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (var id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  TileImage.prototype.setTileGridForProjection = function setTileGridForProjection (projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      var proj = getProjection(projection);\n      if (proj) {\n        var projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  };\n\n  return TileImage;\n}(UrlTile));\n\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/uri\n */\n\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  var keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function(k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  var qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n\n//# sourceMappingURL=uri.js.map","/**\n * @module ol/source/TileArcGISRest\n */\n\nimport {createEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {assign} from '../obj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport TileImage from './TileImage.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.\n * Note that you must provide a `crossOrigin` value if you are using the WebGL renderer\n * or if you want to access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image\n * for more detail.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/\n * for further reference.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array<string>} urls ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n * @api\n */\nvar TileArcGISRest = /*@__PURE__*/(function (TileImage) {\n  function TileArcGISRest(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tileUrlFunction: tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.setKey(this.getKeyForParams_());\n  }\n\n  if ( TileImage ) TileArcGISRest.__proto__ = TileImage;\n  TileArcGISRest.prototype = Object.create( TileImage && TileImage.prototype );\n  TileArcGISRest.prototype.constructor = TileArcGISRest;\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  TileArcGISRest.prototype.getKeyForParams_ = function getKeyForParams_ () {\n    var i = 0;\n    var res = [];\n    for (var key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  };\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  TileArcGISRest.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  TileArcGISRest.prototype.getRequestUrl_ = function getRequestUrl_ (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n\n    var urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    var srid = projection.getCode().split(':').pop();\n\n    params['SIZE'] = tileSize[0] + ',' + tileSize[1];\n    params['BBOX'] = tileExtent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(\n      params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio\n    );\n\n    var url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      var index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    var modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    return appendParams(modifiedUrl, params);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileArcGISRest.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return /** @type {number} */ (pixelRatio);\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  TileArcGISRest.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.setKey(this.getKeyForParams_());\n  };\n\n  return TileArcGISRest;\n}(TileImage));\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n * @param {number} pixelRatio The pixel ratio\n * @param {import(\"../proj/Projection.js\").default} projection The projection\n * @return {string|undefined} The tile URL\n * @this {TileArcGISRest}\n */\nfunction tileUrlFunction(tileCoord, pixelRatio, projection) {\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  var tileExtent = tileGrid.getTileCoordExtent(\n    tileCoord, this.tmpExtent_);\n  var tileSize = toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  if (pixelRatio != 1) {\n    tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  // Apply default params and override with user specified values.\n  var baseParams = {\n    'F': 'image',\n    'FORMAT': 'PNG32',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n}\n\n\nexport default TileArcGISRest;\n\n//# sourceMappingURL=TileArcGISRest.js.map","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /*@__PURE__*/(function (TileImage) {\n  function XYZ(opt_options) {\n    var options = opt_options || {};\n    var projection = options.projection !== undefined ?\n      options.projection : 'EPSG:3857';\n\n    var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n      createXYZ({\n        extent: extentFromProjection(projection),\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize\n      });\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n  }\n\n  if ( TileImage ) XYZ.__proto__ = TileImage;\n  XYZ.prototype = Object.create( TileImage && TileImage.prototype );\n  XYZ.prototype.constructor = XYZ;\n\n  return XYZ;\n}(TileImage));\n\nexport default XYZ;\n\n//# sourceMappingURL=XYZ.js.map","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n}","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  var projCodes = Object.keys(proj4.defs);\n  var len = projCodes.length;\n  var i, j;\n  for (i = 0; i < len; ++i) {\n    var code = projCodes[i];\n    if (!get(code)) {\n      var def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    var code1 = projCodes[i];\n    var proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      var code2 = projCodes[j];\n      var proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          var transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\n//# sourceMappingURL=proj4.js.map","/**\n * @module ol/format/Feature\n */\nimport {assign} from '../obj.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection, equivalent as equivalentProjection, transformExtent} from '../proj.js';\n\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent of the tile being read. This is only used and\n * required for {@link module:ol/format/MVT}.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = function FeatureFormat() {\n\n  /**\n   * @protected\n   * @type {import(\"../proj/Projection.js\").default}\n   */\n  this.dataProjection = null;\n\n  /**\n   * @protected\n   * @type {import(\"../proj/Projection.js\").default}\n   */\n  this.defaultFeatureProjection = null;\n\n};\n\n/**\n * Adds the data projection to the read options.\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Options.\n * @return {ReadOptions|undefined} Options.\n * @protected\n */\nFeatureFormat.prototype.getReadOptions = function getReadOptions (source, opt_options) {\n  var options;\n  if (opt_options) {\n    options = {\n      dataProjection: opt_options.dataProjection ?\n        opt_options.dataProjection : this.readProjection(source),\n      featureProjection: opt_options.featureProjection\n    };\n  }\n  return this.adaptOptions(options);\n};\n\n/**\n * Sets the `dataProjection` on the options, if no `dataProjection`\n * is set.\n * @param {WriteOptions|ReadOptions|undefined} options\n *   Options.\n * @protected\n * @return {WriteOptions|ReadOptions|undefined}\n *   Updated options.\n */\nFeatureFormat.prototype.adaptOptions = function adaptOptions (options) {\n  return assign({\n    dataProjection: this.dataProjection,\n    featureProjection: this.defaultFeatureProjection\n  }, options);\n};\n\n/**\n * Get the extent from the source of the last {@link readFeatures} call.\n * @return {import(\"../extent.js\").Extent} Tile extent.\n */\nFeatureFormat.prototype.getLastExtent = function getLastExtent () {\n  return null;\n};\n\n/**\n * @abstract\n * @return {import(\"./FormatType.js\").default} Format.\n */\nFeatureFormat.prototype.getType = function getType () {\n  return abstract();\n};\n\n/**\n * Read a single feature from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../Feature.js\").FeatureLike} Feature.\n */\nFeatureFormat.prototype.readFeature = function readFeature (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read all features from a source.\n *\n * @abstract\n * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n */\nFeatureFormat.prototype.readFeatures = function readFeatures (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read a single geometry from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nFeatureFormat.prototype.readGeometry = function readGeometry (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read the projection from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @return {import(\"../proj/Projection.js\").default} Projection.\n */\nFeatureFormat.prototype.readProjection = function readProjection (source) {\n  return abstract();\n};\n\n/**\n * Encode a feature in this format.\n *\n * @abstract\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeature = function writeFeature (feature, opt_options) {\n  return abstract();\n};\n\n/**\n * Encode an array of features in this format.\n *\n * @abstract\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n  return abstract();\n};\n\n/**\n * Write a single geometry in this format.\n *\n * @abstract\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n  return abstract();\n};\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} Transformed geometry.\n */\nexport function transformWithOptions(geometry, write, opt_options) {\n  var featureProjection = opt_options ?\n    getProjection(opt_options.featureProjection) : null;\n  var dataProjection = opt_options ?\n    getProjection(opt_options.dataProjection) : null;\n  /**\n   * @type {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent}\n   */\n  var transformed;\n  if (featureProjection && dataProjection &&\n      !equivalentProjection(featureProjection, dataProjection)) {\n    if (Array.isArray(geometry)) {\n      // FIXME this is necessary because GML treats extents\n      // as geometries\n      transformed = transformExtent(\n        geometry,\n        dataProjection,\n        featureProjection);\n    } else {\n      transformed = (write ? /** @type {import(\"../geom/Geometry\").default} */ (geometry).clone() : geometry).transform(\n        write ? featureProjection : dataProjection,\n        write ? dataProjection : featureProjection);\n    }\n  } else {\n    transformed = geometry;\n  }\n  if (write && opt_options && /** @type {WriteOptions} */ (opt_options).decimals !== undefined &&\n    !Array.isArray(transformed)) {\n    var power = Math.pow(10, /** @type {WriteOptions} */ (opt_options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    var transform = function(coordinates) {\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {import(\"../geom/Geometry\").default} */ (geometry).clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/JSONFeature\n */\nimport {abstract} from '../util.js';\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = /*@__PURE__*/(function (FeatureFormat) {\n  function JSONFeature() {\n    FeatureFormat.call(this);\n  }\n\n  if ( FeatureFormat ) JSONFeature.__proto__ = FeatureFormat;\n  JSONFeature.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  JSONFeature.prototype.constructor = JSONFeature;\n\n  /**\n   * @inheritDoc\n   */\n  JSONFeature.prototype.getType = function getType () {\n    return FormatType.JSON;\n  };\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  JSONFeature.prototype.readFeature = function readFeature (source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  JSONFeature.prototype.readFeatures = function readFeatures (source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  JSONFeature.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  JSONFeature.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  JSONFeature.prototype.readGeometry = function readGeometry (source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  JSONFeature.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  JSONFeature.prototype.readProjection = function readProjection (source) {\n    return this.readProjectionFromObject(getObject(source));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  JSONFeature.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    return abstract();\n  };\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  JSONFeature.prototype.writeFeature = function writeFeature (feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  JSONFeature.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  JSONFeature.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return abstract();\n  };\n\n  return JSONFeature;\n}(FeatureFormat));\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    var object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\n\nexport default JSONFeature;\n\n//# sourceMappingURL=JSONFeature.js.map","/**\n * @module ol/format/EsriJSON\n */\nimport Feature from '../Feature.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent} from '../extent.js';\nimport {transformWithOptions} from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\nimport {isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {import(\"arcgis-rest-api\").Feature} EsriJSONFeature\n * @typedef {import(\"arcgis-rest-api\").FeatureSet} EsriJSONFeatureSet\n * @typedef {import(\"arcgis-rest-api\").Geometry} EsriJSONGeometry\n * @typedef {import(\"arcgis-rest-api\").Point} EsriJSONPoint\n * @typedef {import(\"arcgis-rest-api\").Polyline} EsriJSONPolyline\n * @typedef {import(\"arcgis-rest-api\").Polygon} EsriJSONPolygon\n * @typedef {import(\"arcgis-rest-api\").Multipoint} EsriJSONMultipoint\n * @typedef {import(\"arcgis-rest-api\").HasZM} EsriJSONHasZM\n * @typedef {import(\"arcgis-rest-api\").Position} EsriJSONPosition\n * @typedef {import(\"arcgis-rest-api\").SpatialReferenceWkid} EsriJSONSpatialReferenceWkid\n */\n\n\n/**\n * @typedef {Object} EsriJSONMultiPolygon\n * @property {Array<Array<Array<Array<number>>>>} rings Rings for the MultiPolygon.\n * @property {boolean} [hasM] If the polygon coordinates have an M value.\n * @property {boolean} [hasZ] If the polygon coordinates have a Z value.\n * @property {EsriJSONSpatialReferenceWkid} [spatialReference] The coordinate reference system.\n */\n\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default, function(EsriJSONGeometry): import(\"../geom/Geometry.js\").default>}\n */\nvar GEOMETRY_READERS = {};\nGEOMETRY_READERS[GeometryType.POINT] = readPointGeometry;\nGEOMETRY_READERS[GeometryType.LINE_STRING] = readLineStringGeometry;\nGEOMETRY_READERS[GeometryType.POLYGON] = readPolygonGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POINT] = readMultiPointGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_LINE_STRING] = readMultiLineStringGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POLYGON] = readMultiPolygonGeometry;\n\n\n/**\n * @const\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default, import(\"./Feature.js\").WriteOptions=): (EsriJSONGeometry)>}\n */\nvar GEOMETRY_WRITERS = {};\nGEOMETRY_WRITERS[GeometryType.POINT] = writePointGeometry;\nGEOMETRY_WRITERS[GeometryType.LINE_STRING] = writeLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.POLYGON] = writePolygonGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POINT] = writeMultiPointGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_LINE_STRING] = writeMultiLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POLYGON] = writeMultiPolygonGeometry;\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [geometryName] Geometry name to use when creating features.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the EsriJSON format.\n *\n * @api\n */\nvar EsriJSON = /*@__PURE__*/(function (JSONFeature) {\n  function EsriJSON(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    JSONFeature.call(this);\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n  }\n\n  if ( JSONFeature ) EsriJSON.__proto__ = JSONFeature;\n  EsriJSON.prototype = Object.create( JSONFeature && JSONFeature.prototype );\n  EsriJSON.prototype.constructor = EsriJSON;\n\n  /**\n   * @inheritDoc\n   */\n  EsriJSON.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    var esriJSONFeature = /** @type {EsriJSONFeature} */ (object);\n    var geometry = readGeometry(esriJSONFeature.geometry, opt_options);\n    var feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    }\n    feature.setGeometry(geometry);\n    if (opt_options && opt_options.idField &&\n      esriJSONFeature.attributes[opt_options.idField]) {\n      feature.setId(/** @type {number} */(esriJSONFeature.attributes[opt_options.idField]));\n    }\n    if (esriJSONFeature.attributes) {\n      feature.setProperties(esriJSONFeature.attributes);\n    }\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  EsriJSON.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    var options = opt_options ? opt_options : {};\n    if (object['features']) {\n      var esriJSONFeatureSet = /** @type {EsriJSONFeatureSet} */ (object);\n      /** @type {Array<import(\"../Feature.js\").default>} */\n      var features = [];\n      var esriJSONFeatures = esriJSONFeatureSet.features;\n      options.idField = object.objectIdFieldName;\n      for (var i = 0, ii = esriJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(esriJSONFeatures[i], options));\n      }\n      return features;\n    } else {\n      return [this.readFeatureFromObject(object, options)];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  EsriJSON.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return readGeometry(/** @type {EsriJSONGeometry} */(object), opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  EsriJSON.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    if (object['spatialReference'] && object['spatialReference']['wkid'] !== undefined) {\n      var spatialReference = /** @type {EsriJSONSpatialReferenceWkid} */ (object['spatialReference']);\n      var crs = spatialReference.wkid;\n      return getProjection('EPSG:' + crs);\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Encode a geometry as a EsriJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {EsriJSONGeometry} Object.\n   * @override\n   * @api\n   */\n  EsriJSON.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  };\n\n  /**\n   * Encode a feature as a esriJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   * @override\n   * @api\n   */\n  EsriJSON.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var object = {};\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      object['geometry'] = writeGeometry(geometry, opt_options);\n      if (opt_options && opt_options.featureProjection) {\n        object['geometry']['spatialReference'] = /** @type {EsriJSONSpatialReferenceWkid} */({\n          wkid: Number(getProjection(opt_options.featureProjection).getCode().split(':').pop())\n        });\n      }\n    }\n    var properties = feature.getProperties();\n    delete properties[feature.getGeometryName()];\n    if (!isEmpty(properties)) {\n      object['attributes'] = properties;\n    } else {\n      object['attributes'] = {};\n    }\n    return object;\n  };\n\n  /**\n   * Encode an array of features as a EsriJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} EsriJSON Object.\n   * @override\n   * @api\n   */\n  EsriJSON.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var objects = [];\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return /** @type {EsriJSONFeatureSet} */ ({\n      'features': objects\n    });\n  };\n\n  return EsriJSON;\n}(JSONFeature));\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  /** @type {import(\"../geom/GeometryType.js\").default} */\n  var type;\n  if (typeof object['x'] === 'number' && typeof object['y'] === 'number') {\n    type = GeometryType.POINT;\n  } else if (object['points']) {\n    type = GeometryType.MULTI_POINT;\n  } else if (object['paths']) {\n    var esriJSONPolyline = /** @type {EsriJSONPolyline} */ (object);\n    if (esriJSONPolyline.paths.length === 1) {\n      type = GeometryType.LINE_STRING;\n    } else {\n      type = GeometryType.MULTI_LINE_STRING;\n    }\n  } else if (object['rings']) {\n    var esriJSONPolygon = /** @type {EsriJSONPolygon} */ (object);\n    var layout = getGeometryLayout(esriJSONPolygon);\n    var rings = convertRings(esriJSONPolygon.rings, layout);\n    if (rings.length === 1) {\n      type = GeometryType.POLYGON;\n      object['rings'] = rings[0];\n    } else {\n      type = GeometryType.MULTI_POLYGON;\n      object['rings'] = rings;\n    }\n  }\n  var geometryReader = GEOMETRY_READERS[type];\n  return (\n    /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometryReader(object), false, opt_options))\n  );\n}\n\n\n/**\n * Determines inner and outer rings.\n * Checks if any polygons in this array contain any other polygons in this\n * array. It is used for checking for holes.\n * Logic inspired by: https://github.com/Esri/terraformer-arcgis-parser\n * @param {Array<!Array<!Array<number>>>} rings Rings.\n * @param {import(\"../geom/GeometryLayout.js\").default} layout Geometry layout.\n * @return {Array<!Array<!Array<!Array<number>>>>} Transformed rings.\n */\nfunction convertRings(rings, layout) {\n  var flatRing = [];\n  var outerRings = [];\n  var holes = [];\n  var i, ii;\n  for (i = 0, ii = rings.length; i < ii; ++i) {\n    flatRing.length = 0;\n    deflateCoordinates(flatRing, 0, rings[i], layout.length);\n    // is this ring an outer ring? is it clockwise?\n    var clockwise = linearRingIsClockwise(flatRing, 0,\n      flatRing.length, layout.length);\n    if (clockwise) {\n      outerRings.push([rings[i]]);\n    } else {\n      holes.push(rings[i]);\n    }\n  }\n  while (holes.length) {\n    var hole = holes.shift();\n    var matched = false;\n    // loop over all outer rings and see if they contain our hole.\n    for (i = outerRings.length - 1; i >= 0; i--) {\n      var outerRing = outerRings[i][0];\n      var containsHole = containsExtent(\n        new LinearRing(outerRing).getExtent(),\n        new LinearRing(hole).getExtent()\n      );\n      if (containsHole) {\n        // the hole is contained push it into our polygon\n        outerRings[i].push(hole);\n        matched = true;\n        break;\n      }\n    }\n    if (!matched) {\n      // no outer rings contain this hole turn it into and outer\n      // ring (reverse it)\n      outerRings.push([hole.reverse()]);\n    }\n  }\n  return outerRings;\n}\n\n\n/**\n * @param {EsriJSONPoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Point.\n */\nfunction readPointGeometry(object) {\n  var point;\n  if (object.m !== undefined && object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z, object.m],\n      GeometryLayout.XYZM);\n  } else if (object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z],\n      GeometryLayout.XYZ);\n  } else if (object.m !== undefined) {\n    point = new Point([object.x, object.y, object.m],\n      GeometryLayout.XYM);\n  } else {\n    point = new Point([object.x, object.y]);\n  }\n  return point;\n}\n\n\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} LineString.\n */\nfunction readLineStringGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new LineString(object.paths[0], layout);\n}\n\n\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new MultiLineString(object.paths, layout);\n}\n\n\n/**\n * @param {EsriJSONHasZM} object Object.\n * @return {import(\"../geom/GeometryLayout.js\").default} The geometry layout to use.\n */\nfunction getGeometryLayout(object) {\n  var layout = GeometryLayout.XY;\n  if (object.hasZ === true && object.hasM === true) {\n    layout = GeometryLayout.XYZM;\n  } else if (object.hasZ === true) {\n    layout = GeometryLayout.XYZ;\n  } else if (object.hasM === true) {\n    layout = GeometryLayout.XYM;\n  }\n  return layout;\n}\n\n\n/**\n * @param {EsriJSONMultipoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new MultiPoint(object.points, layout);\n}\n\n\n/**\n * @param {EsriJSONMultiPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new MultiPolygon(object.rings, layout);\n}\n\n\n/**\n * @param {EsriJSONPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new Polygon(object.rings, layout);\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  var coordinates = /** @type {import(\"../geom/Point.js\").default} */ (geometry).getCoordinates();\n  var esriJSON;\n  var layout = /** @type {import(\"../geom/Point.js\").default} */ (geometry).getLayout();\n  if (layout === GeometryLayout.XYZ) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2]\n    });\n  } else if (layout === GeometryLayout.XYM) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      m: coordinates[2]\n    });\n  } else if (layout === GeometryLayout.XYZM) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2],\n      m: coordinates[3]\n    });\n  } else if (layout === GeometryLayout.XY) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1]\n    });\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n  return /** @type {EsriJSONGeometry} */ (esriJSON);\n}\n\n\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @return {Object} Object with boolean hasZ and hasM keys.\n */\nfunction getHasZM(geometry) {\n  var layout = geometry.getLayout();\n  return {\n    hasZ: (layout === GeometryLayout.XYZ ||\n      layout === GeometryLayout.XYZM),\n    hasM: (layout === GeometryLayout.XYM ||\n      layout === GeometryLayout.XYZM)\n  };\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  var lineString = /** @type {import(\"../geom/LineString.js\").default} */ (geometry);\n  var hasZM = getHasZM(lineString);\n  return (\n    /** @type {EsriJSONPolyline} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      paths: [\n        /** @type {Array<EsriJSONPosition>} */ (lineString.getCoordinates())\n      ]\n    }\n  );\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  var polygon = /** @type {import(\"../geom/Polygon.js\").default} */ (geometry);\n  // Esri geometries use the left-hand rule\n  var hasZM = getHasZM(polygon);\n  return (\n    /** @type {EsriJSONPolygon} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      rings: /** @type {Array<Array<EsriJSONPosition>>} */ (polygon.getCoordinates(false))\n    }\n  );\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  var multiLineString = /** @type {import(\"../geom/MultiLineString.js\").default} */ (geometry);\n  var hasZM = getHasZM(multiLineString);\n  return (\n    /** @type {EsriJSONPolyline} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      paths: /** @type {Array<Array<EsriJSONPosition>>} */ (multiLineString.getCoordinates())\n    }\n  );\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONMultipoint} EsriJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  var multiPoint = /** @type {import(\"../geom/MultiPoint.js\").default} */ (geometry);\n  var hasZM = getHasZM(multiPoint);\n  return (\n    /** @type {EsriJSONMultipoint} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      points: /** @type {Array<EsriJSONPosition>} */ (multiPoint.getCoordinates())\n    }\n  );\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  var hasZM = getHasZM(/** @type {import(\"../geom/MultiPolygon.js\").default} */(geometry));\n  var coordinates = /** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry).getCoordinates(false);\n  var output = [];\n  for (var i = 0; i < coordinates.length; i++) {\n    for (var x = coordinates[i].length - 1; x >= 0; x--) {\n      output.push(coordinates[i][x]);\n    }\n  }\n  return /** @type {EsriJSONPolygon} */ ({\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    rings: output\n  });\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  var geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(/** @type {import(\"../geom/Geometry.js\").default} */(\n    transformWithOptions(geometry, true, opt_options)), opt_options);\n}\n\n\nexport default EsriJSON;\n\n//# sourceMappingURL=EsriJSON.js.map","import axios from 'axios'\r\nimport MapConfigure from \"@common/consts/OpenLayersConfig/MapConfigure\";\r\n\r\n//地图数据操作\r\nconst instance = axios.create({\r\n    baseURL: MapConfigure.url.urlPipeLine,\r\n    crossDomain: true,\r\n    timeout: 30000,\r\n    // 该函数指定响应数据进行的预处理，return的值会填到response.data\r\n    transformResponse: function (resJsonData) {\r\n        return resJsonData;\r\n    }\r\n});\r\n\r\n/**\r\n  地图数据请求\r\n**/\r\nexport default {\r\n    // 爆管分析\r\n    GetGisReset(vectorLayer) {\r\n        return instance.get(vectorLayer);\r\n    }\r\n}","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=OverlayPositioning.js.map","/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {removeNode, removeChildren, outerWidth, outerHeight} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n\n/**\n * @enum {string}\n * @protected\n */\nvar Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning'\n};\n\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nvar Overlay = /*@__PURE__*/(function (BaseObject) {\n  function Overlay(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst = options.insertFirst !== undefined ?\n      options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className = options.className !== undefined ?\n      options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n\n    /**\n     * @protected\n     * @type {PanOptions}\n     */\n    this.autoPanAnimation = options.autoPanAnimation || /** @type {PanOptions} */ ({});\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.autoPanMargin = options.autoPanMargin !== undefined ?\n      options.autoPanMargin : 20;\n\n    /**\n     * @protected\n     * @type {{bottom_: string,\n     *         left_: string,\n     *         right_: string,\n     *         top_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      bottom_: '',\n      left_: '',\n      right_: '',\n      top_: '',\n      visible: true\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    listen(\n      this, getChangeEventType(Property.ELEMENT),\n      this.handleElementChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.MAP),\n      this.handleMapChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.OFFSET),\n      this.handleOffsetChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITION),\n      this.handlePositionChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITIONING),\n      this.handlePositioningChanged, this);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning !== undefined ?\n      /** @type {OverlayPositioning} */ (options.positioning) :\n      OverlayPositioning.TOP_LEFT);\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n\n  }\n\n  if ( BaseObject ) Overlay.__proto__ = BaseObject;\n  Overlay.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Overlay.prototype.constructor = Overlay;\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getElement = function getElement () {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  };\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Overlay.prototype.getId = function getId () {\n    return this.id;\n  };\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getMap = function getMap () {\n    return (\n      /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(Property.MAP))\n    );\n  };\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getOffset = function getOffset () {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  };\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPosition = function getPosition () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION))\n    );\n  };\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {OverlayPositioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPositioning = function getPositioning () {\n    return (\n      /** @type {OverlayPositioning} */ (this.get(Property.POSITIONING))\n    );\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleElementChanged = function handleElementChanged () {\n    removeChildren(this.element);\n    var element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleMapChanged = function handleMapChanged () {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    var map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(map,\n        MapEventType.POSTRENDER, this.render, this);\n      this.updatePixelPosition();\n      var container = this.stopEvent ?\n        map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.render = function render () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleOffsetChanged = function handleOffsetChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositionChanged = function handlePositionChanged () {\n    this.updatePixelPosition();\n    if (this.get(Property.POSITION) && this.autoPan) {\n      this.panIntoView();\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositioningChanged = function handlePositioningChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setElement = function setElement (element) {\n    this.set(Property.ELEMENT, element);\n  };\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setMap = function setMap (map) {\n    this.set(Property.MAP, map);\n  };\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setOffset = function setOffset (offset) {\n    this.set(Property.OFFSET, offset);\n  };\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPosition = function setPosition (position) {\n    this.set(Property.POSITION, position);\n  };\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @protected\n   */\n  Overlay.prototype.panIntoView = function panIntoView () {\n    var map = this.getMap();\n\n    if (!map || !map.getTargetElement()) {\n      return;\n    }\n\n    var mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    var element = this.getElement();\n    var overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n\n    var margin = this.autoPanMargin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      var offsetLeft = overlayRect[0] - mapRect[0];\n      var offsetRight = mapRect[2] - overlayRect[2];\n      var offsetTop = overlayRect[1] - mapRect[1];\n      var offsetBottom = mapRect[3] - overlayRect[3];\n\n      var delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - margin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + margin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - margin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + margin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map.getView().getCenter());\n        var centerPx = map.getPixelFromCoordinate(center);\n        var newCenterPx = [\n          centerPx[0] + delta[0],\n          centerPx[1] + delta[1]\n        ];\n\n        map.getView().animate({\n          center: map.getCoordinateFromPixel(newCenterPx),\n          duration: this.autoPanAnimation.duration,\n          easing: this.autoPanAnimation.easing\n        });\n      }\n    }\n  };\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement|undefined} element The element.\n   * @param {import(\"./size.js\").Size|undefined} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  Overlay.prototype.getRect = function getRect (element, size) {\n    var box = element.getBoundingClientRect();\n    var offsetX = box.left + window.pageXOffset;\n    var offsetY = box.top + window.pageYOffset;\n    return [\n      offsetX,\n      offsetY,\n      offsetX + size[0],\n      offsetY + size[1]\n    ];\n  };\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {OverlayPositioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPositioning = function setPositioning (positioning) {\n    this.set(Property.POSITIONING, positioning);\n  };\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  Overlay.prototype.setVisible = function setVisible (visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  };\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  Overlay.prototype.updatePixelPosition = function updatePixelPosition () {\n    var map = this.getMap();\n    var position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    var pixel = map.getPixelFromCoordinate(position);\n    var mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  };\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  Overlay.prototype.updateRenderedPosition = function updateRenderedPosition (pixel, mapSize) {\n    var style = this.element.style;\n    var offset = this.getOffset();\n\n    var positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    var offsetX = offset[0];\n    var offsetY = offset[1];\n    if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n        positioning == OverlayPositioning.CENTER_RIGHT ||\n        positioning == OverlayPositioning.TOP_RIGHT) {\n      if (this.rendered.left_ !== '') {\n        this.rendered.left_ = style.left = '';\n      }\n      var right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n      if (this.rendered.right_ != right) {\n        this.rendered.right_ = style.right = right;\n      }\n    } else {\n      if (this.rendered.right_ !== '') {\n        this.rendered.right_ = style.right = '';\n      }\n      if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.TOP_CENTER) {\n        offsetX -= this.element.offsetWidth / 2;\n      }\n      var left = Math.round(pixel[0] + offsetX) + 'px';\n      if (this.rendered.left_ != left) {\n        this.rendered.left_ = style.left = left;\n      }\n    }\n    if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n        positioning == OverlayPositioning.BOTTOM_CENTER ||\n        positioning == OverlayPositioning.BOTTOM_RIGHT) {\n      if (this.rendered.top_ !== '') {\n        this.rendered.top_ = style.top = '';\n      }\n      var bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n      if (this.rendered.bottom_ != bottom) {\n        this.rendered.bottom_ = style.bottom = bottom;\n      }\n    } else {\n      if (this.rendered.bottom_ !== '') {\n        this.rendered.bottom_ = style.bottom = '';\n      }\n      if (positioning == OverlayPositioning.CENTER_LEFT ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.CENTER_RIGHT) {\n        offsetY -= this.element.offsetHeight / 2;\n      }\n      var top = Math.round(pixel[1] + offsetY) + 'px';\n      if (this.rendered.top_ != top) {\n        this.rendered.top_ = style.top = top;\n      }\n    }\n  };\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  Overlay.prototype.getOptions = function getOptions () {\n    return this.options;\n  };\n\n  return Overlay;\n}(BaseObject));\n\n\nexport default Overlay;\n\n//# sourceMappingURL=Overlay.js.map","import _ from 'lodash';\r\nimport 'ol/ol.css';\r\nimport Map from 'ol/Map';\r\nimport View from 'ol/View';\r\nimport {\r\n    Tile as TileLayer,\r\n    Vector as Vectorlayer,\r\n    Group as LayerGroup\r\n} from 'ol/layer';\r\nimport {\r\n    XYZ as XYZSource,\r\n    Vector as VectorSource,\r\n    TileArcGISRest\r\n} from 'ol/source';\r\nimport {\r\n    createXYZ\r\n} from 'ol/tilegrid';\r\nimport {\r\n    tile as tileStrategy\r\n} from 'ol/loadingstrategy';\r\n\r\nimport {\r\n    getCenter\r\n} from 'ol/extent';\r\nimport {\r\n    get as getProjection,\r\n    transformExtent\r\n} from 'ol/proj';\r\nimport proj4 from 'proj4';\r\nimport {\r\n    register\r\n} from 'ol/proj/proj4';\r\nimport {\r\n    defaults as defaultInteractions,\r\n    Modify,\r\n    Select,\r\n    Snap\r\n} from 'ol/interaction.js';\r\nimport EsriJSON from 'ol/format/EsriJSON';\r\nimport MapConfigure from \"@common/consts/OpenLayersConfig/MapConfigure\";\r\nimport mapRequest from \"@services/OpenLayers/mapRequest\";\r\nimport Overlay from 'ol/Overlay';\r\nimport mapStyle from '@services/OpenLayers/mapStyle.js';\r\nimport {\r\n    stringify\r\n} from 'querystring';\r\n/*\r\nOpenLayer地图基础数据操作\r\n*/\r\n\r\nclass BaseMap {\r\n\r\n    constructor() {\r\n        this._DefaultProjection = \"EPSG:4326\";\r\n        //定义坐标系\r\n        // _.forEach(MapConfigure.CoordinateDefinition, InfoValue => {\r\n        //     if (InfoValue.IsDeFault) {\r\n        //         this._DefaultProjection = InfoValue.DeFineName;\r\n        //     }\r\n        //     proj4.defs(InfoValue.DeFineName, InfoValue.DefineContent); //坐标类型定义\r\n        // });\r\n        register(proj4); //坐标注册\r\n        this._Projection = getProjection(this._DefaultProjection);\r\n        this._Projection.setExtent([MapConfigure.MapExtent.XMin, MapConfigure.MapExtent.YMin, MapConfigure.MapExtent.XMax, MapConfigure.MapExtent.YMax]);\r\n        this._ProjectionExtent = this._Projection.getExtent();\r\n        this.select = new Select({\r\n                active: false\r\n            }),\r\n            this.mapInstance = {\r\n                map: undefined,\r\n                groups: {\r\n                    tileLayerGroup: undefined,\r\n                    vectorLayerGroup: undefined,\r\n                    businessLayerGroup: undefined,\r\n                    tempLayerGroup: undefined,\r\n                    spatialSearchLayerGroup: undefined\r\n                },\r\n                businessLayers: {\r\n                    polygonLayer: new Vectorlayer(),\r\n                    lineStringLayer: new Vectorlayer(),\r\n                    pointLayer: new Vectorlayer(),\r\n                    monitorLayer: new Vectorlayer({\r\n                        source: new VectorSource()\r\n                    }),\r\n                },\r\n                tempLayers: {\r\n                    drawAndModifyLayer: new Vectorlayer(),\r\n                    bufferLayr: new Vectorlayer()\r\n                },\r\n                spatialSearchLayers: {},\r\n                overlay: undefined,\r\n                interactions: {\r\n                    select: this.select,\r\n                    modify: new Modify({\r\n                        active: false,\r\n                        features: this.select.getFeatures()\r\n                    }),\r\n                    snap: new Snap({\r\n                        source: new VectorSource()\r\n                    })\r\n                },\r\n\r\n\r\n            }\r\n\r\n    }\r\n\r\n    /**\r\n     * 构建地图\r\n     * @param {地图容器} _containerDomId \r\n     */\r\n    async createMap(_containerDomId) {\r\n        let _tileLayers = [];\r\n        let _vectorLayers = [];\r\n        let tempLayers = this.mapInstance.tempLayers\r\n        let tempLayersGroup = []\r\n        let groups = this.mapInstance.groups\r\n        let businessLayers = this.mapInstance.businessLayers\r\n        let businessLayersGroup = []\r\n        let spatialSearchLayerGroup = []\r\n\r\n        //遥感图加载\r\n        let _SatellLayer = this.createTileLayer(this.createArcGISRestSource(MapConfigure.url.urlSatell), \"SatellLayer\", true);\r\n        _tileLayers.push(_SatellLayer);\r\n\r\n        // //街道图加载\r\n        // let _StreetLayer = this.createTileLayer(this.createArcGISRestSource(MapConfigure.url.urlStreet), \"StreetLayer\", false);\r\n        // _tileLayers.push(_StreetLayer);\r\n\r\n        // //地形图加载\r\n        // let _TerrainLayer = this.createTileLayer(this.createArcGISRestSource(MapConfigure.url.urlTerrain), \"TerrainLayer\", true);\r\n        // _tileLayers.push(_TerrainLayer);\r\n\r\n        groups.tileLayerGroup = new LayerGroup({\r\n            layers: _tileLayers\r\n        })\r\n\r\n\r\n        //添加临时图层\r\n        for (let obj in tempLayers) {\r\n            tempLayersGroup.push(tempLayers[obj])\r\n        }\r\n        groups.tempLayerGroup = new LayerGroup({\r\n            layers: tempLayersGroup\r\n        })\r\n\r\n\r\n        //管网数据加载==>管线，阀门，消防栓等\r\n        _.forEach(MapConfigure.LayerConfiguration, ObjValue => {\r\n            let _VectorLayer = this.createVectorlayer(this.createVectorSource(ObjValue.layerIndex), ObjValue.layerName, true);\r\n            _vectorLayers.push(_VectorLayer);\r\n            //空间查询\r\n            if (ObjValue.isSpatialSearch) {\r\n                this.mapInstance.spatialSearchLayers[ObjValue.layerName] = new Vectorlayer({\r\n                    style: mapStyle.getStyle(ObjValue.layerName)\r\n                })\r\n            }\r\n        });\r\n        groups.vectorLayerGroup = new LayerGroup({\r\n            layers: _vectorLayers\r\n        })\r\n        //夹杂空间查询layer\r\n        for (let obj in this.mapInstance.spatialSearchLayers) {\r\n            spatialSearchLayerGroup.push(this.mapInstance.spatialSearchLayers[obj])\r\n        }\r\n        groups.spatialSearchLayerGroup = new LayerGroup({\r\n\r\n            layers: spatialSearchLayerGroup\r\n        })\r\n\r\n        //添加弹出框\r\n        this.mapInstance.overlay = new Overlay({\r\n            element: document.getElementById(\"popup\"),\r\n            autoPan: true,\r\n            autoPanAnimation: {\r\n                duration: 250\r\n            }\r\n        })\r\n        //_overlays.push(MapConfigure.OverLayConfiguration.overLay)\r\n\r\n        //业务数据图层\r\n        for (let obj in businessLayers) {\r\n            businessLayersGroup.push(businessLayers[obj])\r\n        }\r\n        groups.businessLayerGroup = new LayerGroup({\r\n\r\n            layers: businessLayersGroup\r\n        })\r\n\r\n\r\n        //地图数据\r\n        this.mapInstance.map = new Map({\r\n            layers: [groups.tileLayerGroup, groups.vectorLayerGroup, groups.businessLayerGroup, groups.tempLayerGroup, groups.spatialSearchLayerGroup],\r\n            overlays: [this.mapInstance.overlay],\r\n            // interactions: defaultInteractions().extend([this.mapInstance.interactions.select, this.mapInstance.interactions.modify]),\r\n            interactions: defaultInteractions().extend([this.mapInstance.interactions.select, this.mapInstance.interactions.modify, this.mapInstance.interactions.snap]),\r\n            target: _containerDomId,\r\n            view: new View({\r\n                projection: this._Projection,\r\n                extent: this._ProjectionExtent || undefined,\r\n                center: getCenter(this._ProjectionExtent),\r\n                zoom: 3.3,\r\n                minZoom:3\r\n            })\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 创建切片图层\r\n     * @param {瓦片图层数据源}  _source  \r\n     * @param {切片图层名称}    _layerName \r\n     * @param {是否显示}        _isShow \r\n     */\r\n    createTileLayer(_source, _layerName, _isShow) {\r\n        let tileLayer = new TileLayer({\r\n            name: _layerName,\r\n            source: _source,\r\n            visible: _isShow\r\n        });\r\n        return tileLayer;\r\n    }\r\n\r\n    /**\r\n     * 创建矢量图层\r\n     * @param {矢量图层数据源}  _source  \r\n     * @param {矢量图层名称}    _layerName  \r\n     * @param {是否显示}        _isShow \r\n     */\r\n    createVectorlayer(_source, _layerName, _isShow) {\r\n        let vectorLayer = new Vectorlayer({\r\n            name: _layerName,\r\n            source: _source,\r\n            visible: _isShow,\r\n            style: mapStyle.getStyle(_layerName)\r\n        });\r\n        return vectorLayer;\r\n    }\r\n\r\n    /**\r\n     * 创建ArcGISReset的Source\r\n     * @param {*} _layerURL \r\n     */\r\n    createArcGISRestSource(_layerURL) {\r\n        let arcGISSource = new TileArcGISRest({\r\n            url: _layerURL\r\n        });\r\n        return arcGISSource;\r\n    }\r\n\r\n    /**\r\n     * 创建万能瓦片的Source\r\n     * @param {瓦片URL地址} _layerURL \r\n     */\r\n    createXYZSource(_layerURL) {\r\n        let sourceXYZ = new XYZSource({\r\n            url: _layerURL\r\n        });\r\n        return sourceXYZ;\r\n    }\r\n\r\n    /**\r\n     * 创建矢量的Source \r\n     * @param {矢量图层编号} _layerURL \r\n     * @param {目标坐标系} _CDeFine \r\n     */\r\n    createVectorSource(_layerURL, _CDeFine, geomStr) {\r\n        let esrijsonFormat = new EsriJSON();\r\n        let vectorSource = new VectorSource({\r\n            loader: (extent, resolution, projection) => {\r\n                // let Extent4490 = transformExtent(extent, \"EPSG:4326\", \"EPSG:4490\");\r\n                // let url = '/9/query/?f=json&' +\r\n                //     'returnGeometry=true&spatialRel=esriSpatialRelIntersects&geometry=' +\r\n                //     encodeURIComponent('{\"xmin\":' + Extent4490[0] + ',\"ymin\":YMin: ' + Extent4490[1] + ',\"xmax\":XMax: ' + Extent4490[2] + ',\"ymax\":YMax: ' + Extent4490[3] + ',\"spatialReference\":{\"wkid\":4490}}') +\r\n                //     '&geometryType=esriGeometryEnvelope&inSR=4490&outFields=*' +\r\n                //     '&outSR=4490';\r\n                let cloneExtent = _.cloneDeep(extent);\r\n                let CDeFien = projection.code_.split(':')[1]; //取得定义坐标系\r\n                if (_CDeFine) {\r\n                    cloneExtent = transformExtent(extent, projection.code_, _CDeFine); //转换为指定坐标系\r\n                    CDeFien = _CDeFine.split(':')[1];\r\n                }\r\n                //指定URL\r\n                let url = '/' + _layerURL + '/query/?f=json&' +\r\n                    'returnGeometry=true&spatialRel=esriSpatialRelIntersects&geometry=' +\r\n                    encodeURIComponent('{\"xmin\":' + cloneExtent[0] + ',\"ymin\":YMin: ' + cloneExtent[1] + ',\"xmax\":XMax: ' + cloneExtent[2] + ',\"ymax\":YMax: ' + cloneExtent[3] + ',\"spatialReference\":{\"wkid\":' + CDeFien + '}}') +\r\n                    '&geometryType=esriGeometryEnvelope&inSR=' + CDeFien + '&outFields=*' +\r\n                    '&outSR=' + CDeFien;\r\n                mapRequest.GetGisReset(url).then(resultValue => {\r\n                    let sourceData = JSON.parse(resultValue.data);\r\n                    var features = esrijsonFormat.readFeatures(sourceData, {\r\n                        featureProjection: projection\r\n                    });\r\n                    if (features.length > 0) {\r\n\r\n                        vectorSource.addFeatures(features);\r\n                    }\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                });\r\n            },\r\n            strategy: tileStrategy(createXYZ({\r\n                tileSize: 512\r\n            }))\r\n        });\r\n        // console.log('createVectorSource', vectorSource.getFeatures())\r\n        return vectorSource;\r\n    }\r\n\r\n\r\n    /**\r\n     * 创建矢量的Source \r\n     * @param {矢量图层编号} _layerURL \r\n     * @param {坐标对象} CoordinatesArray\r\n     */\r\n    async createSpatialSearchVectorSource(_layerURL, CoordinatesArray,extent) {\r\n        let geometryStr = {\r\n            // \"rings\": [\r\n            //     [\r\n            //         [524553.1905414565, 3958482.028005024],\r\n            //         [524667.4907700568, 3958806.9369881754],\r\n            //         [525190.3084823589, 3958719.095145825],\r\n            //         [525098.2332982086, 3958134.8939774227],\r\n            //         [524553.1905414565, 3958482.028005024]\r\n            //     ]\r\n            // ],\r\n             \"rings\":CoordinatesArray,\r\n            \"_ring\": 0,\r\n            \"spatialReference\": {\r\n                \"wkid\": 4326,\r\n                \"latestWkid\": 4326\r\n            },\r\n            \"cache\": {\r\n                \"_extent\": {\r\n                    \"xmin\": extent[0],\r\n                    \"ymin\": extent[1],\r\n                    \"xmax\": extent[2],\r\n                    \"ymax\": extent[3],\r\n                    \"spatialReference\": {\r\n                        \"wkid\": 4326,\r\n                        \"latestWkid\": 4326\r\n                    }\r\n                },\r\n                \"_partwise\": null\r\n            }\r\n        };\r\n        //_layerURL = 9\r\n        let url = '/' + _layerURL + '/query/?f=json&' +\r\n            'returnGeometry=true&spatialRel=esriSpatialRelIntersects&geometry=' + JSON.stringify(geometryStr) +\r\n            '&geometryType=esriGeometryPolygon&inSR=4326&outFields=*' +\r\n            '&outSR=4326';\r\n\r\n        let esrijsonFormat = new EsriJSON();\r\n        \r\n       return mapRequest.GetGisReset(url).then(resultValue => {\r\n            let sourceData = JSON.parse(resultValue.data);\r\n            let features = esrijsonFormat.readFeatures(sourceData, {\r\n                featureProjection: this._Projection\r\n            });\r\n            //console.log('createSpatialSearchVectorSource', features);\r\n            return features\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n        \r\n    }\r\n\r\n    // /**\r\n    //  * 创建WMTS的Source\r\n    //  * @param {瓦片URL地址} _layerURL \r\n    //  */\r\n    // createWMTSSource(_layerURL) {\r\n    //     let sourceWMTS = new WMTSSource(_layerURL);\r\n    //     return sourceWMTS;\r\n    // }\r\n}\r\n\r\nexport default BaseMap;","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LRUCache<HTMLCanvasElement>}\n * @api\n */\nexport var labelCache = new LRUCache();\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function() {\n  var retries = 60;\n  var checked = checkedFonts;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  var interval, referenceWidth;\n\n  function isAvailable(font) {\n    var context = getMeasureContext();\n    // Check weight ranges according to\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    for (var weight = 100; weight <= 700; weight += 300) {\n      var fontWeight = weight + ' ';\n      var available = true;\n      for (var i = 0; i < len; ++i) {\n        var referenceFont = referenceFonts[i];\n        context.font = fontWeight + size + referenceFont;\n        referenceWidth = context.measureText(text).width;\n        if (font != referenceFont) {\n          context.font = fontWeight + size + font + ',' + referenceFont;\n          var width = context.measureText(text).width;\n          // If width and referenceWidth are the same, then the fallback was used\n          // instead of the font we wanted, so the font is not available.\n          available = available && width != referenceWidth;\n        }\n      }\n      if (available) {\n        // Consider font available when it is available in one weight range.\n        //FIXME With this we miss rare corner cases, so we should consider\n        //FIXME checking availability for each requested weight range.\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function check() {\n    var done = true;\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    var fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function() {\n  var span;\n  var heights = textHeights;\n  return function(font) {\n    var height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  var measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport var resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\nvar MapBrowserPointerEvent = /*@__PURE__*/(function (MapBrowserEvent) {\n  function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n\n    MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState);\n\n    /**\n     * @const\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     */\n    this.pointerEvent = pointerEvent;\n\n  }\n\n  if ( MapBrowserEvent ) MapBrowserPointerEvent.__proto__ = MapBrowserEvent;\n  MapBrowserPointerEvent.prototype = Object.create( MapBrowserEvent && MapBrowserEvent.prototype );\n  MapBrowserPointerEvent.prototype.constructor = MapBrowserPointerEvent;\n\n  return MapBrowserPointerEvent;\n}(MapBrowserEvent));\n\nexport default MapBrowserPointerEvent;\n\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/Object\n */\nimport {getUid} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport var ObjectEvent = /*@__PURE__*/(function (Event) {\n  function ObjectEvent(type, key, oldValue) {\n    Event.call(this, type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n\n  }\n\n  if ( Event ) ObjectEvent.__proto__ = Event;\n  ObjectEvent.prototype = Object.create( Event && Event.prototype );\n  ObjectEvent.prototype.constructor = ObjectEvent;\n\n  return ObjectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /*@__PURE__*/(function (Observable) {\n  function BaseObject(opt_values) {\n    Observable.call(this);\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {!Object<string, *>}\n     */\n    this.values_ = {};\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  if ( Observable ) BaseObject.__proto__ = Observable;\n  BaseObject.prototype = Object.create( Observable && Observable.prototype );\n  BaseObject.prototype.constructor = BaseObject;\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  BaseObject.prototype.get = function get (key) {\n    var value;\n    if (this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  };\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  BaseObject.prototype.getKeys = function getKeys () {\n    return Object.keys(this.values_);\n  };\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  BaseObject.prototype.getProperties = function getProperties () {\n    return assign({}, this.values_);\n  };\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  BaseObject.prototype.notify = function notify (key, oldValue) {\n    var eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  };\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.set = function set (key, value, opt_silent) {\n    if (opt_silent) {\n      this.values_[key] = value;\n    } else {\n      var oldValue = this.values_[key];\n      this.values_[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.setProperties = function setProperties (values, opt_silent) {\n    for (var key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  };\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.unset = function unset (key, opt_silent) {\n    if (key in this.values_) {\n      var oldValue = this.values_[key];\n      delete this.values_[key];\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  return BaseObject;\n}(Observable));\n\n\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\nexport default BaseObject;\n\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport var CollectionEvent = /*@__PURE__*/(function (Event) {\n  function CollectionEvent(type, opt_element) {\n    Event.call(this, type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n  }\n\n  if ( Event ) CollectionEvent.__proto__ = Event;\n  CollectionEvent.prototype = Object.create( Event && Event.prototype );\n  CollectionEvent.prototype.constructor = CollectionEvent;\n\n  return CollectionEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /*@__PURE__*/(function (BaseObject) {\n  function Collection(opt_array, opt_options) {\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n\n  }\n\n  if ( BaseObject ) Collection.__proto__ = BaseObject;\n  Collection.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Collection.prototype.constructor = Collection;\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  Collection.prototype.clear = function clear () {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  };\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  Collection.prototype.extend = function extend (arr) {\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  };\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  Collection.prototype.forEach = function forEach (f) {\n    var array = this.array_;\n    for (var i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  };\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  Collection.prototype.getArray = function getArray () {\n    return this.array_;\n  };\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  Collection.prototype.item = function item (index) {\n    return this.array_[index];\n  };\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  Collection.prototype.getLength = function getLength () {\n    return this.get(Property.LENGTH);\n  };\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.insertAt = function insertAt (index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  };\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  Collection.prototype.pop = function pop () {\n    return this.removeAt(this.getLength() - 1);\n  };\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  Collection.prototype.push = function push (elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    var n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  };\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  Collection.prototype.remove = function remove (elem) {\n    var arr = this.array_;\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  Collection.prototype.removeAt = function removeAt (index) {\n    var prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n    return prev;\n  };\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.setAt = function setAt (index, elem) {\n    var n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      var prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev));\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem));\n    } else {\n      for (var j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  };\n\n  /**\n   * @private\n   */\n  Collection.prototype.updateLength_ = function updateLength_ () {\n    this.set(Property.LENGTH, this.array_.length);\n  };\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  Collection.prototype.assertUnique_ = function assertUnique_ (elem, opt_except) {\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  };\n\n  return Collection;\n}(BaseObject));\n\n\nexport default Collection;\n\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /*@__PURE__*/(function (SimpleGeometry) {\n  function Point(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  if ( SimpleGeometry ) Point.__proto__ = SimpleGeometry;\n  Point.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Point.prototype.constructor = Point;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @override\n   * @api\n   */\n  Point.prototype.clone = function clone () {\n    var point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      var stride = this.stride;\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.getType = function getType () {\n    return GeometryType.POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return Point;\n}(SimpleGeometry));\n\n\nexport default Point;\n\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = function Projection(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {import(\"./Units.js\").default}\n   */\n  this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {import(\"../tilegrid/TileGrid.js\").default}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function canWrapX () {\n  return this.canWrapX_;\n};\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function getCode () {\n  return this.code_;\n};\n\n/**\n * Get the validity extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the units of this projection.\n * @return {import(\"./Units.js\").default} Units.\n * @api\n */\nProjection.prototype.getUnits = function getUnits () {\n  return this.units_;\n};\n\n/**\n * Get the amount of meters per unit of this projection.If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function getMetersPerUnit () {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n/**\n * Get the world extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function getWorldExtent () {\n  return this.worldExtent_;\n};\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *   or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *   \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function getAxisOrientation () {\n  return this.axisOrientation_;\n};\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function isGlobal () {\n  return this.global_;\n};\n\n/**\n * Set if the projection is a global projection which spans the whole world\n * @param {boolean} global Whether the projection is global.\n * @api\n */\nProjection.prototype.setGlobal = function setGlobal (global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n/**\n * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function getDefaultTileGrid () {\n  return this.defaultTileGrid_;\n};\n\n/**\n * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function setDefaultTileGrid (tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n/**\n * Set the validity extent for this projection.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function setExtent (extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n/**\n * Set the world extent for this projection.\n * @param {import(\"../extent.js\").Extent} worldExtent World extent\n *   [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function setWorldExtent (worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function setGetPointResolution (func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function getPointResolutionFunc () {\n  return this.getPointResolutionFunc_;\n};\n\nexport default Projection;\n\n//# sourceMappingURL=Projection.js.map","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/source/Source\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from './State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} projection\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /*@__PURE__*/(function (BaseObject) {\n  function Source(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n      options.attributionsCollapsible : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {SourceState}\n     */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  if ( BaseObject ) Source.__proto__ = BaseObject;\n  Source.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Source.prototype.constructor = Source;\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  Source.prototype.getAttributions = function getAttributions () {\n    return this.attributions_;\n  };\n\n  /**\n   * @return {boolean} Aattributions are collapsible.\n   */\n  Source.prototype.getAttributionsCollapsible = function getAttributionsCollapsible () {\n    return this.attributionsCollapsible_;\n  };\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  Source.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  Source.prototype.getResolutions = function getResolutions () {\n    return abstract();\n  };\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {SourceState} State.\n   * @api\n   */\n  Source.prototype.getState = function getState () {\n    return this.state_;\n  };\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  Source.prototype.getWrapX = function getWrapX () {\n    return this.wrapX_;\n  };\n\n  /**\n   * Refreshes the source and finally dispatches a 'change' event.\n   * @api\n   */\n  Source.prototype.refresh = function refresh () {\n    this.changed();\n  };\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n   *     or `undefined`.\n   * @api\n   */\n  Source.prototype.setAttributions = function setAttributions (attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  };\n\n  /**\n   * Set the state of the source.\n   * @param {SourceState} state State.\n   * @protected\n   */\n  Source.prototype.setState = function setState (state) {\n    this.state_ = state;\n    this.changed();\n  };\n\n  return Source;\n}(BaseObject));\n\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n}\n\n\nexport default Source;\n\n//# sourceMappingURL=Source.js.map"],"sourceRoot":""}